[{"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js":"1","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js":"2","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js":"3","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js":"4","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js":"5","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js":"6","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js":"7","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js":"8","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js":"9","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js":"10","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js":"11","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js":"12","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js":"13","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js":"14","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx":"15","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx":"16","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js":"17","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/index.js":"18","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js":"19","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx":"20","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx":"21","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx":"22","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx":"23","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx":"24","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx":"25","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx":"26","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx":"27","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx":"28","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx":"29","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx":"30","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx":"31","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx":"32","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx":"33","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx":"34","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx":"35","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx":"36","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js":"37","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js":"38","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js":"39","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js":"40","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/index.js":"41","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/index.js":"42","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx":"43","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx":"44","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx":"45","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx":"46","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js":"47","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx":"48","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx":"49","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx":"50","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.styles.jsx":"51","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx":"52","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchCountNumberNotificationsUnseen.js":"53","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchNotifications.js":"54","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchPosts.js":"55","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js":"56","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js":"57","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx":"58","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx":"59","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.styles.jsx":"60","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js":"61","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js":"62","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx":"63","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.styles.jsx":"64","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx":"65","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx":"66","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.styles.jsx":"67","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx":"68","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx":"69","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx":"70","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx":"71","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx":"72","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx":"73","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx":"74","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/index.js":"75","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/signup.js":"76","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/acceptRequestToAddFriend.js":"77","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/removeFriend.js":"78","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/unFollowUser.js":"79","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/followUser.js":"80","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/cancelRequestToAddFriend.js":"81","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/rejectRequestToAddFriend.js":"82","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/sendRequestToAddFriend.js":"83","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx":"84","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx":"85","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx":"86","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx":"87","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx":"88","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx":"89","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenPopupNotification.js":"90","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/ToggleButtonMenu.js":"91","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js":"92","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js":"93","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js":"94","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js":"95","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js":"96","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js":"97","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js":"98","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js":"99","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js":"100","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx":"101","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx":"102","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx":"103","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx":"104","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx":"105","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx":"106","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx":"107","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx":"108","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx":"109","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/index.js":"110","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/index.js":"111","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx":"112","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx":"113","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx":"114","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx":"115","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx":"116","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx":"117","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx":"118","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx":"119","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx":"120","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersReceivedRequestToAddFriend.js":"121","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersSentRequestToAddFriend.js":"122","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchListContact.js":"123","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchPersonalUser.js":"124","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchFriends.js":"125","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchCurrentUser.js":"126","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/login.js":"127","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/removeFriendSubscription.js":"128","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/cancelRequestToAddFriendSubscription.js":"129","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/rejectRequestToAddFriendSubscription.js":"130","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/postCreated.js":"131","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/updateCountNotificationsWhenSeen.js":"132","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyReceivedRequestToAddFriend.js":"133","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyAcceptRequestToAddFriend.js":"134","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx":"135","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx":"136","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js":"137","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx":"138","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/index.js":"139","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/index.js":"140","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx":"141","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx":"142","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx":"143","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx":"144","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx":"145","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx":"146","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/updateUserHasSeenNotification.js":"147","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createPost.js":"148","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx":"149","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/FlashPopUpNotification.jsx":"150","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx":"151","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx":"152","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js":"153","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/index.js":"154","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx":"155","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx":"156","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js":"157","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js":"158","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js":"159","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js":"160","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js":"161","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js":"162","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useChatSubscriptions.jsx":"163","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js":"164","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatFile.js":"165","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js":"166","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js":"167","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/updateHaveSeenAllMessages.js":"168","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatText.js":"169","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched.js":"170","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverWhenReceivedNewMessage.js":"171","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx":"172","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx":"173","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx":"174","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx":"175","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx":"176","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx":"177","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js":"178","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js":"179","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js":"180","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx":"181","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useUserStatusSubscriptions.jsx":"182","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx":"183","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySendersThatReceiverOnlineHasReceivedMessagesChat.js":"184","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchSingleChatConversation.js":"185","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setMessagesStorage.js":"186","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/clearMessageStorage.js":"187","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateHasSeenLatestMessage.js":"188","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorage.js":"189","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageToReceivedWhenUserOnline.js":"190","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageWhenReceiverSeenAllMessages.js":"191","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/addNewConversationToMessagesStorage.js":"192","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/clearCurrentChat.js":"193","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentPersonalUser.js":"194","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setCountNumberNotificationsUnseen.js":"195","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setCurrentChat.js":"196","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentUser.js":"197","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setFriends.js":"198","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setMoreFriends.js":"199","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setInitialMessagesStorage.js":"200","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNewNotifications.js":"201","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNotifications.js":"202","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setNumberOfConversations.js":"203","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setOpenFriendsList.js":"204","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setOpenPopupNotification.js":"205","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPosts.js":"206","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPersonalPosts.js":"207","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPostStatus.js":"208","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setSentRequestsToAddFriend.js":"209","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setReceivedRequestsToAddFriend.js":"210","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMoreMessages.js":"211","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOffline.js":"212","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOfflineMessagesStorage.js":"213","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/toggleButtonMenu.js":"214","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getNumberOfConversations.js":"215","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getCurrentChat.js":"216","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/messagesStorage/getMessagesStorage.js":"217","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getReceivedRequestsToAddFriend.js":"218","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getSentRequestsToAddFriend.js":"219","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getFriends.js":"220","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getOpenFriendsList.js":"221","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPersonalPosts.js":"222","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentPersonalUser.js":"223","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNewNotifications.js":"224","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getOpenPopupNotification.js":"225","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getCountNumberNotificationsUnseen.js":"226","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNotifications.js":"227","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentUser.js":"228","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPostStatus.js":"229","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPosts.js":"230","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/controls/getToggleButtonMenu.js":"231","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getHomePage.js":"232","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getNotificationsPage.js":"233","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getContactPage.js":"234","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/friends/Friends.js":"235","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/friends/ReceivedRequestsToAddFriend.js":"236","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/friends/SentRequestsToAddFriend.js":"237","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getPersonalPage.js":"238","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getChatPage.js":"239","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getListConversations.js":"240","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getContact.js":"241","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/useContactHook.jsx":"242","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getChat.js":"243","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getNotifications.js":"244","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useContactSubscription.jsx":"245"},{"size":798,"mtime":1616377727312,"results":"246","hashOfConfig":"247"},{"size":362,"mtime":1615348219838,"results":"248","hashOfConfig":"247"},{"size":293,"mtime":1615348219838,"results":"249","hashOfConfig":"247"},{"size":3709,"mtime":1616399470570,"results":"250","hashOfConfig":"247"},{"size":1624,"mtime":1616377272356,"results":"251","hashOfConfig":"247"},{"size":341,"mtime":1615348219838,"results":"252","hashOfConfig":"247"},{"size":3628,"mtime":1615853437085,"results":"253","hashOfConfig":"247"},{"size":4942,"mtime":1615348219838,"results":"254","hashOfConfig":"247"},{"size":2903,"mtime":1616380254521,"results":"255","hashOfConfig":"247"},{"size":3530,"mtime":1616379528847,"results":"256","hashOfConfig":"247"},{"size":1143,"mtime":1616178802898,"results":"257","hashOfConfig":"247"},{"size":2109,"mtime":1616397054573,"results":"258","hashOfConfig":"247"},{"size":3820,"mtime":1616397460782,"results":"259","hashOfConfig":"247"},{"size":3891,"mtime":1616384433422,"results":"260","hashOfConfig":"247"},{"size":20832,"mtime":1615348219826,"results":"261","hashOfConfig":"247"},{"size":485,"mtime":1615348219838,"results":"262","hashOfConfig":"247"},{"size":573,"mtime":1615348219838,"results":"263","hashOfConfig":"247"},{"size":910,"mtime":1615348219830,"results":"264","hashOfConfig":"247"},{"size":218,"mtime":1615348219830,"results":"265","hashOfConfig":"247"},{"size":1672,"mtime":1615520910976,"results":"266","hashOfConfig":"247"},{"size":248,"mtime":1615348219838,"results":"267","hashOfConfig":"247"},{"size":451,"mtime":1615348219838,"results":"268","hashOfConfig":"247"},{"size":7789,"mtime":1616399430237,"results":"269","hashOfConfig":"247"},{"size":1046,"mtime":1615348219834,"results":"270","hashOfConfig":"247"},{"size":1255,"mtime":1615348219834,"results":"271","hashOfConfig":"247"},{"size":5269,"mtime":1616350471579,"results":"272","hashOfConfig":"247"},{"size":1475,"mtime":1615999552427,"results":"273","hashOfConfig":"247"},{"size":8406,"mtime":1615999552427,"results":"274","hashOfConfig":"247"},{"size":2640,"mtime":1615348219838,"results":"275","hashOfConfig":"247"},{"size":2899,"mtime":1615348219838,"results":"276","hashOfConfig":"247"},{"size":2552,"mtime":1615519173286,"results":"277","hashOfConfig":"247"},{"size":3927,"mtime":1616398692700,"results":"278","hashOfConfig":"247"},{"size":258,"mtime":1615348219834,"results":"279","hashOfConfig":"247"},{"size":1011,"mtime":1615520910976,"results":"280","hashOfConfig":"247"},{"size":422,"mtime":1615348219834,"results":"281","hashOfConfig":"247"},{"size":3342,"mtime":1616387966285,"results":"282","hashOfConfig":"247"},{"size":1165,"mtime":1616379848044,"results":"283","hashOfConfig":"247"},{"size":4863,"mtime":1615348219838,"results":"284","hashOfConfig":"247"},{"size":4662,"mtime":1615348219838,"results":"285","hashOfConfig":"247"},{"size":3560,"mtime":1616396187655,"results":"286","hashOfConfig":"247"},{"size":108,"mtime":1615348219830,"results":"287","hashOfConfig":"247"},{"size":342,"mtime":1615348219830,"results":"288","hashOfConfig":"247"},{"size":1041,"mtime":1615348219838,"results":"289","hashOfConfig":"247"},{"size":2413,"mtime":1615348219838,"results":"290","hashOfConfig":"247"},{"size":2083,"mtime":1615348219834,"results":"291","hashOfConfig":"247"},{"size":6301,"mtime":1616350471583,"results":"292","hashOfConfig":"247"},{"size":1010,"mtime":1615348219838,"results":"293","hashOfConfig":"247"},{"size":570,"mtime":1615348219834,"results":"294","hashOfConfig":"247"},{"size":421,"mtime":1615830683597,"results":"295","hashOfConfig":"247"},{"size":2352,"mtime":1616396408167,"results":"296","hashOfConfig":"247"},{"size":619,"mtime":1615348219838,"results":"297","hashOfConfig":"247"},{"size":9272,"mtime":1616399303984,"results":"298","hashOfConfig":"247"},{"size":140,"mtime":1615348219830,"results":"299","hashOfConfig":"247"},{"size":378,"mtime":1615348219830,"results":"300","hashOfConfig":"247"},{"size":529,"mtime":1616380514779,"results":"301","hashOfConfig":"247"},{"size":38,"mtime":1615348219826,"results":"302","hashOfConfig":"247"},{"size":45,"mtime":1615348219826,"results":"303","hashOfConfig":"247"},{"size":1553,"mtime":1616178802898,"results":"304","hashOfConfig":"247"},{"size":324,"mtime":1615348219834,"results":"305","hashOfConfig":"247"},{"size":2431,"mtime":1615348219838,"results":"306","hashOfConfig":"247"},{"size":252,"mtime":1615348219830,"results":"307","hashOfConfig":"247"},{"size":5415,"mtime":1616350471575,"results":"308","hashOfConfig":"247"},{"size":10336,"mtime":1616389100454,"results":"309","hashOfConfig":"247"},{"size":1078,"mtime":1615348219838,"results":"310","hashOfConfig":"247"},{"size":1166,"mtime":1615348219834,"results":"311","hashOfConfig":"247"},{"size":462,"mtime":1616387833508,"results":"312","hashOfConfig":"247"},{"size":1063,"mtime":1615348219838,"results":"313","hashOfConfig":"247"},{"size":1397,"mtime":1616178802894,"results":"314","hashOfConfig":"247"},{"size":4371,"mtime":1616389078949,"results":"315","hashOfConfig":"247"},{"size":344,"mtime":1615348219834,"results":"316","hashOfConfig":"247"},{"size":865,"mtime":1615348219834,"results":"317","hashOfConfig":"247"},{"size":2593,"mtime":1616388332971,"results":"318","hashOfConfig":"247"},{"size":210,"mtime":1615348219834,"results":"319","hashOfConfig":"247"},{"size":2791,"mtime":1615348219834,"results":"320","hashOfConfig":"247"},{"size":921,"mtime":1615348219830,"results":"321","hashOfConfig":"247"},{"size":336,"mtime":1615348219830,"results":"322","hashOfConfig":"247"},{"size":514,"mtime":1615348219830,"results":"323","hashOfConfig":"247"},{"size":484,"mtime":1615348219830,"results":"324","hashOfConfig":"247"},{"size":477,"mtime":1615348219830,"results":"325","hashOfConfig":"247"},{"size":474,"mtime":1615348219830,"results":"326","hashOfConfig":"247"},{"size":516,"mtime":1615348219830,"results":"327","hashOfConfig":"247"},{"size":510,"mtime":1615348219830,"results":"328","hashOfConfig":"247"},{"size":504,"mtime":1615348219830,"results":"329","hashOfConfig":"247"},{"size":282,"mtime":1615384617941,"results":"330","hashOfConfig":"247"},{"size":1144,"mtime":1615348219834,"results":"331","hashOfConfig":"247"},{"size":3913,"mtime":1616210729785,"results":"332","hashOfConfig":"247"},{"size":1508,"mtime":1616092271701,"results":"333","hashOfConfig":"247"},{"size":255,"mtime":1615348219838,"results":"334","hashOfConfig":"247"},{"size":1502,"mtime":1615348219834,"results":"335","hashOfConfig":"247"},{"size":44,"mtime":1615348219826,"results":"336","hashOfConfig":"247"},{"size":38,"mtime":1615348219826,"results":"337","hashOfConfig":"247"},{"size":42,"mtime":1615348219826,"results":"338","hashOfConfig":"247"},{"size":50,"mtime":1615348219826,"results":"339","hashOfConfig":"247"},{"size":170,"mtime":1615348219826,"results":"340","hashOfConfig":"247"},{"size":31,"mtime":1615348219826,"results":"341","hashOfConfig":"247"},{"size":48,"mtime":1615348219826,"results":"342","hashOfConfig":"247"},{"size":32,"mtime":1615348219826,"results":"343","hashOfConfig":"247"},{"size":24,"mtime":1615348219826,"results":"344","hashOfConfig":"247"},{"size":39,"mtime":1615348219826,"results":"345","hashOfConfig":"247"},{"size":1386,"mtime":1615999552427,"results":"346","hashOfConfig":"247"},{"size":3257,"mtime":1615391721869,"results":"347","hashOfConfig":"247"},{"size":1632,"mtime":1615348219834,"results":"348","hashOfConfig":"247"},{"size":1160,"mtime":1615348219834,"results":"349","hashOfConfig":"247"},{"size":482,"mtime":1615348219834,"results":"350","hashOfConfig":"247"},{"size":645,"mtime":1615348219834,"results":"351","hashOfConfig":"247"},{"size":1161,"mtime":1615348219834,"results":"352","hashOfConfig":"247"},{"size":1645,"mtime":1615348219834,"results":"353","hashOfConfig":"247"},{"size":1178,"mtime":1615348219838,"results":"354","hashOfConfig":"247"},{"size":794,"mtime":1615348219834,"results":"355","hashOfConfig":"247"},{"size":419,"mtime":1615348219830,"results":"356","hashOfConfig":"247"},{"size":586,"mtime":1615348219830,"results":"357","hashOfConfig":"247"},{"size":795,"mtime":1615348219834,"results":"358","hashOfConfig":"247"},{"size":2975,"mtime":1616092271701,"results":"359","hashOfConfig":"247"},{"size":758,"mtime":1615348219834,"results":"360","hashOfConfig":"247"},{"size":2081,"mtime":1615999552427,"results":"361","hashOfConfig":"247"},{"size":7069,"mtime":1616396891029,"results":"362","hashOfConfig":"247"},{"size":1560,"mtime":1615348219834,"results":"363","hashOfConfig":"247"},{"size":2694,"mtime":1615348219834,"results":"364","hashOfConfig":"247"},{"size":6154,"mtime":1616383554132,"results":"365","hashOfConfig":"247"},{"size":5262,"mtime":1615348219834,"results":"366","hashOfConfig":"247"},{"size":265,"mtime":1615348219830,"results":"367","hashOfConfig":"247"},{"size":258,"mtime":1615348219830,"results":"368","hashOfConfig":"247"},{"size":399,"mtime":1615999552427,"results":"369","hashOfConfig":"247"},{"size":576,"mtime":1616381806729,"results":"370","hashOfConfig":"247"},{"size":290,"mtime":1616178802894,"results":"371","hashOfConfig":"247"},{"size":537,"mtime":1615348219830,"results":"372","hashOfConfig":"247"},{"size":664,"mtime":1615810711583,"results":"373","hashOfConfig":"247"},{"size":493,"mtime":1615348219830,"results":"374","hashOfConfig":"247"},{"size":537,"mtime":1615348219830,"results":"375","hashOfConfig":"247"},{"size":551,"mtime":1615348219830,"results":"376","hashOfConfig":"247"},{"size":590,"mtime":1615348219830,"results":"377","hashOfConfig":"247"},{"size":234,"mtime":1615348219830,"results":"378","hashOfConfig":"247"},{"size":781,"mtime":1615348219830,"results":"379","hashOfConfig":"247"},{"size":820,"mtime":1615348219830,"results":"380","hashOfConfig":"247"},{"size":1361,"mtime":1615348219834,"results":"381","hashOfConfig":"247"},{"size":3349,"mtime":1615348219834,"results":"382","hashOfConfig":"247"},{"size":891,"mtime":1615348219838,"results":"383","hashOfConfig":"247"},{"size":550,"mtime":1616092271701,"results":"384","hashOfConfig":"247"},{"size":210,"mtime":1615348219830,"results":"385","hashOfConfig":"247"},{"size":109,"mtime":1615348219830,"results":"386","hashOfConfig":"247"},{"size":939,"mtime":1615348219834,"results":"387","hashOfConfig":"247"},{"size":6350,"mtime":1615810711635,"results":"388","hashOfConfig":"247"},{"size":5138,"mtime":1616396355618,"results":"389","hashOfConfig":"247"},{"size":1823,"mtime":1615348219838,"results":"390","hashOfConfig":"247"},{"size":505,"mtime":1615348219834,"results":"391","hashOfConfig":"247"},{"size":2370,"mtime":1615348219838,"results":"392","hashOfConfig":"247"},{"size":397,"mtime":1615348219830,"results":"393","hashOfConfig":"247"},{"size":598,"mtime":1615348219830,"results":"394","hashOfConfig":"247"},{"size":1243,"mtime":1615348219834,"results":"395","hashOfConfig":"247"},{"size":847,"mtime":1615348219834,"results":"396","hashOfConfig":"247"},{"size":1141,"mtime":1615348219838,"results":"397","hashOfConfig":"247"},{"size":1279,"mtime":1615348219838,"results":"398","hashOfConfig":"247"},{"size":35,"mtime":1615348219826,"results":"399","hashOfConfig":"247"},{"size":1006,"mtime":1615481230827,"results":"400","hashOfConfig":"247"},{"size":1071,"mtime":1615141119088,"results":"401","hashOfConfig":"247"},{"size":702,"mtime":1615140573136,"results":"402","hashOfConfig":"247"},{"size":47,"mtime":1615348219826,"results":"403","hashOfConfig":"247"},{"size":402,"mtime":1616337926340,"results":"404","hashOfConfig":"247"},{"size":1213,"mtime":1615348219838,"results":"405","hashOfConfig":"247"},{"size":1029,"mtime":1615348219838,"results":"406","hashOfConfig":"247"},{"size":726,"mtime":1616210729785,"results":"407","hashOfConfig":"247"},{"size":752,"mtime":1616350471579,"results":"408","hashOfConfig":"247"},{"size":4717,"mtime":1616350471583,"results":"409","hashOfConfig":"247"},{"size":793,"mtime":1616350471579,"results":"410","hashOfConfig":"247"},{"size":998,"mtime":1616350471579,"results":"411","hashOfConfig":"247"},{"size":434,"mtime":1615348219838,"results":"412","hashOfConfig":"247"},{"size":267,"mtime":1615475770922,"results":"413","hashOfConfig":"247"},{"size":221,"mtime":1615475770922,"results":"414","hashOfConfig":"247"},{"size":746,"mtime":1616350471579,"results":"415","hashOfConfig":"247"},{"size":265,"mtime":1615481230827,"results":"416","hashOfConfig":"247"},{"size":272,"mtime":1615481230827,"results":"417","hashOfConfig":"247"},{"size":2581,"mtime":1616384380626,"results":"418","hashOfConfig":"247"},{"size":1637,"mtime":1616241137851,"results":"419","hashOfConfig":"247"},{"size":5050,"mtime":1616385490356,"results":"420","hashOfConfig":"247"},{"size":138,"mtime":1615481230831,"results":"421","hashOfConfig":"247"},{"size":3121,"mtime":1616384980065,"results":"422","hashOfConfig":"247"},{"size":2108,"mtime":1616092271701,"results":"423","hashOfConfig":"247"},{"size":1371,"mtime":1616341359239,"results":"424","hashOfConfig":"247"},{"size":41,"mtime":1615830683593,"results":"425","hashOfConfig":"247"},{"size":692,"mtime":1615830683593,"results":"426","hashOfConfig":"247"},{"size":837,"mtime":1615999552427,"results":"427","hashOfConfig":"247"},{"size":1525,"mtime":1616378381488,"results":"428","hashOfConfig":"247"},{"size":1014,"mtime":1616092271701,"results":"429","hashOfConfig":"247"},{"size":255,"mtime":1616210729785,"results":"430","hashOfConfig":"247"},{"size":1072,"mtime":1616338503112,"results":"431","hashOfConfig":"247"},{"size":561,"mtime":1616350471575,"results":"432","hashOfConfig":"247"},{"size":120,"mtime":1616350471575,"results":"433","hashOfConfig":"247"},{"size":309,"mtime":1616350471575,"results":"434","hashOfConfig":"247"},{"size":621,"mtime":1616350471579,"results":"435","hashOfConfig":"247"},{"size":637,"mtime":1616350471579,"results":"436","hashOfConfig":"247"},{"size":630,"mtime":1616350471579,"results":"437","hashOfConfig":"247"},{"size":270,"mtime":1616350471575,"results":"438","hashOfConfig":"247"},{"size":110,"mtime":1616350471579,"results":"439","hashOfConfig":"247"},{"size":147,"mtime":1616350471579,"results":"440","hashOfConfig":"247"},{"size":191,"mtime":1616350471579,"results":"441","hashOfConfig":"247"},{"size":171,"mtime":1616350471575,"results":"442","hashOfConfig":"247"},{"size":107,"mtime":1616350471579,"results":"443","hashOfConfig":"247"},{"size":109,"mtime":1616350471575,"results":"444","hashOfConfig":"247"},{"size":183,"mtime":1616350471575,"results":"445","hashOfConfig":"247"},{"size":180,"mtime":1616350471575,"results":"446","hashOfConfig":"247"},{"size":185,"mtime":1616350471579,"results":"447","hashOfConfig":"247"},{"size":133,"mtime":1616350471579,"results":"448","hashOfConfig":"247"},{"size":151,"mtime":1616350471575,"results":"449","hashOfConfig":"247"},{"size":147,"mtime":1616350471575,"results":"450","hashOfConfig":"247"},{"size":149,"mtime":1616350471579,"results":"451","hashOfConfig":"247"},{"size":84,"mtime":1616350471579,"results":"452","hashOfConfig":"247"},{"size":125,"mtime":1616350471579,"results":"453","hashOfConfig":"247"},{"size":188,"mtime":1616350471579,"results":"454","hashOfConfig":"247"},{"size":194,"mtime":1616350471575,"results":"455","hashOfConfig":"247"},{"size":204,"mtime":1616350471575,"results":"456","hashOfConfig":"247"},{"size":390,"mtime":1616350471579,"results":"457","hashOfConfig":"247"},{"size":1028,"mtime":1616350471575,"results":"458","hashOfConfig":"247"},{"size":550,"mtime":1616350471575,"results":"459","hashOfConfig":"247"},{"size":137,"mtime":1616350471575,"results":"460","hashOfConfig":"247"},{"size":134,"mtime":1616350471579,"results":"461","hashOfConfig":"247"},{"size":112,"mtime":1616350471579,"results":"462","hashOfConfig":"247"},{"size":120,"mtime":1616350471579,"results":"463","hashOfConfig":"247"},{"size":147,"mtime":1616350471579,"results":"464","hashOfConfig":"247"},{"size":140,"mtime":1616350471579,"results":"465","hashOfConfig":"247"},{"size":104,"mtime":1616350471579,"results":"466","hashOfConfig":"247"},{"size":122,"mtime":1616350471579,"results":"467","hashOfConfig":"247"},{"size":116,"mtime":1616350471579,"results":"468","hashOfConfig":"247"},{"size":129,"mtime":1616350471579,"results":"469","hashOfConfig":"247"},{"size":123,"mtime":1616350471579,"results":"470","hashOfConfig":"247"},{"size":133,"mtime":1616350471579,"results":"471","hashOfConfig":"247"},{"size":153,"mtime":1616350471579,"results":"472","hashOfConfig":"247"},{"size":131,"mtime":1616350471579,"results":"473","hashOfConfig":"247"},{"size":114,"mtime":1616350471579,"results":"474","hashOfConfig":"247"},{"size":125,"mtime":1616350471579,"results":"475","hashOfConfig":"247"},{"size":107,"mtime":1616350471579,"results":"476","hashOfConfig":"247"},{"size":143,"mtime":1616350471579,"results":"477","hashOfConfig":"247"},{"size":165,"mtime":1616379041991,"results":"478","hashOfConfig":"247"},{"size":148,"mtime":1616379339757,"results":"479","hashOfConfig":"247"},{"size":211,"mtime":1616379730296,"results":"480","hashOfConfig":"247"},{"size":26,"mtime":1616379822948,"results":"481","hashOfConfig":"247"},{"size":46,"mtime":1616379833566,"results":"482","hashOfConfig":"247"},{"size":43,"mtime":1616379844602,"results":"483","hashOfConfig":"247"},{"size":158,"mtime":1616380753656,"results":"484","hashOfConfig":"247"},{"size":140,"mtime":1616383535283,"results":"485","hashOfConfig":"247"},{"size":208,"mtime":1616384068357,"results":"486","hashOfConfig":"247"},{"size":163,"mtime":1616399565562,"results":"487","hashOfConfig":"247"},{"size":212,"mtime":1616388072753,"results":"488","hashOfConfig":"247"},{"size":159,"mtime":1616389051637,"results":"489","hashOfConfig":"247"},{"size":378,"mtime":1616399735372,"results":"490","hashOfConfig":"247"},{"size":4051,"mtime":1616399792964,"results":"491","hashOfConfig":"247"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},"1akjpqo",{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"494"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"494"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"494"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"494"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"494"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"494"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"494"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"494"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"494"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"494"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"494"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"494"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"599"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"494"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"494"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"494"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"494"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"494"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"494"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"494"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"494"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"494"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"747","messages":"748","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"494"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"494"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"817","usedDeprecatedRules":"494"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"828"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"828"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"494"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"494"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867","usedDeprecatedRules":"494"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"494"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"885","usedDeprecatedRules":"494"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888","usedDeprecatedRules":"494"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"977","messages":"978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js",[],["1015","1016"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js",["1017"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js",["1018"],"import React, { useState } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport \"@draft-js-plugins/mention/lib/plugin.css\";\n// import \"@draft-js-plugins/emoji/lib/plugin.css\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nconst emojiPlugin = createEmojiPlugin();\nconst { EmojiSelect, EmojiSuggestions } = emojiPlugin;\nconst linkifyPlugin = createLinkifyPlugin({\n  component(props) {\n    return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n  },\n});\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [linkifyPlugin, mentionPlugin, emojiPlugin];\n\nconst Linkify = () => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n\n  const onOpenChange = React.useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = React.useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n  return (\n    <div className=\"wrapper\">\n      <h2 style={{ color: \"#43a047\" }}>Draftjs Linkify</h2>\n      <Editor\n        editorState={editorState}\n        onChange={setEditorState}\n        plugins={plugins}\n      />\n      <MentionSuggestions\n        open={open}\n        suggestions={suggestions}\n        onOpenChange={onOpenChange}\n        onSearchChange={onSearchChange}\n      />\n      <EmojiSuggestions />\n      <EmojiSelect />\n    </div>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 36812,\n    name: \"Maxewqeq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 789327,\n    name: \"Nikewqewqad Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 32131,\n    name: \"Pascalsadwq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 121312,\n    name: \"Matthewewqe Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 125134,\n    name: \"Julianewq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 3213214,\n    name: \"Jyotiasd Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 65361,\n    name: \"Maxewq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 5321,\n    name: \"Nikewq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 43,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n];\n\nexport default Linkify;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js",["1019"],"import React, { useEffect, useState, useCallback } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport Posts from \"../components/Post/Posts\";\nimport { useQuery } from \"@apollo/client\";\nimport {GET_HOME_PAGE_CACHE_DATA} from \"../apollo/operations/queries/cache/pages/getHomePage\";\nimport { FETCH_POSTS } from \"../apollo/operations/queries/post\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport HomeSidebar from \"../components/Sidebar/HomeSidebar\";\nimport MainBody from \"../components/Body/MainBody\";\nimport FriendsBoard from \"../components/Sidebar/FriendsBoard\";\nimport ButtonToggleFriendsList from \"../components/Controls/ButtonToggleFriendsList\";\nimport {\n  MainContent,\n  MainContentLeftSide,\n  MainContentRightSide,\n} from \"./styles/pages.styles.js\";\nconst Home = () => {\n  const {data : {user, posts, openFriendsList }} = useQuery(GET_HOME_PAGE_CACHE_DATA)\n  const { refetch: fetchPosts } = useQuery(FETCH_POSTS, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const [loadingMore, setLoadingMore] = useState(false);\n  const { setPosts, setOpenFriendsList } = cacheMutations;\n  \n  useEffect(() => {\n    let _mounted = true;\n    if (!posts.length && user) {\n      fetchPosts().then(({ data: { fetchPosts } }) => {\n        if (_mounted) {\n          setPosts([...fetchPosts]);\n        }\n      });\n    }\n    if (user && loadingMore) {\n      const skip = posts.length;\n      const limit = +process.env.REACT_APP_POSTS_PER_PAGE;\n      fetchPosts({ skip, limit }).then(({ data: { fetchPosts } }) => {\n        if (_mounted) {\n          setPosts([...posts, ...fetchPosts]);\n          setLoadingMore(false);\n        }\n      });\n    }\n    return () => (_mounted = false);\n  }, [posts, fetchPosts, setPosts, loadingMore, user]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", (e) => {\n      const docEl = document.documentElement;\n      if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n        setLoadingMore(true);\n      }\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", (e) => {\n        const docEl = document.documentElement;\n        if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n          setLoadingMore(true);\n        }\n      });\n  }, []);\n\n  const handleOpenFriendsList = useCallback(async () => {        \n      setOpenFriendsList();  \n  });\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentLeftSide>          \n            {posts.length ? <Posts posts={posts} /> : null}\n          </MainContentLeftSide>\n          <MainContentRightSide>\n            <HomeSidebar user={user} />\n          </MainContentRightSide>\n        </MainContent>\n        <FriendsBoard/>\n        <ButtonToggleFriendsList\n          hide={openFriendsList}\n          onClick={handleOpenFriendsList}\n        />\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default Home;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js",["1020"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport styled from \"styled-components\";\nimport Notifications from \"../components/Notification/Notifications\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_NOTIFICATIONS_PAGE_CACHE_DATA\n} from \"../apollo/operations/queries/cache\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport MainBody from \"../components/Body/MainBody\";\nimport { FETCH_NOTIFICATIONS } from \"../apollo/operations/queries/notification\";\n\nconst NotificationsPage = () => {\n  const {data : {user, notifications}} = useQuery(GET_NOTIFICATIONS_PAGE_CACHE_DATA, {fetchPolicy : \"cache-only\"})\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n \n  const { setNotifications } = cacheMutations;\n  const [fetchNotificationsMore, setFetchNotificationsMore] = useState(false);\n  useEffect(() => {\n    let _mounted = true;\n    if(user && fetchNotifications){\n      if (!notifications.length) {\n        fetchNotifications({\n          variables: {\n            skip: 0,\n            limit: +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE,\n          },\n        }).then(({ data }) => {\n          if (data && data.fetchNotifications && _mounted) {\n            setNotifications([...data.fetchNotifications]);\n          }\n        });\n      }\n      else if(fetchNotificationsMore){\n        const skip = notifications.length;\n        const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n        fetchNotifications({ skip, limit }).then(\n          ({ data: { fetchNotifications } }) => {\n            if (_mounted) {\n              setNotifications([...notifications, ...fetchNotifications]);\n              setFetchNotificationsMore(false);\n            }\n          }\n        );\n      }\n    }\n   \n    return () => (_mounted = false);\n  }, [user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore]);\n\n  useEffect(() => {\n    function setLoadmoreOnScroll() {\n      const {\n        scrollHeight,\n        scrollTop,\n        clientHeight,\n      } = document.documentElement;\n      if (clientHeight + scrollTop > scrollHeight * 0.75) {\n        setFetchNotificationsMore(true);\n      }\n    }\n    window.addEventListener(\"scroll\", (e) => {\n      setLoadmoreOnScroll();\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", () => {\n        setLoadmoreOnScroll();\n      });\n  }, []);  \n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <div className=\"notifications\">\n            {user ? <Notifications /> : <CardRequestAuth />}\n          </div>\n          <div className=\"sidebar\"></div>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nconst MainContent = styled.div`\n  display: flex;\n  margin: auto;\n  padding: 1.5rem 0;\n  .notifications {\n    width: 100%;\n  }\n  .sidebar {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    .notifications {\n      width: calc(100% - 320px);\n      padding: 0 1rem;\n    }\n    .sidebar {\n      display: block;\n      width: 320px;\n      padding: 0 1rem;\n    }\n  }\n  @media screen and (min-width: 992px) {\n    padding: 0;\n    .notifications {\n      width: 50%;\n    }\n    .sidebar {\n      width: 50%;\n    }\n  }\n  @media screen and (min-width: 1920px) {\n    .notifications {\n      width: 55%;\n    }\n    .sidebar {\n      width: 45%;\n    }\n  }\n`;\nexport default NotificationsPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js",["1021"],"import React, { lazy, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { GET_CURRENT_USER } from \"../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nconst SignIn = lazy(() => import(\"../components/Auth/SignIn\"));\nconst SignUp = lazy(() => import(\"../components/Auth/SignUp\"));\n\nconst AuthPage = ({setIsAuth, ...props}) => {\n  const { match, location, history } = props;\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-only\",\n  }); \n  useEffect(() => {\n    if (user && location.state && location.state.from) {\n      history.replace(location.state.from);\n      setIsAuth(true);\n    } else if (user) {\n      history.replace(\"/\");\n      setIsAuth(Date.now());\n    }\n  }, [user, history, location.state]);\n  return (\n    <Switch>\n      <Route\n        exact\n        path={match.path}\n        render={(props) => <SignIn authPath={match.path} {...props} />}\n      />\n      <Route\n        path={`${match.path}/signup`}\n        render={(props) => <SignUp authPath={match.path} {...props} />}\n      />\n    </Switch>\n  );\n};\n\nexport default AuthPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js",["1022"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js",["1023","1024"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js",["1025","1026"],"import React, { lazy, useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport { GET_CHAT_PAGE_CACHE_DATA } from \"../apollo/operations/queries/cache\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport {\n  RequestAuthScreen,\n  ChatsWrapper,\n  SidebarNav,\n  MainTab,\n} from \"./styles/chats.styles\";\nimport MenuChat from \"../components/Chat/MenuChat\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../apollo/operations/queries/chat\";\nimport { UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED } from \"../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport useChatSubscriptions from \"../components/Global/useChatSubscriptions\";\n\nconst ChatConversations = lazy(() =>\n  import(\"../components/Chat/Conversations\")\n);\nconst ChatContacts = lazy(() => import(\"../components/Chat/Contact\"));\n\nconst ChatsPage = ({ match }) => {\n  //use Query\n  const {\n    data: { user, messagesStorage },\n  } = useQuery(GET_CHAT_PAGE_CACHE_DATA, { fetchPolicy: \"cache-first\" });\n  const { refetch: fetchChatConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n  const [\n    updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched,\n  ] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n  );\n  const {\n    setInitialMessagesStorage,\n    setNumberOfConversations,\n  } = cacheMutations;\n  //useState\n\n  useChatSubscriptions();\n  useEffect(() => {\n    let _isMounted = true;\n    if (!Object.keys(messagesStorage).length && user) {\n      //fetch conversations\n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchChatConversations().then(({ data }) => {\n        if (_isMounted) {\n          const {\n            conversations,\n            numberOfConversations,\n          } = data.fetchChatConversations;\n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n\n          setInitialMessagesStorage({ ...storage });\n          //update those conversations to received when user online if he/she has offlined before\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setNumberOfConversations(numberOfConversations);\n        }\n      });\n    }\n    return () => (_isMounted = false);\n  }, []);\n  if (!user)\n    return (\n      <Layout>\n        <RequestAuthScreen>\n          <CardRequestAuth />\n        </RequestAuthScreen>\n      </Layout>\n    );\n  return (\n    <Layout>\n      <ChatsWrapper>\n        <SidebarNav>\n          <MenuChat />\n        </SidebarNav>\n        <MainTab>\n          <Switch>\n            <Route exact path={match.path} render={(props) => <ChatConversations user={user} {...props}/>} />\n            <Route\n              exact\n              path={`${match.path}/contacts`}\n              component={ChatContacts}\n            />\n          </Switch>\n        </MainTab>\n      </ChatsWrapper>\n    </Layout>\n  );\n};\n\nexport default React.memo(ChatsPage);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx",["1027","1028","1029"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx",["1030"],"import React from \"react\";\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  Title,\n  SubTitle,\n  ErrorMessage,\n} from \"./AuthForm\";\nimport CustomInput from \"../Custom/CustomInput\";\nimport CustomButton from \"../Custom/CustomButton\";\nimport { withRouter } from \"react-router-dom\";\nimport GoogleRecaptcha from \"./GoogleRecapcha\";\nimport FacebookLogin from \"./GoogleAuth\";\nimport GoogleLogin from \"./FacebookAuth\";\nimport { useMutation } from \"@apollo/client\";\nimport { SIGNUP } from \"../../apollo/operations/mutations/user\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport {login} from \"./Auth.utility\"\nconst INITIAL_STATE = {\n  controls: {\n    name: {\n      type: \"text\",\n      name: \"name\",\n      valid: false,\n      label: \"Name\",\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 50,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    email: {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      valid: false,\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    password: {\n      type: \"password\",\n      name: \"password\",\n      valid: false,\n      label: \"Password\",\n      validation: {\n        required: true,\n        minLength: 6,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    confirmPassword: {\n      type: \"password\",\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      valid: false,\n      validation: {\n        required: true,\n        minLength: 6,\n        match: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n  },\n  formIsValid: false,\n  loaded: false,\n  disabled: true,\n  title: \"\",\n};\n\nfunction withSignUpMutation(WrappedComponent) {\n  return function MutationWrapper(props) {\n    const [createUser, { data, loading, error }] = useMutation(SIGNUP, {errorPolicy : \"all\"});      \n    return (\n      <WrappedComponent\n        createUser={createUser}        \n        data={data}        \n        loading={loading}        \n        error={error}        \n        {...props}\n      />\n    );\n  };\n}\n\nconst SignUp = withSignUpMutation(\n  class extends React.Component {\n    state = { ...INITIAL_STATE };\n    timer = null ;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    componentWillUnmount(){\n      clearTimeout(this.timer)\n      if(this.unsubcribeLogin){\n        this.unsubcribeLogin();\n      }\n    }\n    unsubcribeLogin; \n    async componentDidUpdate(prevProps){\n      if(prevProps.error !== this.props.error){\n        this.clearForm();        \n      }\n      if(prevProps.data !== this.props.data && this.props.data )  {\n        const { user, token, tokenExpire} = this.props.data.createUser;                    \n        this.unsubcribeLogin = await login(user, token, tokenExpire)\n        this.clearForm() ;\n      }\n    }\n\n    clearForm = () => {\n      this.setState({...INITIAL_STATE});      \n      setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    \n    checkValidity = (value, rules) => {\n      let isValid = true;\n      let errorsMessage = [];\n      if (rules.required) {\n        isValid = value.trim().length && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"This field is required\");\n        }\n      }\n      if (rules.isEmail) {\n        const pattern = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        isValid = pattern.test(value) && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Email is invalid\");\n        }\n      }\n      if (rules.minLength) {\n        isValid = value.trim().length >= rules.minLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at least ${rules.minLength} characters`);\n        }\n      }\n      if (rules.maxLength) {\n        isValid = value.trim().length <= rules.maxLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at most ${rules.maxLength} characters`);\n        }\n      }\n      if (rules.match) {\n        isValid =\n          value.trim() === this.state.controls.password.value && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Password and confirm Password do not match\");\n        }\n      }\n      return errorsMessage;\n    };\n\n    handleChange = (e, name) => {\n      let updatedControls = { ...this.state.controls };\n      let updatedControlElement = { ...updatedControls[name] };\n      updatedControlElement.value = e.target.value;\n      const checkValid = this.checkValidity(\n        e.target.value,\n        updatedControlElement.validation\n      );\n      updatedControlElement.valid = checkValid.length === 0;\n      updatedControlElement.touched = true;\n      updatedControlElement.validationErrors = checkValid;\n      updatedControls[name] = updatedControlElement;\n      let { email, password, confirmPassword } = updatedControls;\n      const formIsValid =\n        email.valid &&\n        updatedControlElement.valid &&\n        password.valid &&\n        confirmPassword.valid;\n      this.setState({ controls: updatedControls, formIsValid });\n    };\n\n    handleSubmitSignUpForm = (e) => {\n      e.preventDefault();\n      if (!this.state.formIsValid) {\n        this.setState({ ...INITIAL_STATE });\n        return;\n      }\n      const { name, email, password } = this.state.controls;\n\n      this.props.createUser({\n        variables: {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        },\n      });\n    };\n\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {      \n      const { formIsValid, loaded, disabled } = this.state;\n      let formInputArray = [];\n      Object.keys(this.state.controls).forEach((controlItem) => {\n        formInputArray.push(this.state.controls[controlItem]);\n      });\n      const { error, loading } = this.props;   \n         \n      if(!loaded) return <div>Loading...</div>\n      return (\n        <CustomFormContainer onSubmit={this.handleSubmitSignUpForm}>\n          <FormHeader>\n            <Title>Sign Up</Title>\n            <SubTitle>Sign up your account via email and password.</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}\n          {loading && <h2>Loading...</h2>}\n          <FlashForm>\n            <FacebookLogin />\n            <GoogleLogin />\n          </FlashForm>\n          <FormGroups>\n            {formInputArray.map(\n              ({\n                label,\n                name,\n                touched,\n                type,\n                valid,\n                validation,\n                validationErrors,\n                value,\n              }) => (\n                <CustomInput\n                  key={name}\n                  type={type}\n                  name={name}\n                  value={value}\n                  label={label}\n                  onChange={(e) => this.handleChange(e, name)}\n                  require={validation.required}\n                  touched={touched}\n                  valid={valid}\n                  validationErrors={validationErrors}\n                />\n              )\n            )}\n            {loaded && (\n              <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n            )}\n            <CustomButton\n              variant=\"outlined\"\n              size=\"small\"\n              color=\"#0d47a1\"\n              bgColor=\"blue\"\n              disabled={!formIsValid || disabled}\n            >\n              Submit\n            </CustomButton>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              <StyledLink to=\"/auth\">Signin account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{\" \"}\n              <StyledLink to=\"/auth/restore-account\">\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignUp);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx",["1031"],"import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_PERSONAL_USER,\n  GET_CURRENT_USER\n} from \"../../apollo/operations/queries/cache\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport {\n  Container,\n  UserName,\n  PersonalHeadingBackground,\n  BackgroundImageContainer,\n  PersonalMenus,\n  ProfileMenuItemLink,\n  Footer\n} from \"./PersonalHeading.styles\";\nimport BackgroundImage from \"../../assets/images/background-wallpaper.jpg\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport PersonalHeadingContact from \"./PersonalHeadingContact\"\n\nconst PersonalHeading = () => {\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER,{fetchPolicy : \"cache-first\"});\n  const {data : {user}} =useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"})\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const [menus, setMenus] = useState([]);\n  const [activeLink, setActiveLink] = useState(null);\n  \n  \n  useEffect(() => {\n    setMenus(i18n.store.data[lang].translation.personalMenus);\n  }, [lang]);\n\n  useEffect(() => {\n    if (currentPersonalUser) {\n      setActiveLink(`/${currentPersonalUser.slug}/posts`);\n    }\n  }, [currentPersonalUser]);\n\n  if (!currentPersonalUser) return null;\n  return (\n    <Container theme={colorMode}>\n      <PersonalHeadingBackground theme={colorMode} background={BackgroundImage}>\n        <BackgroundImageContainer theme={colorMode}>\n          <LazyLoadImage\n            src={currentPersonalUser.avatar}\n            alt={currentPersonalUser.avatar}\n          />\n          <UserName>\n            <h4>{currentPersonalUser.name}</h4>\n            <span>@{currentPersonalUser.slug}</span>\n          </UserName>\n        </BackgroundImageContainer>\n      </PersonalHeadingBackground>\n      <Footer>\n        <PersonalMenus>\n          {menus.length\n            ? menus.map((menu) => (\n                <ProfileMenuItemLink\n                  to={menu.path(currentPersonalUser.slug)}\n                  theme={colorMode}\n                  active={(\n                    activeLink === menu.path(currentPersonalUser.slug)\n                  ).toString()}\n                  onClick={() =>\n                    setActiveLink(menu.path(currentPersonalUser.slug))\n                  }\n                >\n                  {menu.name}\n                </ProfileMenuItemLink>\n              ))\n            : null}\n        </PersonalMenus>\n        {user && <PersonalHeadingContact/>}\n      </Footer>\n    </Container>\n  );\n};\n\nexport default PersonalHeading;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx",["1032","1033"],"import React, { useEffect, useState } from \"react\";\nimport { Wrapper, LeftSide, RightSide } from \"./PersonalPosts.styles\";\nimport Posts from \"../Post/Posts\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_PERSONAL_USER,\n  GET_PERSONAL_POSTS,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_POSTS } from \"../../apollo/operations/queries/post\";\nimport IntroductionBox from \"./IntroductionBox\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\n\nconst PersonalPosts = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { personalPosts },\n  } = useQuery(GET_PERSONAL_POSTS, { fetchPolicy: \"cache-first\" });\n\n  const { refetch: fetchMorePosts } = useQuery(FETCH_POSTS, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const { setPersonalPosts } = cacheMutations;\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      const docEl = document.documentElement;\n      if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.75) {\n        setLoadingMore(true);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", () => {\n        const docEl = document.documentElement;\n        if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.75) {\n          setLoadingMore(true);\n        }\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    let _mounted = true;\n    if (\n      loadingMore &&\n      currentPersonalUser &&\n      personalPosts[currentPersonalUser.slug] &&\n      fetchMorePosts\n    ) {\n      const skip = personalPosts[currentPersonalUser.slug].length;\n      const limit = +process.env.REACT_APP_POSTS_PER_PAGE;\n      const userId = currentPersonalUser._id;\n      fetchMorePosts({ skip, limit, userId }).then(\n        ({ data: { fetchPosts } }) => {\n          if (_mounted) {\n            setPersonalPosts({\n              ...personalPosts,\n              [currentPersonalUser.slug]: [\n                ...personalPosts[currentPersonalUser.slug],\n                ...fetchPosts,\n              ],\n            });\n            setLoadingMore(false);\n          }\n        }\n      );\n    }\n    return () => (_mounted = false);\n  }, [loadingMore, currentPersonalUser, personalPosts, fetchMorePosts]);\n  return (\n    <Wrapper>\n      <LeftSide>\n        <IntroductionBox />\n      </LeftSide>\n      <RightSide>        \n        {currentPersonalUser &&\n        personalPosts[currentPersonalUser.slug] &&\n        personalPosts[currentPersonalUser.slug].length ? (\n          <Posts posts={personalPosts[currentPersonalUser.slug]} />\n        ) : null}\n      </RightSide>\n    </Wrapper>\n  );\n};\n\nexport default PersonalPosts;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx",["1034"],"import React , {useEffect} from \"react\";\nimport {\n  GET_CURRENT_USER,\n  GET_SENT_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_USERS_SENT_REQUEST_TO_ADD_FRIEND } from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nconst SentRequestsToAddFriend = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { sentRequestsToAddFriend },\n  } = useQuery(GET_SENT_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const {\n    refetch: fetchUsersSentRequestsToAddFriend,\n  } = useQuery(FETCH_USERS_SENT_REQUEST_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const { setSentRequestsToAddFriend } = cacheMutations;\n  const getMoreUsersSentRequestToAddFriend = () => {\n    const skip = sentRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_CONTACT_USER_PER_PAGE;\n    if (fetchUsersSentRequestsToAddFriend) {\n      fetchUsersSentRequestsToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchUsersSentRequestToAddFriend?.length) {         \n          setSentRequestsToAddFriend([\n            ...sentRequestsToAddFriend,\n            ...data.fetchUsersSentRequestToAddFriend,\n          ]);\n        }\n      });\n    }\n  };\n \n  if (!user || !user?.sentRequestToAddFriend.length || !sentRequestsToAddFriend.length) return null;\n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userSentRequest}\n      </Title>\n      {sentRequestsToAddFriend.map((item) => (\n        <ContactItem key={item._id} userContact={item} type=\"sent\" />\n      ))}\n      {sentRequestsToAddFriend.length < user.sentRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreUsersSentRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(SentRequestsToAddFriend);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx",["1035","1036"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx",["1037","1038"],"import React, { useEffect, useState, useRef, createContext } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport { GET_CONTACT_CACHE_DATA } from \"../../apollo/operations/queries/cache\";\n\nimport { useQuery } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport ListContacts from \"./ListContacts\";\nimport ChatBoard from \"./ChatBoard\";\nexport const ContactContext = createContext({});\n\nconst Contact = () => {\n  //useQuery\n  const {\n    data: { user, friends, messagesStorage },\n  } = useQuery(GET_CONTACT_CACHE_DATA, { fetchPolicy: \"cache-only\" });\n  const { setCurrentChat } = cacheMutations;\n  //useState\n  const [search, setSearch] = useState(\"\");\n  const [contactData, setContactData] = useState([]);\n  const [originData, setOriginData] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const popupRef = useRef(null);\n\n  useEffect(() => {\n    if (friends.length) {\n      if (!search) {\n        setContactData([...originData]);\n      } else {\n        const searchRegex = new RegExp(search, \"i\");\n        const searchResults = originData.filter(\n          ({ name }) => !!name.match(searchRegex)\n        );\n        setContactData([...searchResults]);\n      }\n    }\n  }, [search, friends]);\n\n  useEffect(() => {\n    setContactData([...friends]);\n    setOriginData([...friends]);\n  }, [friends]);\n\n  useEffect(() => {\n    setCurrentChat(null);\n  }, []);\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-contact-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n  const { colorMode } = useThemeUI();\n\n  const onChangeSearch = React.useCallback((e) => {\n    setSearch(e.target.value);\n  }, []);\n  const actions = {setShowPopup, setPopupPosition}\n  const states = {messagesStorage}\n  if (!user) return null;\n  return (\n    <ContactContext.Provider value={{ actions, states }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top + 50}\n      >\n        <span>Mark as favorite</span>\n        <hr />\n        <span>Label</span>\n        <span>Set alias</span>\n        <hr />\n        <span>Block</span>\n        <span>Delete</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search search={search} onChange={onChangeSearch} />\n          <hr />\n          <ListContacts data={contactData.length ? contactData : friends} />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </ContactContext.Provider>\n  );\n};\n\nexport default Contact;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx",["1039"],"import {useState, useEffect} from 'react'\nimport useLanguage from \"../Global/useLanguage\"\nimport {useLocation} from \"react-router-dom\"\nimport {useQuery} from \"@apollo/client\"\nimport {GET_CURRENT_USER} from \"../../apollo/operations/queries/cache\"\nconst useMenuList = () => {\n  const {data : {user}} = useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"});\n\n  const location = useLocation();  \n  const { lang, i18n } = useLanguage();\n  const [namePage, setNamePage] = useState(\"\");\n  const [menu, setMenu] = useState([]);  \n  const [explores, setExplores] = useState([]);\n  \n  useEffect(() => {\n    const menuName =  i18n.store.data[lang].translation.menuList.find(\n      (item) => item.path === location.pathname\n    )        \n    setNamePage(\n      menuName ? menuName.name : \"\"\n    );\n    setMenu(i18n.store.data[lang].translation.menuList);\n    setExplores(i18n.store.data[lang].translation.explores);\n  }, [lang, i18n.store.data, location.pathname]);\n  return {\n    namePage,\n    menu, \n    explores\n  }\n}\n\nexport default useMenuList\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx",["1040","1041"],"import React, {useEffect} from \"react\";\nimport {\n  ContactItemWrapper,\n  ContactInfo,\n  ContactActions,\n  FriendActions,\n} from \"./Contact.styles\";\nimport { Link } from \"react-router-dom\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport Button from \"../Controls/ButtonDefault\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BsChatDots, BsCameraVideo, BsThreeDotsVertical } from \"react-icons/bs\";\nimport { MdStarBorder } from \"react-icons/md\";\nimport { IoMdCall } from \"react-icons/io\";\n\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_PERSONAL_USER,\n  GET_SENT_REQUESTS_TO_ADD_FRIEND,\n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n  GET_FRIENDS\n} from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { userMutations } from \"../../apollo/operations/mutations/user\";\nimport { useQuery, useMutation } from \"@apollo/client\";\n\n\nconst ContactItem = ({ userContact, type }) => {\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });  \n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { sentRequestsToAddFriend },\n  } = useQuery(GET_SENT_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const [cancelRequestToAddFriend] = useMutation(\n    userMutations.CANCEL_REQUEST_TO_ADD_FRIEND\n  );\n  const [rejectRequestToAddFriend] = useMutation(userMutations.REJECT_REQUEST_TO_ADD_FRIEND);\n  const [acceptRequestToAddFriend] = useMutation(userMutations.ACCEPT_REQUEST_TO_ADD_FRIEND);\n  const {\n    setCurrentUser,\n    setCurrentPersonalUser,\n    setReceivedRequestsToAddFriend,\n    setSentRequestsToAddFriend,\n    setFriends\n  } = cacheMutations;\n\n\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...sender.friends],\n      following: [...sender.following],\n      followed: [...sender.followed],\n      sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n    });\n    if (currentPersonalUser && currentPersonalUser._id === userContact._id) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        following: [...receiver.following],\n        followed: [...receiver.followed],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    }\n  };\n\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    const filterUsersReceivedRequest = sentRequestsToAddFriend.filter(\n      (userReceivedRequest) => userReceivedRequest._id !== userContact._id\n    );   \n    cancelRequestToAddFriend({\n      variables: { receiverId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;     \n      setSentRequestsToAddFriend(filterUsersReceivedRequest);\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n   //Handle accept request to add friend\n   const onAcceptRequestToAddFriend = () => {\n     const filterUsersSentRequest = receivedRequestsToAddFriend.filter(userSentRequest => userSentRequest._id !== userContact._id);\n    acceptRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.acceptRequestToAddFriend;\n      //remove user at recived requests to head of friends list\n      setReceivedRequestsToAddFriend(filterUsersSentRequest);\n      setFriends([{...userContact}, ...friends])\n      updateMutationOnChange(sender, receiver);    \n    });\n  };\n\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    const filterUsersSentRequest = receivedRequestsToAddFriend.filter(userSentRequest => userSentRequest._id !== userContact._id);    \n    \n    rejectRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.rejectRequestToAddFriend;\n        setReceivedRequestsToAddFriend(filterUsersSentRequest)\n        updateMutationOnChange(sender, receiver);        \n      })\n      .catch((err) => console.log(err));\n  };\n\n  const sentActions = (\n    <Button cancel onClick={onCancelRequestToAddFriend}>\n      {i18n.store.data[lang].translation.contacts.cancelRequest}\n    </Button>\n  );\n  const receivedActions = (\n    <>\n      <Button acceptBtn variant=\"outlined\" onClick={onAcceptRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.acceptRequest}\n      </Button>\n      <Button reject onClick={onRejectRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.rejectRequest}\n      </Button>\n    </>\n  );\n\n  const friendsActions = (\n    <FriendActions>\n      <Button favorite>\n        <MdStarBorder />\n      </Button>\n      <Button chat>\n        <BsChatDots />\n      </Button>\n      <Button call>\n        <IoMdCall />\n      </Button>\n      <Button videocall>\n        <BsCameraVideo />\n      </Button>\n      {/* <Button setting>\n        <BsThreeDotsVertical />\n      </Button>      */}\n    </FriendActions>\n  );\n  return (\n    <ContactItemWrapper theme={colorMode}>\n      <ContactInfo>\n        <Link to={userContact.slug}>\n          <LazyLoadImage src={userContact.avatar} alt={userContact.avatar} />\n        </Link>\n        <Link to={userContact.slug}>\n          <h6>{userContact.name}</h6>\n          <span>@{userContact.slug}</span>\n        </Link>\n      </ContactInfo>\n      <ContactActions>\n        {type === \"sent\"\n          ? sentActions\n          : type === \"received\"\n          ? receivedActions\n          : type === \"friends\"\n          ? friendsActions\n          : null}\n      </ContactActions>\n    </ContactItemWrapper>\n  );\n};\n\nexport default ContactItem;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js",[],["1042","1043"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx",["1044"],"import React, {createRef} from \"react\";\nimport {\n  Wrapper\n} from \"./styles/ChatBoard.styles\";\n\nimport ChatBoardHeading from \"./ChatBoardHeading\"\nimport ChatBoardBody from \"./ChatBoardBody\"\nimport ChatBoardFooter from \"./ChatBoardFooter\"\n\nconst ChatCenter = () => {  \n  \n  return (\n    <Wrapper>\n      <ChatBoardHeading/>\n      <ChatBoardBody/>\n      <ChatBoardFooter/>\n    </Wrapper>\n  );\n};\n\nexport default ChatCenter;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx",["1045","1046"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx",["1047","1048","1049","1050"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx",["1051"],"import React, {\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n  useMemo,\n} from \"react\";\nimport {\n  Wrapper,\n  ChatInput,\n  ChatActions,\n  Label,\n  SendMessage,\n  PlaceHolder,\n} from \"./styles/ChatBoardFooter.styles\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { FiSend } from \"react-icons/fi\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { IoMdAttach } from \"react-icons/io\";\nimport { HiOutlinePhotograph } from \"react-icons/hi\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport \"./styles/editor.css\";\nimport \"@draft-js-plugins/mention/lib/plugin.css\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  SEND_MESSAGE_CHAT_TEXT,\n  SEND_MESSAGE_CHAT_FILE,\n} from \"../../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/\";\nimport {GET_CHAT_CACHE_DATA\n} from \"../../apollo/operations/queries/cache\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport generateBase64Image from \"../../utils/generateBase64Image\";\nconst ChatBoardFooter = () => {\n  //useState\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const { colorMode } = useThemeUI();\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n  //useQuery\n  const {\n    data: { user, currentChat },\n  } = useQuery(GET_CHAT_CACHE_DATA, { fetchPolicy: \"cache-and-network\" });\n  //useMutation\n  const [sendMessageChatText] = useMutation(SEND_MESSAGE_CHAT_TEXT);\n  const [sendMessageChatFile] = useMutation(SEND_MESSAGE_CHAT_FILE);\n  const { setMessagesStorage } = cacheMutations;\n  const editorRef = useRef(null);\n\n  const {\n    plugins,\n    EmojiSelect,\n    EmojiSuggestions,\n    MentionSuggestions,\n  } = useMemo(() => {\n    const emojiPlugin = createEmojiPlugin({\n      selectButtonContent: \"😀\",\n    });\n    const { EmojiSelect, EmojiSuggestions } = emojiPlugin;\n    const linkifyPlugin = createLinkifyPlugin({\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      component(props) {\n        return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n      },\n    });\n    const mentionPlugin = createMentionPlugin({\n      positionSuggestions: (settings) => {\n        return {\n          left: `${settings.decoratorRect.left - 360 + 30}px`,\n          top: `${-settings.decoratorRect.height * 5 - 100}px`,\n          display: \"block\",\n          transform: \"scale(1)\", // transition popover on the value of its height\n          transformOrigin: \"1em 0% 0px\",\n          transition: \"all 0.25s cubic-bezier(0.3, 1.2, 0.2, 1)\",\n        };\n      },\n      mentionComponent(mentionProps) {\n        return (\n          <span\n            className={mentionProps.className}\n            onClick={() => alert(\"CLick mentions\")}\n          >\n            {mentionProps.children}\n          </span>\n        );\n      },\n    });\n    const { MentionSuggestions } = mentionPlugin;\n    const plugins = [mentionPlugin, emojiPlugin, linkifyPlugin];\n    return { plugins, EmojiSelect, EmojiSuggestions, MentionSuggestions };\n  }, []);\n\n  const onOpenChange = useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n\n  useEffect(() => {\n    setShowPlaceholder(!editorState.getCurrentContent().hasText());\n  }, [editorState]);\n\n  useEffect(() => {\n    function focusEditorWhenTypingTabButton(e) {\n      if (e.which === 9) {\n        if (editorRef.current) {\n          editorRef.current.focus();\n        }\n      }\n    }\n    window.addEventListener(\"keyup\", (e) => {\n      focusEditorWhenTypingTabButton(e);\n    });\n    return () =>\n      window.removeEventListener(\"keyup\", (e) => {\n        focusEditorWhenTypingTabButton(e);\n      });\n  }, [editorRef]);\n  const onSendMessage = (e) => {    \n    if (editorState.getCurrentContent().hasText() && currentChat) {\n      const rawData = JSON.stringify(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      sendMessageChatText({\n        variables: {\n          receiverId: currentChat._id,\n          text: rawData,\n          scope: currentChat.scope || \"PERSONAL\",\n        },\n      })\n        .then(({ data }) => {\n          const { message, scope } = data.sendMessageChatText;\n          const { receiver } = message;\n          console.log(receiver)\n          //always set hasSeenLatestMessage is true  because  this user is sender\n          setMessagesStorage(receiver, message, scope, true);\n          setEditorState(EditorState.createEmpty());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const onChangeInputChatImage = async (e) => {\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024;\n    if (fileData && fileData.size > maxSize) {\n      return false;\n    }\n    const validFiles = [\"image/jpeg\", \"image/png\", \"image/jpg\", \"image/gif\"];\n    if (!validFiles.includes(fileData.type)) {\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData);\n\n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"IMAGE\",\n        },\n      });\n      const { message, scope } = data.sendMessageChatFile;\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n      document.getElementById(\"chat-image\").value =  \"\";\n    }\n  };\n\n  const onChangeInputChatAttachment = async (e) => {    \n    e.preventDefault();\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024 * 5;\n    if (fileData && fileData.size > maxSize) {\n      console.log(\"oversize\");\n      return false;\n    }\n    const validExtensions = new RegExp(\"(.*?).(docx|doc|pdf|xml|bmp|ppt|xls|txt)$\");\n    if (!validExtensions.test(e.target.value.toLowerCase())) {\n      console.log(\"invalid file\")\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData); \n         \n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"ATTACHMENT\",\n        },\n      });\n      const { message, scope, error } = data.sendMessageChatFile;\n      if(error){\n        console.log(error)\n        return ;\n      }\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n    }\n    document.getElementById(\"chat-attachment\").value =  \"\";\n  };\n  return (\n    <Wrapper style={{ display: !user || !currentChat || !Object.entries(currentChat).length ? \"none\" : \"block\" }}>\n      <ChatActions theme={colorMode}>\n        <Label htmlFor=\"chat-image\" style={{ color: \"#fb8c00\" }}>\n          <HiOutlinePhotograph />\n          <input\n            type=\"file\"\n            id=\"chat-image\"\n            name=\"chat-image\"\n            onChange={onChangeInputChatImage}\n          />\n        </Label>\n        <Label htmlFor=\"chat-attachment\" style={{ color: \"#4527a0 \" }}>\n          <IoMdAttach />\n          <input\n            type=\"file\"\n            id=\"chat-attachment\"\n            name=\"chat-attachment\"\n            onChange={onChangeInputChatAttachment}            \n          />\n        </Label>\n      </ChatActions>\n      <ChatInput onClick={() => editorRef.current?.focus()}>\n        <EmojiSuggestions />\n        <EmojiSelect />\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          ref={editorRef}\n          tabIndex=\"0\"          \n        />\n        <MentionSuggestions\n          open={open}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <PlaceHolder show={showPlaceholder}>Enter something</PlaceHolder>\n        <SendMessage onClick={onSendMessage}>\n          <FiSend />\n        </SendMessage>\n      </ChatInput>\n    </Wrapper>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    slug: \"matthew\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    slug: \"juliansadaw\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    slug: \"jyoti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    slug: \"stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    slug: \"graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    slug: \"brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    slug: \"russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    slug: \"julianewqeq\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    slug: \"puti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n];\n\nexport default ChatBoardFooter;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx",["1052","1053","1054","1055","1056"],"import React, { useState, useEffect, createRef, useCallback } from \"react\";\nimport { Wrapper } from \"./styles/ChatBoardBody.styles\";\nimport Bubble from \"./Bubble\";\nimport { useThemeUI } from \"theme-ui\";\nimport { useQuery } from \"@apollo/client\";\nimport {GET_CHAT_CACHE_DATA\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_MESSAGES } from \"../../apollo/operations/queries/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\n\nconst ChatBoardBody = () => {\n  //useState\n  const [loadMoreMessages, setLoadMoreMessages] = useState(false);\n  //useQuery\n  const {\n    data: { user, currentChat, messagesStorage },\n  } = useQuery(GET_CHAT_CACHE_DATA, { fetchPolicy: \"cache-first\" });\n  console.log(\"render\")\n  const { refetch: fetchMoreMessages } = useQuery(FETCH_MESSAGES, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const chatBoardBodyRef = createRef(null);\n  const { updateMoreMessages } = cacheMutations;\n  const [shouldScrollIntoView, setShouldScrollIntoView] = useState(true);\n  const { colorMode } = useThemeUI();\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      if (chatBoardBodyRef.current && shouldScrollIntoView) {\n        chatBoardBodyRef.current.scrollIntoView({\n          behavior: \"auto\",\n        });\n      }\n    }, 10);\n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if(messagesStorage[currentChat?._id]?.latestMessage.sender._id === user._id   ){\n      timer = setTimeout(() => {\n        if (chatBoardBodyRef.current) {\n          chatBoardBodyRef.current.scrollIntoView({\n            behavior: \"auto\",\n          });\n        }\n      }, 10);\n    }\n    \n    return () => clearTimeout(timer);\n  }, [currentChat,messagesStorage[currentChat?._id]?.messages, user]);\n  \n  useEffect(() => {\n    let isScrolling;\n    function onScrollBodyBoard(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollHeight, scrollTop, clientHeight } = e.target;\n        if (scrollTop + clientHeight === scrollHeight) {\n          setShouldScrollIntoView(true);\n        } else {\n          setShouldScrollIntoView(false);\n        }\n        if (\n          scrollTop + clientHeight <\n          (scrollHeight - scrollTop) / 2 + scrollHeight * 0.15\n        ) {\n          setLoadMoreMessages(true);\n        }\n      }, 66);\n    }\n    document.getElementById(\"body-board\").addEventListener(\n      \"scroll\",\n      function (e) {\n        onScrollBodyBoard(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById(\"body-board\").removeEventListener(\n        \"scroll\",\n        function (e) {\n          onScrollBodyBoard(e);\n        },\n        false\n      );\n    };\n  });\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (loadMoreMessages) {\n      const skip = messagesStorage[currentChat._id].messages.length;\n      const limit = +process.env.REACT_APP_NUMBER_MESSAGES_PER_LOAD;\n      const conversationId = currentChat._id;\n      const scope = currentChat.scope;\n      fetchMoreMessages({ conversationId, scope, skip, limit }).then(\n        ({ data }) => {\n          if (_isMounted) {\n            const { messages } = data.fetchMessages;\n            updateMoreMessages(conversationId, messages);\n            setLoadMoreMessages(false);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [loadMoreMessages]);\n\n  return (\n    <Wrapper\n      theme={colorMode}\n      id=\"body-board\"\n      // onScrollCapture={onScrollBoardBody}\n    >\n      {currentChat &&\n      messagesStorage[currentChat._id] &&\n      messagesStorage[currentChat._id].messages.length &&\n      user\n        ? messagesStorage[currentChat._id].messages.map((message, idx) => {\n            return (\n              <Bubble\n                key={`bubble-${message._id}`}\n                message={message}\n                user={user}\n                me={message.sender && message.sender._id === user._id}\n                senderAvatar={\n                  message.sender && message.sender._id === user._id\n                    ? user.avatar\n                    : currentChat.avatar\n                }\n                index={idx}\n              />\n            );\n          })\n        : null}\n      <div ref={chatBoardBodyRef}></div>\n    </Wrapper>\n  );\n};\n\nexport default ChatBoardBody;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx",["1057","1058"],"import React, { useState, useContext, useRef } from \"react\";\nimport {useContactStates} from \"./hook/useContactHook\"\nimport {\n  ContactItemWrapper,\n  Avatar,\n  UserContactOverview,\n  ContactControls,\n} from \"./styles/ContactItem.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useThemeUI } from \"theme-ui\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport ThreeDotsSetting from \"../UI/ThreeDotsSetting\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport { FETCH_SINGLE_CHAT_CONVERSATION } from \"../../apollo/operations/queries/chat/fetchSingleChatConversation\";\nimport { useQuery } from \"@apollo/client\"\n\nconst ContactItem = ({ friend }) => {\n  const [showSetting, setShowSettings] = useState(false);\n  const {messagesStorage} = useContactStates();  \n  const { setPopupPosition, setShowPopup } = usePopupContactActions();\n  const { colorMode } = useThemeUI();\n  const {\n    setCurrentChat,\n    addNewConversationToMessagesStorage,\n  } = cacheMutations;\n  const { refetch: fetchSingleChatConversation } = useQuery(\n    FETCH_SINGLE_CHAT_CONVERSATION,\n    {\n      fetchPolicy: \"network-only\",\n      skip: true,\n    }\n  );\n  const onClickThreeDots = (e) => {\n    e.stopPropagation();\n    setShowPopup(true);\n    const positionY =\n      e.pageY > window.innerHeight * 0.75\n        ? e.pageY - 0.25 * window.innerHeight\n        : e.pageY;\n    setPopupPosition({ left: e.pageX, top: positionY });\n  };\n  \n  const onSetCurrentChat = async (e) => {\n    if (!messagesStorage[friend._id]) {\n      const { data } = await fetchSingleChatConversation({\n        conversationId: friend._id,\n        scope: \"PERSONAL\",\n      });\n      if (data) {\n        const { fetchSingleChatConversation } = data;\n        addNewConversationToMessagesStorage(\n          friend._id,\n          fetchSingleChatConversation\n        );\n      }\n    }\n    setCurrentChat({...friend, scope: \"PERSONAL\"});\n  };  \n  return (\n    <ContactItemWrapper\n      theme={colorMode}\n      onMouseEnter={() => setShowSettings(true)}\n      onMouseLeave={() => setShowSettings(false)}\n      onClick={onSetCurrentChat}\n    >\n      <Avatar active={friend.isOnline}>\n        <LazyLoadImage src={friend.avatar} />\n      </Avatar>\n      <UserContactOverview>{friend.name}</UserContactOverview>\n      <ContactControls\n        show={showSetting}\n        onClick={(e) => onClickThreeDots(e)}\n        aria-label=\"chat-contact-settings\"\n      >\n        <ThreeDotsSetting />\n      </ContactControls>\n    </ContactItemWrapper>\n  );\n};\n\nexport default React.memo(ContactItem);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/signup.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/acceptRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/removeFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/unFollowUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/followUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/cancelRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/rejectRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/sendRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx",["1059"],"import styled, {css} from \"styled-components\"\n\n\nexport const Wrapper = styled.header`\nheight: 65px;\nwidth : 100%; \nbackground-color : #e8f5e9;\ndisplay : flex;\npadding: 1rem 2rem;  \njustify-content: space-between;\nalign-items : center;\n`\n\nexport const User = styled.div`\ndisplay : flex;\nalign-items : center;  \n`\n\nexport const Avatar = styled.div`\nwidth : 2.5rem;\nheight : 2.5rem;\n& > img{\n  width : 100%; \n  height: 100%;\n  border-radius : 50%;\n}\n`\n\nexport const UserInfo  = styled.div`\nmargin-left : 0.4rem;\nh4{\n  font-size : 1rem;\n}\nflex: 1;\n`\n\nexport const Controls = styled.div`\n  display : flex;\n  align-items: center;\n`\n\nexport const LinkItem = styled.span`\n  display : inline-block;\n  cursor : pointer;\n  font-size : 1.4rem;\n  margin :  0  0.5rem;\n  ${({phone}) => phone && `\n    color : #039be5 ;\n    &:hover{\n      color : #0277bd ; \n    }\n  `} \n  ${({video}) => video && `\n    color : #e53935; \n    &:hover{\n      color : #c62828;\n    }\n  `}\n  ${({photo}) => photo &&`\n    color : #00897b;\n    &:hover{\n      color : #00695c;\n    }\n  `}\n\n  ${({file}) => file && `\n    color : #3949ab;\n    &:hover{\n      color: #283593;\n    }\n  `}\n \n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx",["1060","1061"],"import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  BubbleContainer,\n  Message,\n  MentionWrapper,\n  MentionInfo,\n  MentionLinkInfo,\n  MentionAvatar,\n  BubbleTimeline,\n  ImageContainer,\n  AttachmentContainer,\n} from \"./styles/Bubble.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { convertFromRaw, EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport Moment from \"react-moment\";\nimport LazyLoad from \"react-lazyload\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nconst linkifyPlugin = createLinkifyPlugin({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n});\nconst mentionPlugin = createMentionPlugin({\n  mentionComponent({ mention }) {\n    return (\n      <MentionWrapper to={`/${mention.slug}`}>\n        <MentionLinkInfo to={`/${mention.slug}`}>\n          <MentionAvatar src={mention.avatar} />\n          <MentionInfo>\n            <span>{mention.name}</span>\n            <span>@{mention.slug}</span>\n          </MentionInfo>\n        </MentionLinkInfo>\n        <span>@{mention.name}</span>\n      </MentionWrapper>\n    );\n  },\n});\nconst Bubble = ({ message, me, user, senderAvatar, index }) => {\n  const [editorState, setEditorState] = useState(() =>\n    message.messageType === \"TEXT\"\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(message.text)))\n      : null\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [bubbleDimensions, setBubbleDimensions] = useState({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const bubbleRef = useRef(null);\n  useEffect(() => {\n    if (bubbleRef.current) {\n      setBubbleDimensions(bubbleRef.current.getBoundingClientRect());\n    }\n  }, [bubbleRef]);  \n  \n  if (!user) return null;  \n  return (\n    \n      <Wrapper index={index}>\n        <BubbleContainer me={me}>\n          <Avatar>\n            <LazyLoadImage src={senderAvatar} />\n          </Avatar>\n          <Message me={me} ref={bubbleRef} messageType={message.messageType}>\n            {message.messageType === \"TEXT\" ? (\n              <Editor\n                editorState={editorState}\n                setEditorState={setEditorState}\n                plugins={[linkifyPlugin, mentionPlugin]}\n                onChange={setEditorState}\n                readOnly\n              />\n            ) : message.messageType === \"IMAGE\" ? (\n              <ImageContainer>\n                <img\n                  src={message.file.data}\n                  alt={message.file.filename}\n                  onClick={() => setIsOpen(true)}\n                />\n                {isOpen && (\n                  <Lightbox\n                    mainSrc={message.file.data}\n                    onCloseRequest={() => setIsOpen(false)}\n                  />\n                )}\n              </ImageContainer>\n            ) : message.messageType === \"ATTACHMENT\" ? (\n              <AttachmentContainer>\n                <a\n                  href={message.file.data}\n                  download={message.file.filename}\n                  title={message.file.filename}\n                >\n                  {message.file.filename}\n                </a>\n              </AttachmentContainer>\n            ) : null}\n          </Message>\n        </BubbleContainer>\n        <BubbleTimeline width={bubbleDimensions.width} me={me}>\n          <div>\n            <span>\n              <Moment fromNow>{+message.createdAt}</Moment>\n            </span>\n            {user._id === message.sender._id ? (\n              <span style={{ textTransform: \"capitalize\" }}>\n                {message.receiverStatus.toLowerCase()}\n              </span>\n            ) : null}\n          </div>\n        </BubbleTimeline>\n      </Wrapper>\n    \n  );\n};\n\nexport default Bubble;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenPopupNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/ToggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js",["1062","1063"],"import { client, restartWebsocketConnection, closeWebsocketConnection } from \"../../apollo/client\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport {\n  User,\n  Posts,\n  Notifications,\n  NewNotifications,\n  CountNumberNotificationsUnseen,  \n  CurrentChat,\n  Friends,\n  MessagesStorage\n} from \"../../apollo/models\";\nconst clearCache = () => {\n  const {\n    setCurrentUser,\n    setCountNumberNotificationsUnseen,\n    setNotifications,\n    setNewNotifications,\n    setPosts,      \n    clearCurrentChat ,\n    setFriends,\n    clearMessageStorage\n  } = cacheMutations;\n  setCurrentUser(User);\n  setCountNumberNotificationsUnseen(CountNumberNotificationsUnseen);\n  setPosts(Posts);\n  setNotifications(Notifications);\n  setNewNotifications(NewNotifications);  \n  clearCurrentChat();\n  setFriends(Friends);\n  clearMessageStorage();\n}\n\nconst logout = async () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"tokenExpire\");    \n  clearCache();\n  await client.resetStore();   \n  closeWebsocketConnection() \n};\n\nconst login = async (user, token, tokenExpire) => {\n  await logout();  \n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\n    \"tokenExpire\",\n    new Date(Date.now() + tokenExpire * 1000)\n  );  \n  const {setCurrentUser} = cacheMutations  \n  setCurrentUser({...user})  \n  restartWebsocketConnection()\n};\n\nexport { logout, login };\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx",["1064"],"import styled, {css} from 'styled-components'\nimport {Link} from \"react-router-dom\"\n\nexport const FriendsBoardWrapper = styled.div`\n  position : fixed; \n  top : 60px;\n  right: 0 ;\n  height: calc(100% - 60px);    \n  width : 300px;  \n  overflow: auto;\n  transition : var(--mainTransition);\n  z-index : ${({show}) => show ? 2 : -1};\n`\n\nexport const FriendsListWrapper = styled.div`\n  height: auto;\n  min-height: 95vh;\n  width :100%;  \n  border-radius : 6px;\n  box-shadow : var(--mediumShadow);\n  transition : var(--mainTransition);\n  border-left: 1px solid ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};\n  background-color: ${({theme}) => theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  position : relative;\n  ${({show}) => show ? css`\n    transform: translateX(0);\n  ` : css`\n    transform : translateX(100%);\n  `}  \n`\n\nexport const TitleContacts = styled.div`\n  display : flex;\n  justify-content : space-between;\n  align-items : center;\n  padding : 1rem;  \n`\n\nexport const FriendsListSearch = styled.div`\n  flex: ${({show}) => show ? 1 : \"unset\"};\n  display : flex;\n  justify-content : space-between;\n  position : relative;\n  transition : var(--secondTransition);\n  background-color : ${({theme, show}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n  border-radius : 3rem;  \n  overflow : hidden;  \n  width : ${({show}) => show ? \"90%\" : \"2rem\"};\n  transition-delay : width 0.15s;\n  input{\n    flex:  1;\n    display : ${({show}) => show ? \"block\" : \"none\"};\n    width : ${({show}) => show ? \"calc(100% - 2rem)\" : 0};    \n    padding : 0 0.7rem;  \n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n    outline : none ; \n    border: ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};    \n    font-size : 1rem;\n    color :  ${({theme}) => theme === \"dark\" ? \"var(--color-text-dark)\" : \"var(--color-text-default)\"};\n  }\n  \n  button{      \n    outline : none ; \n    border: none ;\n    text-align : center;\n    width : 2rem;\n    height:  2rem;\n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray-dark)\" : \"var(--gray-light)\"}; \n    border-radius : 50%;\n    display : flex;\n    align-items: center;\n    justify-content : center;\n    cursor : pointer;\n    &:hover{\n      background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-deep)\"}; \n    }\n  }\n  \n`\n\nexport const FriendsListTitle = styled.h4`\n  font-size : 1.1rem;\n  width : ${({hide})  => hide ? \"0\" : \"auto\"};   \n  visibility : ${({hide}) => hide ? \"hidden\" : \"visible\"};\n  transform : ${({hide}) => hide ?  \"translateX(-200%)\" : \"translateX(0)\"};  \n  transition : 0.12s all; \n  transition-delay: 0.05;\n`\n\nexport const ButtonClose = styled.button`\n  position : absolute;\n  top : 50vh;\n  right:  0;\n`\n\nexport const ImageContainer = styled.div`\n\n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx",["1065"],"import React, {useState, useRef, useEffect} from \"react\";\nimport { FriendsListWrapper, TitleContacts, FriendsListSearch, FriendsListTitle } from \"./Sidebar.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport FriendItem from \"./FriendItem\";\nimport {Scrollbars} from \"react-custom-scrollbars\"\nimport useLanguage from \"../Global/useLanguage\" \nimport {FaSearch} from \"react-icons/fa\"\n\nconst FriendsList = ({ show }) => {\n  const { colorMode } = useThemeUI();\n  const [openSearch, setOpenSearch] = useState(false)\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-and-network\" });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-and-network\" });\n  const inputRef = useRef(null)\n  const {i18n, lang} = useLanguage()\n\n  useEffect(() => {\n          \n    if(openSearch){\n      inputRef.current.focus();\n    }\n  },[openSearch])\n  const onClickSearchButton = () => {\n    inputRef.current.focus();\n    setOpenSearch(true);\n   \n  }\n  if (!friends.length) return null;\n  return (\n    <Scrollbars\n      autoHide\n      autoHideTimeout={1000}\n      autoHideDuration={200}\n      autoHeightMin={0}\n      autoHeightMax={200}            \n    >          \n      <FriendsListWrapper show={show} theme={colorMode}>\n        <TitleContacts>\n          <FriendsListTitle hide={openSearch}>{i18n.store.data[lang].translation.contacts.contactsList}</FriendsListTitle>\n          <FriendsListSearch show={openSearch} theme={colorMode}>\n            <input ref={inputRef} type=\"text\" placeholder={i18n.store.data[lang].translation.controls.search} onBlur={() => setOpenSearch(false)} />\n            <button onClick={onClickSearchButton}><FaSearch/></button>\n          </FriendsListSearch>\n        </TitleContacts>\n        {friends.map((friend) => (\n          <FriendItem key={friend._id} data={friend} />\n        ))}        \n      </FriendsListWrapper>\n    </Scrollbars>\n  );\n};\n\nexport default FriendsList;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx",["1066","1067","1068","1069","1070","1071"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx",["1072","1073"],"import React, { useState, useEffect } from \"react\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport styled from \"styled-components\";\nimport ButtonLogin from \"../Controls/ButtonLogin\"\nimport ButtonSignUp from \"../Controls/ButtonSignUp\"\nimport {useLocation} from \"react-router-dom\"\nconst CardUtility = () => {\n  const [welcome, setWelcome] = useState(\"\");\n  const [introduce, setIntroduce] = useState(\"\");\n  const [askLogin, setAskLogin] = useState(\"\");\n  const { colorMode } = useThemeUI();\n  const { lang, i18n } = useLanguage();\n  const {pathname} = useLocation()\n \n  useEffect(() => {\n    setWelcome(i18n.store.data[lang].translation.greeting.welcome);\n    setIntroduce(i18n.store.data[lang].translation.greeting.introduce);\n    setAskLogin(i18n.store.data[lang].translation.greeting.askLogin);\n  }, [lang]);\n\n  return <CardWrapper theme={colorMode}>\n    <Welcome>{welcome}</Welcome>\n    <div>{introduce}</div>   \n    <div className=\"auth\">\n      <ButtonLogin to=\"/auth\" from={pathname}>Login</ButtonLogin>\n      <ButtonSignUp to=\"/auth/signup\" from={pathname}>SignUp</ButtonSignUp>\n    </div>\n  </CardWrapper>;\n};\n\nconst CardWrapper = styled.aside`\n  background-color: ${({ theme }) =>\n    theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  text-align: center;\n  border-radius: 0.7rem;\n  overflow: hidden;\n  padding: 1.5rem;\n  .auth{\n    &> *{\n      margin : 1rem 0;\n    }\n  }\n`;\n\nconst Welcome = styled.h4`\n  font-size : 1.1em;\n  font-weight : 600;\n`\n\n\n\nexport default CardUtility;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx",["1074"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Brand from \"./Brand\";\nimport Search from \"./Search\";\nimport Navigation from \"./Navigation\";\nimport MessengerAndNotification from \"./MessengerAndNotification\";\nimport SettingAccount from \"./SettingAccount\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport ButtonMenu from \"../Controls/ButtonMenu\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport classNames from \"classnames\";\nimport { GET_CURRENT_USER } from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport { useLocation } from \"react-router-dom\";\nimport { useThemeUI } from \"theme-ui\";\nimport ButtonLogin from \"../Controls/ButtonLogin\";\nimport ButtonSignUp from \"../Controls/ButtonSignUp\";\nconst Header = () => {\n  const [openSearch, setOpenSearch] = useState(false);\n  const {\n    data: { user },\n    loading,\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-only\",\n  });  \n  const { colorMode } = useThemeUI();\n  const { pathname } = useLocation();\n\n  const { toggleButtonMenu } = cacheMutations;\n  \n  const NavControls = user ? (\n    <div className=\"nav-controls\">\n      <div className=\"center\">\n        <div className=\"nav-toggle\">\n          <ButtonMenu onClick={toggleButtonMenu} />\n        </div>\n        <div className=\"nav-bar\">\n          <Navigation />\n        </div>\n\n        <div className=\"control\">\n          <MessengerAndNotification />\n        </div>\n      </div>\n      <div className=\"setting-account\">\n        <SettingAccount />\n      </div>\n    </div>\n  ) : (\n    <div className=\"nav-controls\">\n      <div className=\"nav-auth\">\n        <ButtonLogin to=\"/auth\" from={pathname}>\n          Login\n        </ButtonLogin>\n        <ButtonSignUp to=\"/auth/signup\" from={pathname}>\n          Sign up\n        </ButtonSignUp>\n        <div className=\"setting-account\">\n          <SettingAccount />\n        </div>\n      </div>\n    </div>\n  );\n  if (loading) return <div>Loading...</div>;\n  return (\n    <Wrapper theme={colorMode}>\n      <div className={classNames(\"nav-header\", { shorten: !openSearch })}>\n        <div className={classNames(\"nav-brand\", { hide: openSearch })}>\n          <Brand />\n        </div>\n        <div\n          className={classNames(\n            \"close-search\",\n            { \"on-search-open\": !openSearch },\n            { hide: !openSearch }\n          )}\n        >\n          <Button onClick={() => setOpenSearch(false)} variant=\"outlined\">\n            <FaArrowLeft />\n          </Button>\n        </div>\n        <div className={classNames(\"search-bar\")}>\n          <Search\n            openSearch={openSearch}\n            setOpenSearch={() => setOpenSearch(true)}\n          />\n        </div>\n      </div>\n      {NavControls}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.header`\n  width: 100vw;\n  height: 60px;\n  background-color: ${({ theme }) =>\n    theme === \"dark\"\n      ? \"var(--color-background-dark)\"\n      : \"var(--color-background-default)\"};\n  border-bottom: 1px solid\n    ${({ theme }) => (theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-light)\")};\n  position: fixed;\n  top: 0;\n  padding: 0 0.4rem;\n  display: flex;\n  align-items: center;\n  flex-wrap: no-wrap;\n  z-index: 100;\n  .nav-header {\n    display: flex;\n    align-items: center;\n    transition: var(--mainTransition);\n    flex-wrap: nowrap;\n    .nav-brand,\n    .on-search-open {\n      width: 60px;\n      transition: var(--mainTransition);\n    }\n    .search-bar {\n      width: calc(100% - 60px);\n      transition: var(--mainTransition);\n    }\n    .nav-brand {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .nav-controls {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: var(--mainTransition);\n    height: 100%;\n    padding: 0 1.5rem;\n    .nav-bar {\n      display: none;\n    }\n    .center {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: space-between;\n      flex: 1;\n      padding: 0 0.5rem;\n    }\n    .nav-toggle {\n      margin-right: 0.75rem;\n    }\n    .nav-auth {\n      width: 100%;\n      display: flex;\n      justify-content: flex-end;\n      & > * {\n        font-size: 0.8em;\n        margin-right: 0.25rem;\n      }\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .hide {\n      width: 0 !important;\n      opacity: 0;\n      visibility: hidden;\n      transition: var(--mainTransition);\n      transition-delay: 0.5s;\n    }\n    .shorten {\n      width: auto !important;\n      transition: var(--mainTransition);\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding: 0 2rem;\n    .close-search {\n      display: none;\n    }\n    .nav-header {\n      width: 30%;\n    }\n    .nav-controls {\n      width: 70%;\n      .nav-bar {\n        display: block;\n        height: 100%;\n      }\n      .center {\n        justify-content: flex-end;\n      }\n      .control {\n        padding: 0 0.5rem;\n      }\n    }\n  }\n  @media screen and (min-width: 992px) {\n    .nav-header {\n      width: 35%;\n    }\n    .nav-controls {\n      width: 65%;\n      .nav-toggle {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport default React.memo(Header);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersReceivedRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersSentRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchListContact.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/login.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/removeFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/cancelRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/rejectRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/postCreated.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/updateCountNotificationsWhenSeen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyReceivedRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyAcceptRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx",["1075","1076"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/updateUserHasSeenNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/FlashPopUpNotification.jsx",["1077"],"import React, {useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\"\nconst FlashPopUpNotification = () => {\n  const [notification, setNotification] = useState(\"\")\n  \n  const { colorMode } = useThemeUI();\n  const {i18n, lang} = useLanguage()\n\n  useEffect(() => {\n    setNotification(i18n.store.data[lang].translation.notifications.message);\n  },[lang])\n\n  return <PopupWrapper theme={colorMode}>\n    {notification}\n    </PopupWrapper>;\n};\n\nconst PopupWrapper = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) =>\n    theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--white)\"};\n  border-radius: 0.5rem;\n  box-shadow: var(--mediumShadow);\n  font-size: 0.9rem;\n  padding: 1rem 2rem;  \n`;\n\nexport default FlashPopUpNotification;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx",[],["1078","1079"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useChatSubscriptions.jsx",["1080","1081"],"import { useEffect } from \"react\";\nimport chatSubscriptions from \"../../apollo/operations/subscriptions/chat\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../../apollo/operations/queries/chat/fetchChatConversations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_CHAT,\n} from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE } from \"../../apollo/operations/mutations/chat\";\n\nconst useChatSubscriptions = () => {\n  const { subscribeToMore: subscribeChatMessage } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const {\n    SENT_MESSAGE_CHAT_SUBSCRIPTION,\n    NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n    SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n    NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n  } = chatSubscriptions;\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-only\" });\n  const {\n    setMessagesStorage,\n    updateMessagesStorage,\n    updateMessagesStorageWhenReceiverSeenAllMessages,\n    updateMessagesStorageToReceivedWhenUserOnline,\n  } = cacheMutations;\n  const [updatePersonalReceiverWhenReceivedNewMessage] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE\n  );\n  useEffect(() => {\n    let unsubscribeChatMessage;\n    let unsubscribeNotifySenderThatReceiverHasReceivedMessage;\n    let unsubscribeSubscribeReceiverHasSeenAllMessages;\n    let unsubscribeNotifySendersReceiverOnlineHasReceivedMessages;\n    if (subscribeChatMessage && user) {\n      unsubscribeChatMessage = subscribeChatMessage({\n        document: SENT_MESSAGE_CHAT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            action,\n            scope,\n            message,\n          } = subscriptionData.data.sentMessageChatSubscription;\n          const { sender } = message;\n        \n          setMessagesStorage(sender, message, scope, false);\n          //update Delivered status\n          const messageStatus =\n            currentChat?._id === sender._id ? \"SEEN\" : \"DELIVERED\";\n          updatePersonalReceiverWhenReceivedNewMessage({\n            variables: { messageId: message._id, messageStatus },\n          });\n        },\n      });\n      unsubscribeNotifySenderThatReceiverHasReceivedMessage = subscribeChatMessage(\n        {\n          document: NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const {\n              action,\n              scope,\n              message,\n            } = subscriptionData.data.notifySenderThatReceiverHasReceivedMessageChat;\n            const { receiver } = message;\n            updateMessagesStorage(receiver, message, scope, action === \"SEEN\");\n          },\n        }\n      );\n      unsubscribeSubscribeReceiverHasSeenAllMessages = subscribeChatMessage({\n        document: SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            receiverId,\n          } = subscriptionData.data.senderSubscribeWhenReceiverHasSeenAllMessages;\n          updateMessagesStorageWhenReceiverSeenAllMessages(receiverId);\n        },\n      });\n      unsubscribeNotifySendersReceiverOnlineHasReceivedMessages = subscribeChatMessage(\n        {\n          document: NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const {\n              receiver,\n            } = subscriptionData.data.notifySendersThatReceiverOnlineHasReceivedMessagesChat;\n            updateMessagesStorageToReceivedWhenUserOnline(receiver);\n          },\n        }\n      );\n    }\n    return () => {\n      if (unsubscribeChatMessage) {\n        unsubscribeChatMessage();\n      }\n      if (unsubscribeNotifySenderThatReceiverHasReceivedMessage) {\n        unsubscribeNotifySenderThatReceiverHasReceivedMessage();\n      }\n      if (unsubscribeSubscribeReceiverHasSeenAllMessages) {\n        unsubscribeSubscribeReceiverHasSeenAllMessages();\n      }\n      if(unsubscribeNotifySendersReceiverOnlineHasReceivedMessages){\n        unsubscribeNotifySendersReceiverOnlineHasReceivedMessages()\n      }\n    };\n  }, [subscribeChatMessage, user, currentChat]);\n};\n\nexport default useChatSubscriptions;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatFile.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/updateHaveSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatText.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverWhenReceivedNewMessage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx",["1082","1083","1084","1085","1086","1087","1088"],"import React, { useState, useEffect, createContext, useRef } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport { GET_CURRENT_USER } from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport ListConversations from \"./ListConversations\";\nimport { useThemeUI } from \"theme-ui\";\nimport ChatBoard from \"./ChatBoard\";\n\nexport const MessagesContext = createContext({});\nconst Conversations = ({user}) => {  \n  //state\n  const [showPopup, setShowPopup] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [originalData, setOriginalData] = useState([]);  \n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const {setCurrentChat} = cacheMutations\n  const { colorMode } = useThemeUI();\n  const popupRef = useRef(null);\n\n  //empty current chat when change page\n  useEffect(()=>{\n    setCurrentChat(null);\n  },[])\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-messages-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n\n  if (!user) return null;\n  return (\n    <MessagesContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top}\n      >\n        <span>Pin this conversation</span>\n        <hr />\n        <span>Label</span>\n        <hr />\n        <span>Add to group</span>\n        <span>Turn notification off</span>\n        <hr />\n        <span>Delete conversation</span>\n        <hr />\n        <span>Report</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search />\n          <hr />\n          <ListConversations />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </MessagesContext.Provider>\n  );\n};\n\nexport default Conversations;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx",["1089"],"import React, { useState, useEffect } from \"react\";\nimport { Wrapper } from \"./styles/ListContacts.styles\";\nimport ContactItem from \"./ContactItem\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport { useQuery } from \"@apollo/client\";\nimport { FETCH_FRIENDS } from \"../../apollo/operations/queries/user/fetchFriends\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nconst ListContacts = ({ data }) => {\n  const { setShowPopup } = usePopupContactActions();\n  const [loadContactMore, setLoadContactMore] = useState(false);\n  const { refetch: fetchMoreContacts } = useQuery(FETCH_FRIENDS, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const { setFriends } = cacheMutations;\n  const onScrollListContacts = (e) => {\n    e.preventDefault();\n    const { clientHeight, scrollHeight, scrollTop } = e.target;\n    if (clientHeight + scrollTop > scrollHeight * 0.75) {\n      setLoadContactMore(true);\n    }\n  };\n\n  useEffect(() => {\n    if (loadContactMore) {\n      const skip = data.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchMoreContacts({ skip, limit }).then(({ data: { fetchFriends } }) => {\n        setFriends([...data, ...fetchFriends]);\n        setLoadContactMore(false);\n      });\n    }\n  }, [loadContactMore]);\n  if (!data.length) return null;\n  return (\n    <Wrapper\n      onScroll={() => setShowPopup(false)}\n      onScrollCapture={onScrollListContacts}\n    >\n      {data.map((friend) => (\n        <ContactItem key={`contact-${friend._id}`} friend={friend} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(ListContacts);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx",["1090","1091"],"import React, { useEffect, useState } from \"react\";\nimport { ListConversationsWrapper } from \"./styles/ListConversations.styles\";\nimport { GET_LIST_CONVERSATIONS_CACHE_DATA } from \"../../apollo/operations/queries/cache\";\nimport ConversationItem from \"./ConversationItem\";\nimport _ from \"lodash\";\nimport { usePopupMessagesActions } from \"./hook/usePopupActions\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../../apollo/operations/queries/chat/fetchChatConversations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED } from \"../../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nconst ListConversations = () => {\n  //use Query\n  const {\n    data: { currentChat, user, messagesStorage, numberOfConversations },\n  } = useQuery(GET_LIST_CONVERSATIONS_CACHE_DATA, {\n    fetchPolicy: \"cache-only\",\n  });\n  const { refetch: fetchMoreConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    { fetchPolicy: \"cache-and-network\", skip: true }\n  );\n  //use State\n  const [_messagesStorage, _setMessagesStorage] = useState([]);\n  const [loadMoreConversations, setLoadMoreConversations] = useState(false);\n  const [\n    updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched,\n  ] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n  );\n  const { setInitialMessagesStorage } = cacheMutations;\n  const { setShowPopup } = usePopupMessagesActions();\n  useEffect(() => {\n    console.log(\"here\");\n    const _convertStorageToArray = Object.values(messagesStorage);\n    const _sortedByLatestMessages = _.sortBy(_convertStorageToArray, [\n      function (o) {\n        return -o.latestMessage.createdAt;\n      },\n    ]);\n    _setMessagesStorage([..._sortedByLatestMessages]);\n  }, [messagesStorage]);\n\n  useEffect(() => {\n    let isScrolling;\n    function onScrollListConversations(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollTop, clientHeight, scrollHeight } = e.target;\n        console.log(scrollTop, clientHeight, scrollHeight);\n        if (scrollTop + clientHeight > 0.75 * scrollHeight) {\n          setLoadMoreConversations(true);\n        }\n      }, 66);\n    }\n    document.getElementById(\"list-conversations\").addEventListener(\n      \"scroll\",\n      (e) => {\n        onScrollListConversations(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById(\"list-conversations\").removeEventListener(\n        \"scroll\",\n        (e) => {\n          onScrollListConversations(e);\n        },\n        false\n      );\n    };\n  });\n  useEffect(() => {\n    let _isMounted = true;\n\n    if (\n      loadMoreConversations &&\n      numberOfConversations > _messagesStorage.length\n    ) {\n      const skip = _messagesStorage.length;\n      const limit = +process.env.REACT_APP_NUMBER_CONVERSATIONS_LIMITATION;\n      const except = Object.keys(messagesStorage);      \n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchMoreConversations({ except, skip, limit }).then(({ data }) => {\n        if (_isMounted) {\n          console.log(data);\n          const { conversations } = data.fetchChatConversations;          \n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n          setInitialMessagesStorage({ ...messagesStorage, ...storage });\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setLoadMoreConversations(false);\n        }\n      });\n    }\n  }, [loadMoreConversations, numberOfConversations]);  \n  return (\n    <ListConversationsWrapper id=\"list-conversations\">\n      {_messagesStorage.length\n        ? _messagesStorage.map(\n            ({ profile, scope, latestMessage, hasSeenLatestMessage }) => (\n              <ConversationItem\n                key={`conversation-${profile._id}`}\n                conversation={profile}\n                scope={scope}\n                hasSeenLatestMessage={hasSeenLatestMessage}\n                latestMessage={latestMessage}\n                active={currentChat && currentChat._id === profile._id}\n              />\n            )\n          )\n        : null}\n    </ListConversationsWrapper>\n  );\n};\n\nexport default ListConversations;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx",["1092","1093","1094","1095","1096"],"import React, {useState} from 'react'\nimport FriendsList from \"./FriendsList\"\nimport ButtonToggleFriendsList from \"../Controls/ButtonToggleFriendsList\"\nimport {FriendsBoardWrapper} from \"./Sidebar.styles\"\nimport {cacheMutations} from \"../../apollo/operations/mutations/cache\"\nimport {GET_OPEN_FRIENDS_LIST,GET_FRIENDS} from \"../../apollo/operations/queries/cache\"\nimport {FETCH_FRIENDS} from \"../../apollo/operations/queries/user\"\nimport {useQuery} from \"@apollo/client\"\nimport {useThemeUI} from \"theme-ui\"\nconst FriendsBoard = () => {\n  const {data : {openFriendsList}} = useQuery(GET_OPEN_FRIENDS_LIST, {fetchPolicy : \"cache-first\"})\n  return (\n    <FriendsBoardWrapper show={openFriendsList}>\n      <FriendsList show={openFriendsList} />\n      <ButtonToggleFriendsList />\n    </FriendsBoardWrapper>\n  )\n}\n\nexport default FriendsBoard\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useUserStatusSubscriptions.jsx",["1097","1098","1099"],"import { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CURRENT_USER, GET_FRIENDS } from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport io from \"socket.io-client\";\nimport _ from \"lodash\"\nconst useUserStatusSubscriptions = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-only\" });\n  const {  updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage } = cacheMutations;\n  useEffect(() => {\n    const socket = io(\"http://localhost:5000\") ; \n    \n    if (user) {      \n      //pass socket to backend to update status online \n      socket.open();     \n      const { _id, name, slug, avatar } = user;     \n      socket.emit(\"client-send-user-info\", {\n        _id,\n        name,\n        slug,\n        avatar,\n        isOnline: true,\n      });\n      socket.on(\"server-send-user-online\", (data) => {\n        updateUserOnlineOffline(data);\n        updateUserOnlineOfflineMessagesStorage(data._id);\n      });\n      socket.on(\"server-send-user-is-offline\", userId => {\n        updateUserOnlineOffline({_id : userId},false)\n        updateUserOnlineOfflineMessagesStorage(userId, false);\n      })\n    }else{\n      socket.disconnect();\n    }\n    return () => {\n      if(socket){\n        socket.close()        \n      }\n    }\n  }, [user]);\n};\n\nexport default useUserStatusSubscriptions;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySendersThatReceiverOnlineHasReceivedMessagesChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchSingleChatConversation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/clearMessageStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateHasSeenLatestMessage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageToReceivedWhenUserOnline.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageWhenReceiverSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/addNewConversationToMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/clearCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setMoreFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setInitialMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setNumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setOpenPopupNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMoreMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOffline.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOfflineMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/toggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getNumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/messagesStorage/getMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getOpenPopupNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/controls/getToggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getHomePage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getNotificationsPage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getContactPage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/friends/Friends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/friends/ReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/friends/SentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getPersonalPage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getChatPage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getListConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getContact.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/useContactHook.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useContactSubscription.jsx",["1100","1101"],{"ruleId":"1102","replacedBy":"1103"},{"ruleId":"1104","replacedBy":"1105"},{"ruleId":"1106","severity":1,"message":"1107","line":69,"column":6,"nodeType":"1108","endLine":69,"endColumn":14,"suggestions":"1109"},{"ruleId":"1110","severity":1,"message":"1111","line":15,"column":12,"nodeType":"1112","endLine":15,"endColumn":70},{"ruleId":"1106","severity":1,"message":"1113","line":64,"column":33,"nodeType":"1114","endLine":64,"endColumn":44},{"ruleId":"1106","severity":1,"message":"1115","line":53,"column":6,"nodeType":"1108","endLine":53,"endColumn":98,"suggestions":"1116"},{"ruleId":"1106","severity":1,"message":"1117","line":23,"column":6,"nodeType":"1108","endLine":23,"endColumn":37,"suggestions":"1118"},{"ruleId":"1106","severity":1,"message":"1119","line":61,"column":6,"nodeType":"1108","endLine":61,"endColumn":24,"suggestions":"1120"},{"ruleId":"1106","severity":1,"message":"1121","line":79,"column":6,"nodeType":"1108","endLine":79,"endColumn":12,"suggestions":"1122"},{"ruleId":"1106","severity":1,"message":"1123","line":110,"column":6,"nodeType":"1108","endLine":110,"endColumn":19,"suggestions":"1124"},{"ruleId":"1125","severity":1,"message":"1126","line":1,"column":34,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":42},{"ruleId":"1106","severity":1,"message":"1128","line":89,"column":6,"nodeType":"1108","endLine":89,"endColumn":8,"suggestions":"1129"},{"ruleId":"1125","severity":1,"message":"1130","line":106,"column":9,"nodeType":"1114","messageId":"1127","endLine":106,"endColumn":35},{"ruleId":"1106","severity":1,"message":"1131","line":200,"column":6,"nodeType":"1108","endLine":206,"endColumn":4,"suggestions":"1132"},{"ruleId":"1106","severity":1,"message":"1133","line":214,"column":6,"nodeType":"1108","endLine":214,"endColumn":29,"suggestions":"1134"},{"ruleId":"1125","severity":1,"message":"1135","line":22,"column":9,"nodeType":"1114","messageId":"1127","endLine":22,"endColumn":23},{"ruleId":"1106","severity":1,"message":"1136","line":35,"column":6,"nodeType":"1108","endLine":35,"endColumn":12,"suggestions":"1137"},{"ruleId":"1125","severity":1,"message":"1138","line":17,"column":13,"nodeType":"1114","messageId":"1127","endLine":17,"endColumn":17},{"ruleId":"1106","severity":1,"message":"1139","line":75,"column":6,"nodeType":"1108","endLine":75,"endColumn":71,"suggestions":"1140"},{"ruleId":"1125","severity":1,"message":"1141","line":1,"column":17,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":26},{"ruleId":"1125","severity":1,"message":"1142","line":54,"column":13,"nodeType":"1114","messageId":"1127","endLine":54,"endColumn":21},{"ruleId":"1106","severity":1,"message":"1143","line":69,"column":6,"nodeType":"1108","endLine":69,"endColumn":56,"suggestions":"1144"},{"ruleId":"1106","severity":1,"message":"1145","line":47,"column":6,"nodeType":"1108","endLine":47,"endColumn":23,"suggestions":"1146"},{"ruleId":"1106","severity":1,"message":"1147","line":56,"column":6,"nodeType":"1108","endLine":56,"endColumn":8,"suggestions":"1148"},{"ruleId":"1125","severity":1,"message":"1138","line":7,"column":18,"nodeType":"1114","messageId":"1127","endLine":7,"endColumn":22},{"ruleId":"1125","severity":1,"message":"1141","line":1,"column":16,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":25},{"ruleId":"1125","severity":1,"message":"1149","line":13,"column":37,"nodeType":"1114","messageId":"1127","endLine":13,"endColumn":56},{"ruleId":"1102","replacedBy":"1150"},{"ruleId":"1104","replacedBy":"1151"},{"ruleId":"1125","severity":1,"message":"1152","line":1,"column":16,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":25},{"ruleId":"1125","severity":1,"message":"1138","line":16,"column":18,"nodeType":"1114","messageId":"1127","endLine":16,"endColumn":22},{"ruleId":"1125","severity":1,"message":"1153","line":17,"column":18,"nodeType":"1114","messageId":"1127","endLine":17,"endColumn":37},{"ruleId":"1125","severity":1,"message":"1154","line":5,"column":32,"nodeType":"1114","messageId":"1127","endLine":5,"endColumn":40},{"ruleId":"1125","severity":1,"message":"1155","line":50,"column":5,"nodeType":"1114","messageId":"1127","endLine":50,"endColumn":35},{"ruleId":"1125","severity":1,"message":"1156","line":61,"column":13,"nodeType":"1114","messageId":"1127","endLine":61,"endColumn":40},{"ruleId":"1106","severity":1,"message":"1157","line":104,"column":49,"nodeType":"1114","endLine":104,"endColumn":56},{"ruleId":"1110","severity":1,"message":"1111","line":72,"column":16,"nodeType":"1112","endLine":72,"endColumn":74},{"ruleId":"1125","severity":1,"message":"1158","line":1,"column":49,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":60},{"ruleId":"1106","severity":1,"message":"1159","line":37,"column":6,"nodeType":"1108","endLine":37,"endColumn":8,"suggestions":"1160"},{"ruleId":"1106","severity":1,"message":"1161","line":52,"column":6,"nodeType":"1108","endLine":52,"endColumn":69,"suggestions":"1162"},{"ruleId":"1106","severity":1,"message":"1163","line":52,"column":19,"nodeType":"1164","endLine":52,"endColumn":62},{"ruleId":"1106","severity":1,"message":"1165","line":110,"column":6,"nodeType":"1108","endLine":110,"endColumn":24,"suggestions":"1166"},{"ruleId":"1125","severity":1,"message":"1167","line":1,"column":27,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":37},{"ruleId":"1125","severity":1,"message":"1168","line":1,"column":39,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":45},{"ruleId":"1125","severity":1,"message":"1169","line":1,"column":17,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":20},{"ruleId":"1125","severity":1,"message":"1158","line":1,"column":17,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":28},{"ruleId":"1125","severity":1,"message":"1170","line":21,"column":8,"nodeType":"1114","messageId":"1127","endLine":21,"endColumn":16},{"ruleId":"1125","severity":1,"message":"1171","line":9,"column":3,"nodeType":"1114","messageId":"1127","endLine":9,"endColumn":14},{"ruleId":"1125","severity":1,"message":"1172","line":11,"column":3,"nodeType":"1114","messageId":"1127","endLine":11,"endColumn":18},{"ruleId":"1125","severity":1,"message":"1173","line":2,"column":9,"nodeType":"1114","messageId":"1127","endLine":2,"endColumn":13},{"ruleId":"1125","severity":1,"message":"1138","line":18,"column":13,"nodeType":"1114","messageId":"1127","endLine":18,"endColumn":17},{"ruleId":"1125","severity":1,"message":"1174","line":3,"column":10,"nodeType":"1114","messageId":"1127","endLine":3,"endColumn":18},{"ruleId":"1125","severity":1,"message":"1135","line":7,"column":3,"nodeType":"1114","messageId":"1127","endLine":7,"endColumn":17},{"ruleId":"1125","severity":1,"message":"1175","line":10,"column":3,"nodeType":"1114","messageId":"1127","endLine":10,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1176","line":11,"column":3,"nodeType":"1114","messageId":"1127","endLine":11,"endColumn":24},{"ruleId":"1125","severity":1,"message":"1177","line":12,"column":3,"nodeType":"1114","messageId":"1127","endLine":12,"endColumn":40},{"ruleId":"1125","severity":1,"message":"1178","line":13,"column":3,"nodeType":"1114","messageId":"1127","endLine":13,"endColumn":28},{"ruleId":"1125","severity":1,"message":"1179","line":11,"column":10,"nodeType":"1114","messageId":"1127","endLine":11,"endColumn":18},{"ruleId":"1106","severity":1,"message":"1136","line":20,"column":6,"nodeType":"1108","endLine":20,"endColumn":12,"suggestions":"1180"},{"ruleId":"1125","severity":1,"message":"1141","line":1,"column":27,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":36},{"ruleId":"1106","severity":1,"message":"1113","line":50,"column":35,"nodeType":"1114","endLine":50,"endColumn":46},{"ruleId":"1106","severity":1,"message":"1181","line":80,"column":6,"nodeType":"1108","endLine":80,"endColumn":32,"suggestions":"1182"},{"ruleId":"1106","severity":1,"message":"1136","line":13,"column":5,"nodeType":"1108","endLine":13,"endColumn":11,"suggestions":"1183"},{"ruleId":"1102","replacedBy":"1184"},{"ruleId":"1104","replacedBy":"1185"},{"ruleId":"1125","severity":1,"message":"1186","line":52,"column":13,"nodeType":"1114","messageId":"1127","endLine":52,"endColumn":19},{"ruleId":"1106","severity":1,"message":"1187","line":119,"column":6,"nodeType":"1108","endLine":119,"endColumn":47,"suggestions":"1188"},{"ruleId":"1125","severity":1,"message":"1175","line":8,"column":10,"nodeType":"1114","messageId":"1127","endLine":8,"endColumn":26},{"ruleId":"1125","severity":1,"message":"1174","line":10,"column":10,"nodeType":"1114","messageId":"1127","endLine":10,"endColumn":18},{"ruleId":"1125","severity":1,"message":"1189","line":20,"column":10,"nodeType":"1114","messageId":"1127","endLine":20,"endColumn":16},{"ruleId":"1125","severity":1,"message":"1190","line":20,"column":18,"nodeType":"1114","messageId":"1127","endLine":20,"endColumn":27},{"ruleId":"1125","severity":1,"message":"1191","line":21,"column":10,"nodeType":"1114","messageId":"1127","endLine":21,"endColumn":22},{"ruleId":"1125","severity":1,"message":"1192","line":21,"column":24,"nodeType":"1114","messageId":"1127","endLine":21,"endColumn":39},{"ruleId":"1106","severity":1,"message":"1147","line":33,"column":5,"nodeType":"1108","endLine":33,"endColumn":7,"suggestions":"1193"},{"ruleId":"1106","severity":1,"message":"1194","line":33,"column":6,"nodeType":"1108","endLine":33,"endColumn":23,"suggestions":"1195"},{"ruleId":"1125","severity":1,"message":"1196","line":31,"column":11,"nodeType":"1114","messageId":"1127","endLine":31,"endColumn":23},{"ruleId":"1106","severity":1,"message":"1197","line":115,"column":6,"nodeType":"1108","endLine":115,"endColumn":52,"suggestions":"1198"},{"ruleId":"1125","severity":1,"message":"1126","line":1,"column":16,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":24},{"ruleId":"1125","severity":1,"message":"1135","line":5,"column":9,"nodeType":"1114","messageId":"1127","endLine":5,"endColumn":23},{"ruleId":"1125","severity":1,"message":"1199","line":6,"column":31,"nodeType":"1114","messageId":"1127","endLine":6,"endColumn":42},{"ruleId":"1125","severity":1,"message":"1200","line":7,"column":9,"nodeType":"1114","messageId":"1127","endLine":7,"endColumn":22},{"ruleId":"1125","severity":1,"message":"1201","line":9,"column":9,"nodeType":"1114","messageId":"1127","endLine":9,"endColumn":19},{"ruleId":"1125","severity":1,"message":"1202","line":6,"column":8,"nodeType":"1114","messageId":"1127","endLine":6,"endColumn":9},{"ruleId":"1125","severity":1,"message":"1203","line":12,"column":13,"nodeType":"1114","messageId":"1127","endLine":12,"endColumn":20},{"ruleId":"1106","severity":1,"message":"1204","line":45,"column":6,"nodeType":"1108","endLine":45,"endColumn":12,"suggestions":"1205"},{"ruleId":"1125","severity":1,"message":"1206","line":1,"column":8,"nodeType":"1114","messageId":"1127","endLine":1,"endColumn":13},{"ruleId":"1106","severity":1,"message":"1207","line":110,"column":6,"nodeType":"1108","endLine":110,"endColumn":27,"suggestions":"1208"},"no-native-reassign",["1209"],"no-negated-in-lhs",["1210"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCurrentUser', 'fetchFriends', 'fetchNotifications', 'setCurrentUser', 'setFriends', and 'setNotifications'. Either include them or remove the dependency array.","ArrayExpression",["1211"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","React Hook useEffect has a missing dependency: 'setNotifications'. Either include it or remove the dependency array.",["1212"],"React Hook useEffect has a missing dependency: 'setIsAuth'. Either include it or remove the dependency array. If 'setIsAuth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1213"],"React Hook useEffect has missing dependencies: 'personalPosts', 'setCurrentPersonalUser', and 'setPersonalPosts'. Either include them or remove the dependency array.",["1214"],"React Hook useEffect has missing dependencies: 'fetchListContact', 'friends.length', 'receivedRequestsToAddFriend.length', 'sentRequestsToAddFriend.length', 'setFriends', 'setReceivedRequestsToAddFriend', and 'setSentRequestsToAddFriend'. Either include them or remove the dependency array.",["1215"],"React Hook useEffect has missing dependencies: 'fetchFriends', 'friends', and 'setFriends'. Either include them or remove the dependency array.",["1216"],"no-unused-vars","'useState' is defined but never used.","unusedVar","React Hook useEffect has missing dependencies: 'fetchChatConversations', 'messagesStorage', 'setInitialMessagesStorage', 'setNumberOfConversations', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user'. Either include them or remove the dependency array.",["1217"],"'updateSubscriptionOnChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setReceivedRequestsToAddFriend' and 'updatedNotifications'. Either include them or remove the dependency array.",["1218"],"React Hook useEffect has a missing dependency: 'setOpenPopupNotification'. Either include it or remove the dependency array.",["1219"],"'cacheMutations' is defined but never used.","React Hook useEffect has a missing dependency: 'i18n.store.data'. Either include it or remove the dependency array.",["1220"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setPersonalPosts'. Either include it or remove the dependency array.",["1221"],"'useEffect' is defined but never used.","'receiver' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setReceivedRequestsToAddFriend'. Either include it or remove the dependency array.",["1222"],"React Hook useEffect has a missing dependency: 'originData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setContactData' needs the current value of 'originData'.",["1223"],"React Hook useEffect has a missing dependency: 'setCurrentChat'. Either include it or remove the dependency array.",["1224"],"'BsThreeDotsVertical' is defined but never used.",["1209"],["1210"],"'createRef' is defined but never used.","'currentPersonalUser' is assigned a value but never used.","'FaRocket' is defined but never used.","'setReceivedRequestsToAddFriend' is assigned a value but never used.","'receivedRequestsToAddFriend' is assigned a value but never used.","The ref value 'responseRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'responseRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'shouldScrollIntoView'. Either include them or remove the dependency array.",["1225"],"React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'messagesStorage'. Either include them or remove the dependency array.",["1226"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ChainExpression","React Hook useEffect has missing dependencies: 'currentChat._id', 'currentChat.scope', 'fetchMoreMessages', 'messagesStorage', and 'updateMoreMessages'. Either include them or remove the dependency array.",["1227"],"'useContext' is defined but never used.","'useRef' is defined but never used.","'css' is defined but never used.","'LazyLoad' is defined but never used.","'CurrentChat' is defined but never used.","'MessagesStorage' is defined but never used.","'Link' is defined but never used.","'useQuery' is defined but never used.","'GET_CURRENT_USER' is defined but never used.","'GET_NEW_NOTIFICATIONS' is defined but never used.","'GET_COUNT_NUMBER_NOTIFICATIONS_UNSEEN' is defined but never used.","'GET_CURRENT_PERSONAL_USER' is defined but never used.","'askLogin' is assigned a value but never used.",["1228"],"React Hook useEffect has missing dependencies: 'fetchNotifications', 'notifications', and 'setNotifications'. Either include them or remove the dependency array.",["1229"],["1230"],["1209"],["1210"],"'action' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES', 'NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT', 'SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES', 'SENT_MESSAGE_CHAT_SUBSCRIPTION', 'setMessagesStorage', 'updateMessagesStorage', 'updateMessagesStorageToReceivedWhenUserOnline', 'updateMessagesStorageWhenReceiverSeenAllMessages', and 'updatePersonalReceiverWhenReceivedNewMessage'. Either include them or remove the dependency array.",["1231"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'originalData' is assigned a value but never used.","'setOriginalData' is assigned a value but never used.",["1232"],"React Hook useEffect has missing dependencies: 'data', 'fetchMoreContacts', and 'setFriends'. Either include them or remove the dependency array.",["1233"],"'setShowPopup' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_messagesStorage.length', 'fetchMoreConversations', 'messagesStorage', 'setInitialMessagesStorage', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user._id'. Either include them or remove the dependency array.",["1234"],"'GET_FRIENDS' is defined but never used.","'FETCH_FRIENDS' is defined but never used.","'useThemeUI' is defined but never used.","'_' is defined but never used.","'friends' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'updateUserOnlineOffline' and 'updateUserOnlineOfflineMessagesStorage'. Either include them or remove the dependency array.",["1235"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'friends', 'receivedRequestsToAddFriend', 'setFriends', 'setReceivedRequestsToAddFriend', and 'updateSubscriptionOnChange'. Either include them or remove the dependency array.",["1236"],"no-global-assign","no-unsafe-negation",{"desc":"1237","fix":"1238"},{"desc":"1239","fix":"1240"},{"desc":"1241","fix":"1242"},{"desc":"1243","fix":"1244"},{"desc":"1245","fix":"1246"},{"desc":"1247","fix":"1248"},{"desc":"1249","fix":"1250"},{"desc":"1251","fix":"1252"},{"desc":"1253","fix":"1254"},{"desc":"1255","fix":"1256"},{"desc":"1257","fix":"1258"},{"desc":"1259","fix":"1260"},{"desc":"1261","fix":"1262"},{"desc":"1263","fix":"1264"},{"desc":"1265","fix":"1266"},{"desc":"1267","fix":"1268"},{"desc":"1269","fix":"1270"},{"desc":"1255","fix":"1271"},{"desc":"1272","fix":"1273"},{"desc":"1255","fix":"1274"},{"desc":"1275","fix":"1276"},{"desc":"1263","fix":"1277"},{"desc":"1278","fix":"1279"},{"desc":"1280","fix":"1281"},{"desc":"1282","fix":"1283"},{"desc":"1284","fix":"1285"},"Update the dependencies array to be: [fetchCurrentUser, fetchFriends, fetchNotifications, isAuth, setCurrentUser, setFriends, setNotifications]",{"range":"1286","text":"1287"},"Update the dependencies array to be: [user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore, setNotifications]",{"range":"1288","text":"1289"},"Update the dependencies array to be: [user, history, location.state, setIsAuth]",{"range":"1290","text":"1291"},"Update the dependencies array to be: [personalPosts, personalUserData, setCurrentPersonalUser, setPersonalPosts]",{"range":"1292","text":"1293"},"Update the dependencies array to be: [fetchListContact, friends.length, receivedRequestsToAddFriend.length, sentRequestsToAddFriend.length, setFriends, setReceivedRequestsToAddFriend, setSentRequestsToAddFriend, user]",{"range":"1294","text":"1295"},"Update the dependencies array to be: [fetchFriends, friends, loadingMore, setFriends]",{"range":"1296","text":"1297"},"Update the dependencies array to be: [fetchChatConversations, messagesStorage, setInitialMessagesStorage, setNumberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",{"range":"1298","text":"1299"},"Update the dependencies array to be: [countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedNotifications, setReceivedRequestsToAddFriend]",{"range":"1300","text":"1301"},"Update the dependencies array to be: [openPopupNotification, setOpenPopupNotification]",{"range":"1302","text":"1303"},"Update the dependencies array to be: [i18n.store.data, lang]",{"range":"1304","text":"1305"},"Update the dependencies array to be: [loadingMore, currentPersonalUser, personalPosts, fetchMorePosts, setPersonalPosts]",{"range":"1306","text":"1307"},"Update the dependencies array to be: [subscribeUser, user, receivedRequestsToAddFriend, setReceivedRequestsToAddFriend]",{"range":"1308","text":"1309"},"Update the dependencies array to be: [search, friends, originData]",{"range":"1310","text":"1311"},"Update the dependencies array to be: [setCurrentChat]",{"range":"1312","text":"1313"},"Update the dependencies array to be: [chatBoardBodyRef, shouldScrollIntoView]",{"range":"1314","text":"1315"},"Update the dependencies array to be: [chatBoardBodyRef, currentChat, messagesStorage, user]",{"range":"1316","text":"1317"},"Update the dependencies array to be: [currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, updateMoreMessages]",{"range":"1318","text":"1319"},{"range":"1320","text":"1305"},"Update the dependencies array to be: [fetchNotifications, loadingNotificationsMore, notifications, setNotifications]",{"range":"1321","text":"1322"},{"range":"1323","text":"1305"},"Update the dependencies array to be: [subscribeChatMessage, user, currentChat, SENT_MESSAGE_CHAT_SUBSCRIPTION, NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT, SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES, NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages, updateMessagesStorageToReceivedWhenUserOnline]",{"range":"1324","text":"1325"},{"range":"1326","text":"1313"},"Update the dependencies array to be: [data, fetchMoreContacts, loadContactMore, setFriends]",{"range":"1327","text":"1328"},"Update the dependencies array to be: [_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",{"range":"1329","text":"1330"},"Update the dependencies array to be: [updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage, user]",{"range":"1331","text":"1332"},"Update the dependencies array to be: [friends, receivedRequestsToAddFriend, setFriends, setReceivedRequestsToAddFriend, subscribeUser, updateSubscriptionOnChange, user]",{"range":"1333","text":"1334"},[2773,2781],"[fetchCurrentUser, fetchFriends, fetchNotifications, isAuth, setCurrentUser, setFriends, setNotifications]",[1966,2058],"[user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore, setNotifications]",[771,802],"[user, history, location.state, setIsAuth]",[1956,1974],"[personalPosts, personalUserData, setCurrentPersonalUser, setPersonalPosts]",[2393,2399],"[fetchListContact, friends.length, receivedRequestsToAddFriend.length, sentRequestsToAddFriend.length, setFriends, setReceivedRequestsToAddFriend, setSentRequestsToAddFriend, user]",[3351,3364],"[fetchFriends, friends, loadingMore, setFriends]",[3216,3218],"[fetchChatConversations, messagesStorage, setInitialMessagesStorage, setNumberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",[6522,6659],"[countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedNotifications, setReceivedRequestsToAddFriend]",[6829,6852],"[openPopupNotification, setOpenPopupNotification]",[1168,1174],"[i18n.store.data, lang]",[2416,2481],"[loadingMore, currentPersonalUser, personalPosts, fetchMorePosts, setPersonalPosts]",[2267,2317],"[subscribeUser, user, receivedRequestsToAddFriend, setReceivedRequestsToAddFriend]",[1464,1481],"[search, friends, originData]",[1641,1643],"[setCurrentChat]",[1358,1360],"[chatBoardBodyRef, shouldScrollIntoView]",[1731,1794],"[chatBoardBodyRef, currentChat, messagesStorage, user]",[3421,3439],"[currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, updateMoreMessages]",[849,855],[2917,2943],"[fetchNotifications, loadingNotificationsMore, notifications, setNotifications]",[452,458],[4632,4673],"[subscribeChatMessage, user, currentChat, SENT_MESSAGE_CHAT_SUBSCRIPTION, NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT, SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES, NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages, updateMessagesStorageToReceivedWhenUserOnline]",[1071,1073],[1291,1308],"[data, fetchMoreContacts, loadContactMore, setFriends]",[4330,4376],"[_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",[1469,1475],"[updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage, user]",[3984,4005],"[friends, receivedRequestsToAddFriend, setFriends, setReceivedRequestsToAddFriend, subscribeUser, updateSubscriptionOnChange, user]"]