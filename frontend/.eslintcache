[{"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js":"1","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js":"2","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js":"3","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js":"4","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js":"5","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js":"6","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js":"7","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js":"8","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js":"9","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js":"10","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js":"11","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js":"12","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js":"13","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js":"14","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx":"15","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx":"16","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js":"17","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js":"18","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx":"19","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx":"20","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx":"21","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx":"22","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx":"23","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx":"24","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx":"25","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx":"26","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx":"27","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx":"28","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx":"29","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx":"30","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx":"31","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx":"32","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx":"33","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx":"34","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx":"35","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js":"36","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js":"37","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js":"38","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js":"39","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx":"40","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx":"41","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx":"42","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx":"43","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js":"44","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx":"45","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx":"46","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx":"47","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx":"48","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js":"49","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js":"50","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx":"51","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx":"52","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js":"53","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js":"54","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx":"55","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx":"56","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx":"57","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx":"58","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx":"59","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx":"60","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx":"61","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx":"62","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx":"63","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx":"64","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx":"65","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx":"66","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx":"67","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx":"68","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx":"69","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx":"70","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js":"71","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js":"72","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js":"73","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js":"74","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js":"75","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js":"76","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/ReceivedRequestsToAddFriend.js":"77","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/SentRequestsToAddFriend.js":"78","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/Friends.js":"79","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js":"80","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js":"81","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js":"82","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx":"83","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx":"84","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx":"85","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx":"86","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx":"87","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx":"88","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx":"89","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx":"90","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx":"91","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx":"92","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx":"93","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx":"94","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx":"95","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx":"96","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx":"97","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx":"98","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx":"99","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx":"100","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx":"101","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx":"102","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js":"103","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx":"104","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx":"105","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx":"106","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx":"107","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx":"108","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx":"109","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx":"110","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx":"111","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx":"112","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx":"113","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js":"114","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx":"115","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx":"116","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js":"117","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js":"118","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js":"119","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js":"120","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js":"121","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js":"122","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js":"123","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js":"124","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js":"125","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx":"126","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx":"127","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx":"128","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx":"129","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx":"130","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx":"131","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js":"132","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js":"133","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js":"134","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx":"135","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx":"136","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySendersThatReceiverOnlineHasReceivedMessagesChat.js":"137","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchSingleChatConversation.js":"138","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setMessagesStorage.js":"139","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/clearMessageStorage.js":"140","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateHasSeenLatestMessage.js":"141","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorage.js":"142","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageToReceivedWhenUserOnline.js":"143","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageWhenReceiverSeenAllMessages.js":"144","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/addNewConversationToMessagesStorage.js":"145","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setFriends.js":"146","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setMoreFriends.js":"147","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setInitialMessagesStorage.js":"148","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setOpenFriendsList.js":"149","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setSentRequestsToAddFriend.js":"150","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setReceivedRequestsToAddFriend.js":"151","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMoreMessages.js":"152","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getNumberOfConversations.js":"153","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getCurrentChat.js":"154","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/messagesStorage/getMessagesStorage.js":"155","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getReceivedRequestsToAddFriend.js":"156","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getSentRequestsToAddFriend.js":"157","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getFriends.js":"158","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getOpenFriendsList.js":"159","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPersonalPosts.js":"160","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentPersonalUser.js":"161","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPostStatus.js":"162","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPosts.js":"163","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/contact/getContact.js":"164","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getHome.js":"165","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditor.jsx":"166","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorHeader.jsx":"167","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditor.styles.jsx":"168","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorHeader.styles.jsx":"169","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorBody.jsx":"170","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorBody.styles.jsx":"171","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ImagesCarousel.jsx":"172","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ImagesCarousel.styles.jsx":"173","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardHeader.jsx":"174","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCard.styles.jsx":"175","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardHeader.styles.jsx":"176","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardBody.jsx":"177","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardBody.styles.jsx":"178","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardFooter.jsx":"179","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardFooter.styles.jsx":"180","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getNotifications.js":"181","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getHeader.js":"182","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/styles/Header.styles.jsx":"183","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/FlashPopUpNotification.jsx":"184","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/FlashPopUpNotification.styles.jsx":"185","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LatestNotification.js":"186","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentEditor.jsx":"187","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentEditor.styles.jsx":"188","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getUsePostsSubscription.js":"189","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Comments.jsx":"190","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/Comments.styles.jsx":"191","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentItem.jsx":"192","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentItem.styles.jsx":"193","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/ResponseEditor.jsx":"194","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/AlertDialogSlide.jsx":"195","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/Dialog.js":"196","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Responses.jsx":"197","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentCard.jsx":"198","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentCard.styles.jsx":"199","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useChatSubscriptions.jsx":"200","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useUserStatusSubscriptions.jsx":"201","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useContactSubscription.jsx":"202","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useHomePostsSubscription.jsx":"203","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/checkCommentExistedInPosts.js":"204","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useNotificationsPostSubscription.jsx":"205","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/IntroductionBox.styles.jsx":"206","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeading.styles.jsx":"207","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeadingContact.styles.jsx":"208","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalPosts.styles.jsx":"209","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getPersonalUser.js":"210","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/NotificationItem.styles.jsx":"211","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomMaterialButton.jsx":"212","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/Dropdown.styles.jsx":"213","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/EditPostDialog.jsx":"214","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/useDraftEditorPlugin.jsx":"215","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/useDraftEditorPlugin.styles.jsx":"216","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/EditPostDialog.styles.jsx":"217","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.types.js":"218","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.queries.js":"219","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/initialState.js":"220","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/controls/controls.query.js":"221","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/controls/controls.types.js":"222","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.types.js":"223","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.caches.js":"224","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.caches.js":"225","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.subscriptions.js":"226","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.mutations.js":"227","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.queries.js":"228","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.mutations.js":"229","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.subscriptions.js":"230","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/controls/controls.caches.js":"231","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.types.js":"232","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.queries.js":"233","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.mutations.js":"234","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.subscriptions.js":"235","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.caches.js":"236","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/currentPersonalUser.caches.js":"237","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/chat/chat.caches.js":"238","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/chat/chat.types.js":"239"},{"size":841,"mtime":1617679989539,"results":"240","hashOfConfig":"241"},{"size":362,"mtime":1616455707525,"results":"242","hashOfConfig":"241"},{"size":293,"mtime":1616455707525,"results":"243","hashOfConfig":"241"},{"size":2385,"mtime":1618712825322,"results":"244","hashOfConfig":"241"},{"size":1704,"mtime":1618456309630,"results":"245","hashOfConfig":"241"},{"size":341,"mtime":1616455707525,"results":"246","hashOfConfig":"241"},{"size":3549,"mtime":1618836839663,"results":"247","hashOfConfig":"241"},{"size":4839,"mtime":1617003484910,"results":"248","hashOfConfig":"241"},{"size":3633,"mtime":1618736132518,"results":"249","hashOfConfig":"241"},{"size":3637,"mtime":1618837828439,"results":"250","hashOfConfig":"241"},{"size":1058,"mtime":1618720997161,"results":"251","hashOfConfig":"241"},{"size":1290,"mtime":1618712879191,"results":"252","hashOfConfig":"241"},{"size":3692,"mtime":1618721079114,"results":"253","hashOfConfig":"241"},{"size":3897,"mtime":1618841781489,"results":"254","hashOfConfig":"241"},{"size":13546,"mtime":1618066017194,"results":"255","hashOfConfig":"241"},{"size":485,"mtime":1616455707525,"results":"256","hashOfConfig":"241"},{"size":573,"mtime":1616455707525,"results":"257","hashOfConfig":"241"},{"size":42,"mtime":1618840911176,"results":"258","hashOfConfig":"241"},{"size":1776,"mtime":1618736552678,"results":"259","hashOfConfig":"241"},{"size":395,"mtime":1617558622430,"results":"260","hashOfConfig":"241"},{"size":463,"mtime":1617156204773,"results":"261","hashOfConfig":"241"},{"size":648,"mtime":1618713535710,"results":"262","hashOfConfig":"241"},{"size":1046,"mtime":1616455707521,"results":"263","hashOfConfig":"241"},{"size":1255,"mtime":1616455707521,"results":"264","hashOfConfig":"241"},{"size":5261,"mtime":1618713015346,"results":"265","hashOfConfig":"241"},{"size":1475,"mtime":1616455707521,"results":"266","hashOfConfig":"241"},{"size":8396,"mtime":1618714569262,"results":"267","hashOfConfig":"241"},{"size":2586,"mtime":1618212252725,"results":"268","hashOfConfig":"241"},{"size":2963,"mtime":1618818686641,"results":"269","hashOfConfig":"241"},{"size":2514,"mtime":1618720208286,"results":"270","hashOfConfig":"241"},{"size":2841,"mtime":1618720172281,"results":"271","hashOfConfig":"241"},{"size":258,"mtime":1616455707521,"results":"272","hashOfConfig":"241"},{"size":1008,"mtime":1618720131645,"results":"273","hashOfConfig":"241"},{"size":422,"mtime":1616455707521,"results":"274","hashOfConfig":"241"},{"size":3287,"mtime":1618837199166,"results":"275","hashOfConfig":"241"},{"size":1130,"mtime":1618477686016,"results":"276","hashOfConfig":"241"},{"size":9624,"mtime":1618280255056,"results":"277","hashOfConfig":"241"},{"size":9121,"mtime":1618280240932,"results":"278","hashOfConfig":"241"},{"size":2280,"mtime":1618797178395,"results":"279","hashOfConfig":"241"},{"size":974,"mtime":1618720416815,"results":"280","hashOfConfig":"241"},{"size":2359,"mtime":1618795876918,"results":"281","hashOfConfig":"241"},{"size":2083,"mtime":1616455707521,"results":"282","hashOfConfig":"241"},{"size":6421,"mtime":1618818287493,"results":"283","hashOfConfig":"241"},{"size":1010,"mtime":1615348219838,"results":"284","hashOfConfig":"241"},{"size":570,"mtime":1616455707521,"results":"285","hashOfConfig":"241"},{"size":421,"mtime":1616455707521,"results":"286","hashOfConfig":"241"},{"size":2378,"mtime":1618720453299,"results":"287","hashOfConfig":"241"},{"size":14053,"mtime":1618821048285,"results":"288","hashOfConfig":"241"},{"size":38,"mtime":1616455707513,"results":"289","hashOfConfig":"241"},{"size":45,"mtime":1616455707513,"results":"290","hashOfConfig":"241"},{"size":1553,"mtime":1616455707521,"results":"291","hashOfConfig":"241"},{"size":324,"mtime":1616455707521,"results":"292","hashOfConfig":"241"},{"size":113,"mtime":1618768138867,"results":"293","hashOfConfig":"241"},{"size":2768,"mtime":1618836866795,"results":"294","hashOfConfig":"241"},{"size":10146,"mtime":1618841913123,"results":"295","hashOfConfig":"241"},{"size":1166,"mtime":1616455707521,"results":"296","hashOfConfig":"241"},{"size":446,"mtime":1616455707521,"results":"297","hashOfConfig":"241"},{"size":1397,"mtime":1616455707521,"results":"298","hashOfConfig":"241"},{"size":4610,"mtime":1618841743590,"results":"299","hashOfConfig":"241"},{"size":344,"mtime":1616455707521,"results":"300","hashOfConfig":"241"},{"size":865,"mtime":1616455707521,"results":"301","hashOfConfig":"241"},{"size":2684,"mtime":1618841714695,"results":"302","hashOfConfig":"241"},{"size":210,"mtime":1616455707521,"results":"303","hashOfConfig":"241"},{"size":2791,"mtime":1616455707521,"results":"304","hashOfConfig":"241"},{"size":282,"mtime":1616455707521,"results":"305","hashOfConfig":"241"},{"size":1144,"mtime":1616455707521,"results":"306","hashOfConfig":"241"},{"size":3913,"mtime":1616455707521,"results":"307","hashOfConfig":"241"},{"size":1508,"mtime":1616455707521,"results":"308","hashOfConfig":"241"},{"size":255,"mtime":1616455707525,"results":"309","hashOfConfig":"241"},{"size":15320,"mtime":1616859605270,"results":"310","hashOfConfig":"241"},{"size":42,"mtime":1616455707513,"results":"311","hashOfConfig":"241"},{"size":50,"mtime":1616455707513,"results":"312","hashOfConfig":"241"},{"size":170,"mtime":1616455707513,"results":"313","hashOfConfig":"241"},{"size":31,"mtime":1616455707513,"results":"314","hashOfConfig":"241"},{"size":48,"mtime":1616455707513,"results":"315","hashOfConfig":"241"},{"size":32,"mtime":1616455707513,"results":"316","hashOfConfig":"241"},{"size":46,"mtime":1616455707513,"results":"317","hashOfConfig":"241"},{"size":43,"mtime":1616455707513,"results":"318","hashOfConfig":"241"},{"size":26,"mtime":1616455707513,"results":"319","hashOfConfig":"241"},{"size":24,"mtime":1616455707513,"results":"320","hashOfConfig":"241"},{"size":39,"mtime":1617904282015,"results":"321","hashOfConfig":"241"},{"size":1807,"mtime":1618837772302,"results":"322","hashOfConfig":"241"},{"size":3257,"mtime":1616455707521,"results":"323","hashOfConfig":"241"},{"size":1632,"mtime":1616455707521,"results":"324","hashOfConfig":"241"},{"size":1160,"mtime":1616455707521,"results":"325","hashOfConfig":"241"},{"size":482,"mtime":1616455707521,"results":"326","hashOfConfig":"241"},{"size":645,"mtime":1616455707521,"results":"327","hashOfConfig":"241"},{"size":1161,"mtime":1616455707521,"results":"328","hashOfConfig":"241"},{"size":1645,"mtime":1616455707521,"results":"329","hashOfConfig":"241"},{"size":1178,"mtime":1616455707525,"results":"330","hashOfConfig":"241"},{"size":794,"mtime":1616455707521,"results":"331","hashOfConfig":"241"},{"size":795,"mtime":1616455707521,"results":"332","hashOfConfig":"241"},{"size":2975,"mtime":1616455707525,"results":"333","hashOfConfig":"241"},{"size":758,"mtime":1616455707521,"results":"334","hashOfConfig":"241"},{"size":2914,"mtime":1618712801529,"results":"335","hashOfConfig":"241"},{"size":6090,"mtime":1618793920774,"results":"336","hashOfConfig":"241"},{"size":1560,"mtime":1616455707521,"results":"337","hashOfConfig":"241"},{"size":2697,"mtime":1617815227993,"results":"338","hashOfConfig":"241"},{"size":2748,"mtime":1618720519216,"results":"339","hashOfConfig":"241"},{"size":5076,"mtime":1618736034496,"results":"340","hashOfConfig":"241"},{"size":1361,"mtime":1616455707521,"results":"341","hashOfConfig":"241"},{"size":3349,"mtime":1616455707521,"results":"342","hashOfConfig":"241"},{"size":3215,"mtime":1618714397480,"results":"343","hashOfConfig":"241"},{"size":550,"mtime":1616455707525,"results":"344","hashOfConfig":"241"},{"size":939,"mtime":1616455707521,"results":"345","hashOfConfig":"241"},{"size":6284,"mtime":1618720381943,"results":"346","hashOfConfig":"241"},{"size":3856,"mtime":1618794085903,"results":"347","hashOfConfig":"241"},{"size":1823,"mtime":1616455707521,"results":"348","hashOfConfig":"241"},{"size":505,"mtime":1616455707521,"results":"349","hashOfConfig":"241"},{"size":2370,"mtime":1616455707521,"results":"350","hashOfConfig":"241"},{"size":1324,"mtime":1617731394387,"results":"351","hashOfConfig":"241"},{"size":1263,"mtime":1618454997608,"results":"352","hashOfConfig":"241"},{"size":1279,"mtime":1616455707521,"results":"353","hashOfConfig":"241"},{"size":35,"mtime":1616455707513,"results":"354","hashOfConfig":"241"},{"size":1071,"mtime":1615141119088,"results":"355","hashOfConfig":"241"},{"size":702,"mtime":1615140573136,"results":"356","hashOfConfig":"241"},{"size":47,"mtime":1616455707513,"results":"357","hashOfConfig":"241"},{"size":402,"mtime":1616455707517,"results":"358","hashOfConfig":"241"},{"size":1213,"mtime":1616455707525,"results":"359","hashOfConfig":"241"},{"size":1029,"mtime":1616455707525,"results":"360","hashOfConfig":"241"},{"size":726,"mtime":1616455707517,"results":"361","hashOfConfig":"241"},{"size":752,"mtime":1616455707517,"results":"362","hashOfConfig":"241"},{"size":793,"mtime":1616455707517,"results":"363","hashOfConfig":"241"},{"size":434,"mtime":1616455707525,"results":"364","hashOfConfig":"241"},{"size":269,"mtime":1618823132714,"results":"365","hashOfConfig":"241"},{"size":2546,"mtime":1618837347735,"results":"366","hashOfConfig":"241"},{"size":1636,"mtime":1618712717891,"results":"367","hashOfConfig":"241"},{"size":5295,"mtime":1618841768514,"results":"368","hashOfConfig":"241"},{"size":138,"mtime":1616455707521,"results":"369","hashOfConfig":"241"},{"size":3132,"mtime":1618841976738,"results":"370","hashOfConfig":"241"},{"size":2108,"mtime":1616455707521,"results":"371","hashOfConfig":"241"},{"size":1371,"mtime":1616455707517,"results":"372","hashOfConfig":"241"},{"size":41,"mtime":1616455707513,"results":"373","hashOfConfig":"241"},{"size":692,"mtime":1616455707517,"results":"374","hashOfConfig":"241"},{"size":632,"mtime":1618493053527,"results":"375","hashOfConfig":"241"},{"size":1014,"mtime":1616455707525,"results":"376","hashOfConfig":"241"},{"size":255,"mtime":1616455707517,"results":"377","hashOfConfig":"241"},{"size":1072,"mtime":1616455707517,"results":"378","hashOfConfig":"241"},{"size":561,"mtime":1616455707513,"results":"379","hashOfConfig":"241"},{"size":120,"mtime":1616455707513,"results":"380","hashOfConfig":"241"},{"size":309,"mtime":1616455707513,"results":"381","hashOfConfig":"241"},{"size":621,"mtime":1616455707513,"results":"382","hashOfConfig":"241"},{"size":637,"mtime":1616455707513,"results":"383","hashOfConfig":"241"},{"size":630,"mtime":1616455707513,"results":"384","hashOfConfig":"241"},{"size":270,"mtime":1616455707513,"results":"385","hashOfConfig":"241"},{"size":109,"mtime":1616455707513,"results":"386","hashOfConfig":"241"},{"size":183,"mtime":1616455707513,"results":"387","hashOfConfig":"241"},{"size":180,"mtime":1616455707513,"results":"388","hashOfConfig":"241"},{"size":147,"mtime":1616455707513,"results":"389","hashOfConfig":"241"},{"size":194,"mtime":1616455707513,"results":"390","hashOfConfig":"241"},{"size":204,"mtime":1616455707513,"results":"391","hashOfConfig":"241"},{"size":390,"mtime":1616455707513,"results":"392","hashOfConfig":"241"},{"size":134,"mtime":1616455707517,"results":"393","hashOfConfig":"241"},{"size":112,"mtime":1616455707517,"results":"394","hashOfConfig":"241"},{"size":120,"mtime":1616455707517,"results":"395","hashOfConfig":"241"},{"size":147,"mtime":1616455707517,"results":"396","hashOfConfig":"241"},{"size":140,"mtime":1616455707517,"results":"397","hashOfConfig":"241"},{"size":104,"mtime":1616455707517,"results":"398","hashOfConfig":"241"},{"size":122,"mtime":1616455707517,"results":"399","hashOfConfig":"241"},{"size":116,"mtime":1616455707517,"results":"400","hashOfConfig":"241"},{"size":129,"mtime":1616455707517,"results":"401","hashOfConfig":"241"},{"size":125,"mtime":1616455707517,"results":"402","hashOfConfig":"241"},{"size":107,"mtime":1616455707517,"results":"403","hashOfConfig":"241"},{"size":259,"mtime":1618060529789,"results":"404","hashOfConfig":"241"},{"size":154,"mtime":1616460918587,"results":"405","hashOfConfig":"241"},{"size":8105,"mtime":1618818617449,"results":"406","hashOfConfig":"241"},{"size":3103,"mtime":1618669920088,"results":"407","hashOfConfig":"241"},{"size":639,"mtime":1618315783302,"results":"408","hashOfConfig":"241"},{"size":2679,"mtime":1616483759159,"results":"409","hashOfConfig":"241"},{"size":4455,"mtime":1618713075263,"results":"410","hashOfConfig":"241"},{"size":1050,"mtime":1618283644902,"results":"411","hashOfConfig":"241"},{"size":1507,"mtime":1616510383576,"results":"412","hashOfConfig":"241"},{"size":421,"mtime":1616602263966,"results":"413","hashOfConfig":"241"},{"size":3386,"mtime":1618285594435,"results":"414","hashOfConfig":"241"},{"size":558,"mtime":1618287694396,"results":"415","hashOfConfig":"241"},{"size":996,"mtime":1616645805435,"results":"416","hashOfConfig":"241"},{"size":1585,"mtime":1617770683981,"results":"417","hashOfConfig":"241"},{"size":881,"mtime":1617290742097,"results":"418","hashOfConfig":"241"},{"size":3668,"mtime":1618720559196,"results":"419","hashOfConfig":"241"},{"size":2419,"mtime":1617583221799,"results":"420","hashOfConfig":"241"},{"size":320,"mtime":1617622845549,"results":"421","hashOfConfig":"241"},{"size":184,"mtime":1616783505743,"results":"422","hashOfConfig":"241"},{"size":897,"mtime":1617957542100,"results":"423","hashOfConfig":"241"},{"size":1874,"mtime":1618796042389,"results":"424","hashOfConfig":"241"},{"size":1449,"mtime":1616950094622,"results":"425","hashOfConfig":"241"},{"size":40,"mtime":1616800966227,"results":"426","hashOfConfig":"241"},{"size":5936,"mtime":1618713054935,"results":"427","hashOfConfig":"241"},{"size":968,"mtime":1616989242544,"results":"428","hashOfConfig":"241"},{"size":152,"mtime":1616957978529,"results":"429","hashOfConfig":"241"},{"size":502,"mtime":1618720491836,"results":"430","hashOfConfig":"241"},{"size":99,"mtime":1617020243878,"results":"431","hashOfConfig":"241"},{"size":7330,"mtime":1618797155807,"results":"432","hashOfConfig":"241"},{"size":897,"mtime":1617582965193,"results":"433","hashOfConfig":"241"},{"size":7534,"mtime":1618713065583,"results":"434","hashOfConfig":"241"},{"size":1610,"mtime":1618821014525,"results":"435","hashOfConfig":"241"},{"size":90,"mtime":1618474292923,"results":"436","hashOfConfig":"241"},{"size":2136,"mtime":1618735877561,"results":"437","hashOfConfig":"241"},{"size":2417,"mtime":1617889047997,"results":"438","hashOfConfig":"241"},{"size":1883,"mtime":1617550915657,"results":"439","hashOfConfig":"241"},{"size":4484,"mtime":1618842023070,"results":"440","hashOfConfig":"241"},{"size":1292,"mtime":1618837423111,"results":"441","hashOfConfig":"241"},{"size":5211,"mtime":1618794172000,"results":"442","hashOfConfig":"241"},{"size":2617,"mtime":1618708036694,"results":"443","hashOfConfig":"241"},{"size":420,"mtime":1617761830098,"results":"444","hashOfConfig":"241"},{"size":16112,"mtime":1618823359891,"results":"445","hashOfConfig":"241"},{"size":1063,"mtime":1617902115753,"results":"446","hashOfConfig":"241"},{"size":2431,"mtime":1617902123320,"results":"447","hashOfConfig":"241"},{"size":2087,"mtime":1618197747333,"results":"448","hashOfConfig":"241"},{"size":619,"mtime":1617902135988,"results":"449","hashOfConfig":"241"},{"size":172,"mtime":1617932529964,"results":"450","hashOfConfig":"241"},{"size":1604,"mtime":1617957841899,"results":"451","hashOfConfig":"241"},{"size":732,"mtime":1618021664904,"results":"452","hashOfConfig":"241"},{"size":1183,"mtime":1618320337082,"results":"453","hashOfConfig":"241"},{"size":641,"mtime":1618676936126,"results":"454","hashOfConfig":"241"},{"size":2001,"mtime":1618283934183,"results":"455","hashOfConfig":"241"},{"size":362,"mtime":1618283668358,"results":"456","hashOfConfig":"241"},{"size":441,"mtime":1618678598362,"results":"457","hashOfConfig":"241"},{"size":615,"mtime":1618714698267,"results":"458","hashOfConfig":"241"},{"size":2370,"mtime":1618712462471,"results":"459","hashOfConfig":"241"},{"size":494,"mtime":1618836823003,"results":"460","hashOfConfig":"241"},{"size":144,"mtime":1618735221274,"results":"461","hashOfConfig":"241"},{"size":106,"mtime":1618460143033,"results":"462","hashOfConfig":"241"},{"size":450,"mtime":1618708073235,"results":"463","hashOfConfig":"241"},{"size":633,"mtime":1618837521840,"results":"464","hashOfConfig":"241"},{"size":10466,"mtime":1618837582965,"results":"465","hashOfConfig":"241"},{"size":1147,"mtime":1618707821825,"results":"466","hashOfConfig":"241"},{"size":4274,"mtime":1618706638779,"results":"467","hashOfConfig":"241"},{"size":1371,"mtime":1618707394974,"results":"468","hashOfConfig":"241"},{"size":3919,"mtime":1618715483726,"results":"469","hashOfConfig":"241"},{"size":1994,"mtime":1618714695747,"results":"470","hashOfConfig":"241"},{"size":564,"mtime":1618820990392,"results":"471","hashOfConfig":"241"},{"size":830,"mtime":1618767692545,"results":"472","hashOfConfig":"241"},{"size":654,"mtime":1618735130200,"results":"473","hashOfConfig":"241"},{"size":231,"mtime":1618767122503,"results":"474","hashOfConfig":"241"},{"size":8534,"mtime":1618767588727,"results":"475","hashOfConfig":"241"},{"size":3292,"mtime":1618837728338,"results":"476","hashOfConfig":"241"},{"size":1287,"mtime":1618820795108,"results":"477","hashOfConfig":"241"},{"size":1860,"mtime":1618837232934,"results":"478","hashOfConfig":"241"},{"size":611,"mtime":1618842049393,"results":"479","hashOfConfig":"241"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},"1akjpqo",{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"482"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"482"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"482"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"482"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"482"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"482"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"482"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"482"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"482"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"482"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"482"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"482"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"482"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"482"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"482"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"584"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"482"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"482"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"482"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"482"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"482"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"482"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"482"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"482"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"482"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"482"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"482"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"482"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"482"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"740"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"740"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"482"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"482"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"482"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"482"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"482"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"482"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"482"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"482"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"482"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894","usedDeprecatedRules":"482"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"482"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"908","usedDeprecatedRules":"482"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"482"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"482"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"925","messages":"926","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"482"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"482"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"482"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"950","usedDeprecatedRules":"482"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"953","usedDeprecatedRules":"482"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"972","messages":"973","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974","usedDeprecatedRules":"975"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"982","usedDeprecatedRules":"482"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"987","usedDeprecatedRules":"482"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js",[],["1012","1013"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js",["1014","1015","1016","1017","1018"],"import { InMemoryCache, makeVar } from \"@apollo/client\";\nimport {\n  PersonalPosts, \n  SentRequestsToAddFriends,\n  ReceivedRequestsToAddFriend,\n  MessagesStorage,\n  CurrentChat,\n  NumberOfConversations,\n} from \"./models\";\nimport { initialState } from \"./initialState\";\n//Cache\nconst toggleMenuVar = makeVar(initialState.toggleMenu);\nconst dialogVar = makeVar(initialState.alertDialog);\n//Post\nconst postsVar = makeVar(initialState.posts);\nconst setPersonalPostsVar = makeVar(PersonalPosts);\n//User\nconst userVar = makeVar(initialState.user);\nconst currentPersonalUserVar = makeVar(initialState.currentPersonalUser);\nconst sentRequestsToAddFriendVar = makeVar(initialState.sentRequestToAddFriend);\nconst receivedRequestsToAddFriendVar = makeVar(initialState.receivedRequestsToAddFriend);\n//Notification\nconst notificationsVar = makeVar(initialState.notifications);\nconst countNumberOfNotificationUnseenVar = makeVar(\n  initialState.countNumberOfNotificationUnseen\n);\nconst newNotificationsVar = makeVar(initialState.newNotifications);\nconst latestNotificationVar = makeVar(initialState.latestNotification);\n//Friends\nconst toggleFriendsBoardVar = makeVar(initialState.toggleFriendsBoard);\nconst friendsVar = makeVar(initialState.friends);\n//Chat\nconst messagesStorageVar = makeVar(initialState.messagesStorage);\nconst currentChatVar = makeVar(initialState.currentChat);\nconst numberOfConversationsVar = makeVar(initialState.numberOfConversations);\nconst cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        //cache\n        toggleMenu: {\n          read: () => toggleMenuVar(),\n        },\n        dialog: {\n          read: () => dialogVar(),\n        },\n        //current User\n        user: {\n          read: () => userVar(),\n        },\n        //other user\n        sentRequestsToAddFriend: {\n          read: () => sentRequestsToAddFriendVar(),\n        },\n        receivedRequestsToAddFriend: {\n          read: () => receivedRequestsToAddFriendVar(),\n        },\n        currentPersonalUser: {\n          read: () => currentPersonalUserVar(),\n        },\n        //post       \n        posts: {\n          read: () => postsVar(),\n        },\n        personalPosts: {\n          read: () => setPersonalPostsVar(),\n        },\n        //Friends\n        friends: {\n          read: () => friendsVar(),\n        },\n        toggleFriendsBoard: {\n          read: () => toggleFriendsBoardVar(),\n        },\n        //notification\n        notifications: {\n          read: () => notificationsVar(),\n        },\n        newNotifications: {\n          read: () => newNotificationsVar(),\n        },\n        //if has new notification, open popup immediately\n        latestNotification: {\n          read: () => latestNotificationVar(),\n        },\n        countNumberNotificationsUnseen: {\n          read: () => countNumberOfNotificationUnseenVar(),\n        },\n        //Chat\n        currentChat: {\n          read: () => currentChatVar(),\n        },\n        messagesStorage: {\n          read: () => messagesStorageVar(),\n        },\n        numberOfConversations: {\n          read: () => numberOfConversationsVar(),\n        },\n      },\n    },\n  },\n});\n\nexport {\n  cache,\n  toggleMenuVar,\n  userVar,\n  postsVar,\n  notificationsVar,\n  countNumberOfNotificationUnseenVar,\n  newNotificationsVar,\n  latestNotificationVar,\n  currentPersonalUserVar,\n  setPersonalPostsVar,\n  toggleFriendsBoardVar,\n  friendsVar,\n  sentRequestsToAddFriendVar,\n  receivedRequestsToAddFriendVar,\n  messagesStorageVar,\n  currentChatVar,\n  numberOfConversationsVar,\n  dialogVar,\n};\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js",["1019"],"import React, { useState } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nconst emojiPlugin = createEmojiPlugin();\nconst { EmojiSelect, EmojiSuggestions } = emojiPlugin;\nconst linkifyPlugin = createLinkifyPlugin({\n  component(props) {\n    return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n  },\n});\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [linkifyPlugin, mentionPlugin, emojiPlugin];\n\nconst Linkify = () => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n\n  const onOpenChange = React.useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = React.useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n  return (\n    <div className=\"wrapper\">\n      <h2 style={{ color: \"#43a047\" }}>Draftjs Linkify</h2>\n      <Editor\n        editorState={editorState}\n        onChange={setEditorState}\n        plugins={plugins}\n      />\n      <MentionSuggestions\n        open={open}\n        suggestions={suggestions}\n        onOpenChange={onOpenChange}\n        onSearchChange={onSearchChange}\n      />\n      <EmojiSuggestions />\n      <EmojiSelect />\n    </div>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 36812,\n    name: \"Maxewqeq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 789327,\n    name: \"Nikewqewqad Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 32131,\n    name: \"Pascalsadwq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 121312,\n    name: \"Matthewewqe Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 125134,\n    name: \"Julianewq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 3213214,\n    name: \"Jyotiasd Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 65361,\n    name: \"Maxewq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 5321,\n    name: \"Nikewq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 43,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n];\n\nexport default Linkify;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js",["1020","1021"],"import React, { useEffect, useState, useCallback} from \"react\";\nimport Layout from \"../containers/Layout\";\nimport PostEditor from \"../components/Post/PostEditor/PostEditor\";\nimport HomeSidebar from \"../components/Sidebar/HomeSidebar\";\nimport MainBody from \"../components/Body/MainBody\";\nimport FriendsBoard from \"../components/Sidebar/FriendsBoard\";\nimport {useReactiveVar, useQuery} from \"@apollo/client\"\nimport ButtonToggleFriendsList from \"../components/Controls/ButtonToggleFriendsList\";\nimport {\n  MainContent,\n  MainContentLeftSide,\n  MainContentRightSide,\n} from \"./styles/pages.styles.js\";\nimport Posts from \"../components/Post/Posts\";\nimport useHomePostsSubscription from \"../hooks/useHomePostsSubscription\"\nimport LazyLoad from \"react-lazyload\"\nimport {userVar, toggleFriendsBoardVar, postsVar} from \"../apollo/cache\"\nimport {setToggleFriendsBoard} from \"../apollo/controls/controls.caches\"\nimport {FETCH_POSTS} from \"../apollo/post/post.queries\"\nimport {addFetchedPostToCache} from \"../apollo/post/post.caches\"\n\nconst Home = () => {  \n  const user =  useReactiveVar(userVar);\n  const toggleFriendsBoard = useReactiveVar(toggleFriendsBoardVar);\n  const posts = useReactiveVar(postsVar);\n  const [loading, setLoading] = useState();\n  const [fetchMore, setFetchMore] = useState(false);\n  useHomePostsSubscription();\n \n  const { refetch: fetchPosts } = useQuery(FETCH_POSTS, {\n    fetchPolicy: \"no-cache\",\n    skip: true,\n  });\n  useEffect(() => {\n    let _isMounted = true;\n    if (!posts.length && user) {\n      setLoading(true);\n      fetchPosts().then(({ data }) => {\n        if (data && _isMounted) {\n          addFetchedPostToCache(data.fetchPosts);\n          setLoading(false);          \n        }\n      });\n    }\n    return () => (_isMounted = false);\n  }, [user, posts]);\n\n  \n\n  useEffect(() => {\n    let isScrolling;\n    function onTrackUserScrolled(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const {\n          clientHeight,\n          scrollTop,\n          scrollHeight,\n        } = document.documentElement;\n        if (clientHeight + scrollTop > scrollHeight * 0.8 ) {\n          setFetchMore(true);\n        }\n      }, 66);\n    }\n    window.addEventListener(\"scroll\", onTrackUserScrolled);\n    return () => {\n      clearTimeout(isScrolling);\n      window.removeEventListener(\"scroll\", onTrackUserScrolled);\n    };\n  });\n \n  useEffect(() => {\n    if (user && fetchMore) {\n      const skip = posts.length;\n      const limit = +process.env.REACT_APP_POSTS_PER_PAGE;      \n      fetchPosts({ skip, limit }).then(({ data: { fetchPosts } }) => {\n        if(fetchPosts){\n          addFetchedPostToCache(fetchPosts);\n        }        \n        setFetchMore(false);\n      });\n    }\n  }, [user, posts, fetchMore, setFetchMore]);\n\n  const handleOpenFriendsList = useCallback(() => {    \n    setToggleFriendsBoard();\n  }, []);  \n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentLeftSide>\n            {user && <LazyLoad once><PostEditor /></LazyLoad>}\n            {loading && <div>Loading post</div>}\n            {posts.length ? <LazyLoad><Posts posts={posts} /></LazyLoad> : null}\n          </MainContentLeftSide>\n          <MainContentRightSide>\n            <HomeSidebar user={user} />\n          </MainContentRightSide>\n        </MainContent>\n        {user &&  (\n          <>\n            {\" \"}\n            {<FriendsBoard />}\n            <ButtonToggleFriendsList\n              hide={toggleFriendsBoard}\n              onClick={handleOpenFriendsList}\n            />\n          </>\n        )}\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default Home;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js",["1022"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport styled from \"styled-components\";\nimport Notifications from \"../components/Notification/Notifications\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { userVar, notificationsVar } from \"../apollo/cache\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport MainBody from \"../components/Body/MainBody\";\nimport { FETCH_NOTIFICATIONS } from \"../apollo/notification/notification.types\";\nimport {setNotifications} from \"../apollo/notification/notification.caches\"\nconst NotificationsPage = () => {\n  const user = useReactiveVar(userVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });   \n  const [fetchNotificationsMore, setFetchNotificationsMore] = useState(false);\n  useEffect(() => {\n    let _mounted = true;\n    if (user && fetchNotifications) {\n      if (!notifications.length) {\n        fetchNotifications({\n          variables: {\n            skip: 0,\n            limit: +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE,\n          },\n        }).then(({ data }) => {\n          if (data && data.fetchNotifications && _mounted) {\n            setNotifications([...data.fetchNotifications]);\n          }\n        });\n      } else if (fetchNotificationsMore) {\n        const skip = notifications.length;\n        const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n        fetchNotifications({ skip, limit }).then(\n          ({ data: { fetchNotifications } }) => {\n            if (_mounted) {\n              setNotifications([...notifications, ...fetchNotifications]);\n              setFetchNotificationsMore(false);\n            }\n          }\n        );\n      }\n    }\n\n    return () => (_mounted = false);\n  }, [\n    user,\n    notifications,\n    fetchNotifications,\n    setFetchNotificationsMore,\n    fetchNotificationsMore,\n  ]);\n\n  useEffect(() => {\n    function setLoadmoreOnScroll() {\n      const {\n        scrollHeight,\n        scrollTop,\n        clientHeight,\n      } = document.documentElement;\n      if (clientHeight + scrollTop > scrollHeight * 0.75) {\n        setFetchNotificationsMore(true);\n      }\n    }\n    window.addEventListener(\"scroll\", (e) => {\n      setLoadmoreOnScroll();\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", () => {\n        setLoadmoreOnScroll();\n      });\n  }, []);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <div className=\"notifications\">\n            {user ? (\n              <Notifications notifications={notifications} />\n            ) : (\n              <CardRequestAuth />\n            )}\n          </div>\n          <div className=\"sidebar\"></div>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nconst MainContent = styled.div`\n  display: flex;\n  margin: auto;\n  padding: 1.5rem 0;\n  .notifications {\n    width: 100%;\n  }\n  .sidebar {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    .notifications {\n      width: calc(100% - 320px);\n      padding: 0 1rem;\n    }\n    .sidebar {\n      display: block;\n      width: 320px;\n      padding: 0 1rem;\n    }\n  }\n  @media screen and (min-width: 992px) {\n    padding: 0;\n    .notifications {\n      width: 50%;\n    }\n    .sidebar {\n      width: 50%;\n    }\n  }\n  @media screen and (min-width: 1920px) {\n    .notifications {\n      width: 55%;\n    }\n    .sidebar {\n      width: 45%;\n    }\n  }\n`;\nexport default NotificationsPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js",["1023"],"import React, { lazy, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { userVar } from \"../apollo/cache\";\nimport { useReactiveVar } from \"@apollo/client\";\nconst SignIn = lazy(() => import(\"../components/Auth/SignIn\"));\nconst SignUp = lazy(() => import(\"../components/Auth/SignUp\"));\n\nconst AuthPage = ({setIsAuth, ...props}) => {\n  const { match, location, history } = props;\n  const user = useReactiveVar(userVar);\n  useEffect(() => {\n    if (user && location.state && location.state.from) {\n      history.replace(location.state.from);\n      setIsAuth(true);\n    } else if (user) {\n      history.replace(\"/\");\n      setIsAuth(Date.now());\n    }\n  }, [user, history, location.state]);\n  return (\n    <Switch>\n      <Route\n        exact\n        path={match.path}\n        render={(props) => <SignIn authPath={match.path} {...props} />}\n      />\n      <Route\n        path={`${match.path}/signup`}\n        render={(props) => <SignUp authPath={match.path} {...props} />}\n      />\n    </Switch>\n  );\n};\n\nexport default AuthPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js",["1024"],"import React, { useEffect, useState } from \"react\";\nimport PersonalHeading from \"../components/Personal/PersonalHeading\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_PERSONAL_USER,\n} from \"../apollo/operations/queries/cache\";\nimport { FETCH_PERSONAL_USER } from \"../apollo/user/user.types\";\nimport Layout from \"../containers/Layout\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport PersonalPosts from \"../components/Personal/PersonalPosts\";\n\nconst PersonalPage = (props) => {\n  const { setCurrentPersonalUser } = cacheMutations;\n  const { slug } = props.match.params; \n  const {data : {currentPersonalUser}} = useQuery(GET_CURRENT_PERSONAL_USER)\n  const {refetch : fetchCurrentPersonalUser} = useQuery(FETCH_PERSONAL_USER, {skip : true})  \n  const [fetched, setFetched] = useState(false);\n  useEffect(() => {\n    let _mounted = true ;\n    fetchCurrentPersonalUser({slug}).then(({data}) => {\n      if(data && _mounted){\n        setCurrentPersonalUser(data.fetchPersonalUser);\n        setFetched(true);\n      }\n    })\n    return () => _mounted = false ;\n  },[slug])  \n\n  if(!currentPersonalUser || !fetched) return null;\n  return (\n    <Layout>\n      <PersonalHeading />\n      <PersonalPosts/>\n    </Layout>\n  );\n};\n\nexport default PersonalPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js",["1025","1026"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport { useQuery , useReactiveVar} from \"@apollo/client\";\nimport {userVar} from \"../apollo/cache\"\nimport {\n  GET_FRIENDS,\n} from \"../apollo/operations/queries/cache\";\nimport {\n  FETCH_LIST_CONTACT,\n  FETCH_USER_FRIENDS_DATA,  \n} from \"../apollo/user/user.types\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport MainBody from \"../components/Body/MainBody\";\nimport { MainContent, MainContentFullSize, ContactTitle } from \"./styles/pages.styles\";\nimport SentRequestsToAddFriend from \"../components/Contact/SentRequestsToAddFriend\";\nimport ReceivedRequestsToAddFriend from \"../components/Contact/ReceivedRequestsToAddFriend\";\nimport FriendsList from \"../components/Contact/FriendsList\";\nimport useLanguage from \"../components/Global/useLanguage\";\n\n\nconst FriendsPage = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [fetched, setFetched] = useState(false);\n  const { i18n, lang } = useLanguage();\n  const user = useReactiveVar(userVar);\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, {\n    fetchPolicy: \"cache-first\",\n  });\n \n  const { refetch: fetchFriends } = useQuery(FETCH_USER_FRIENDS_DATA, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  \n  const {\n    setFriends,\n    setSentRequestsToAddFriend,\n    setReceivedRequestsToAddFriend,\n  } = cacheMutations;\n\n  const { refetch: fetchListContact } = useQuery(FETCH_LIST_CONTACT, {\n    skip: true,\n  });\n\n  useEffect(() => {\n    if (!fetched) {\n      if (\n        user?.sentRequestToAddFriend.length ||\n        user?.receivedRequestToAddFriend.length ||\n        user?.friends.length\n      ) {\n        fetchListContact().then(({ data }) => {\n          setFetched(true); \n          console.log(\"fetched\")         \n          const {\n            sentRequests,\n            receivedRequests,\n            friends: friendsList,\n          } = data.fetchListContact;\n          if (sentRequests.length) {\n            setSentRequestsToAddFriend([...sentRequests]);\n          }\n          if (receivedRequests.length) {\n            setReceivedRequestsToAddFriend([...receivedRequests]);\n          }\n          if (!friends.length) {\n            setFriends([...friendsList]);\n          }\n        });\n      }\n    }\n  }, [user, fetched, setFetched]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", async (e) => {\n      const docEl = document.documentElement;\n      if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n        setLoadingMore(true);\n      }\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", async (e) => {\n        const docEl = document.documentElement;\n        if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n          setLoadingMore(true);\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (loadingMore) {\n      const skip = friends.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchFriends({ skip, limit }).then(({ data }) => {\n        if (data?.fetchFriends?.length) {\n          setFriends([...friends, ...data.fetchFriends]);\n          setLoadingMore(false);\n        }\n      });\n    }\n  }, [loadingMore]);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentFullSize>\n            <ContactTitle>\n              {i18n.store.data[lang].translation.contacts.title}\n            </ContactTitle>\n            <SentRequestsToAddFriend />\n            <ReceivedRequestsToAddFriend />\n            <FriendsList />\n          </MainContentFullSize>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default FriendsPage;","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js",["1027","1028"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx",["1029"],"import React from \"react\";\nimport NotificationItem from \"./NotificationItem\";\nimport styled from \"styled-components\";\nimport LazyLoad from \"react-lazyload\";\nconst Notifications = ({notifications}) => {\n   \n  return (\n    <LazyLoad>\n      {notifications.length ? notifications.map((notification) => (\n        <NotificationItem\n          key={`notification-${notification._id}`}\n          notifications={notifications}\n          notification={notification}\n        />\n      )): null}\n    </LazyLoad>\n  );\n};\n\nconst NoNotifications = styled.div`\n  text-align: center;\n  padding: 3rem;\n  font-size: 1.1em;\n`;\n\nexport default React.memo(Notifications);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx",["1030"],"import React from \"react\";\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  Title,\n  SubTitle,\n  ErrorMessage,\n} from \"./AuthForm\";\nimport CustomInput from \"../Custom/CustomInput\";\nimport CustomButton from \"../Custom/CustomButton\";\nimport { withRouter } from \"react-router-dom\";\nimport GoogleRecaptcha from \"./GoogleRecapcha\";\nimport FacebookLogin from \"./GoogleAuth\";\nimport GoogleLogin from \"./FacebookAuth\";\nimport { useMutation } from \"@apollo/client\";\nimport { SIGNUP } from \"../../apollo/user/user.types\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport {login} from \"./Auth.utility\"\nconst INITIAL_STATE = {\n  controls: {\n    name: {\n      type: \"text\",\n      name: \"name\",\n      valid: false,\n      label: \"Name\",\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 50,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    email: {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      valid: false,\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    password: {\n      type: \"password\",\n      name: \"password\",\n      valid: false,\n      label: \"Password\",\n      validation: {\n        required: true,\n        minLength: 6,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    confirmPassword: {\n      type: \"password\",\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      valid: false,\n      validation: {\n        required: true,\n        minLength: 6,\n        match: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n  },\n  formIsValid: false,\n  loaded: false,\n  disabled: true,\n  title: \"\",\n};\n\nfunction withSignUpMutation(WrappedComponent) {\n  return function MutationWrapper(props) {\n    const [createUser, { data, loading, error }] = useMutation(SIGNUP, {errorPolicy : \"all\"});      \n    return (\n      <WrappedComponent\n        createUser={createUser}        \n        data={data}        \n        loading={loading}        \n        error={error}        \n        {...props}\n      />\n    );\n  };\n}\n\nconst SignUp = withSignUpMutation(\n  class extends React.Component {\n    state = { ...INITIAL_STATE };\n    timer = null ;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    componentWillUnmount(){\n      clearTimeout(this.timer)\n      if(this.unsubcribeLogin){\n        this.unsubcribeLogin();\n      }\n    }\n    unsubcribeLogin; \n    async componentDidUpdate(prevProps){\n      if(prevProps.error !== this.props.error){\n        this.clearForm();        \n      }\n      if(prevProps.data !== this.props.data && this.props.data )  {\n        const { user, token, tokenExpire} = this.props.data.createUser;                    \n        this.unsubcribeLogin = await login(user, token, tokenExpire)\n        this.clearForm() ;\n      }\n    }\n\n    clearForm = () => {\n      this.setState({...INITIAL_STATE});      \n      setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    \n    checkValidity = (value, rules) => {\n      let isValid = true;\n      let errorsMessage = [];\n      if (rules.required) {\n        isValid = value.trim().length && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"This field is required\");\n        }\n      }\n      if (rules.isEmail) {\n        const pattern = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        isValid = pattern.test(value) && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Email is invalid\");\n        }\n      }\n      if (rules.minLength) {\n        isValid = value.trim().length >= rules.minLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at least ${rules.minLength} characters`);\n        }\n      }\n      if (rules.maxLength) {\n        isValid = value.trim().length <= rules.maxLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at most ${rules.maxLength} characters`);\n        }\n      }\n      if (rules.match) {\n        isValid =\n          value.trim() === this.state.controls.password.value && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Password and confirm Password do not match\");\n        }\n      }\n      return errorsMessage;\n    };\n\n    handleChange = (e, name) => {\n      let updatedControls = { ...this.state.controls };\n      let updatedControlElement = { ...updatedControls[name] };\n      updatedControlElement.value = e.target.value;\n      const checkValid = this.checkValidity(\n        e.target.value,\n        updatedControlElement.validation\n      );\n      updatedControlElement.valid = checkValid.length === 0;\n      updatedControlElement.touched = true;\n      updatedControlElement.validationErrors = checkValid;\n      updatedControls[name] = updatedControlElement;\n      let { email, password, confirmPassword } = updatedControls;\n      const formIsValid =\n        email.valid &&\n        updatedControlElement.valid &&\n        password.valid &&\n        confirmPassword.valid;\n      this.setState({ controls: updatedControls, formIsValid });\n    };\n\n    handleSubmitSignUpForm = (e) => {\n      e.preventDefault();\n      if (!this.state.formIsValid) {\n        this.setState({ ...INITIAL_STATE });\n        return;\n      }\n      const { name, email, password } = this.state.controls;\n\n      this.props.createUser({\n        variables: {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        },\n      });\n    };\n\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {      \n      const { formIsValid, loaded, disabled } = this.state;\n      let formInputArray = [];\n      Object.keys(this.state.controls).forEach((controlItem) => {\n        formInputArray.push(this.state.controls[controlItem]);\n      });\n      const { error, loading } = this.props;   \n         \n      if(!loaded) return <div>Loading...</div>\n      return (\n        <CustomFormContainer onSubmit={this.handleSubmitSignUpForm}>\n          <FormHeader>\n            <Title>Sign Up</Title>\n            <SubTitle>Sign up your account via email and password.</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}\n          {loading && <h2>Loading...</h2>}\n          <FlashForm>\n            <FacebookLogin />\n            <GoogleLogin />\n          </FlashForm>\n          <FormGroups>\n            {formInputArray.map(\n              ({\n                label,\n                name,\n                touched,\n                type,\n                valid,\n                validation,\n                validationErrors,\n                value,\n              }) => (\n                <CustomInput\n                  key={name}\n                  type={type}\n                  name={name}\n                  value={value}\n                  label={label}\n                  onChange={(e) => this.handleChange(e, name)}\n                  require={validation.required}\n                  touched={touched}\n                  valid={valid}\n                  validationErrors={validationErrors}\n                />\n              )\n            )}\n            {loaded && (\n              <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n            )}\n            <CustomButton\n              variant=\"outlined\"\n              size=\"small\"\n              color=\"#0d47a1\"\n              bgColor=\"blue\"\n              disabled={!formIsValid || disabled}\n            >\n              Submit\n            </CustomButton>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              <StyledLink to=\"/auth\">Signin account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{\" \"}\n              <StyledLink to=\"/auth/restore-account\">\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignUp);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx",["1031"],"import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport {GET_PERSONAL_USER_CACHE_DATA\n} from \"../../apollo/operations/queries/cache\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport {\n  Container,\n  UserName,\n  PersonalHeadingBackground,\n  BackgroundImageContainer,\n  PersonalMenus,\n  ProfileMenuItemLink,\n  Footer\n} from \"./styles/PersonalHeading.styles\";\nimport BackgroundImage from \"../../assets/images/background-wallpaper.jpg\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport PersonalHeadingContact from \"./PersonalHeadingContact\"\n\nconst PersonalHeading = () => {\n  const {data : {user,currentPersonalUser}} =useQuery(GET_PERSONAL_USER_CACHE_DATA, {fetchPolicy : \"cache-first\"})\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const [menus, setMenus] = useState([]);\n  const [activeLink, setActiveLink] = useState(null);\n  \n  useEffect(() => {\n    setMenus(i18n.store.data[lang].translation.personalMenus);\n  }, [lang]);\n  \n  useEffect(() => {\n    if (currentPersonalUser) {\n      setActiveLink(`/${currentPersonalUser.slug}/posts`);\n    }\n  }, [currentPersonalUser]);\n\n  if (!currentPersonalUser) return null;\n  return (\n    <Container theme={colorMode}>\n      <PersonalHeadingBackground theme={colorMode} background={BackgroundImage}>\n        <BackgroundImageContainer theme={colorMode}>\n          <LazyLoadImage\n            src={currentPersonalUser.avatar}\n            alt={currentPersonalUser.avatar}\n          />\n          <UserName>\n            <h4>{currentPersonalUser.name}</h4>\n            <span>@{currentPersonalUser.slug}</span>\n          </UserName>\n        </BackgroundImageContainer>\n      </PersonalHeadingBackground>\n      <Footer>\n        <PersonalMenus>\n          {menus.length\n            ? menus.map((menu) => (\n                <ProfileMenuItemLink\n                  key={menu.name}\n                  to={menu.path(currentPersonalUser.slug)}\n                  theme={colorMode}\n                  active={(\n                    activeLink === menu.path(currentPersonalUser.slug)\n                  ).toString()}\n                  onClick={() =>\n                    setActiveLink(menu.path(currentPersonalUser.slug))\n                  }\n                >\n                  {menu.name}\n                </ProfileMenuItemLink>\n              ))\n            : null}\n        </PersonalMenus>\n        {user && <PersonalHeadingContact/>}\n      </Footer>\n    </Container>\n  );\n};\n\nexport default React.memo(PersonalHeading);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx",["1032"],"import React, { useEffect, useState } from \"react\";\nimport { Wrapper, LeftSide, RightSide } from \"./styles/PersonalPosts.styles\";\nimport Posts from \"../Post/Posts\";\nimport PostEditor from \"../Post/PostEditor/PostEditor\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PERSONAL_USER_CACHE_DATA } from \"../../apollo/operations/queries/cache\";\nimport { FETCH_POSTS } from \"../../apollo/post/post.queries\";\nimport { addPostsToCurrentPersonalUser } from \"../../apollo/user/currentPersonalUser.caches\";\nimport IntroductionBox from \"./IntroductionBox\";\n\nconst PersonalPosts = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const {\n    data: { user, currentPersonalUser },\n  } = useQuery(GET_PERSONAL_USER_CACHE_DATA, { fetchPolicy: \"cache-first\" });  \n  const {\n    data: fetchedPostsData,\n    loading,\n    fetchMore: fetchMorePostsData,\n  } = useQuery(FETCH_POSTS, {\n    variables: {\n      userId: currentPersonalUser._id,\n      skip: 0,\n      limit: +process.env.REACT_APP_POSTS_PER_PAGE,\n    },\n    onCompleted: (data) => {      \n      console.log(data)\n      if (data) {\n        addPostsToCurrentPersonalUser(data.fetchPosts);\n      }\n    },\n  });\n\n  useEffect(() => {\n    let isScrolling;\n    function trackUserScroll(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const {\n          scrollHeight,\n          scrollTop,\n          clientHeight,\n        } = document.documentElement;\n        if (\n          scrollTop + clientHeight > 0.8 * scrollHeight &&\n          currentPersonalUser.posts.length > currentPersonalUser.postsData?.length\n        ) {\n          setLoadingMore(true);\n        }\n      }, 66);\n    }\n    window.addEventListener(\"scroll\", trackUserScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", trackUserScroll);\n      if (isScrolling) {\n        clearTimeout(isScrolling);\n      }\n    };\n  });\n\n  useEffect(() => {\n    if (loadingMore && currentPersonalUser.postsData) {\n      const skip = currentPersonalUser.postsData.length;\n      const limit = +process.env.REACT_APP_POSTS_PER_PAGE;\n      fetchMorePostsData({\n        variables: {\n          userId: currentPersonalUser._id,\n          skip,\n          limit,\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (fetchMoreResult) {\n            addPostsToCurrentPersonalUser(fetchMoreResult.fetchPosts);\n          }\n        },\n      }).then(() => setLoadingMore(false));\n    }\n  }, [loadingMore, currentPersonalUser]);\n  \n  if (!fetchedPostsData) return null;\n  if (loading) return <div>Loading...</div>;\n  return (\n    <Wrapper>\n      <LeftSide>\n        <IntroductionBox />\n      </LeftSide>\n      <RightSide>\n        {user?._id === currentPersonalUser?._id && <PostEditor />}\n        {currentPersonalUser?.postsData?.length? (\n          <Posts posts={currentPersonalUser.postsData} />\n        ) : null}\n      </RightSide>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(PersonalPosts);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx",["1033","1034"],"import React, { useEffect } from \"react\";\nimport {  \n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport {\n  FETCH_USERS_RECEIVED_REQUESTS_TO_ADD_FRIEND,  \n} from \"../../apollo/user/user.types\";\nimport {userVar} from \"../../apollo/cache\"\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nimport subscriptions from \"../../apollo/operations/subscriptions\";\nimport _ from \"lodash\"\nconst SentRequestsToAddFriend = () => {\n  const user  = useReactiveVar(userVar);\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-first\",\n  });\n  const { refetch: fetchUsersReceivedRequestToAddFriend } = useQuery(\n    FETCH_USERS_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n\n  const { setReceivedRequestsToAddFriend } = cacheMutations;\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n\n  const getMoreUsersReceivedRequestToAddFriend = () => {\n    const skip = receivedRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_CONTACT_USER_PER_PAGE;\n    if (fetchUsersReceivedRequestToAddFriend) {\n      fetchUsersReceivedRequestToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchUsersReceivedRequestToAddFriend?.length) {\n          const resultData = [...receivedRequestsToAddFriend, ...data.fetchUsersReceivedRequestToAddFriend]\n          const uniqueResultData = _.uniqBy(resultData, \"_id\")\n          \n          setReceivedRequestsToAddFriend([...uniqueResultData]);\n        }\n      });\n    }\n  };\n\n  if (\n    !user ||\n    !user?.receivedRequestToAddFriend.length ||\n    !receivedRequestsToAddFriend.length\n  )\n    return null;\n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userReceivedRequest}\n      </Title>\n      {receivedRequestsToAddFriend.map((item) => (\n        <ContactItem key={item._id} userContact={item} type=\"received\" />\n      ))}\n      {receivedRequestsToAddFriend.length <\n      user.receivedRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreUsersReceivedRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(SentRequestsToAddFriend);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx",["1035"],"import React, { useEffect, useState, useRef, createContext } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport {\n  GET_FRIENDS,\n} from \"../../apollo/operations/queries/cache\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { userVar } from \"../../apollo/cache\";\nimport Search from \"./Search\";\nimport { useThemeUI } from \"theme-ui\";\nimport { setCurrentChat } from \"../../apollo/chat/chat.caches\";\nimport ListContacts from \"./ListContacts\";\nimport ChatBoard from \"./ChatBoard\";\n\nexport const ContactContext = createContext({});\n\nconst Contact = () => {\n  //useQuery\n  const user = useReactiveVar(userVar);\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-only\" });\n  \n  //useState\n  const [search, setSearch] = useState(\"\");\n  const [contactData, setContactData] = useState([]);\n  const [originData, setOriginData] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const popupRef = useRef(null);\n\n  useEffect(() => {\n    if (friends.length) {\n      if (!search) {\n        setContactData([...originData]);\n      } else {\n        const searchRegex = new RegExp(search, \"i\");\n        const searchResults = originData.filter(\n          ({ name }) => !!name.match(searchRegex)\n        );\n        setContactData([...searchResults]);\n      }\n    }\n  }, [search, friends]);\n\n  useEffect(() => {    \n    setContactData([...friends]);\n    setOriginData([...friends]);    \n  }, [friends]);\n\n  useEffect(() => {\n    setCurrentChat(null);\n  },[])\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-contact-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n  const { colorMode } = useThemeUI();\n\n  const onChangeSearch = React.useCallback((e) => {\n    setSearch(e.target.value);\n  },[])\n  if (!user) return null;\n  return (\n    <ContactContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top+50}\n      >\n        <span>Mark as favorite</span>\n        <hr />\n        <span>Label</span>\n        <span>Set alias</span>\n        <hr />\n        <span>Block</span>\n        <span>Delete</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search search={search} onChange={onChangeSearch} />\n          <hr />\n          <ListContacts data={contactData.length ? contactData : friends} />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </ContactContext.Provider>\n  );\n};\n\nexport default Contact;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx",["1036"],"import {useState, useEffect} from 'react'\nimport useLanguage from \"../Global/useLanguage\"\nimport {useLocation} from \"react-router-dom\"\nimport {useReactiveVar} from \"@apollo/client\"\nimport {userVar} from \"../../apollo/cache\"\nconst useMenuList = () => {\n  const user = useReactiveVar(userVar);\n\n  const location = useLocation();  \n  const { lang, i18n } = useLanguage();\n  const [namePage, setNamePage] = useState(\"\");\n  const [menu, setMenu] = useState([]);  \n  const [explores, setExplores] = useState([]);\n  \n  useEffect(() => {\n    const menuName =  i18n.store.data[lang].translation.menuList.find(\n      (item) => item.path === location.pathname\n    )        \n    setNamePage(\n      menuName ? menuName.name : \"\"\n    );\n    setMenu(i18n.store.data[lang].translation.menuList);\n    setExplores(i18n.store.data[lang].translation.explores);\n  }, [lang, i18n.store.data, location.pathname]);\n  return {\n    namePage,\n    menu, \n    explores\n  }\n}\n\nexport default useMenuList\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx",["1037","1038"],"import React, { useEffect } from \"react\";\nimport {\n  ContactItemWrapper,\n  ContactInfo,\n  ContactActions,\n  FriendActions,\n} from \"./Contact.styles\";\nimport { Link } from \"react-router-dom\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport Button from \"../Controls/ButtonDefault\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BsChatDots, BsCameraVideo, BsThreeDotsVertical } from \"react-icons/bs\";\nimport { MdStarBorder } from \"react-icons/md\";\nimport { IoMdCall } from \"react-icons/io\";\nimport {setCurrentUser} from \"../../apollo/user/user.caches\"\nimport {  \n  GET_CURRENT_PERSONAL_USER,\n  GET_SENT_REQUESTS_TO_ADD_FRIEND,\n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n  GET_FRIENDS,\n} from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport {\n  REJECT_REQUEST_TO_ADD_FRIEND,\n  ACCEPT_REQUEST_TO_ADD_FRIEND,\n  CANCEL_REQUEST_TO_ADD_FRIEND,\n} from \"../../apollo/user/user.types\";\nimport { useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\nimport {userVar} from \"../../apollo/cache\"\nimport {} from \"../../apollo/user/currentPersonalUser.caches\"\nconst ContactItem = ({ userContact, type }) => {\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const user = useReactiveVar(userVar);\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { sentRequestsToAddFriend },\n  } = useQuery(GET_SENT_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-first\",\n  });\n  const [cancelRequestToAddFriend] = useMutation(CANCEL_REQUEST_TO_ADD_FRIEND);\n  const [rejectRequestToAddFriend] = useMutation(REJECT_REQUEST_TO_ADD_FRIEND);\n  const [acceptRequestToAddFriend] = useMutation(ACCEPT_REQUEST_TO_ADD_FRIEND);\n  const {    \n    setCurrentPersonalUser,\n    setReceivedRequestsToAddFriend,\n    setSentRequestsToAddFriend,\n    setFriends,\n  } = cacheMutations;\n\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...sender.friends],\n      following: [...sender.following],\n      followed: [...sender.followed],\n      sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n    });\n    if (currentPersonalUser && currentPersonalUser._id === userContact._id) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        following: [...receiver.following],\n        followed: [...receiver.followed],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    }\n  };\n\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    const filterUsersReceivedRequest = sentRequestsToAddFriend.filter(\n      (userReceivedRequest) => userReceivedRequest._id !== userContact._id\n    );\n    cancelRequestToAddFriend({\n      variables: { receiverId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;\n      setSentRequestsToAddFriend(filterUsersReceivedRequest);\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n  //Handle accept request to add friend\n  const onAcceptRequestToAddFriend = () => {\n    const filterUsersSentRequest = receivedRequestsToAddFriend.filter(\n      (userSentRequest) => userSentRequest._id !== userContact._id\n    );\n    acceptRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.acceptRequestToAddFriend;\n      //remove user at recived requests to head of friends list\n      setReceivedRequestsToAddFriend(filterUsersSentRequest);\n      setFriends([{ ...userContact }, ...friends]);\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    const filterUsersSentRequest = receivedRequestsToAddFriend.filter(\n      (userSentRequest) => userSentRequest._id !== userContact._id\n    );\n\n    rejectRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.rejectRequestToAddFriend;\n        setReceivedRequestsToAddFriend(filterUsersSentRequest);\n        updateMutationOnChange(sender, receiver);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const sentActions = (\n    <Button cancel onClick={onCancelRequestToAddFriend}>\n      {i18n.store.data[lang].translation.contacts.cancelRequest}\n    </Button>\n  );\n  const receivedActions = (\n    <>\n      <Button acceptBtn variant=\"outlined\" onClick={onAcceptRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.acceptRequest}\n      </Button>\n      <Button reject onClick={onRejectRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.rejectRequest}\n      </Button>\n    </>\n  );\n\n  const friendsActions = (\n    <FriendActions>\n      <Button favorite>\n        <MdStarBorder />\n      </Button>\n      <Button chat>\n        <BsChatDots />\n      </Button>\n      <Button call>\n        <IoMdCall />\n      </Button>\n      <Button videocall>\n        <BsCameraVideo />\n      </Button>\n      {/* <Button setting>\n        <BsThreeDotsVertical />\n      </Button>      */}\n    </FriendActions>\n  );\n  return (\n    <ContactItemWrapper theme={colorMode}>\n      <ContactInfo>\n        <Link to={userContact.slug}>\n          <LazyLoadImage src={userContact.avatar} alt={userContact.avatar} />\n        </Link>\n        <Link to={userContact.slug}>\n          <h6>{userContact.name}</h6>\n          <span>@{userContact.slug}</span>\n        </Link>\n      </ContactInfo>\n      <ContactActions>\n        {type === \"sent\"\n          ? sentActions\n          : type === \"received\"\n          ? receivedActions\n          : type === \"friends\"\n          ? friendsActions\n          : null}\n      </ContactActions>\n    </ContactItemWrapper>\n  );\n};\n\nexport default ContactItem;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js",[],["1039","1040"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx",["1041"],"import React, {createRef} from \"react\";\nimport {\n  Wrapper\n} from \"./styles/ChatBoard.styles\";\n\nimport ChatBoardHeading from \"./ChatBoardHeading\"\nimport ChatBoardBody from \"./ChatBoardBody\"\nimport ChatBoardFooter from \"./ChatBoardFooter\"\n\nconst ChatCenter = () => {  \n  \n  return (\n    <Wrapper>\n      <ChatBoardHeading/>\n      <ChatBoardBody/>\n      <ChatBoardFooter/>\n    </Wrapper>\n  );\n};\n\nexport default ChatCenter;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx",["1042","1043"],"import React from 'react'\nimport {BoxWrapper, WorkList, Introduce, Website} from \"./styles/IntroductionBox.styles\"\nimport {useQuery, useReactiveVar} from \"@apollo/client\"\nimport {GET_CURRENT_PERSONAL_USER} from \"../../apollo/operations/queries/cache\"\nimport {userVar} from \"../../apollo/cache\"\nimport {useThemeUI} from \"theme-ui\"\nimport {Link} from \"react-router-dom\"\nimport {FaGlobe} from \"react-icons/fa\"\nimport {MdWork} from \"react-icons/md\"\nconst works = [\n  {job_name : \"Data Engineer\", company_name : \"iTech Corp\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", },\n  {job_name : \"Data Scientist\", company_name : \"Samsung\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", },\n  {job_name : \"Junior Developer\", company_name : \"Freelance\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", }\n]\n\n\n\nconst IntroductionBox = () => {\n  const user = useReactiveVar(userVar);\n  const {data : {currentPersonalUser}} = useQuery(GET_CURRENT_PERSONAL_USER, {fetchPolicy : \"cache-first\"})\n  const {colorMode} = useThemeUI();\n  return (\n    <BoxWrapper theme={colorMode}>\n      <h4>Introduction</h4>\n      {/* Introduce */}\n      <Introduce>Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem possimus harum aliquam nobis qui! Temporibus, commodi facilis ex nihil veniam in quia eius dicta quos.</Introduce>\n      {/* works list */}\n      <WorkList>\n        {works.map(work => (\n          <li key={work.job_name}>\n           <Website><span><MdWork/></span><Link to={`/tags/${work.job_name}`}>{work.job_name}</Link>at<Link to={work.company_href}>{work.company_name}</Link></Website> \n          </li>\n        ))}\n      </WorkList>\n      {/* Live in */}\n      <p>Live in <Link to=\"https://google.com\">Can Tho</Link></p>\n      {/* Followers */}\n      <p>Current Have <strong>200</strong> followers</p>      \n      {/* Contact */}\n      <p>Contact me via : 0123 456 789</p>\n      <Website> <span><FaGlobe/></span> <Link href=\"https://github.com/mthang1801\">https://github.com/mthang1801</Link></Website>\n    </BoxWrapper>\n  )\n}\n\nexport default IntroductionBox\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx",["1044","1045","1046","1047"],"import React, { useState, useEffect, useRef } from \"react\";\n\nimport {\n  AiOutlineUnorderedList,\n  AiOutlineEdit,\n  AiOutlineUsergroupDelete,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from \"react-icons/ai\";\nimport {\n  BsThreeDots,\n  BsExclamationSquare,\n  BsQuestionSquare,\n} from \"react-icons/bs\";\nimport { BiUserVoice, BiBlock } from \"react-icons/bi\";\n\nimport { FiUserX, FiUsers, FiUserCheck, FiUserPlus } from \"react-icons/fi\";\nimport { RiMessengerLine } from \"react-icons/ri\";\nimport { IoMdUndo } from \"react-icons/io\";\n\nimport { FcCheckmark, FcCancel } from \"react-icons/fc\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport {\n  ACCEPT_REQUEST_TO_ADD_FRIEND,\n  SEND_REQUEST_TO_ADD_FRIEND,\n  REJECT_REQUEST_TO_ADD_FRIEND,\n  CANCEL_REQUEST_TO_ADD_FRIEND,\n  FOLLOW_USER,\n  UNFOLLOW_USER,\n  REMOVE_FRIEND,\n} from \"../../apollo/user/user.types\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\n\nimport {\n  dialogVar,\n} from \"../../apollo/cache\";\nimport {\n  GET_PERSONAL_USER_CACHE_DATA,\n} from \"../../apollo/operations/queries/cache\";\nimport { GET_NOTIFICATIONS_CACHE_DATA } from \"../../apollo/operations/queries/cache/components/getNotifications\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  PersonalContactContainer,\n  ResponseRequests,\n  DropdownResponseRequest,\n  Dropdown,\n  DropdownMenu,\n  DropdownItem,\n} from \"./styles/PersonalHeadingContact.styles\";\nimport { setCurrentUser } from \"../../apollo/user/user.caches\";\nimport { setAlertDialog, clearAlertDialog } from \"../../apollo/controls/controls.caches\";\nimport {\n  removeNewNotification,\n  decreaseCountNumberNotificationsUnseen,\n  removeNotificationItemFromNotificationsList,\n  setLatestNotification,\n} from \"../../apollo/notification/notification.caches\";\nconst PersonalContact = () => {\n  const [relationship, setRelationship] = useState(\"stranger\");\n  const [openResponse, setOpenResponse] = useState(false);\n  const [openSettings, setOpenSettings] = useState(false);\n  const [openUserInteraction, setOpenUserInteraction] = useState(false);\n  const {\n    data: { notifications, latestNotification },\n  } = useQuery(GET_NOTIFICATIONS_CACHE_DATA, { fetchPolicy: \"cache-first\" });\n  const dialog = useReactiveVar(dialogVar);\n  //Mutations\n  const [sendRequestToAddFriend] = useMutation(SEND_REQUEST_TO_ADD_FRIEND);\n  const [rejectRequestToAddFriend] = useMutation(REJECT_REQUEST_TO_ADD_FRIEND);\n  const [cancelRequestToAddFriend] = useMutation(CANCEL_REQUEST_TO_ADD_FRIEND);\n  const [followUser] = useMutation(FOLLOW_USER);\n  const [unFollowUser] = useMutation(UNFOLLOW_USER);\n  const [acceptRequestToAddFriend] = useMutation(ACCEPT_REQUEST_TO_ADD_FRIEND);\n  const [removeFriend] = useMutation(REMOVE_FRIEND);\n  const { setCurrentPersonalUser } = cacheMutations;\n  //user Query\n  const {\n    data: { user, currentPersonalUser },\n  } = useQuery(GET_PERSONAL_USER_CACHE_DATA);\n\n  //color theme\n  const { colorMode } = useThemeUI();\n  //useRef\n  const responseRef = useRef(false);\n  const settingRef = useRef(false);\n  const interactionRef = useRef(false);\n  //track dialog\n  useEffect(() => {\n    if (\n      dialog &&\n      dialog?.data?.type === \"remove contact\" &&\n      dialog?.data?.userId === currentPersonalUser._id &&\n      dialog?.agree\n    ) {\n      removeFriend({ variables: { friendId: currentPersonalUser._id } })\n        .then(({ data }) => {\n          const { sender, receiver, notification } = data.removeFriend;\n          updateMutationOnChange(sender, receiver, notification);\n        })\n        .then(() => {\n          clearAlertDialog();\n        });\n    }\n  }, [dialog, currentPersonalUser]);\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver, removedNotification) => {\n    if (\n      removedNotification &&\n      user.notifications.includes(removedNotification._id)\n    ) {\n      if (latestNotification?._id === removedNotification._id) {\n        setLatestNotification(null);\n      }\n      removeNewNotification(removedNotification._id);\n      decreaseCountNumberNotificationsUnseen();\n      removeNotificationItemFromNotificationsList(removedNotification);\n      setCurrentUser({\n        ...user,\n        notifications: [\n          ...notifications.filter((_id) => _id !== removedNotification._id),\n        ],\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    } else {\n      setCurrentUser({\n        ...user,\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    }\n    if (currentPersonalUser && currentPersonalUser._id === receiver._id) {\n      console.log({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        followed: [...receiver.followed],\n        following: [...receiver.following],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n      });\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        followed: [...receiver.followed],\n        following: [...receiver.following],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n      });\n    }\n  };\n  //track user click event\n  useEffect(() => {\n    function trackUserClickEvent(e) {\n      if (\n        responseRef.current &&\n        !responseRef.current.contains(e.target) &&\n        openResponse\n      ) {\n        setOpenResponse(false);\n      }\n      if (\n        settingRef.current &&\n        !settingRef.current.contains(e.target) &&\n        openSettings\n      ) {\n        setOpenSettings(false);\n      }\n      if (\n        interactionRef.current &&\n        !interactionRef.current.contains(e.target) &&\n        openUserInteraction\n      ) {\n        setOpenUserInteraction(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickEvent);\n    return () => window.removeEventListener(\"click\", trackUserClickEvent);\n  });\n\n  useEffect(() => {\n    if (currentPersonalUser) {\n      if (user && currentPersonalUser._id === user._id) {\n        setRelationship(\"me\");\n      } else if (\n        user &&\n        currentPersonalUser.friends.includes(user._id.toString())\n      ) {\n        setRelationship(\"friend\");\n      } else {\n        setRelationship(\"stranger\");\n      }\n    }\n  }, [user, currentPersonalUser]);\n  // Handle add friend\n  const onSendRequestToAddFriend = (e) => {\n    sendRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.sendRequestToAddFriend;\n        updateMutationOnChange(sender, receiver);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    rejectRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const {\n          sender,\n          receiver,\n          notification,\n        } = data.rejectRequestToAddFriend;\n        updateMutationOnChange(receiver, sender, notification);\n        setOpenResponse(false);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    cancelRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n  //Handle Follow User\n  const onHandleFollowUser = () => {\n    followUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.followUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle Unfollow user\n  const onHandleUnfollowUser = () => {\n    unFollowUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.unFollowUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle accept request to add friend\n  const onAcceptRequestToAddFriend = () => {\n    acceptRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver, notification } = data.acceptRequestToAddFriend;\n      updateMutationOnChange(receiver, sender, notification);\n      setOpenResponse(false);\n    });\n  };\n  //handle remove friend\n  const onRemoveFriend = () => {\n    removeFriend({ variables: { friendId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver, notification } = data.removeFriend;\n        updateMutationOnChange(sender, receiver, notification);\n      }\n    );\n  };\n\n  const MyActionsContact = (\n    <>\n      <Button size=\"large\" theme={colorMode} title=\"update personal\">\n        <AiOutlineEdit />\n      </Button>\n      <Button size=\"large\" theme={colorMode} title=\"history actions\">\n        <AiOutlineUnorderedList />\n      </Button>\n    </>\n  );\n  const FriendActionsContact = (\n    <>\n      <Button size=\"large\" theme={colorMode} title=\"chat\">\n        <RiMessengerLine />\n      </Button>\n    </>\n  );\n  const StrangerActionsContact = (\n    <>\n      {user &&\n      currentPersonalUser &&\n      user?.sentRequestToAddFriend?.includes(\n        currentPersonalUser._id.toString()\n      ) ? (\n        <Button\n          size=\"large\"\n          theme={colorMode}\n          title=\"Cancel request\"\n          onClick={onCancelRequestToAddFriend}\n        >\n          <IoMdUndo />\n        </Button>\n      ) : user &&\n        currentPersonalUser &&\n        user?.receivedRequestToAddFriend?.includes(\n          currentPersonalUser._id.toString()\n        ) ? (\n        <ResponseRequests ref={responseRef}>\n          <Button size=\"large\" theme={colorMode} title=\"Response the request\">\n            <BsQuestionSquare\n              onClick={() => setOpenResponse((prevState) => !prevState)}\n            />\n          </Button>\n          <DropdownResponseRequest theme={colorMode} open={openResponse}>\n            <div onClick={onAcceptRequestToAddFriend}>\n              <FcCheckmark /> Accept\n            </div>\n            <div onClick={onRejectRequestToAddFriend}>\n              <FcCancel /> Reject\n            </div>\n          </DropdownResponseRequest>\n        </ResponseRequests>\n      ) : (\n        <Button\n          theme={colorMode}\n          title=\"add friend\"\n          onClick={onSendRequestToAddFriend}\n          size=\"large\"\n        >\n          <FiUserPlus />\n        </Button>\n      )}\n\n      <Button size=\"large\" theme={colorMode} title=\"Chat\">\n        <RiMessengerLine />\n      </Button>\n    </>\n  );\n\n  const onClickRemoveFriend = () => {\n    setAlertDialog({\n      title: `Remove friend`,\n      content: `Are you sure to remove ${currentPersonalUser?.name}`,\n      data: { type: \"remove contact\", userId: currentPersonalUser._id },\n    });\n  };\n\n  const UserInteraction = (\n    <Dropdown ref={interactionRef}>\n      <Button\n        size=\"large\"\n        title={\n          user.friends.includes(currentPersonalUser._id)\n            ? \"Friend\"\n            : user.following.includes(currentPersonalUser._id)\n            ? \"Following\"\n            : \"Follow\"\n        }\n        onClick={() => setOpenUserInteraction((prevState) => !prevState)}\n      >\n        {user.friends.includes(currentPersonalUser._id) ? (\n          <FiUserCheck />\n        ) : user.following.includes(currentPersonalUser._id) ? (\n          <FiUsers />\n        ) : (\n          <AiOutlineEye />\n        )}\n      </Button>\n      {openUserInteraction && (\n        <DropdownMenu>\n          {user.following.includes(currentPersonalUser?._id) ? (\n            <DropdownItem theme={colorMode} onClick={onHandleUnfollowUser}>\n              <span>\n                <AiOutlineEyeInvisible />\n              </span>\n              <span>Unfollow</span>\n            </DropdownItem>\n          ) : (\n            <DropdownItem theme={colorMode} onClick={onHandleFollowUser}>\n              <span>\n                <AiOutlineEye />\n              </span>\n              <span>Follow</span>\n            </DropdownItem>\n          )}\n\n          {user.friends.includes(currentPersonalUser?._id) && (\n            <DropdownItem theme={colorMode} onClick={onClickRemoveFriend}>\n              <span>\n                <FiUserX />\n              </span>\n              <span>Remove Friend</span>\n            </DropdownItem>\n          )}\n        </DropdownMenu>\n      )}\n    </Dropdown>\n  );\n\n  const UserSettings = (\n    <Dropdown ref={settingRef}>\n      <Button\n        size=\"large\"\n        title=\"Setting\"\n        onClick={() => setOpenSettings((prevState) => !prevState)}\n      >\n        <BsThreeDots />\n      </Button>\n      {openSettings ? (\n        <DropdownMenu theme={colorMode}>\n          <DropdownItem theme={colorMode}>\n            <span>\n              <BsExclamationSquare />\n            </span>\n            <span>Find Report</span>\n          </DropdownItem>\n          <DropdownItem theme={colorMode}>\n            <span>\n              <BiBlock />\n            </span>\n            <span>Block</span>\n          </DropdownItem>\n        </DropdownMenu>\n      ) : null}\n    </Dropdown>\n  );\n\n  return (\n    <PersonalContactContainer>\n      {relationship === \"me\"\n        ? MyActionsContact\n        : relationship === \"friend\"\n        ? FriendActionsContact\n        : StrangerActionsContact}\n      {UserInteraction}\n      {UserSettings}\n    </PersonalContactContainer>\n  );\n};\n\nexport default PersonalContact;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js",["1048"],"//Friends\nimport createSetOpenFriendsList from \"./friends/setOpenFriendsList\";\nimport createSetFriends from \"./friends/setFriends\";\nimport createSetReceivedRequestsToAddFriend from \"./friends/setReceivedRequestsToAddFriend\";\nimport createSetSentRequestsToAddFriend from \"./friends/setSentRequestsToAddFriend\";\nimport createSetMoreFriends from \"./friends/setMoreFriends\";\n//Messages Storage\nimport createSetInitialMessagesStorage from \"./messagesStorage/setInitialMessagesStorage\";\nimport createSetMessagesStorage from \"./messagesStorage/setMessagesStorage\";\nimport createUpdateMessagesStorage from \"./messagesStorage/updateMessagesStorage\";\nimport createUpdateHasSeenLatestMessage from \"./messagesStorage/updateHasSeenLatestMessage\";\nimport createClearMessageStorage from \"./messagesStorage/clearMessageStorage\";\nimport createUpdateMessagesStorageWhenReceiverSeenAllMessages from \"./messagesStorage/updateMessagesStorageWhenReceiverSeenAllMessages\";\nimport createUpdateMoreMessages from \"./messagesStorage/updateMoreMessages\";\nimport createUpdateMessagesStorageToReceivedWhenUserOnline from \"./messagesStorage/updateMessagesStorageToReceivedWhenUserOnline\";\nimport createAddNewConversationToMessagesStorage from \"./messagesStorage/addNewConversationToMessagesStorage\";\n\n\nimport {  \n  toggleFriendsBoardVar,\n  friendsVar,\n  sentRequestsToAddFriendVar,\n  receivedRequestsToAddFriendVar,\n  messagesStorageVar,\n  currentChatVar,  \n} from \"../../../cache\";\n\nconst mutations = {\n\n  //Friends\n  setOpenFriendsList: createSetOpenFriendsList(toggleFriendsBoardVar),\n  setFriends: createSetFriends(friendsVar),\n  setSentRequestsToAddFriend: createSetSentRequestsToAddFriend(\n    sentRequestsToAddFriendVar\n  ),\n  setReceivedRequestsToAddFriend: createSetReceivedRequestsToAddFriend(\n    receivedRequestsToAddFriendVar\n  ),\n  setMoreFriends: createSetMoreFriends(friendsVar),\n  //Messages Storage\n  setInitialMessagesStorage: createSetInitialMessagesStorage(\n    messagesStorageVar\n  ),\n  setMessagesStorage: createSetMessagesStorage(messagesStorageVar),\n  updateMessagesStorage: createUpdateMessagesStorage(messagesStorageVar),\n  updateHasSeenLatestMessage: createUpdateHasSeenLatestMessage(\n    messagesStorageVar\n  ),\n  clearMessageStorage: createClearMessageStorage(messagesStorageVar),\n  updateMessagesStorageWhenReceiverSeenAllMessages: createUpdateMessagesStorageWhenReceiverSeenAllMessages(\n    messagesStorageVar\n  ),\n  updateMoreMessages: createUpdateMoreMessages(messagesStorageVar),\n  updateMessagesStorageToReceivedWhenUserOnline: createUpdateMessagesStorageToReceivedWhenUserOnline(\n    messagesStorageVar\n  ),\n  addNewConversationToMessagesStorage: createAddNewConversationToMessagesStorage(\n    messagesStorageVar\n  ),\n};\n\nexport { mutations as cacheMutations };\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx",["1049"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx",["1050","1051","1052","1053","1054"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx",["1055","1056"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx",["1057"],"import styled, {css} from \"styled-components\"\n\n\nexport const Wrapper = styled.header`\nheight: 65px;\nwidth : 100%; \nbackground-color : #e8f5e9;\ndisplay : flex;\npadding: 1rem 2rem;  \njustify-content: space-between;\nalign-items : center;\n`\n\nexport const User = styled.div`\ndisplay : flex;\nalign-items : center;  \n`\n\nexport const Avatar = styled.div`\nwidth : 2.5rem;\nheight : 2.5rem;\n& > img{\n  width : 100%; \n  height: 100%;\n  border-radius : 50%;\n}\n`\n\nexport const UserInfo  = styled.div`\nmargin-left : 0.4rem;\nh4{\n  font-size : 1rem;\n}\nflex: 1;\n`\n\nexport const Controls = styled.div`\n  display : flex;\n  align-items: center;\n`\n\nexport const LinkItem = styled.span`\n  display : inline-block;\n  cursor : pointer;\n  font-size : 1.4rem;\n  margin :  0  0.5rem;\n  ${({phone}) => phone && `\n    color : #039be5 ;\n    &:hover{\n      color : #0277bd ; \n    }\n  `} \n  ${({video}) => video && `\n    color : #e53935; \n    &:hover{\n      color : #c62828;\n    }\n  `}\n  ${({photo}) => photo &&`\n    color : #00897b;\n    &:hover{\n      color : #00695c;\n    }\n  `}\n\n  ${({file}) => file && `\n    color : #3949ab;\n    &:hover{\n      color: #283593;\n    }\n  `}\n \n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx",["1058","1059"],"import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  BubbleContainer,\n  Message,\n  MentionWrapper,\n  MentionInfo,\n  MentionLinkInfo,\n  MentionAvatar,\n  BubbleTimeline,\n  ImageContainer,\n  AttachmentContainer,\n} from \"./styles/Bubble.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { convertFromRaw, EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport Moment from \"react-moment\";\nimport LazyLoad from \"react-lazyload\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nconst linkifyPlugin = createLinkifyPlugin({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n});\nconst mentionPlugin = createMentionPlugin({\n  mentionComponent({ mention }) {\n    return (\n      <MentionWrapper to={`/${mention.slug}`}>\n        <MentionLinkInfo to={`/${mention.slug}`}>\n          <MentionAvatar src={mention.avatar} />\n          <MentionInfo>\n            <span>{mention.name}</span>\n            <span>@{mention.slug}</span>\n          </MentionInfo>\n        </MentionLinkInfo>\n        <span>@{mention.name}</span>\n      </MentionWrapper>\n    );\n  },\n});\nconst Bubble = ({ message, me, user, senderAvatar, index }) => {\n  const [editorState, setEditorState] = useState(() =>\n    message.messageType === \"TEXT\"\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(message.text)))\n      : null\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [bubbleDimensions, setBubbleDimensions] = useState({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const bubbleRef = useRef(null);\n  useEffect(() => {\n    if (bubbleRef.current) {\n      setBubbleDimensions(bubbleRef.current.getBoundingClientRect());\n    }\n  }, [bubbleRef]);  \n  \n  if (!user) return null;  \n  return (\n    \n      <Wrapper index={index}>\n        <BubbleContainer me={me}>\n          <Avatar>\n            <LazyLoadImage src={senderAvatar} />\n          </Avatar>\n          <Message me={me} ref={bubbleRef} messageType={message.messageType}>\n            {message.messageType === \"TEXT\" ? (\n              <Editor\n                editorState={editorState}\n                setEditorState={setEditorState}\n                plugins={[linkifyPlugin, mentionPlugin]}\n                onChange={setEditorState}\n                readOnly\n              />\n            ) : message.messageType === \"IMAGE\" ? (\n              <ImageContainer>\n                <img\n                  src={message.file.data}\n                  alt={message.file.filename}\n                  onClick={() => setIsOpen(true)}\n                />\n                {isOpen && (\n                  <Lightbox\n                    mainSrc={message.file.data}\n                    onCloseRequest={() => setIsOpen(false)}\n                  />\n                )}\n              </ImageContainer>\n            ) : message.messageType === \"ATTACHMENT\" ? (\n              <AttachmentContainer>\n                <a\n                  href={message.file.data}\n                  download={message.file.filename}\n                  title={message.file.filename}\n                >\n                  {message.file.filename}\n                </a>\n              </AttachmentContainer>\n            ) : null}\n          </Message>\n        </BubbleContainer>\n        <BubbleTimeline width={bubbleDimensions.width} me={me}>\n          <div>\n            <span>\n              <Moment fromNow>{+message.createdAt}</Moment>\n            </span>\n            {user._id === message.sender._id ? (\n              <span style={{ textTransform: \"capitalize\" }}>\n                {message.receiverStatus.toLowerCase()}\n              </span>\n            ) : null}\n          </div>\n        </BubbleTimeline>\n      </Wrapper>\n    \n  );\n};\n\nexport default Bubble;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/ReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/SentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/Friends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js",["1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072"],"import {\n  client,\n  restartWebsocketConnection,\n  closeWebsocketConnection,\n} from \"../../apollo/client\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport {\n  User,\n  Posts,\n  Notifications,\n  NewNotifications,\n  CountNumberNotificationsUnseen,\n  CurrentChat,\n  Friends,\n  MessagesStorage,\n} from \"../../apollo/models\";\nimport {userVar, postsVar, countNumberOfNotificationUnseenVar, notificationsVar, newNotificationsVar} from \"../../apollo/cache\"\nimport { initialState } from \"../../apollo/initialState\";\nimport {setCurrentUser, clearUser} from \"../../apollo/user/user.caches\"\nimport {clearPosts} from \"../../apollo/post/post.caches\"\nimport {clearCurrentChat} from \"../../apollo/chat/chat.caches\"\nimport {clearLatestNotification, clearNewNotificationsVar, clearNotifications, resetCountNumberOfNotificationUnseenVar} from \"../../apollo/notification/notification.caches\"\nconst clearCache = () => {\n  const {        \n    setFriends,\n    clearMessageStorage,\n  } = cacheMutations;\n  clearUser();\n  clearPosts();\n  resetCountNumberOfNotificationUnseenVar();\n  clearNotifications();\n  clearNewNotificationsVar();\n  clearLatestNotification();\n  clearCurrentChat();\n  setFriends(Friends);\n  clearMessageStorage();\n};\n\nconst logout = async () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"tokenExpire\");\n  clearCache();\n  await client.resetStore();\n  if (typeof window !== \"undefined\") {\n    closeWebsocketConnection();\n  }\n};\n\nconst login = async (user, token, tokenExpire) => {\n  // await logout();\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\n    \"tokenExpire\",\n    new Date(Date.now() + tokenExpire * 1000)\n  );\n  setCurrentUser(user)\n  if (typeof window !== \"undefined\") {\n    restartWebsocketConnection();\n  }\n};\n\nexport { logout, login };\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx",["1073"],"import styled, {css} from 'styled-components'\nimport {Link} from \"react-router-dom\"\n\nexport const FriendsBoardWrapper = styled.div`\n  position : fixed; \n  top : 60px;\n  right: 0 ;\n  height: calc(100% - 60px);    \n  width : 300px;  \n  overflow: auto;\n  transition : var(--mainTransition);\n  z-index : ${({show}) => show ? 2 : -1};\n`\n\nexport const FriendsListWrapper = styled.div`\n  height: auto;\n  min-height: 95vh;\n  width :100%;  \n  border-radius : 6px;\n  box-shadow : var(--mediumShadow);\n  transition : var(--mainTransition);\n  border-left: 1px solid ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};\n  background-color: ${({theme}) => theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  position : relative;\n  ${({show}) => show ? css`\n    transform: translateX(0);\n  ` : css`\n    transform : translateX(100%);\n  `}  \n`\n\nexport const TitleContacts = styled.div`\n  display : flex;\n  justify-content : space-between;\n  align-items : center;\n  padding : 1rem;  \n`\n\nexport const FriendsListSearch = styled.div`\n  flex: ${({show}) => show ? 1 : \"unset\"};\n  display : flex;\n  justify-content : space-between;\n  position : relative;\n  transition : var(--secondTransition);\n  background-color : ${({theme, show}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n  border-radius : 3rem;  \n  overflow : hidden;  \n  width : ${({show}) => show ? \"90%\" : \"2rem\"};\n  transition-delay : width 0.15s;\n  input{\n    flex:  1;\n    display : ${({show}) => show ? \"block\" : \"none\"};\n    width : ${({show}) => show ? \"calc(100% - 2rem)\" : 0};    \n    padding : 0 0.7rem;  \n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n    outline : none ; \n    border: ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};    \n    font-size : 1rem;\n    color :  ${({theme}) => theme === \"dark\" ? \"var(--color-text-dark)\" : \"var(--color-text-default)\"};\n  }\n  \n  button{      \n    outline : none ; \n    border: none ;\n    text-align : center;\n    width : 2rem;\n    height:  2rem;\n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray-dark)\" : \"var(--gray-light)\"}; \n    border-radius : 50%;\n    display : flex;\n    align-items: center;\n    justify-content : center;\n    cursor : pointer;\n    &:hover{\n      background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-deep)\"}; \n    }\n  }\n  \n`\n\nexport const FriendsListTitle = styled.h4`\n  font-size : 1.1rem;\n  width : ${({hide})  => hide ? \"0\" : \"auto\"};   \n  visibility : ${({hide}) => hide ? \"hidden\" : \"visible\"};\n  transform : ${({hide}) => hide ?  \"translateX(-200%)\" : \"translateX(0)\"};  \n  transition : 0.12s all; \n  transition-delay: 0.05;\n`\n\nexport const ButtonClose = styled.button`\n  position : absolute;\n  top : 50vh;\n  right:  0;\n`\n\nexport const ImageContainer = styled.div`\n\n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx",["1074"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport { UPDATE_USER_HAS_SEEN_NOTIFICATION } from \"../../apollo/notification/notification.types\";\nimport { AcceptButton, DenyButton } from \"../Custom/CustomMaterialButton\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport useLanguage from \"../Global/useLanguage\";\nimport Moment from \"react-moment\";\nimport \"moment/locale/vi\";\nimport {\n  Wrapper,\n  LinkWrapper,\n  AvatarContainer,\n  NotificationContent,\n  Controls,\n} from \"./styles/NotificationItem.styles\";\nimport { notificationContent } from \"../../utils/notificationContent\";\nimport { GET_NOTIFICATIONS_CACHE_DATA } from \"../../apollo/operations/queries/cache/components/getNotifications\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  ACCEPT_REQUEST_TO_ADD_FRIEND,\n  REJECT_REQUEST_TO_ADD_FRIEND,\n} from \"../../apollo/user/user.types\";\nimport { setCurrentUser } from \"../../apollo/user/user.caches\";\nimport {\n  removeNewNotification,\n  decreaseCountNumberNotificationsUnseen,\n  removeNotificationItemFromNotificationsList,\n  setLatestNotification,\n  updateNotificationHasSeen,\n} from \"../../apollo/notification/notification.caches\";\nconst NotificationItem = ({ notification }) => {\n  //Query\n  const {\n    data: {\n      user,\n      newNotifications,\n      currentPersonalUser,\n      latestNotification,\n      notifications,\n    },\n  } = useQuery(GET_NOTIFICATIONS_CACHE_DATA, { fetchPolicy: \"cache-first\" });\n  //Mutations\n  const { setCurrentPersonalUser } = cacheMutations;\n  const [updateToHasSeen] = useMutation(UPDATE_USER_HAS_SEEN_NOTIFICATION);\n  const [acceptRequestToAddFriend] = useMutation(ACCEPT_REQUEST_TO_ADD_FRIEND);\n  const [rejectRequestToAddFriend] = useMutation(REJECT_REQUEST_TO_ADD_FRIEND);\n  const { lang } = useLanguage();\n  const handleUserClickHasSeen = (notification) => {\n    updateToHasSeen({ variables: { notificationId: notification._id } }).then(\n      ({ data }) => {\n        if (data.updateUserHasSeenNotification) {\n          decreaseCountNumberNotificationsUnseen();\n          updateNotificationHasSeen(notification._id);\n        }\n      }\n    );\n  };\n\n  const updateMutationOnChange = (sender, receiver, removedNotification) => {\n    if (\n      removedNotification &&\n      user.notifications.includes(removedNotification._id)\n    ) {\n      if (latestNotification?._id === removedNotification._id) {\n        setLatestNotification(null);\n      }\n      removeNewNotification(removedNotification._id);\n      decreaseCountNumberNotificationsUnseen();\n      removeNotificationItemFromNotificationsList(removedNotification);\n      setCurrentUser({\n        ...user,\n        notifications: [\n          ...notifications.filter((_id) => _id !== removedNotification._id),\n        ],\n        friends: [...receiver.friends],\n        followed: [...receiver.followed],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    } else {\n      setCurrentUser({\n        ...user,\n        friends: [...receiver.friends],\n        followed: [...receiver.followed],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    }\n\n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id === notification.creator._id\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...sender.friends],\n        following: [...sender.following],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      });\n    }\n  };\n\n  const onAcceptRequestToAddFriend = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    acceptRequestToAddFriend({\n      variables: { senderId: notification.creator._id },\n    }).then(({ data }) => {\n      const { sender, receiver, notification } = data.acceptRequestToAddFriend;\n      updateMutationOnChange(sender, receiver, notification);\n    });\n  };\n\n  const onRejectRequestToAddFriend = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    rejectRequestToAddFriend({\n      variables: { senderId: notification.creator._id },\n    }).then(({ data }) => {\n      const { sender, receiver, notification } = data.rejectRequestToAddFriend;\n      // when reject, receiver is current User, sender is creator\n      updateMutationOnChange(sender, receiver, notification);\n    });\n  };\n  const { colorMode } = useThemeUI();\n  if (!user) return null;\n  return (\n    <Wrapper theme={colorMode} hasSeen={notification.hasSeen}>\n      <LinkWrapper\n        to={notification.url}\n        key={notification._id}\n        onClick={() => handleUserClickHasSeen(notification)}\n      >\n        <AvatarContainer>\n          <LazyLoadImage\n            src={`${notification.creator.avatar}`}\n            alt={notification.url}\n            effect=\"blur\"\n            width=\"40px\"\n            height=\"40px\"\n          />\n        </AvatarContainer>\n        <NotificationContent>\n          <span\n            dangerouslySetInnerHTML={{\n              __html: notificationContent(notification, lang),\n            }}\n          />\n          <small>\n            <Moment\n              fromNow\n              className={newNotifications?.has(notification._id) ? \"new\" : \"\"}\n              locale={lang}\n            >\n              {new Date(+notification.updatedAt)}\n            </Moment>\n          </small>\n        </NotificationContent>\n      </LinkWrapper>\n      {notification.isQuestion && notification.questionType?.yesNoQuestion ? (\n        <Controls>\n          <AcceptButton\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            onClick={onAcceptRequestToAddFriend}\n          >\n            Accept\n          </AcceptButton>\n          <DenyButton\n            variant=\"contained\"\n            size=\"small\"\n            color=\"secondary\"\n            onClick={onRejectRequestToAddFriend}\n          >\n            Reject\n          </DenyButton>\n        </Controls>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(NotificationItem);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx",["1075","1076"],"import React, { useState, useEffect } from \"react\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport styled from \"styled-components\";\nimport ButtonLogin from \"../Controls/ButtonLogin\"\nimport ButtonSignUp from \"../Controls/ButtonSignUp\"\nimport {useLocation} from \"react-router-dom\"\nconst CardUtility = () => {\n  const [welcome, setWelcome] = useState(\"\");\n  const [introduce, setIntroduce] = useState(\"\");\n  const [askLogin, setAskLogin] = useState(\"\");\n  const { colorMode } = useThemeUI();\n  const { lang, i18n } = useLanguage();\n  const {pathname} = useLocation()\n \n  useEffect(() => {\n    setWelcome(i18n.store.data[lang].translation.greeting.welcome);\n    setIntroduce(i18n.store.data[lang].translation.greeting.introduce);\n    setAskLogin(i18n.store.data[lang].translation.greeting.askLogin);\n  }, [lang]);\n\n  return <CardWrapper theme={colorMode}>\n    <Welcome>{welcome}</Welcome>\n    <div>{introduce}</div>   \n    <div className=\"auth\">\n      <ButtonLogin to=\"/auth\" from={pathname}>Login</ButtonLogin>\n      <ButtonSignUp to=\"/auth/signup\" from={pathname}>SignUp</ButtonSignUp>\n    </div>\n  </CardWrapper>;\n};\n\nconst CardWrapper = styled.aside`\n  background-color: ${({ theme }) =>\n    theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  text-align: center;\n  border-radius: 0.7rem;\n  overflow: hidden;\n  padding: 1.5rem;\n  .auth{\n    &> *{\n      margin : 1rem 0;\n    }\n  }\n`;\n\nconst Welcome = styled.h4`\n  font-size : 1.1em;\n  font-weight : 600;\n`\n\n\n\nexport default CardUtility;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx",["1077"],"import React, { useState, useEffect } from \"react\";\nimport { Wrapper, FetchMoreLink } from \"./styles/PostCard.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport PostCardHeader from \"./PostCardHeader\";\nimport PostCardBody from \"./PostCardBody\";\nimport PostCardFooter from \"./PostCardFooter\";\nimport Comments from \"./Comments\";\nimport { FETCH_COMMENTS } from \"../../apollo/post/post.queries\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { userVar } from \"../../apollo/cache\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport EditPostDialog from \"./EditPostDialog\";\nimport { addCommentsToPost } from \"../../apollo/post/post.caches\";\n\nconst PostCard = ({ post }) => {\n  const { colorMode } = useThemeUI();\n  const user = useReactiveVar(userVar);\n  const { refetch: fetchComments } = useQuery(FETCH_COMMENTS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const [loading, setLoading] = useState(false);\n  const { i18n, lang } = useLanguage();\n\n  const { fetchMoreComments } = i18n.store.data[lang].translation.comment;\n\n  //for edit\n  const [isEdited, setIsEdited] = useState(false);\n  const [editedEditorState, setEditedEditorState] = useState(\n    EditorState.createEmpty()\n  );\n\n  const onFetchComments = () => {\n    setLoading(true);\n    fetchComments({ postId: post._id }).then(({ data }) => {\n      if (data.fetchComments) {\n        addCommentsToPost(post._id, data.fetchComments);\n      }\n      setLoading(false);\n    });\n  };\n\n  const onFetchMoreComments = () => {\n    setLoading(true);\n    const skip = post.commentsData.length;\n    fetchComments({ postId: post._id, skip }).then(({ data }) => {\n      if (data.fetchComments) {\n        addCommentsToPost(post._id, data.fetchComments);\n      }\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    if (isEdited) {\n      setEditedEditorState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(post.rawText)))\n      );\n    }\n  }, [isEdited]);\n  return (\n    <Wrapper theme={colorMode}>\n      <EditPostDialog\n        open={isEdited}\n        setOpen={setIsEdited}\n        editedEditorState={editedEditorState}\n        post={post}\n      />\n      <PostCardHeader post={post} user={user} setIsEdited={setIsEdited} />\n      <PostCardBody post={post} />\n      <PostCardFooter post={post} fetchComments={onFetchComments} />\n      {loading && <div>Loading...</div>}\n      {post.commentsData && <Comments comments={post.commentsData} />}\n      {post.commentsData?.length < post.comments.length && (\n        <FetchMoreLink onClick={onFetchMoreComments}>\n          {fetchMoreComments}\n        </FetchMoreLink>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(PostCard);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx",["1078","1079"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Brand from \"./Brand\";\nimport Search from \"./Search\";\nimport Navigation from \"./Navigation\";\nimport MessengerAndNotification from \"./MessengerAndNotification\";\nimport SettingAccount from \"./SettingAccount\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport ButtonMenu from \"../Controls/ButtonMenu\";\nimport {toggleMenu} from \"../../apollo/controls/controls.actions\"\n\nimport classNames from \"classnames\";\nimport { userVar } from \"../../apollo//cache\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { useLocation } from \"react-router-dom\";\nimport { useThemeUI } from \"theme-ui\";\nimport ButtonLogin from \"../Controls/ButtonLogin\";\nimport ButtonSignUp from \"../Controls/ButtonSignUp\";\nconst Header = () => {\n  const [openSearch, setOpenSearch] = useState(false);\n const user = useReactiveVar(userVar);\n  const { colorMode } = useThemeUI();\n  const { pathname } = useLocation();\n  \n  const NavControls = user ? (\n    <div className=\"nav-controls\">\n      <div className=\"center\">\n        <div className=\"nav-toggle\">\n          <ButtonMenu onClick={toggleMenu} />\n        </div>\n        <div className=\"nav-bar\">\n          <Navigation />\n        </div>\n\n        <div className=\"control\">\n          <MessengerAndNotification />\n        </div>\n      </div>\n      <div className=\"setting-account\">\n        <SettingAccount />\n      </div>\n    </div>\n  ) : (\n    <div className=\"nav-controls\">\n      <div className=\"nav-auth\">\n        <ButtonLogin to=\"/auth\" from={pathname}>\n          Login\n        </ButtonLogin>\n        <ButtonSignUp to=\"/auth/signup\" from={pathname}>\n          Sign up\n        </ButtonSignUp>\n        <div className=\"setting-account\">\n          <SettingAccount />\n        </div>\n      </div>\n    </div>\n  );\n \n  return (\n    <Wrapper theme={colorMode}>\n      <div className={classNames(\"nav-header\", { shorten: !openSearch })}>\n        <div className={classNames(\"nav-brand\", { hide: openSearch })}>\n          <Brand />\n        </div>\n        <div\n          className={classNames(\n            \"close-search\",\n            { \"on-search-open\": !openSearch },\n            { hide: !openSearch }\n          )}\n        >\n          <Button onClick={() => setOpenSearch(false)} variant=\"outlined\">\n            <FaArrowLeft />\n          </Button>\n        </div>\n        <div className={classNames(\"search-bar\")}>\n          <Search\n            openSearch={openSearch}\n            setOpenSearch={() => setOpenSearch(true)}\n          />\n        </div>\n      </div>\n      {NavControls}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.header`\n  width: 100vw;\n  height: 60px;\n  background-color: ${({ theme }) =>\n    theme === \"dark\"\n      ? \"var(--color-background-dark)\"\n      : \"var(--color-background-default)\"};\n  border-bottom: 1px solid\n    ${({ theme }) => (theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-light)\")};\n  position: fixed;\n  top: 0;\n  padding: 0 0.4rem;\n  display: flex;\n  align-items: center;\n  flex-wrap: no-wrap;\n  z-index: 100;\n  .nav-header {\n    display: flex;\n    align-items: center;\n    transition: var(--mainTransition);\n    flex-wrap: nowrap;\n    .nav-brand,\n    .on-search-open {\n      width: 60px;\n      transition: var(--mainTransition);\n    }\n    .search-bar {\n      width: calc(100% - 60px);\n      transition: var(--mainTransition);\n    }\n    .nav-brand {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .nav-controls {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: var(--mainTransition);\n    height: 100%;\n    padding: 0 1.5rem;\n    .nav-bar {\n      display: none;\n    }\n    .center {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: space-between;\n      flex: 1;\n      padding: 0 0.5rem;\n    }\n    .nav-toggle {\n      margin-right: 0.75rem;\n    }\n    .nav-auth {\n      width: 100%;\n      display: flex;\n      justify-content: flex-end;\n      & > * {\n        font-size: 0.8em;\n        margin-right: 0.25rem;\n      }\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .hide {\n      width: 0 !important;\n      opacity: 0;\n      visibility: hidden;\n      transition: var(--mainTransition);\n      transition-delay: 0.5s;\n    }\n    .shorten {\n      width: auto !important;\n      transition: var(--mainTransition);\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding: 0 2rem;\n    .close-search {\n      display: none;\n    }\n    .nav-header {\n      width: 30%;\n    }\n    .nav-controls {\n      width: 70%;\n      .nav-bar {\n        display: block;\n        height: 100%;\n      }\n      .center {\n        justify-content: flex-end;\n      }\n      .control {\n        padding: 0 0.5rem;\n      }\n    }\n  }\n  @media screen and (min-width: 992px) {\n    .nav-header {\n      width: 35%;\n    }\n    .nav-controls {\n      width: 65%;\n      .nav-toggle {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport default React.memo(Header);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx",["1080","1081","1082"],"import React, { useEffect, useState, useRef, useCallback } from \"react\";\n\nimport {\n  Wrapper,\n  Notification,\n  UnseenNotification,\n  NotificationBoard,\n} from \"./styles/Header.styles\";\nimport { IoMdNotifications } from \"react-icons/io\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport NotificationsBoard from \"./NotificationsBoard\";\nimport useNotificationsPostSubscription from \"../../hooks/useNotificationsPostSubscription\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_HEADER_CACHE_DATA } from \"../../apollo/operations/queries/cache\";\nimport { FETCH_NOTIFICATIONS } from \"../../apollo/notification/notification.types\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport FlashPopUpNotification from \"../Notification/FlashPopUpNotification\";\nimport {\n  setLatestNotification,\n  setNotifications,\n} from \"../../apollo/notification/notification.caches\";\nconst Control = () => {\n  const [openNotificationBoard, setOpenNotificationBoard] = useState(false);\n  const [loadingNotificationsMore, setLoadingNotificationsMore] = useState(\n    false\n  );\n  const notificationRef = useRef(false);\n\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const {\n    data: { user, notifications, countNumberNotificationsUnseen },\n  } = useQuery(GET_HEADER_CACHE_DATA, { fetchPolicy: \"cache-and-network\" });\n\n  useNotificationsPostSubscription();\n\n  useEffect(() => {\n    function handleClickOutsideNotificationBoard(e) {\n      if (openNotificationBoard) {\n        setOpenNotificationBoard(false);\n      }\n    }\n    window.addEventListener(\"click\", handleClickOutsideNotificationBoard);\n    return () =>\n      window.removeEventListener(\"click\", handleClickOutsideNotificationBoard);\n  }, [notificationRef.current, openNotificationBoard]);\n\n  const handleClickNotification = useCallback(async () => {\n    setLoadingNotificationsMore(false);\n    setOpenNotificationBoard((prevStatus) => !prevStatus);\n    setLatestNotification(null);\n  });\n\n  const getMoreNotifications = (e) => {\n    const { target } = e;\n    if (target.clientHeight + target.scrollTop > target.scrollHeight * 0.75) {\n      setLoadingNotificationsMore(true);\n    }\n  };\n  useEffect(() => {\n    let _isMounted = true;\n    if (loadingNotificationsMore && fetchNotifications) {\n      const skip = notifications.length;\n      const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n      fetchNotifications({ skip, limit }).then(\n        ({ data: { fetchNotifications } }) => {\n          if (_isMounted) {\n            setNotifications([...notifications, ...fetchNotifications]);\n            setLoadingNotificationsMore(false);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [loadingNotificationsMore]);\n\n  const onOpenNotificationBoard = useCallback(() => {\n    setOpenNotificationBoard(true);\n  }, []);\n\n  return (\n    <Wrapper>\n      <Notification ref={notificationRef}>\n        <FlashPopUpNotification onClick={onOpenNotificationBoard} />\n        <Button onClick={handleClickNotification}>\n          <IoMdNotifications />\n          {countNumberNotificationsUnseen ? (\n            <UnseenNotification>\n              {countNumberNotificationsUnseen}\n            </UnseenNotification>\n          ) : null}\n        </Button>\n        {user && (\n          <NotificationBoard open={openNotificationBoard}>\n            <Scrollbars\n              autoHide\n              autoHideTimeout={1000}\n              autoHideDuration={200}\n              autoHeightMin={0}\n              autoHeightMax={200}\n              onScroll={getMoreNotifications}\n            >\n              <NotificationsBoard notifications={notifications} />\n            </Scrollbars>\n          </NotificationBoard>\n        )}\n      </Notification>\n    </Wrapper>\n  );\n};\n\nexport default Control;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx",[],["1083","1084"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx",["1085","1086","1087","1088"],"import React, { useState, useEffect, createContext, useRef } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport { userVar } from \"../../apollo/cache\";\n\nimport { useReactiveVar } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport ListConversations from \"./ListConversations\";\nimport { useThemeUI } from \"theme-ui\";\nimport ChatBoard from \"./ChatBoard\";\nimport {setCurrentChat} from \"../../apollo/chat/chat.caches\"\nexport const MessagesContext = createContext({});\nconst Conversations = () => {\n  //query\n  const user = useReactiveVar(userVar)\n\n  //state\n  const [showPopup, setShowPopup] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [originalData, setOriginalData] = useState([]);  \n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const { colorMode } = useThemeUI();\n  const popupRef = useRef(null);\n\n  //empty current chat when change page\n  useEffect(()=>{\n    setCurrentChat(null);\n  },[])\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-messages-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n\n  if (!user) return null;\n  return (\n    <MessagesContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top}\n      >\n        <span>Pin this conversation</span>\n        <hr />\n        <span>Label</span>\n        <hr />\n        <span>Add to group</span>\n        <span>Turn notification off</span>\n        <hr />\n        <span>Delete conversation</span>\n        <hr />\n        <span>Report</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search />\n          <hr />\n          <ListConversations />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </MessagesContext.Provider>\n  );\n};\n\nexport default Conversations;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx",["1089"],"import React, { useState, useEffect } from \"react\";\nimport { Wrapper } from \"./styles/ListContacts.styles\";\nimport ContactItem from \"./ContactItem\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport { useQuery } from \"@apollo/client\";\nimport { FETCH_USER_FRIENDS_DATA } from \"../../apollo/user/user.types\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nconst ListContacts = ({ data }) => {\n  const { setShowPopup } = usePopupContactActions();\n  const [loadContactMore, setLoadContactMore] = useState(false);\n  const { refetch: fetchMoreContacts } = useQuery(FETCH_USER_FRIENDS_DATA, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const { setFriends } = cacheMutations;\n  const onScrollListContacts = (e) => {\n    e.preventDefault();\n    const { clientHeight, scrollHeight, scrollTop } = e.target;\n    if (clientHeight + scrollTop > scrollHeight * 0.75) {\n      setLoadContactMore(true);\n    }\n  };\n\n  useEffect(() => {\n    if (loadContactMore) {\n      const skip = data.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchMoreContacts({ skip, limit }).then(({ data: { fetchFriends } }) => {\n        setFriends([...data, ...fetchFriends]);\n        setLoadContactMore(false);\n      });\n    }\n  }, [loadContactMore]);\n  if (!data.length) return null;\n  return (\n    <Wrapper\n      onScroll={() => setShowPopup(false)}\n      onScrollCapture={onScrollListContacts}\n    >\n      {data.map((friend) => (\n        <ContactItem key={`contact-${friend._id}`} friend={friend} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(ListContacts);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx",["1090","1091"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx",["1092"],"import React, {useState} from 'react'\nimport FriendsList from \"./FriendsList\"\nimport ButtonToggleFriendsList from \"../Controls/ButtonToggleFriendsList\"\nimport {FriendsBoardWrapper} from \"./Sidebar.styles\"\nimport {useReactiveVar} from \"@apollo/client\"\nimport {toggleFriendsBoardVar} from \"../../apollo/cache\"\nconst FriendsBoard = () => {\n  const toggleFriendsBoard = useReactiveVar(toggleFriendsBoardVar);  \n  return (\n    <FriendsBoardWrapper show={toggleFriendsBoard}>      \n      <FriendsList show={toggleFriendsBoard} />\n      <ButtonToggleFriendsList />\n    </FriendsBoardWrapper>\n  )\n}\n\nexport default React.memo(FriendsBoard)\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySendersThatReceiverOnlineHasReceivedMessagesChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchSingleChatConversation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/clearMessageStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateHasSeenLatestMessage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageToReceivedWhenUserOnline.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageWhenReceiverSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/addNewConversationToMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setMoreFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setInitialMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMoreMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getNumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/messagesStorage/getMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/contact/getContact.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getHome.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditor.jsx",["1093"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport PostEditorHeader from \"./PostEditorHeader\";\nimport PostEditorBody from \"./PostEditorBody\";\nimport { EditorWrapper } from \"./styles/PostEditor.styles\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { useThemeUI } from \"theme-ui\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport useLanguage from \"../../Global/useLanguage\";\nimport _ from \"lodash\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { EDIT_POST, CREATE_POST } from \"../../../apollo/post/post.types\";\nimport { GET_PERSONAL_USER_CACHE_DATA } from \"../../../apollo/operations/queries/cache\";\nimport { Prompt } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {\n  pushNewPostToPostsList,\n  updatePost,\n} from \"../../../apollo/post/post.caches\";\nimport {\n  addPostItemToCurrentPersonalUser,\n  updatePostInCurrentPersonalUser,\n} from \"../../../apollo/user/currentPersonalUser.caches\";\nconst PostEditor = ({\n  editedEditorState,\n  isEdited,\n  postEdited,\n  openEdited,\n  setOpenEdited,\n}) => {\n  const {\n    data: { user, currentPersonalUser },\n  } = useQuery(GET_PERSONAL_USER_CACHE_DATA);\n  const [postStatus, setPostStatus] = useState(\"PUBLIC\");\n  const [editorState, setEditorState] = useState(() =>\n    editedEditorState ? editedEditorState : EditorState.createEmpty()\n  );\n  const [isBlocking, setIsBlocking] = useState(false);\n  const [images, setImages] = useState([]);\n  const [disabledSubmit, setDisabledSubmit] = useState(true);\n  const [openPostEditorDialog, setOpenPostEditorDialog] = useState(false);\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const { post } = i18n.store.data[lang].translation;\n  const [createPost, { loading: createPostLoading }] = useMutation(CREATE_POST);\n  const [editPost] = useMutation(EDIT_POST);\n  const handleSetPostStatus = useCallback((status) => {\n    setPostStatus(status);\n  }, []);\n\n  useEffect(() => {\n    if (editorState.getCurrentContent().hasText()) {\n      setIsBlocking(true);\n    } else {\n      setIsBlocking(false);\n    }\n  }, [editorState]);\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      if (images.length || editorState.getCurrentContent().hasText()) {\n        if (\n          postStatus === \"PUBLIC\" ||\n          postStatus === \"PRIVATE\" ||\n          postStatus === \"FRIENDS\"\n        ) {\n          setDisabledSubmit(false);\n        } else {\n          setDisabledSubmit(true);\n        }\n      } else {\n        setDisabledSubmit(true);\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [images, editorState, postStatus]);\n\n  const onOpenDialog = useCallback((e) => {\n    e.preventDefault();\n    setOpenPostEditorDialog(true);\n  }, []);\n\n  const onSubmitPostStatus = () => {\n    let elementId;\n    if (isEdited) {\n      elementId = `edited-post-body-${postEdited._id}`;\n    } else {\n      elementId = \"post-editor-body\";\n    }\n    const rawEditorState = convertToRaw(editorState.getCurrentContent());\n    const rawText = JSON.stringify(rawEditorState);\n    const shortenText = draftToHtml(rawEditorState)\n      .split(\"</p>\")[0]\n      .replace(/<p>|&nbsp;/g, \"\");\n    document\n      .getElementById(elementId)\n      ?.querySelector(\"[contenteditable=true]\")\n      ?.setAttribute(\"contenteditable\", false);\n    const text = document.getElementById(elementId).innerHTML;\n    let mentions = [];\n    let fileNames = [];\n    let fileMimetype = [];\n    let fileEncodings = [];\n\n    if (rawEditorState.entityMap) {\n      Object.values(rawEditorState.entityMap).map(({ data }) => {\n        if (data.mention) {\n          mentions.push({ ...data.mention });\n        }\n      });\n    }\n    mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n      mention._id.toString()\n    );\n\n    if (images.length) {\n      fileNames = images.map((image) => image.name);\n      fileMimetype = images.map((image) => image.mimetype);\n      fileEncodings = images.map((image) => image.src);\n    }\n    const postData = {\n      text,\n      shortenText,\n      rawText,\n      mentions,\n      fileNames,\n      fileMimetype,\n      fileEncodings,\n      status: postStatus,\n    };\n    if (isEdited && postEdited) {\n      console.log(\"edited Post\");\n      editPost({ variables: { postId: postEdited._id, ...postData } })\n        .then(({ data }) => {\n          if (openEdited) {\n            setOpenEdited(false);\n            setEditorState(EditorState.createEmpty());\n          }\n\n          const { editPost } = data;\n          updatePost(editPost);\n          if (user._id === currentPersonalUser._id) {\n            updatePostInCurrentPersonalUser(editPost);\n          }\n          document\n            .getElementById(elementId)\n            ?.querySelector(\"[contenteditable=true]\")\n            ?.setAttribute(\"contenteditable\", true);\n          setEditorState(EditorState.createEmpty());\n          setImages([]);\n        })\n        .catch((err) => {\n          console.log(err.message);\n          document\n            .getElementById(elementId)\n            ?.querySelector(\"[contenteditable=true]\")\n            ?.setAttribute(\"contenteditable\", true);\n        });\n    } else {\n      console.log(\"create new post\");\n      createPost({\n        variables: {\n          text,\n          shortenText,\n          rawText,\n          mentions,\n          fileNames,\n          fileMimetype,\n          fileEncodings,\n          status: postStatus,\n        },\n      })\n        .then(({ data }) => {\n          if (onOpenDialog) {\n            handleCloseDialog();\n            setEditorState(EditorState.createEmpty());\n          }\n          const { createPost } = data;\n          pushNewPostToPostsList(createPost);\n          if (user?._id === currentPersonalUser?._id) {\n            addPostItemToCurrentPersonalUser(createPost);\n          }\n          document\n            .getElementById(elementId)\n            ?.querySelector(\"[contenteditable=true]\")\n            ?.setAttribute(\"contenteditable\", true);\n          setEditorState(EditorState.createEmpty());\n          setImages([]);\n        })\n        .catch((err) => {\n          console.log(err);\n          document\n            .getElementById(elementId)\n            ?.querySelector(\"[contenteditable=true]\")\n            ?.setAttribute(\"contenteditable\", true);\n        });\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenPostEditorDialog(false);\n  };\n\n  const PostEditorRoot = (\n    <EditorWrapper\n      isEdited={isEdited}\n      theme={colorMode}\n      fullWidth={openPostEditorDialog}\n    >\n      <Prompt\n        when={isBlocking}\n        message={(location) =>\n          `Are you sure you want to go to ${location.pathname}`\n        }\n      />\n      <PostEditorHeader\n        user={user}\n        postStatus={postStatus}\n        setPostStatus={handleSetPostStatus}\n        setOpenDialog={onOpenDialog}\n        openDialog={openPostEditorDialog}\n        isEdited={isEdited}\n      />\n\n      <PostEditorBody\n        editorState={editorState}\n        setEditorState={setEditorState}\n        images={images}\n        setImages={setImages}\n        isEdited={isEdited}\n        postEdited={postEdited}\n        id={\n          postEdited ? `edited-post-body-${postEdited._id}` : \"post-editor-body\"\n        }\n      />\n\n      {!disabledSubmit && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={disabledSubmit}\n          onClick={onSubmitPostStatus}\n          style={{ display: \"block\", width: \"95%\", margin: \"0.5rem auto\" }}\n        >\n          {post.post}\n        </Button>\n      )}\n    </EditorWrapper>\n  );\n\n  const PostEditorOnOpenDialog = (\n    <Dialog\n      fullWidth={true}\n      maxWidth=\"md\"\n      open={openPostEditorDialog}\n      onClose={handleCloseDialog}\n      aria-labelledby=\"max-width-dialog-title\"\n      style={{ maxWidth: \"800px\", margin: \"auto\" }}\n    >\n      {PostEditorRoot}\n    </Dialog>\n  );\n  if (createPostLoading) return <div>Loading...</div>;\n  return <>{openPostEditorDialog ? PostEditorOnOpenDialog : PostEditorRoot}</>;\n};\n\nexport default React.memo(PostEditor);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorHeader.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditor.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorHeader.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorBody.jsx",["1094","1095","1096","1097","1098"],"import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport {\n  Wrapper,\n  DraftEditor,\n  Toolbar,\n  Label,\n  CardPreview,\n} from \"./styles/PostEditorBody.styles\";\nimport { ReactTinyLink } from \"react-tiny-link\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport useDraftEditorPlugin from \"../useDraftEditorPlugin\";\nimport { IoIosImage } from \"react-icons/io\";\nimport generateBase64Image from \"../../../utils/generateBase64Image\";\nimport ImagesCarousel from \"../../UI/ImagesCarousel\";\nimport { useQuery } from \"@apollo/client\";\nimport { SEARCH_FRIENDS } from \"../../../apollo/user/user.types\";\nimport useLanguage from \"../../Global/useLanguage\";\nconst PostEditorBody = ({\n  editorState,\n  setEditorState,\n  images,\n  setImages,\n  isEdited,\n  postEdited,  \n}) => {\n  const [urlPreview, setUrlPreview] = useState(null);\n  const editorRef = useRef(null);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openMention, setOpenMention] = useState(true);\n  const {\n    refetch: searchFriends,\n    loading: searchFriendsLoading,\n  } = useQuery(SEARCH_FRIENDS, { fetchPolicy: \"network-only\", skip: true });\n  const { i18n, lang } = useLanguage();\n  const { postPlaceholder } = i18n.store.data[lang].translation.post;\n\n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,\n  } = useDraftEditorPlugin();\n\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n\n  useEffect(() => {\n    let elementId;\n    if (isEdited && postEdited) {\n      elementId = `edited-post-body-${postEdited._id}`;\n    } else {\n      elementId = \"post-editor-body\";\n    }\n    let urlLength;\n\n    urlLength = document\n      .getElementById(elementId)\n      .querySelectorAll(\"[aria-label=link]\").length;\n\n    if (urlLength) {\n      const url = document\n        .getElementById(elementId)\n        .querySelectorAll(\"[aria-label=link]\")\n        [urlLength - 1].getAttribute(\"href\");\n      setUrlPreview(url);\n    } else {\n      setUrlPreview(null);\n    }\n  }, [editorState]);\n\n  const onChangeImages = async (e) => {\n    const length = e.target.files.length;\n    const fileData = e.target.files;\n    const matches = [\"image/png\", \"image/gif\", \"image/jpg\", \"image/jpeg\"];\n    let listImages = [];\n    for (let i = 0; i < length; i++) {\n      if (!matches.includes(fileData[i].type)) {\n        alert(\"invalid image\");\n        return;\n      }\n      listImages.push(fileData[i]);\n    }\n\n    let base64Images = [];\n    for (let image of listImages) {\n      const base64ImageItem = await generateBase64Image(image);\n      base64Images = [...base64Images, { ...base64ImageItem }];\n    }\n    if (base64Images.length) {\n      setImages([...base64Images]);\n    }\n  };\n\n  return (\n    <>\n      <DraftEditor\n        onClick={() => editorRef.current?.focus()}\n        id={isEdited ? `edited-post-body-${postEdited._id}` : \"post-editor-body\"}\n        style={{ alignItems: \"flex-start\" }}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          ref={editorRef}\n          tabIndex={0}\n          placeholder={postPlaceholder}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </DraftEditor>\n      {urlPreview && (\n        <CardPreview>\n          <ReactTinyLink\n            cardSize=\"large\"\n            showGraphic={true}\n            maxLine={3}\n            minLine={1}\n            url={urlPreview}\n            proxyUrl=\"https://cors-anywhere.herokuapp.com\"\n          />\n        </CardPreview>\n      )}\n      {images.length ? <ImagesCarousel images={images} /> : null}\n      <Toolbar>\n        <EmojiSelect />\n        <Label htmlFor=\"post-images\" name=\"post-images\">\n          <IoIosImage />\n          <input\n            type=\"file\"\n            multiple={true}\n            name=\"post-images\"\n            id=\"post-images\"\n            onChange={onChangeImages}\n          />\n        </Label>\n      </Toolbar>\n    </>\n  );\n};\n\nexport default React.memo(PostEditorBody);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorBody.styles.jsx",["1099"],"import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nexport const Wrapper = styled.div`\n\n`;\n\nexport const DraftEditor = styled.div`\n  flex:  1; \n  cursor: text !important;\n  .DraftEditor-root {\n    width: 100% !important;\n    max-height: 8rem;\n    min-height: 4rem;\n    padding: 0.5rem 1rem;\n    overflow : auto;\n    -ms-overflow-style: none;  /* IE and Edge */\n    scrollbar-width: none;\n    &::-webkit-scrollbar{\n      display : none;\n    }\n  }\n`;\n\nexport const Toolbar = styled.div`\n  display: flex;\n  padding: 0.5rem 0.75rem;\n`;\n\nexport const Label = styled.label`\n  font-size: 1.4rem;\n  display: flex;\n  align-items: center;\n  color: ${({ name }) => (name === \"post-images\" ? \"var(--cyan-1)\" : \"orange\")};\n  &:hover {\n    color: ${({ name }) =>\n      name === \"post-images\" ? \"var(--cyan-2)\" : \"orange\"};\n  }\n  input {\n    display: none;\n  }\n  margin: 0 0.5rem;\n  cursor: pointer;\n`;\n\nexport const CardPreview = styled.div`\n  margin: 1rem auto;\n  width : 100%;\n  & *{\n    width : 100%;\n    max-width: unset;  \n  }\n`;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ImagesCarousel.jsx",["1100"],"import React, {useState} from \"react\";\nimport Slider from \"react-slick\";\nimport LightBox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport {ImageContainer, NextArrow, PrevArrow} from \"./styles/ImagesCarousel.styles\"\n\nfunction CustomNextArrow(props) {  \n  return (\n    <NextArrow {...props}/>\n  );\n}\n\nfunction CustomPrevArrow(props) {\n  \n  return (\n    <PrevArrow {...props}/>  \n  );\n}\n\nconst ImagesCarousel = ({ images }) => {\n  const [openLightBox, setOpenLightBox] = useState(-1);\n  let dragging = false;\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: images.length > 2 ? 2 : images.length,\n    slidesToScroll: images.length > 2 ? 2 : images.length,\n    swipeToSlide: true,\n    lazyLoad: true,\n    beforeChange: () => (dragging = true),\n    afterChange: () => (dragging = false),\n    nextArrow : <CustomNextArrow/>,\n    prevArrow : <CustomPrevArrow/>\n  };\n  if(!images.length) return null\n  return (\n    <>\n      {openLightBox !== -1 && (\n        <LightBox\n          mainSrc={images[openLightBox].src}\n          onCloseRequest={() => setOpenLightBox(-1)}\n        />\n      )}\n      <Slider {...settings}>\n        {images.map((image, idx) => (\n          <ImageContainer key={image.name}>\n            <img\n              src={image.src}\n              alt={image.src}\n              onClick={() => setOpenLightBox(idx)}\n            />\n          </ImageContainer>\n        ))}\n      </Slider>\n    </>\n  );\n};\n\nexport default ImagesCarousel;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ImagesCarousel.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardHeader.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardHeader.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardBody.jsx",["1101","1102","1103","1104"],"import React, { useState, useMemo, useEffect } from \"react\";\nimport { ReactTinyLink } from \"react-tiny-link\";\nimport ImagesCarousel from \"../UI/ImagesCarousel\";\nimport LazyLoad from \"react-lazyload\";\nimport {\n  Wrapper,\n  DraftEditor,\n  HashtagLink,\n  CardPreview,\n} from \"./styles/PostCardBody.styles\";\nconst PostCardBody = ({ post }) => {  \n  const [urlPreview, setUrlPreview] = useState(null);\n  const images = post.files.length\n    ? post.files.map((file) => ({\n        src: file.data,\n        name: file.filename,\n      }))\n    : [];\n  useEffect(() => {\n    const DOMTarget = document.querySelector(`[data-target=post-${post._id}]`);   \n    //find Preview URL\n    const urlLength = DOMTarget.querySelectorAll(\"[aria-label=link]\").length;    \n    if (urlLength) {\n      const url = DOMTarget.querySelectorAll(\"[aria-label=link]\")[urlLength - 1].getAttribute(\"href\");\n      setUrlPreview(url);\n    } else {\n      setUrlPreview(null);\n    }\n  }, [])\n  \n  return (\n    <>\n      <DraftEditor data-target={`post-${post._id}`} dangerouslySetInnerHTML={{__html : post.text}}>\n        \n      </DraftEditor>\n      {urlPreview && (\n        <CardPreview>\n          <ReactTinyLink\n            cardSize=\"large\"\n            showGraphic={true}\n            maxLine={3}\n            minLine={1}\n            url={urlPreview}\n            proxyUrl=\"https://cors-anywhere.herokuapp.com\"\n          />\n        </CardPreview>\n      )}\n      {images.length ? (\n        <LazyLoad>\n          <ImagesCarousel images={images} />\n        </LazyLoad>\n      ) : null}\n    </>\n  );\n};\n\nexport default PostCardBody;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardBody.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardFooter.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardFooter.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getHeader.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/styles/Header.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/FlashPopUpNotification.jsx",["1105","1106"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Wrapper,\n  SenderAvatar,\n  NotificationContent,\n} from \"./styles/FlashPopUpNotification.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport {latestNotificationVar} from \"../../apollo/cache\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n\nimport { notificationContent } from \"../../utils/notificationContent\";\nimport { setLatestNotification } from \"../../apollo/notification/notification.caches\";\nconst FlashPopUpNotification = ({ onClick }) => {\n  const latestNotification = useReactiveVar(latestNotificationVar)\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  console.log(latestNotification)\n  const { message } = i18n.store.data[lang].translation.notifications;\n  useEffect(() => {\n    let timer;\n    if (latestNotification) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        setLatestNotification(null);\n      }, 6000);\n    }\n    return () => clearTimeout(timer);\n  }, [latestNotification]);\n\n  const onClickPopup = () => {\n    onClick();\n    setLatestNotification(null);\n  };\n\n  return (\n    <Wrapper show={latestNotification} theme={colorMode} onClick={onClickPopup}>\n      {latestNotification ? (\n        <>\n          <SenderAvatar>\n            <LazyLoadImage\n              src={latestNotification.creator.avatar}\n              effect=\"blur\"\n            ></LazyLoadImage>\n          </SenderAvatar>\n          <NotificationContent>\n            <span\n              dangerouslySetInnerHTML={{\n                __html: notificationContent(latestNotification, lang),\n              }}\n            ></span>\n          </NotificationContent>\n        </>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(FlashPopUpNotification);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/FlashPopUpNotification.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LatestNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentEditor.jsx",["1107","1108","1109","1110","1111"],"import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport draftToHtml from \"draftjs-to-html\";\nimport _ from \"lodash\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { SEARCH_FRIENDS } from \"../../apollo/user/user.types\";\nimport {\n  Wrapper,\n} from \"./PostEditor/styles/PostEditorBody.styles\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  CommentInput,\n  CommentControls,\n} from \"./styles/CommentEditor.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { CREATE_COMMENT } from \"../../apollo/post/post.mutations\";\nimport {addCommentToPost} from \"../../apollo/post/post.caches\"\nimport useDraftEditorPlugin from \"./useDraftEditorPlugin\"\nconst CommentEditor = ({ post }) => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [openMention, setOpenMention] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const {\n    refetch: searchFriends,\n    loading: searchFriendsLoading,\n  } = useQuery(SEARCH_FRIENDS, { fetchPolicy: \"network-only\", skip: true });\n  const [createComment] = useMutation(CREATE_COMMENT);\n  const { colorMode } = useThemeUI();\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const [showControls, setShowControls] = useState(false);\n  const controlsRef = useRef(null);\n  const commentRef = useRef(null);\n  const editorRef = useRef(null);\n  const { i18n, lang } = useLanguage();\n  const { commentInputPlaceholder } = i18n.store.data[lang].translation.comment;\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n  \n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,} = useDraftEditorPlugin();\n\n  useEffect(() => {\n    function trackUserClickCommentControls(e) {\n      if (\n        commentRef.current &&\n        !commentRef.current.contains(e.target) &&\n        showControls\n      ) {\n        setShowControls(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickCommentControls);\n\n    return () =>\n      window.removeEventListener(\"click\", trackUserClickCommentControls);\n  }, [commentRef, showControls]);\n\n  const onSubmitComment = (e) => {\n    if (\n      e.which === 13 &&\n      editorState.getCurrentContent().hasText() &&\n      !openMention && \n      !document.querySelector(`[data-target=comment-input-${post._id}]`).querySelector(\"[role=listbox]\")\n      \n    ) {\n      const rawEditorState = convertToRaw(editorState.getCurrentContent());\n      const rawText = JSON.stringify(rawEditorState);\n      const shortenText = draftToHtml(rawEditorState)\n        .split(\"</p>\")[0]\n        .replace(/<p>|&nbsp;/g, \"\");\n      document\n        .querySelector(`[data-target=comment-input-${post._id}]`)\n        .querySelector(\"[contenteditable=true]\")\n        ?.setAttribute(\"contenteditable\", false);\n      const textData = document.querySelector(\n        `[data-target=comment-input-${post._id}]`\n      ).innerHTML;\n      let mentions = [];\n      if (rawEditorState.entityMap) {\n        Object.values(rawEditorState.entityMap).map(({ data }) => {\n          if (data.mention) {\n            mentions.push({ ...data.mention });\n          }\n        });\n      }\n      mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n        mention._id.toString()\n      );\n      if (textData) {\n        setEditorState(EditorState.createEmpty());\n        createComment({\n          variables: {\n            postId: post._id,\n            text: textData,\n            shortenText,\n            rawText,\n            mentions: mentions,\n          },\n        })\n          .then(({ data }) => {\n            document\n              .querySelector(`[data-target=comment-input-${post._id}]`)\n              .querySelector(\"[contenteditable=false]\")\n              ?.setAttribute(\"contenteditable\", true);\n\n            const { createComment } = data;\n            addCommentToPost(post._id, createComment);\n          })\n          .catch((err) => {\n            document\n              .querySelector(`[data-target=comment-input-${post._id}]`)\n              .querySelector(\"[contenteditable=true]\")\n              ?.setAttribute(\"contenteditable\", true);\n          });\n      }\n    }\n  };\n\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      editorRef.current?.focus();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n  return (\n    <Wrapper ref={commentRef}>\n      <CommentInput\n        theme={colorMode}\n        onClick={() => {\n          editorRef.current?.focus();\n          setShowControls(true);\n        }}\n        onKeyDown={onSubmitComment}\n        data-target={`comment-input-${post._id}`}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          placeholder={commentInputPlaceholder}\n          ref={editorRef}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </CommentInput>\n      <CommentControls\n        ref={controlsRef}\n        theme={colorMode}\n        show={showControls}\n        onClick={() => setShowControls(true)}\n      >\n        <EmojiSelect />\n        {/* <InputImage htmlFor={`comment-image-${post._id}`}>\n          <input type=\"file\" name=\"comment-image\" id={`comment-image-${post._id}`}/>  \n          <BiImageAlt/>\n        </InputImage>         */}\n      </CommentControls>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(CommentEditor);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentEditor.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getUsePostsSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Comments.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/Comments.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentItem.jsx",["1112","1113","1114"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { Wrapper } from \"./PostEditor/styles/PostEditorBody.styles\";\nimport {\n  UserAvatar,\n  ResponseInput,\n  ResponsesComponent,\n  LoadMoreResponse,\n  CommentResponse,\n} from \"./styles/CommentItem.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BsArrowReturnRight } from \"react-icons/bs\";\nimport { Response } from \"./styles/CommentItem.styles\";\nimport ResponseEditor from \"./ResponseEditor\";\nimport { useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { dialogVar } from \"../../apollo/cache\";\nimport {\n  REMOVE_COMMENT,\n  LIKE_COMMENT,\n  REMOVE_LIKE_COMMENT,\n  REMOVE_RESPONSE,\n} from \"../../apollo/post/post.types\";\nimport { FETCH_RESPONSES } from \"../../apollo/post/post.queries\";\nimport Responses from \"./Responses\";\nimport shortid from \"shortid\";\nimport CommentCard from \"./CommentCard\";\nimport {\n  addLikeComment,\n  addResponsesToComment,\n  removeComment as removeCommentFromPostCache,\n  removeLikeComment,\n  removeResponse as removeResponseInCache,\n} from \"../../apollo/post/post.caches\";\n\nconst CommentItem = ({ comment, user }) => {\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const [showResponse, setShowResponse] = useState(false);\n  const [dataResponse, setDataResponse] = useState(\"\");\n  const { controls } = i18n.store.data[lang].translation.comment;\n  const { dialog: dialogAlert } = i18n.store.data[lang].translation;\n  const [focusResponseEditor, setFocusResponseEditor] = useState(false);\n  const { setDialog } = cacheMutations;\n  const dialog = useReactiveVar(dialogVar);\n  const [likeComment] = useMutation(LIKE_COMMENT);\n  const [RemoveLikeComment] = useMutation(REMOVE_LIKE_COMMENT);\n  const [removeResponse] = useMutation(REMOVE_RESPONSE);\n  const { refetch: fetchResponses } = useQuery(FETCH_RESPONSES, { skip: true });\n  const [response, setResponse] = useState(comment);\n  const onClickRemoveComment = () => {\n    setDialog({\n      agree: false,\n      title: dialogAlert.removeComment.title,\n      content: dialogAlert.removeComment.content,\n      data: { commentId: comment._id, role: \"comment\" },\n    });\n  };\n  const [removeComment] = useMutation(REMOVE_COMMENT);\n\n  useEffect(() => {\n    if (\n      dialog.data?.commentId === comment._id &&\n      dialog.agree &&\n      dialog.data?.role === \"comment\"\n    ) {\n      removeComment({ variables: { commentId: comment._id } }).then(\n        ({ data }) => {\n          removeCommentFromPostCache(comment.post, comment._id);\n        }\n      );\n    } else if (\n      dialog.data?.role === \"response\" &&\n      dialog.data?.response &&\n      dialog.agree\n    ) {\n      removeResponse({\n        variables: { responseId: dialog.data.response._id },\n      }).then(({ data }) => {\n        if (data.removeResponse) {\n          const { post, comment, _id } = dialog.data.response;\n          removeResponseInCache(post, comment, _id);\n        }\n      });\n    }\n  }, [dialog]);\n  const onLikeComent = () => {\n    likeComment({ variables: { commentId: comment._id } })\n      .then(({ data }) => {\n        if (data.likeComment) {\n          addLikeComment(comment.post, comment._id, user._id);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  const onRemoveLikeComment = () => {\n    RemoveLikeComment({ variables: { commentId: comment._id } })\n      .then(({ data }) => {\n        if (data.removeLikeComment) {\n          removeLikeComment(comment.post, comment._id, user._id);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  const onClickResponseComment = useCallback(\n    async (data) => {\n      if (data) {\n        setDataResponse(\n          `{\"blocks\":[{\"key\":\"${shortid.generate()}\",\"text\":\"${\n            data.author.name\n          } \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":${\n            data.author.name.length\n          },\"key\":0}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"mention\",\"mutability\":\"SEGMENTED\",\"data\":{\"mention\":{\"__typename\":\"User\",\"_id\":\"${\n            data.author._id\n          }\",\"name\":\"${data.author.name}\",\"avatar\":\"${\n            data.author.avatar\n          }\",\"slug\":\"${data.author.slug}\"}}}}}`\n        );\n        setResponse(data);\n      }\n\n      if (comment.responses.length && !comment.responsesData?.length) {\n        await onLoadResponses();\n      } else {\n        setShowResponse(true);\n        setFocusResponseEditor(true);\n      }\n    },\n    [comment.responsesData]\n  );\n\n  const onLoadResponses = () => {\n    fetchResponses({ commentId: comment._id, skip: 0, limit: 3 }).then(\n      ({ data }) => {\n        if (data.fetchResponses) {\n          addResponsesToComment(comment.post, comment._id, data.fetchResponses);\n          if (!showResponse) {\n            setShowResponse(true);\n            setFocusResponseEditor(true);\n          }\n        }\n      }\n    );\n  };\n\n  const onLoadMoreResponses = () => {\n    const skip = comment.responsesData?.length || 0;\n    fetchResponses({ commentId: comment._id, skip }).then(({ data }) => {\n      if (data.fetchResponses) {\n        addResponsesToComment(comment.post, comment._id, data.fetchResponses);\n        if (!showResponse) {\n          setShowResponse(true);\n          setFocusResponseEditor(true);\n        }\n      }\n    });\n  };\n  return (\n    <Wrapper>\n      <CommentCard\n        comment={comment}\n        user={user}\n        onLike={onLikeComent}\n        onRemoveLike={onRemoveLikeComment}\n        onClickRemoveComment={onClickRemoveComment}\n        onClickResponse={onClickResponseComment}\n      />\n      <CommentResponse>\n        {comment.responsesData && (\n          <ResponsesComponent>\n            <Responses\n              responses={comment.responsesData}\n              user={user}\n              onClickResponse={onClickResponseComment}\n            />\n          </ResponsesComponent>\n        )}\n\n        {showResponse && (\n          <ResponseInput>\n            <UserAvatar>\n              <LazyLoadImage\n                effect=\"blur\"\n                src={comment.author.avatar}\n                alt={comment.author.avatar}\n              />\n            </UserAvatar>\n            <Response>\n              <ResponseEditor\n                comment={comment}\n                response={response}\n                user={user}\n                dataResponse={dataResponse}\n                focus={focusResponseEditor}\n                removeFocus={() => setFocusResponseEditor(false)}\n              />\n            </Response>\n          </ResponseInput>\n        )}\n        {comment.responsesData &&\n        comment.responsesData.length < comment.responses.length ? (\n          <LoadMoreResponse onClick={onLoadMoreResponses}>\n            {\" \"}\n            <BsArrowReturnRight /> <span>{controls.loadMoreResponses}</span>\n          </LoadMoreResponse>\n        ) : !comment.responsesData && comment.responses.length ? (\n          <LoadMoreResponse onClick={onLoadResponses}>\n            {\" \"}\n            <BsArrowReturnRight /> <span>{controls.loadMoreResponses}</span>\n          </LoadMoreResponse>\n        ) : null}\n      </CommentResponse>\n    </Wrapper>\n  );\n};\n\nexport default CommentItem;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentItem.styles.jsx",["1115"],"import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\nexport const ResponseInput = styled.div`\n  width : 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display :flex;\n`\nexport const ResponsesComponent= styled.div`\n  width : 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display :block;\n`\n\nexport const Response = styled.div`\n  flex : 1 ;\n  margin-left : 0.5rem;\n`\n\nexport const LoadMoreResponse = styled.span`\n  color : inherit; \n  font-size : 0.88rem;\n  padding: 0.5rem 0.4rem;  \n  cursor : pointer;\n  &:hover{\n    text-decoration : underline; \n  }\n  display : flex;\n  align-items : center;\n  & span{\n    margin-left : 0.1rem;\n  }\n`\nexport const UserAvatar = styled.div`\n  width : 2rem;\n  height : 2rem;\n  img {\n    width : 100%; \n    border-radius : 50%;\n  }\n`\n\nexport const CommentResponse = styled.div`\n  width: 90% ; \n  margin-left:auto;\n  margin-right: 1rem;\n  padding : 0 1rem;\n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/ResponseEditor.jsx",["1116","1117","1118","1119","1120"],"import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport draftToHtml from \"draftjs-to-html\";\nimport _ from \"lodash\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport useDraftEditorPlugin from \"./useDraftEditorPlugin\";\nimport { SEARCH_FRIENDS } from \"../../apollo/user/user.types\";\nimport { Wrapper } from \"./PostEditor/styles/PostEditorBody.styles\";\nimport { CommentInput, CommentControls } from \"./styles/CommentEditor.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport {CREATE_RESPONSE} from \"../../apollo/post/post.types\";\nimport {addNewResponseToComment} from \"../../apollo/post/post.caches\"\nconst CommentEditor = ({\n  comment,\n  response,\n  user,\n  dataResponse,\n  focus,\n  removeFocus,\n}) => {\n  const [editorState, setEditorState] = useState(() =>\n    comment.author._id === user._id || !dataResponse\n      ? EditorState.createEmpty()\n      : EditorState.createWithContent(convertFromRaw(JSON.parse(dataResponse)))\n  );  \n\n  useEffect(() => {\n    let timer;\n    if (focus) {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        const rawData = convertToRaw(editorState.getCurrentContent());\n        if (!dataResponse) return;\n        const parseDataResponse = JSON.parse(dataResponse);\n        if (\n          rawData.blocks[0].text.indexOf(parseDataResponse.blocks[0].text) ===\n            -1 &&\n          rawData.blocks[0].text\n            .toLowerCase()\n            .indexOf(user.name.toLowerCase()) === -1 &&\n          response.author._id !== user._id\n        ) {\n          parseDataResponse.blocks[0] = {\n            ...parseDataResponse.blocks[0],\n            text: `${parseDataResponse.blocks[0].text} ${rawData.blocks[0].text}`,\n          };\n          rawData.blocks = [\n            { ...parseDataResponse.blocks[0] },\n            ...rawData.blocks.filter((_, idx) => idx !== 0),\n          ];\n          let entityIndex = Object.keys(rawData.entityMap).length;\n          rawData.entityMap[entityIndex] = {\n            ...parseDataResponse.entityMap[0],\n          };\n          setEditorState(\n            EditorState.createWithContent(convertFromRaw(rawData))\n          );\n        }\n      }, 66);\n    }\n  }, [focus, editorState, response, dataResponse]);\n\n  const [openMention, setOpenMention] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const { refetch: searchFriends } = useQuery(SEARCH_FRIENDS, {\n    fetchPolicy: \"network-only\",\n    skip: true,\n  });\n  const [createResponse] = useMutation(CREATE_RESPONSE);  \n  const { colorMode } = useThemeUI();\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const [showControls, setShowControls] = useState(false);\n  const controlsRef = useRef(null);\n  const responseRef = useRef(null);\n  const editorRef = useRef(null);\n  const { i18n, lang } = useLanguage();\n  const { commentInputPlaceholder } = i18n.store.data[lang].translation.comment;\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,\n  } = useDraftEditorPlugin();\n\n  useEffect(() => {\n    let timer;\n    if (focus) {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        editorRef.current.focus();\n        removeFocus();\n      }, 66);\n    }\n    return () => clearTimeout(timer);\n  }, [focus]);\n\n  useEffect(() => {\n    function trackUserClickCommentControls(e) {\n      if (\n        responseRef.current &&\n        !responseRef.current.contains(e.target) &&\n        showControls\n      ) {\n        setShowControls(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickCommentControls);\n\n    return () =>\n      window.removeEventListener(\"click\", trackUserClickCommentControls);\n  }, [responseRef, showControls]);\n\n  const onSubmitComment = (e) => {\n    if (\n      e.which === 13 &&\n      !openMention &&\n      !document\n        .querySelector(`[data-target=response-input-${comment._id}]`)\n        ?.getElementsByClassName(`esyutjr`)?.length\n    ) {\n      if (e.shiftKey) {\n        return;\n      }\n      let rawEditorState = convertToRaw(editorState.getCurrentContent());\n      const filterBlockEmpty = rawEditorState.blocks.filter(\n        (block) => block.text\n      );\n      rawEditorState = { ...rawEditorState, blocks: [...filterBlockEmpty] };\n\n      const rawText = JSON.stringify(rawEditorState);\n      const shortenText = draftToHtml(rawEditorState)\n        .split(\"</p>\")[0]\n        .replace(/<p>|&nbsp;/g, \"\");\n      document\n        .querySelector(`[data-target=response-input-${comment._id}]`)\n        .querySelector(\"[contenteditable=true]\")\n        ?.setAttribute(\"contenteditable\", false);\n      const textData = document.querySelector(\n        `[data-target=response-input-${comment._id}]`\n      ).innerHTML;\n\n      let mentions = [];\n      if (rawEditorState.entityMap) {\n        Object.values(rawEditorState.entityMap).map(({ data }) => {\n          if (data.mention) {\n            mentions.push({ ...data.mention });\n          }\n        });\n      }\n      mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n        mention._id.toString()\n      );\n\n      if (rawEditorState.blocks?.length) {\n        setEditorState(EditorState.createEmpty());\n        createResponse({\n          variables: {\n            commentId: comment._id,\n            text: textData,\n            shortenText,\n            rawText,\n            mentions,\n          },\n        })\n          .then(({ data }) => {\n            document\n              .querySelector(`[data-target=response-input-${comment._id}]`)\n              .querySelector(\"[contenteditable=false]\")\n              ?.setAttribute(\"contenteditable\", true);\n\n            const { createResponse } = data;\n            addNewResponseToComment(comment.post, comment._id, createResponse);\n          })\n          .catch((err) => {\n            document\n              .querySelector(`[data-target=response-input-${comment._id}]`)\n              .querySelector(\"[contenteditable=true]\")\n              ?.setAttribute(\"contenteditable\", true);\n          });\n      }\n    }\n  };\n\n  return (\n    <Wrapper ref={responseRef}>\n      <CommentInput\n        theme={colorMode}\n        onClick={() => {\n          editorRef.current?.focus();\n          setShowControls(true);\n        }}\n        onKeyDown={onSubmitComment}\n        data-target={`response-input-${comment._id}`}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          placeholder={commentInputPlaceholder}\n          ref={editorRef}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </CommentInput>\n      <CommentControls\n        ref={controlsRef}\n        theme={colorMode}\n        show={showControls}\n        onClick={() => setShowControls(true)}\n      >\n        <EmojiSelect />\n      </CommentControls>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(CommentEditor);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/AlertDialogSlide.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/Dialog.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Responses.jsx",["1121","1122","1123","1124","1125"],"import React, { useCallback, useEffect } from \"react\";\nimport CommentCard from \"./CommentCard\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  LIKE_RESPONSE,\n  REMOVE_LIKE_RESPONSE,\n} from \"../../apollo/post/post.types\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport {\n  addLikeResponse,\n  removeLikeResponse as removeLikeResponseInCache,\n} from \"../../apollo/post/post.caches\";\nimport useLanguage from \"../Global/useLanguage\";\nconst Responses = ({ responses, user, onClickResponse }) => {\n  const [likeResponse] = useMutation(LIKE_RESPONSE);\n  const [removeLikeResponse] = useMutation(REMOVE_LIKE_RESPONSE);\n  const { i18n, lang } = useLanguage();\n  const { dialog: dialogAlert } = i18n.store.data[lang].translation;\n  const { setDialog } = cacheMutations;\n\n  const onLikeResponse = useCallback((response) => {\n    likeResponse({ variables: { responseId: response._id } }).then(\n      ({ data }) => {\n        if (data.likeResponse) {\n          addLikeResponse(\n            response.post,\n            response.comment,\n            response._id,\n            user._id\n          );\n        }\n      }\n    );\n  }, []);\n  const onRemoveLikeResponse = useCallback((response) => {\n    removeLikeResponse({ variables: { responseId: response._id } }).then(\n      ({ data }) => {\n        console.log(data);\n        if (data.removeLikeResponse) {\n          removeLikeResponseInCache(\n            response.post,\n            response.comment,\n            response._id,\n            user._id\n          );\n        }\n      }\n    );\n  }, []);\n\n  const onClickRemoveResponse = useCallback((response) => {\n    setDialog({\n      agree: false,\n      title: dialogAlert.removeComment.title,\n      content: dialogAlert.removeComment.content,\n      data: { response, role: \"response\" },\n    });\n  });\n  return responses.map((response) => (\n    <CommentCard\n      key={`response-${response._id}`}\n      comment={response}\n      user={user}\n      onLike={onLikeResponse}\n      onRemoveLike={onRemoveLikeResponse}\n      onClickResponse={onClickResponse}\n      onClickRemoveComment={onClickRemoveResponse}\n    />\n  ));\n};\n\nexport default Responses;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentCard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentCard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useChatSubscriptions.jsx",["1126","1127"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useUserStatusSubscriptions.jsx",["1128"],"import { useEffect } from \"react\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { userVar } from \"../apollo/cache\";\n\nimport io from \"socket.io-client\";\nimport _ from \"lodash\";\nimport {updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage} from \"../apollo/chat/chat.caches\"\nconst useUserStatusSubscriptions = () => {\n  const user = useReactiveVar(userVar); \n \n  useEffect(() => {\n    const socket = io(\"http://localhost:5000\");\n\n    if (user) {\n      console.log(\"render\");\n      //pass socket to backend to update status online\n      socket.open();\n      const { _id, name, slug, avatar } = user;\n      socket.emit(\"client-send-user-info\", {\n        _id,\n        name,\n        slug,\n        avatar,\n        isOnline: true,\n      });\n      socket.on(\"server-send-user-online\", (data) => {\n        updateUserOnlineOffline(data);\n        updateUserOnlineOfflineMessagesStorage(data._id);\n      });\n      socket.on(\"server-send-user-is-offline\", (userId) => {\n        updateUserOnlineOffline({ _id: userId }, false);\n        updateUserOnlineOfflineMessagesStorage(userId, false);\n      });\n    } else {\n      socket.disconnect();\n    }\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [user]);\n};\n\nexport default useUserStatusSubscriptions;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useContactSubscription.jsx",["1129","1130","1131","1132"],"import { useEffect } from \"react\";\nimport { FETCH_CURRENT_USER } from \"../apollo/user/user.types\";\nimport { cacheMutations } from \"../apollo/operations/mutations/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CONTACT_CACHE_DATA } from \"../apollo/operations/queries/cache\";\nimport {\n  REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  REMOVE_FRIEND_SUBSCRIPTION,\n} from \"../apollo/user/user.subscriptions\";\nimport {\n  removeNewNotification,\n  decreaseCountNumberNotificationsUnseen,\n  removeNotificationItemFromNotificationsList,\n  setLatestNotification\n} from \"../apollo/notification/notification.caches\";\nimport { setCurrentUser } from \"../apollo/user/user.caches\";\n\nconst useContactSubscription = () => {\n  const {\n    data: {\n      user,\n      receivedRequestsToAddFriend,\n      currentPersonalUser,\n      friends,\n      latestNotification,\n      notifications,\n    },\n  } = useQuery(GET_CONTACT_CACHE_DATA);\n  const {\n    setReceivedRequestsToAddFriend,\n    setCurrentPersonalUser,\n    setFriends,    \n  } = cacheMutations;\n  const { subscribeToMore: subscribeUser } = useQuery(FETCH_CURRENT_USER, {\n    skip: true,\n  });\n\n  //function to handle when subscription called\n  const updateSubscriptionOnChange = (\n    sender,\n    receiver,\n    removedNotification\n  ) => {\n    if (\n      removedNotification &&\n      user.notifications.includes(removedNotification._id)\n    ) {\n      if (latestNotification?._id === removedNotification._id) {\n        setLatestNotification(null);\n      }\n      removeNewNotification(removedNotification._id);\n      decreaseCountNumberNotificationsUnseen();\n      removeNotificationItemFromNotificationsList(removedNotification);\n      setCurrentUser({\n        ...user,\n        notifications: [\n          ...user.notifications.filter(\n            (_id) => _id !== removedNotification._id\n          ),\n        ],\n        friends: [...receiver.friends],\n        following: [...receiver.following],\n        followed: [...receiver.followed],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestsToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    } else {\n      setCurrentUser({\n        ...user,\n        friends: [...receiver.friends],\n        following: [...receiver.following],\n        followed: [...receiver.followed],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestsToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    }\n\n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id.toString() === sender._id.toString()\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        receivedRequestsToAddFriend: [...sender.receivedRequestToAddFriend],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      });\n    }\n  };\n  useEffect(() => {\n    let unsubscribeRejectRquestToAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeRemoveFriend;\n    if (subscribeUser && user) {\n      unsubscribeRejectRquestToAddFriend = subscribeUser({\n        document: REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.rejectRequestToAddFriendSubscription;\n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      // unsubscribeCancelRequestToAddFriend = subscribeUser({\n      //   document:\n      //     subscriptions.userSubscription\n      //       .CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n      //   variables: { userId: user._id },\n      //   updateQuery: (_, { subscriptionData }) => {\n      //     const {\n      //       sender,\n      //       receiver,\n      //     } = subscriptionData.data.cancelRequestToAddFriendSubscription;\n\n      //     // remove sender from received requests\n      //     setReceivedRequestsToAddFriend(\n      //       receivedRequestsToAddFriend.filter(\n      //         (senderRequest) => senderRequest._id !== sender._id\n      //       )\n      //     );\n      //     updateSubscriptionOnChange(sender, receiver);\n      //   },\n      // });\n\n      unsubscribeRemoveFriend = subscribeUser({\n        document: REMOVE_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n            notification,\n          } = subscriptionData.data.removeFriendSubscription;\n          console.log(subscriptionData);\n          updateSubscriptionOnChange(sender, receiver, notification);\n        },\n      });\n    }\n\n    return () => {\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeRejectRquestToAddFriend) {\n        unsubscribeRejectRquestToAddFriend();\n      }\n      if (unsubscribeRemoveFriend) {\n        unsubscribeRemoveFriend();\n      }\n    };\n  }, [subscribeUser, user, receivedRequestsToAddFriend, friends]);\n};\n\nexport default useContactSubscription;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useHomePostsSubscription.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/checkCommentExistedInPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useNotificationsPostSubscription.jsx",["1133","1134","1135","1136"],"import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_NOTIFICATIONS_CACHE_DATA } from \"../apollo/operations/queries/cache\";\nimport {\n  FETCH_NOTIFICATIONS,\n  FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n} from \"../apollo/notification/notification.types\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport {\n  addLikeResponse,\n  removeLikeResponse,\n  updateCommentLikes,\n} from \"../apollo/post/post.caches\";\nimport {\n  ACCEPT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  LIKE_COMMENT_SUBSCRIPTION,\n  LIKE_POST_SUBSCRIPTION,\n  LIKE_RESPONSE_SUBSCRIPTION,\n  NOTIFY_MENTIONED_USERS_IN_COMMENT_SUBSCRIPTION,\n  NOTIFY_MENTIONED_USERS_IN_POST,\n  NOTIFY_MENTIONED_USERS_IN_RESPONSE,\n  NOTIFFY_USER_COMMENT_POST_SUBSCRIPTION,\n  NOTIFY_USER_RESPONSE_COMMENT_SUBSCRIPTION,\n  REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n  REMOVE_LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n  REMOVE_MENTIONED_USERS_NOTIFICATION_IN_POST,\n  SENT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n} from \"../apollo/notification/notification.types\";\nimport {\n  addNotificationItemToNotificationsList,\n  increaseCountNumberNotificationsUnseen,\n  decreaseCountNumberNotificationsUnseen,\n} from \"../apollo/notification/notification.caches\";\nimport { setCurrentUser } from \"../apollo/user/user.caches\";\nimport {\n  removeNewNotification,\n  removeNotificationItemFromNotificationsList,\n  setCountNumberNotificationsUnseen,\n  setNewNotifications,\n  setLatestNotification,\n  updateNotificationItemInNotificationsList,\n} from \"../apollo/notification/notification.caches\";\nconst useNotificationsPostSubscription = () => {\n  const { subscribeToMore: subscribeToMoreNotifications } = useQuery(\n    FETCH_NOTIFICATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const { refetch: fetchCountNumberNotificationsUnseen } = useQuery(\n    FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const {\n    data: {\n      countNumberNotificationsUnseen,\n      user,\n      notifications,\n      currentPersonalUser,\n      receivedRequestsToAddFriend,\n      personalPosts,\n      latestNotification,\n    },\n  } = useQuery(GET_NOTIFICATIONS_CACHE_DATA, {\n    fetchPolicy: \"cache-first\",\n  });\n  //mutations\n  const { setCurrentPersonalUser } = cacheMutations;\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (countNumberNotificationsUnseen === null) {\n      fetchCountNumberNotificationsUnseen().then(\n        ({ data: { countNotificationsUnseen } }) => {\n          if (_isMounted) {\n            setCountNumberNotificationsUnseen(countNotificationsUnseen);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [\n    countNumberNotificationsUnseen,\n    fetchCountNumberNotificationsUnseen,\n    setCountNumberNotificationsUnseen,\n  ]);\n\n  //sender and receiver only use in field 'user'\n  const updatedAddNotification = (\n    newNotification,\n    sender = null,\n    receiver = null\n  ) => {\n    setLatestNotification(newNotification);\n    setNewNotifications(newNotification._id);\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n    }\n    if (\n      notifications.find(\n        (notification) => notification._id === newNotification._id\n      )\n    ) {\n      updateNotificationItemInNotificationsList(newNotification);\n    } else {\n      increaseCountNumberNotificationsUnseen();\n      addNotificationItemToNotificationsList(newNotification);\n    }\n  };\n\n  const updatedRemoveNotification = (removedNotification, sender, receiver) => {\n    if (latestNotification?._id === removedNotification._id) {\n      setLatestNotification(null);\n    }\n    removeNewNotification(removedNotification._id);\n    decreaseCountNumberNotificationsUnseen();\n    removeNotificationItemFromNotificationsList(removedNotification);\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n      return;\n    }\n    setCurrentUser({\n      ...user,\n      notifications: [\n        ...notifications.filter((_id) => _id !== removedNotification._id),\n      ],\n    });\n  };\n\n  useEffect(() => {\n    let unsubscribeRequestAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeAcceptRequestToAddFriend,\n      unsubscribeMentionedUsersInPost,\n      unsubscribeAcceptRequestAddFriend,\n      unsubscribeUserLikePost,\n      unsubscribeUserRemoveLikePost,\n      unsubscribeOwnerPostReceivedUserComment,\n      unsubscribeMentionedUsersInComment,\n      unsubscribeLikeComment,\n      unsubscribeRemoveLikeComment,\n      unsubscribeUserResponseComment,\n      unsubscribeMentionedUsersInResponse,\n      unsubscribeUserLikeResponse,\n      unsubscribeUserRemoveLikeResponse,\n      unsubscribeRemoveMentionedUsersNotificationInPost;\n    if (subscribeToMoreNotifications && user) {\n      //#region Contact\n      unsubscribeRequestAddFriend = subscribeToMoreNotifications({\n        document: SENT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              sentRequestToAddFriendSubscription: notification,\n            } = subscriptionData.data;\n            const { receiver, sender } = notification?.fieldIdentity;\n            if (sender && receiver) {\n              updatedAddNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeCancelRequestToAddFriend = subscribeToMoreNotifications({\n        document: CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              cancelRequestToAddFriendSubscription: notification,\n            } = subscriptionData.data;\n\n            console.log(subscriptionData);\n            const { sender, receiver } = notification.fieldIdentity;\n            if (sender && receiver) {\n              updatedRemoveNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeAcceptRequestToAddFriend = subscribeToMoreNotifications({\n        document: ACCEPT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              acceptRequestToAddFriendSubscription: notification,\n            } = subscriptionData.data;\n            const { sender, receiver } = notification.fieldIdentity;\n            updatedAddNotification(notification, sender, receiver);\n          }\n        },\n      });\n\n      //#endregion\n\n      //#region Post\n      unsubscribeMentionedUsersInPost = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_POST,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          console.log(subscriptionData);\n          if (subscriptionData) {\n            const { notifyMentionedUsersInPost } = subscriptionData.data;\n            console.log(notifyMentionedUsersInPost);\n            updatedAddNotification(notifyMentionedUsersInPost);\n          }\n        },\n      });\n      unsubscribeUserLikePost = subscribeToMoreNotifications({\n        document: LIKE_POST_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likePostSubscription } = subscriptionData.data;\n            if (likePostSubscription) {\n              updatedAddNotification(likePostSubscription);\n             \n            }\n          }\n        },\n      });\n      unsubscribeUserRemoveLikePost = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_POST_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikePostSubscription } = subscriptionData.data;\n            updatedRemoveNotification(removeLikePostSubscription);\n          }\n        },\n      });\n\n      unsubscribeOwnerPostReceivedUserComment = subscribeToMoreNotifications({\n        document: NOTIFFY_USER_COMMENT_POST_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyUserCommentPostSubscription } = subscriptionData.data;\n            updatedAddNotification(notifyUserCommentPostSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInComment = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionUsersInComment } = subscriptionData.data;\n            updatedAddNotification(notifyMentionUsersInComment);\n          }\n        },\n      });\n      unsubscribeLikeComment = subscribeToMoreNotifications({\n        document: LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          console.log(subscriptionData);\n          if (subscriptionData) {\n            const {\n              comment,\n              notification,\n            } = subscriptionData.data.likeCommentSubscription;\n            //create notification to receiver\n            if (notification && notification.receiver === user._id) {\n              updatedAddNotification(notification);\n            }\n            if (\n              !notification ||\n              (notification && notification.creator._id !== user._id)\n            ) {\n              updateCommentLikes(comment);\n            }\n          }\n        },\n      });\n      unsubscribeRemoveLikeComment = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              comment,\n              notification,\n            } = subscriptionData.data.removeLikeCommentSubscription;\n            if (notification && notification.receiver === user._id) {\n              updatedRemoveNotification(notification);\n            }\n            if (\n              !notification ||\n              (notification && notification.creator._id !== user._id)\n            ) {\n              updateCommentLikes(comment);\n            }\n          }\n        },\n      });\n      unsubscribeUserResponseComment = subscribeToMoreNotifications({\n        document: NOTIFY_USER_RESPONSE_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              notifyUserResponseCommentSubscription,\n            } = subscriptionData.data;\n            updatedAddNotification(notifyUserResponseCommentSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInResponse = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_RESPONSE,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionedUsersInResponse } = subscriptionData.data;\n            updatedAddNotification(notifyMentionedUsersInResponse);\n          }\n        },\n      });\n      unsubscribeUserLikeResponse = subscribeToMoreNotifications({\n        document: LIKE_RESPONSE_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likeResponseSubscription } = subscriptionData.data;\n            if (likeResponseSubscription.receiver.toString() === user._id) {\n              updatedAddNotification(likeResponseSubscription);\n            }\n            const {\n              post,\n              comment,\n              response,\n            } = likeResponseSubscription.fieldIdentity;\n            if (likeResponseSubscription.creator._id.toString() !== user._id) {\n              addLikeResponse(\n                post._id,\n                comment._id,\n                response._id,\n                likeResponseSubscription.creator._id\n              );\n            }\n          }\n        },\n      });\n      unsubscribeUserRemoveLikeResponse = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikeResponseSubscription } = subscriptionData.data;\n            if (\n              removeLikeResponseSubscription.receiver.toString() === user._id\n            ) {\n              updatedRemoveNotification(removeLikeResponseSubscription);\n            }\n            const {\n              post,\n              comment,\n              response,\n            } = removeLikeResponseSubscription.fieldIdentity;\n            if (\n              removeLikeResponseSubscription.creator._id.toString() !== user._id\n            ) {\n              removeLikeResponse(\n                post._id,\n                comment._id,\n                response._id,\n                removeLikeResponseSubscription.creator._id\n              );\n            }\n          }\n        },\n      });\n\n      unsubscribeRemoveMentionedUsersNotificationInPost = subscribeToMoreNotifications(\n        {\n          document: REMOVE_MENTIONED_USERS_NOTIFICATION_IN_POST,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            if (subscriptionData) {\n              const {\n                removeMentionedNotificationSubscription,\n              } = subscriptionData.data;\n              updatedRemoveNotification(\n                removeMentionedNotificationSubscription\n              );\n            }\n          },\n        }\n      );\n      //#endregion\n    }\n\n    return () => {\n      if (unsubscribeRequestAddFriend) {\n        unsubscribeRequestAddFriend();\n      }\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeAcceptRequestToAddFriend) {\n        unsubscribeAcceptRequestToAddFriend();\n      }\n      if (unsubscribeMentionedUsersInPost) {\n        unsubscribeMentionedUsersInPost();\n      }\n      if (unsubscribeUserLikePost) {\n        unsubscribeUserLikePost();\n      }\n      if (unsubscribeUserRemoveLikePost) {\n        unsubscribeUserRemoveLikePost();\n      }\n      if (unsubscribeAcceptRequestAddFriend) {\n        unsubscribeAcceptRequestAddFriend();\n      }\n      if (unsubscribeOwnerPostReceivedUserComment) {\n        unsubscribeOwnerPostReceivedUserComment();\n      }\n      if (unsubscribeMentionedUsersInComment) {\n        unsubscribeMentionedUsersInComment();\n      }\n      if (unsubscribeLikeComment) {\n        unsubscribeLikeComment();\n      }\n      if (unsubscribeRemoveLikeComment) {\n        unsubscribeRemoveLikeComment();\n      }\n      if (unsubscribeUserResponseComment) {\n        unsubscribeUserResponseComment();\n      }\n      if (unsubscribeMentionedUsersInResponse) {\n        unsubscribeMentionedUsersInResponse();\n      }\n      if (unsubscribeUserLikeResponse) {\n        unsubscribeUserLikeResponse();\n      }\n      if (unsubscribeUserRemoveLikeResponse) {\n        unsubscribeUserRemoveLikeResponse();\n      }\n      if (unsubscribeRemoveMentionedUsersNotificationInPost) {\n        unsubscribeRemoveMentionedUsersNotificationInPost();\n      }\n    };\n  }, [\n    countNumberNotificationsUnseen,\n    subscribeToMoreNotifications,\n    receivedRequestsToAddFriend,\n    notifications,\n    user,\n  ]);\n};\n\nexport default useNotificationsPostSubscription;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/IntroductionBox.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeading.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeadingContact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalPosts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/NotificationItem.styles.jsx",["1137","1138","1139"],"\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\"\nexport const Wrapper = styled.section`\n  background-color : ${({hasSeen, theme}) => theme ===\"dark\" ? hasSeen ? \"var(--color-card-dark)\" : \"var(--color-card-dark-secondary)\" : hasSeen ? \"var(--color-card-default)\" :\"var(--color-card-default-secondary)\"};\n  &:hover{\n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--color-hover-dark)\" : \"var(--color-hover-default)\"} ;\n  }\n`;\n\nexport const LinkWrapper = styled(Link)`\n  display : flex;\n  padding :0.4rem 0.8rem;\n  font-size : 0.9rem;\n`\n\nexport const AvatarContainer = styled.div`\n  width : 2.5rem;\n  height : 2.5rem;\n  & img{\n    width : 100%; \n    height :100%; \n    border-radius : 50%;\n  }  \n` \n\nexport const NotificationContent =styled.article`\n  margin-left : 0.5rem;\n  flex : 1 ; \n  display : flex; \n  flex-direction : column;\n`\n\nexport const Controls = styled.div`\n  padding : 0.75rem 1.25rem;\n`\n\nconst ButtonsGroup = styled.div`\n  display: flex;\n  padding: 1rem;\n`;\n\nconst ButtonAccept = styled.button`\n  padding: 0.5rem 1rem;\n  outline: none;\n  border: none;\n  background-color: #16c172e3;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: var(--white);\n  &:hover {\n    background-color: #009651e3;\n  }\n`;\nconst ButtonDecline = styled.button`\n  padding: 0.5rem 1rem;\n  outline: none;\n  border: none;\n  background-color: #ec1b1be3;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: var(--white);\n  &:hover {\n    background-color: #c70000e3;\n  }\n`;","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomMaterialButton.jsx",["1140","1141","1142","1143","1144","1145"],"import React from 'react';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { green, purple, red, blue } from '@material-ui/core/colors';\n\nexport const AcceptButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[600]),\n    fontWeight : 600,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n}))(Button);\n\nexport const DenyButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(red[600]),\n    fontWeight: 600,\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[700],\n    },\n  },\n}))(Button);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/Dropdown.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/EditPostDialog.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/useDraftEditorPlugin.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/useDraftEditorPlugin.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/EditPostDialog.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.types.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.queries.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/initialState.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/controls/controls.query.js",["1146","1147"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/controls/controls.types.js",["1148"],"import controlsQuery from \"./controls.query\"\n\nexport default {\n  TOGGLE_MENU : controlsQuery.TOGGLE_MENU\n}",["1149","1150"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.types.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.caches.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.caches.js",["1151","1152","1153","1154"],"import { postsVar } from \"../cache\";\nimport { initialState } from \"../initialState\";\n\nexport const addFetchedPostToCache = (fetchedPosts) => {\n  const posts = [...postsVar()];\n  if (!Array.isArray(fetchedPosts)) {\n    return false;\n  }\n  return postsVar([...posts, ...fetchedPosts]);\n};\n\nexport const pushNewPostToPostsList = newPost => {\n  const posts = [...postsVar()];  \n  return postsVar([{...newPost},...posts]);\n}\n\nexport const addCommentsToPost = (postId, newComments) => {\n  const posts = [...postsVar()];\n  const post = posts.find((postItem) => postItem._id === postId);\n  if (post) {\n    const updatedPosts = posts.map((post) => {\n      let _post = { ...post };\n      if (_post._id === postId) {\n        _post.commentsData = _post.commentsData\n          ? [..._post.commentsData, ...newComments]\n          : [...newComments];\n      }\n      return { ..._post };\n    });\n    return postsVar(updatedPosts);\n  }\n};\n\nexport const addCommentToPost = (postId, newComment) => {\n  const posts = [...postsVar()];\n  const updatedPosts = posts.map((post) => {\n    let _post = { ...post };\n    if (_post._id === postId) {\n      _post.comments = [newComment._id, ..._post.comments];\n      _post.commentsData = _post.commentsData\n        ? [{ ...newComment }, ..._post.commentsData]\n        : [{ ...newComment }];\n    }\n    return { ..._post };\n  });\n  return postsVar(updatedPosts);\n};\n\nexport const addLikeComment = (postId, commentId, userId) => {\n  const posts = [...postsVar()];\n  const updatedPost = posts.map((post) => {\n    let _post = { ...post };\n    if (_post._id === postId && _post.commentsData) {\n      _post.commentsData = _post.commentsData.map((comment) => {\n        let _comment = { ...comment };\n        if (_comment._id === commentId) {\n          _comment.likes = [...new Set([userId, ..._comment.likes])];\n        }\n        return { ..._comment };\n      });\n    }\n    return { ..._post };\n  });\n  return postsVar(updatedPost);\n};\n\nexport const addLikeResponse = (postId, commentId, responseId, userId) => {\n  const posts = [...postsVar()];\n  const findPostByPostId = posts.find((post) => post._id === postId);\n  if (!findPostByPostId || (findPostByPostId && !findPostByPostId.commentsData))\n    return;\n  const findCommentsDataByCommentId = findPostByPostId.commentsData.find(\n    (comment) => comment._id === commentId\n  );\n  if (\n    !findCommentsDataByCommentId ||\n    (findCommentsDataByCommentId && !findCommentsDataByCommentId.responsesData)\n  )\n    return;\n  const findResponsesByResponseId = findCommentsDataByCommentId.responsesData.find(\n    (response) => response._id === responseId\n  );\n  if (!findResponsesByResponseId) return;\n\n  const updatedPost = posts.map((post) => {\n    let _post = { ...post };\n    if (_post._id === postId) {\n      _post.commentsData = _post.commentsData.map((comment) => {\n        let _comment = { ...comment };\n        if (_comment._id === commentId) {\n          _comment.responsesData = _comment.responsesData.map((response) => {\n            let _response = { ...response };\n            if (_response._id === responseId) {\n              _response.likes = [userId, ..._response.likes];\n            }\n            return { ..._response };\n          });\n        }\n        return { ..._comment };\n      });\n    }\n    return { ..._post };\n  });\n\n  return postsVar(updatedPost);\n};\n\nexport const addNewResponseToComment = (\n  postId,\n  commentId,\n  newResponse\n) => {\n  const posts = [...postsVar()];\n  const specificPost = posts.find(post => post._id === postId)\n  if(!specificPost || !specificPost.commentsData) return ; \n  const specificCommentsData = specificPost.commentsData.find(commentItem => commentItem._id === commentId);\n  if(!specificCommentsData) return; \n  \n  const updatedPost = posts.map(post => {\n    let _post  = {...post};\n    if(_post._id === postId){\n      _post.responses = [newResponse._id , ..._post.responses];\n      _post.commentsData = _post.commentsData.map(comment => {\n        let _comment = {...comment};\n        if(_comment._id === commentId){\n          _comment.responses = [newResponse._id, ..._comment.responses];\n          _comment.responsesData = _comment.responsesData ? [{...newResponse}, ..._comment.responsesData] : [{...newResponse}]  ;\n        }\n        return {..._comment}; \n      })\n    }\n    return {..._post};\n  })\n  return postsVar(updatedPost);\n};\n\nexport const addResponsesToComment = (\n  postId,\n  commentId,\n  responses\n) => {\n  const posts = [...postsVar()];\n  const updatedPosts = posts.map((post) => {\n    let _post = { ...post };\n    if (_post._id === postId && _post.commentsData) {      \n      _post.commentsData =  _post.commentsData.map((comment) => {              \n        let _comment = { ...comment };\n        if (_comment._id === commentId) {                          \n          _comment.responsesData = _comment.responsesData\n            ? [..._comment.responsesData, ...responses]\n            : [...responses];          \n        }        \n        return { ..._comment };\n      });\n    }\n    return { ..._post };\n  });\n  return postsVar([...updatedPosts]);\n};\n\n\nexport const removeComment = (postId, commentId) => {\n  const posts = [...postsVar()]; \n  const updatedPosts = posts.map(post => {\n    let _post = {...post};\n    if(_post._id === postId){\n      _post.comments = _post.comments.filter(_id => _id !== commentId);\n      let commentToRemove = _post.commentsData.find(comment => comment._id === commentId);    \n      _post.commentsData = _post.commentsData.filter(comment => comment._id !== commentId);\n      _post.responses = _post.responses.filter(responseId => !commentToRemove.responses.includes(responseId))\n    }\n    return {..._post};\n  })\n  return postsVar(updatedPosts);\n  \n};\n\nexport const removeLikeComment = (postId, commentId, userId) => {\n  const posts = [...postsVar()];\n  const updatedPost = posts.map(post => {\n    let _post = {...post}; \n    if(_post._id === postId &&  _post.commentsData){\n      _post.commentsData = _post.commentsData.map(comment => {\n        let _comment = {...comment} ; \n        if(_comment._id === commentId){\n          _comment.likes  = _comment.likes.filter(_id=> _id !== userId )\n        }\n        return {..._comment}; \n      })\n    }\n    return {..._post}; \n  })\n  return postsVar(updatedPost);\n}\n\nexport const removeLikeResponse = (postId, commentId, responseId, userId) => {\n  const posts = [...postsVar()];\n  \n  const findPostByPostId = posts.find(post => post._id === postId); \n  if(!findPostByPostId || findPostByPostId && !findPostByPostId.commentsData) return; \n  const findCommentsDataByCommentId = findPostByPostId.commentsData.find(comment => comment._id === commentId);\n  if(!findCommentsDataByCommentId || findCommentsDataByCommentId && !findCommentsDataByCommentId.responsesData) return ; \n  const findResponsesByResponseId = findCommentsDataByCommentId.responsesData.find(response => response._id === responseId);\n  if(!findResponsesByResponseId) return ; \n\nconst updatedPost = posts.map(post => {\n    let _post = {...post};\n    if(_post._id === postId ){      \n      _post.commentsData = _post.commentsData.map(comment => {\n        let _comment = {...comment};\n        if(_comment._id === commentId){         \n          _comment.responsesData = _comment.responsesData.map(response => {\n            let _response = {...response};            \n            if(_response._id === responseId){              \n              _response.likes = _response.likes.filter(_id => _id !== userId);\n            }\n            return {..._response};\n          })\n        }\n        return {..._comment};\n      })\n    }\n    return {..._post};\n  })\n\n  return postsVar(updatedPost);\n}\n\nexport const removeResponse = (postId, commentId, responseId) => {\n  const posts = [...postsVar()];\n  const updatedPost = posts.map((post) => {\n    let _post = { ...post };\n    if (_post._id === postId) {\n      _post.responses = _post.responses.filter((_id) => _id !== responseId);\n      _post.commentsData = _post.commentsData.map((comment) => {\n        let _comment = { ...comment };\n        if (_comment._id === commentId) {\n          _comment.responses = _comment.responses.filter(\n            (_id) => _id !== responseId\n          );\n          _comment.responsesData = _comment.responsesData.filter(\n            (responseItem) => responseItem._id !== responseId\n          );\n        }\n        return { ..._comment };\n      });\n    }\n    return { ..._post };\n  });\n\n  return postsVar(updatedPost);\n};\n\nexport const updateCommentLikes = comment => {\n  const posts = [...postsVar()];\n  const {post : postId} = comment;  \n  //find post contain comment\n  const post = posts.find(post => post._id === postId);\n  //check post has commentsData and comment is currently whether contained in post or not\n  if(post.commentsData && post?.commentsData.some(commentData => commentData._id === comment._id )){    \n      const updatedPosts = posts.map(postItem => {\n        let _post = {...postItem};\n        if(_post._id === comment.post){\n          _post.commentsData = _post.commentsData.map(commentItem => {\n            let _comment = {...commentItem};\n            if(_comment._id === comment._id){              \n              _comment.likes = [...new Set(comment.likes)];\n            }\n            return {..._comment};\n          })\n        }\n        return {..._post};\n      })\n    return postsVar(updatedPosts)\n  }\n  \n}\n\nexport const updateLikePost =(postId, userId) => {\n  const posts = [...postsVar()];\n  const updatedPosts = posts.map(post => {\n    if(post._id === postId){\n      let _post = {...post} ;\n      _post.likes = [..._post.likes, userId];\n      return {..._post};\n    }\n    return {...post};\n  })\n  return postsVar(updatedPosts);\n}\n\nexport const updatePost = editedPost => {  \n  const posts = [...postsVar()];\n  if(posts.some(post => post._id === editedPost._id)){\n    const updatedPost = posts.map(post => {\n      let _post = {...post};\n      if(_post._id === editedPost._id){\n        return {..._post, ...editedPost};\n      }\n      return {..._post};\n    })\n    return postsVar(updatedPost);\n  }\n}\n\nexport const updateRemoveLikePost = (postId, userId) => {\n  const posts = [...postsVar()];\n  const updatedPosts = posts.map(post => {\n    if(post._id === postId){\n      let _post = {...post} ;\n      _post.likes = _post.likes.filter(_id => _id !== userId);\n      return {..._post};\n    }\n    return {...post};\n  })\n  return postsVar(updatedPosts);\n}\n\nexport const clearPosts = () => postsVar(initialState.posts)","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.subscriptions.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.mutations.js",["1155"],"import { gql } from \"@apollo/client\";\n\n\nexport const CREATE_POST = gql`\n  mutation CreatePost(\n    $text: String\n    $shortenText: String\n    $rawText : String\n    $mentions: [ID!]\n    $fileNames: [String!]\n    $fileMimetype: [String!]\n    $fileEncodings: [String!]\n    $status: String!\n  ) {\n    createPost(\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText : $rawText\n        mentions: $mentions\n        fileNames: $fileNames\n        fileMimetype: $fileMimetype\n        fileEncodings: $fileEncodings\n        status: $status\n      }\n    ) {\n      _id\n      text\n      rawText\n      shortenText\n      mentions {\n        _id\n        name\n        avatar\n        slug\n        isOnline\n      }      \n      author {\n        _id\n        name\n        slug\n        avatar\n      }\n      files{\n        filename\n        mimetype\n        data\n      }\n      comments       \n      responses     \n      likes      \n      status\n      createdAt\n    }\n  }\n`;\n\nexport const CREATE_COMMENT = gql`\n  mutation(\n    $postId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n  ) {\n    createComment(\n      postId: $postId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n      }\n    ) {\n      _id\n      text\n      shortenText\n      rawText\n      author {\n        _id\n        name\n        avatar\n        slug\n      }\n      post\n      likes\n      responses\n      createdAt\n    }\n  }\n`;\n\nexport const CREATE_RESPONSE = gql`\n  mutation CreateResponse(\n    $commentId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n  ) {\n    createResponse(\n      commentId: $commentId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n      }\n    ) {\n      _id\n      text\n      shortenText\n      rawText\n      author {\n        _id\n        name\n        avatar\n        slug\n      }\n      comment\n      likes\n      post\n      createdAt\n    }\n  }\n`;\n\nexport const EDIT_POST = gql`\n  mutation EditPost(\n    $postId : ID!\n    $text: String\n    $shortenText: String\n    $rawText : String\n    $mentions: [ID!]\n    $fileNames: [String!]\n    $fileMimetype: [String!]\n    $fileEncodings: [String!]\n    $status: String!\n  ) {\n    editPost(\n      postId : $postId,\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText : $rawText\n        mentions: $mentions\n        fileNames: $fileNames\n        fileMimetype: $fileMimetype\n        fileEncodings: $fileEncodings\n        status: $status\n      }\n    ) {\n      _id\n      text\n      rawText\n      shortenText\n      mentions {\n        _id\n        name\n        avatar\n        slug\n        isOnline\n      }      \n      author {\n        _id\n        name\n        slug\n        avatar\n      }\n      files{\n        filename\n        mimetype\n        data\n      }\n      comments       \n      responses     \n      likes      \n      status\n      createdAt\n    }\n  }\n`;\n\nexport const LIKE_COMMENT = gql`\n  mutation LikeComment($commentId: ID!){\n    likeComment(commentId: $commentId)\n  }\n`\n\nexport const LIKE_POST = gql`\n  mutation ($postId : ID!){\n    likePost(postId : $postId)\n  } \n`\n export const LIKE_RESPONSE = gql`\n  mutation LikeResponse($responseId : ID!){\n    likeResponse(responseId : $responseId)\n  }\n`\n\nexport const REMOVE_COMMENT = gql`\n  mutation RemoveComment($commentId : ID!){\n    removeComment(commentId: $commentId)\n  }\n`\nexport const REMOVE_LIKE_COMMENT = gql`\n  mutation RemoveLikeComment($commentId : ID!){\n    removeLikeComment(commentId : $commentId)\n  }\n`\n\nexport const REMOVE_LIKE_POST = gql`\n  mutation ($postId: ID!){\n    removeLikePost(postId : $postId)\n  }\n`\n\n\nexport const REMOVE_LIKE_RESPONSE = gql`\n  mutation RemoveLikeResponse($responseId: ID!){\n    removeLikeResponse(responseId : $responseId) \n  }\n`\n\nexport const REMOVE_RESPONSE = gql`\n  mutation RemoveResponse($responseId : ID!){\n    removeResponse(responseId : $responseId)\n  }\n`\n\nexport default {\n  CREATE_POST,\n  CREATE_COMMENT,\n  CREATE_RESPONSE,\n  EDIT_POST,\n  LIKE_COMMENT,\n  LIKE_POST,\n  LIKE_RESPONSE,\n  REMOVE_COMMENT,\n  REMOVE_LIKE_COMMENT,\n  REMOVE_LIKE_POST,\n  REMOVE_LIKE_RESPONSE,\n  REMOVE_RESPONSE\n}","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/post/post.queries.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.mutations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/user.subscriptions.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/controls/controls.caches.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.types.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.queries.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.mutations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.subscriptions.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/notification/notification.caches.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/user/currentPersonalUser.caches.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/chat/chat.caches.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/chat/chat.types.js",[],{"ruleId":"1156","replacedBy":"1157"},{"ruleId":"1158","replacedBy":"1159"},{"ruleId":"1160","severity":1,"message":"1161","line":4,"column":3,"nodeType":"1162","messageId":"1163","endLine":4,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1164","line":5,"column":3,"nodeType":"1162","messageId":"1163","endLine":5,"endColumn":30},{"ruleId":"1160","severity":1,"message":"1165","line":6,"column":3,"nodeType":"1162","messageId":"1163","endLine":6,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1166","line":7,"column":3,"nodeType":"1162","messageId":"1163","endLine":7,"endColumn":14},{"ruleId":"1160","severity":1,"message":"1167","line":8,"column":3,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":24},{"ruleId":"1168","severity":1,"message":"1169","line":13,"column":12,"nodeType":"1170","endLine":13,"endColumn":70},{"ruleId":"1171","severity":1,"message":"1172","line":46,"column":6,"nodeType":"1173","endLine":46,"endColumn":19,"suggestions":"1174"},{"ruleId":"1171","severity":1,"message":"1172","line":83,"column":6,"nodeType":"1173","endLine":83,"endColumn":44,"suggestions":"1175"},{"ruleId":"1160","severity":1,"message":"1176","line":8,"column":10,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":24},{"ruleId":"1171","severity":1,"message":"1177","line":19,"column":6,"nodeType":"1173","endLine":19,"endColumn":37,"suggestions":"1178"},{"ruleId":"1171","severity":1,"message":"1179","line":27,"column":5,"nodeType":"1173","endLine":27,"endColumn":11,"suggestions":"1180"},{"ruleId":"1171","severity":1,"message":"1181","line":74,"column":6,"nodeType":"1173","endLine":74,"endColumn":33,"suggestions":"1182"},{"ruleId":"1171","severity":1,"message":"1183","line":103,"column":6,"nodeType":"1173","endLine":103,"endColumn":19,"suggestions":"1184"},{"ruleId":"1160","severity":1,"message":"1185","line":1,"column":34,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":42},{"ruleId":"1171","severity":1,"message":"1186","line":93,"column":6,"nodeType":"1173","endLine":93,"endColumn":8,"suggestions":"1187"},{"ruleId":"1160","severity":1,"message":"1188","line":20,"column":7,"nodeType":"1162","messageId":"1163","endLine":20,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1176","line":22,"column":9,"nodeType":"1162","messageId":"1163","endLine":22,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1189","line":29,"column":6,"nodeType":"1173","endLine":29,"endColumn":12,"suggestions":"1190"},{"ruleId":"1171","severity":1,"message":"1191","line":78,"column":6,"nodeType":"1173","endLine":78,"endColumn":40,"suggestions":"1192"},{"ruleId":"1160","severity":1,"message":"1193","line":1,"column":17,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1194","line":15,"column":8,"nodeType":"1162","messageId":"1163","endLine":15,"endColumn":21},{"ruleId":"1171","severity":1,"message":"1195","line":51,"column":6,"nodeType":"1173","endLine":51,"endColumn":23,"suggestions":"1196"},{"ruleId":"1160","severity":1,"message":"1197","line":7,"column":9,"nodeType":"1162","messageId":"1163","endLine":7,"endColumn":13},{"ruleId":"1160","severity":1,"message":"1193","line":1,"column":17,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1198","line":13,"column":37,"nodeType":"1162","messageId":"1163","endLine":13,"endColumn":56},{"ruleId":"1156","replacedBy":"1199"},{"ruleId":"1158","replacedBy":"1200"},{"ruleId":"1160","severity":1,"message":"1201","line":1,"column":16,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":25},{"ruleId":"1160","severity":1,"message":"1197","line":19,"column":9,"nodeType":"1162","messageId":"1163","endLine":19,"endColumn":13},{"ruleId":"1160","severity":1,"message":"1202","line":20,"column":18,"nodeType":"1162","messageId":"1163","endLine":20,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1203","line":6,"column":3,"nodeType":"1162","messageId":"1163","endLine":6,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1204","line":15,"column":10,"nodeType":"1162","messageId":"1163","endLine":15,"endColumn":21},{"ruleId":"1171","severity":1,"message":"1205","line":105,"column":6,"nodeType":"1173","endLine":105,"endColumn":35,"suggestions":"1206"},{"ruleId":"1160","severity":1,"message":"1207","line":266,"column":9,"nodeType":"1162","messageId":"1163","endLine":266,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1208","line":25,"column":3,"nodeType":"1162","messageId":"1163","endLine":25,"endColumn":17},{"ruleId":"1168","severity":1,"message":"1169","line":69,"column":16,"nodeType":"1170","endLine":69,"endColumn":74},{"ruleId":"1160","severity":1,"message":"1209","line":1,"column":49,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":60},{"ruleId":"1171","severity":1,"message":"1210","line":43,"column":6,"nodeType":"1173","endLine":43,"endColumn":8,"suggestions":"1211"},{"ruleId":"1171","severity":1,"message":"1212","line":58,"column":6,"nodeType":"1173","endLine":58,"endColumn":69,"suggestions":"1213"},{"ruleId":"1171","severity":1,"message":"1214","line":58,"column":19,"nodeType":"1215","endLine":58,"endColumn":62},{"ruleId":"1171","severity":1,"message":"1216","line":116,"column":6,"nodeType":"1173","endLine":116,"endColumn":24,"suggestions":"1217"},{"ruleId":"1160","severity":1,"message":"1218","line":1,"column":27,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":37},{"ruleId":"1160","severity":1,"message":"1219","line":1,"column":39,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":45},{"ruleId":"1160","severity":1,"message":"1220","line":1,"column":17,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1209","line":1,"column":17,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":28},{"ruleId":"1160","severity":1,"message":"1221","line":21,"column":8,"nodeType":"1162","messageId":"1163","endLine":21,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1222","line":8,"column":3,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":7},{"ruleId":"1160","severity":1,"message":"1223","line":9,"column":3,"nodeType":"1162","messageId":"1163","endLine":9,"endColumn":8},{"ruleId":"1160","severity":1,"message":"1224","line":10,"column":3,"nodeType":"1162","messageId":"1163","endLine":10,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1225","line":11,"column":3,"nodeType":"1162","messageId":"1163","endLine":11,"endColumn":19},{"ruleId":"1160","severity":1,"message":"1226","line":12,"column":3,"nodeType":"1162","messageId":"1163","endLine":12,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1166","line":13,"column":3,"nodeType":"1162","messageId":"1163","endLine":13,"endColumn":14},{"ruleId":"1160","severity":1,"message":"1165","line":15,"column":3,"nodeType":"1162","messageId":"1163","endLine":15,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1227","line":17,"column":9,"nodeType":"1162","messageId":"1163","endLine":17,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1228","line":17,"column":18,"nodeType":"1162","messageId":"1163","endLine":17,"endColumn":26},{"ruleId":"1160","severity":1,"message":"1229","line":17,"column":28,"nodeType":"1162","messageId":"1163","endLine":17,"endColumn":62},{"ruleId":"1160","severity":1,"message":"1230","line":17,"column":64,"nodeType":"1162","messageId":"1163","endLine":17,"endColumn":80},{"ruleId":"1160","severity":1,"message":"1231","line":17,"column":82,"nodeType":"1162","messageId":"1163","endLine":17,"endColumn":101},{"ruleId":"1160","severity":1,"message":"1232","line":18,"column":10,"nodeType":"1162","messageId":"1163","endLine":18,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1233","line":2,"column":9,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":13},{"ruleId":"1160","severity":1,"message":"1233","line":2,"column":10,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":14},{"ruleId":"1160","severity":1,"message":"1234","line":11,"column":10,"nodeType":"1162","messageId":"1163","endLine":11,"endColumn":18},{"ruleId":"1171","severity":1,"message":"1189","line":20,"column":6,"nodeType":"1173","endLine":20,"endColumn":12,"suggestions":"1235"},{"ruleId":"1171","severity":1,"message":"1236","line":61,"column":6,"nodeType":"1173","endLine":61,"endColumn":16,"suggestions":"1237"},{"ruleId":"1160","severity":1,"message":"1193","line":1,"column":27,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":36},{"ruleId":"1160","severity":1,"message":"1238","line":15,"column":10,"nodeType":"1162","messageId":"1163","endLine":15,"endColumn":18},{"ruleId":"1171","severity":1,"message":"1239","line":48,"column":6,"nodeType":"1173","endLine":48,"endColumn":54,"suggestions":"1240"},{"ruleId":"1171","severity":1,"message":"1241","line":50,"column":35,"nodeType":"1162","endLine":50,"endColumn":46},{"ruleId":"1171","severity":1,"message":"1242","line":77,"column":6,"nodeType":"1173","endLine":77,"endColumn":32,"suggestions":"1243"},{"ruleId":"1156","replacedBy":"1244"},{"ruleId":"1158","replacedBy":"1245"},{"ruleId":"1160","severity":1,"message":"1246","line":23,"column":10,"nodeType":"1162","messageId":"1163","endLine":23,"endColumn":16},{"ruleId":"1160","severity":1,"message":"1247","line":23,"column":18,"nodeType":"1162","messageId":"1163","endLine":23,"endColumn":27},{"ruleId":"1160","severity":1,"message":"1248","line":24,"column":10,"nodeType":"1162","messageId":"1163","endLine":24,"endColumn":22},{"ruleId":"1160","severity":1,"message":"1249","line":24,"column":24,"nodeType":"1162","messageId":"1163","endLine":24,"endColumn":39},{"ruleId":"1171","severity":1,"message":"1250","line":33,"column":6,"nodeType":"1173","endLine":33,"endColumn":23,"suggestions":"1251"},{"ruleId":"1160","severity":1,"message":"1252","line":41,"column":11,"nodeType":"1162","messageId":"1163","endLine":41,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1253","line":124,"column":6,"nodeType":"1173","endLine":124,"endColumn":52,"suggestions":"1254"},{"ruleId":"1160","severity":1,"message":"1185","line":1,"column":16,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":24},{"ruleId":"1255","severity":1,"message":"1256","line":106,"column":62,"nodeType":"1257","messageId":"1258","endLine":106,"endColumn":64},{"ruleId":"1160","severity":1,"message":"1259","line":3,"column":3,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":10},{"ruleId":"1160","severity":1,"message":"1260","line":9,"column":3,"nodeType":"1162","messageId":"1163","endLine":9,"endColumn":10},{"ruleId":"1160","severity":1,"message":"1261","line":38,"column":14,"nodeType":"1162","messageId":"1163","endLine":38,"endColumn":34},{"ruleId":"1171","severity":1,"message":"1262","line":60,"column":6,"nodeType":"1173","endLine":60,"endColumn":8,"suggestions":"1263"},{"ruleId":"1171","severity":1,"message":"1264","line":84,"column":6,"nodeType":"1173","endLine":84,"endColumn":19,"suggestions":"1265"},{"ruleId":"1160","severity":1,"message":"1233","line":2,"column":10,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":14},{"ruleId":"1160","severity":1,"message":"1266","line":32,"column":25,"nodeType":"1162","messageId":"1163","endLine":32,"endColumn":33},{"ruleId":"1160","severity":1,"message":"1259","line":1,"column":27,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1260","line":6,"column":3,"nodeType":"1162","messageId":"1163","endLine":6,"endColumn":10},{"ruleId":"1160","severity":1,"message":"1267","line":8,"column":3,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1268","line":29,"column":6,"nodeType":"1173","endLine":29,"endColumn":8,"suggestions":"1269"},{"ruleId":"1160","severity":1,"message":"1185","line":1,"column":17,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":25},{"ruleId":"1160","severity":1,"message":"1270","line":20,"column":11,"nodeType":"1162","messageId":"1163","endLine":20,"endColumn":18},{"ruleId":"1160","severity":1,"message":"1259","line":3,"column":3,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":10},{"ruleId":"1160","severity":1,"message":"1271","line":17,"column":10,"nodeType":"1162","messageId":"1163","endLine":17,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1261","line":35,"column":14,"nodeType":"1162","messageId":"1163","endLine":35,"endColumn":34},{"ruleId":"1171","severity":1,"message":"1262","line":55,"column":6,"nodeType":"1173","endLine":55,"endColumn":8,"suggestions":"1272"},{"ruleId":"1255","severity":1,"message":"1256","line":101,"column":64,"nodeType":"1257","messageId":"1258","endLine":101,"endColumn":66},{"ruleId":"1160","severity":1,"message":"1273","line":38,"column":11,"nodeType":"1162","messageId":"1163","endLine":38,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1274","line":87,"column":6,"nodeType":"1173","endLine":87,"endColumn":14,"suggestions":"1275"},{"ruleId":"1171","severity":1,"message":"1276","line":130,"column":5,"nodeType":"1173","endLine":130,"endColumn":28,"suggestions":"1277"},{"ruleId":"1160","severity":1,"message":"1233","line":2,"column":9,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":13},{"ruleId":"1160","severity":1,"message":"1259","line":3,"column":3,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":10},{"ruleId":"1171","severity":1,"message":"1278","line":71,"column":6,"nodeType":"1173","endLine":71,"endColumn":50,"suggestions":"1279"},{"ruleId":"1171","severity":1,"message":"1262","line":97,"column":6,"nodeType":"1173","endLine":97,"endColumn":8,"suggestions":"1280"},{"ruleId":"1171","severity":1,"message":"1281","line":117,"column":6,"nodeType":"1173","endLine":117,"endColumn":13,"suggestions":"1282"},{"ruleId":"1255","severity":1,"message":"1256","line":166,"column":64,"nodeType":"1257","messageId":"1258","endLine":166,"endColumn":66},{"ruleId":"1160","severity":1,"message":"1193","line":1,"column":30,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":39},{"ruleId":"1160","severity":1,"message":"1238","line":3,"column":23,"nodeType":"1162","messageId":"1163","endLine":3,"endColumn":31},{"ruleId":"1171","severity":1,"message":"1283","line":34,"column":6,"nodeType":"1173","endLine":34,"endColumn":8,"suggestions":"1284"},{"ruleId":"1171","severity":1,"message":"1285","line":49,"column":6,"nodeType":"1173","endLine":49,"endColumn":8,"suggestions":"1286"},{"ruleId":"1171","severity":1,"message":"1241","line":51,"column":33,"nodeType":"1162","endLine":51,"endColumn":44},{"ruleId":"1160","severity":1,"message":"1287","line":48,"column":13,"nodeType":"1162","messageId":"1163","endLine":48,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1288","line":115,"column":6,"nodeType":"1173","endLine":115,"endColumn":47,"suggestions":"1289"},{"ruleId":"1160","severity":1,"message":"1290","line":6,"column":8,"nodeType":"1162","messageId":"1163","endLine":6,"endColumn":9},{"ruleId":"1160","severity":1,"message":"1291","line":26,"column":7,"nodeType":"1162","messageId":"1163","endLine":26,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1292","line":30,"column":5,"nodeType":"1162","messageId":"1163","endLine":30,"endColumn":35},{"ruleId":"1160","severity":1,"message":"1293","line":32,"column":5,"nodeType":"1162","messageId":"1163","endLine":32,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1294","line":156,"column":6,"nodeType":"1173","endLine":156,"endColumn":65,"suggestions":"1295"},{"ruleId":"1160","severity":1,"message":"1296","line":1,"column":8,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":13},{"ruleId":"1160","severity":1,"message":"1297","line":67,"column":7,"nodeType":"1162","messageId":"1163","endLine":67,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1298","line":88,"column":6,"nodeType":"1173","endLine":92,"endColumn":4,"suggestions":"1299"},{"ruleId":"1171","severity":1,"message":"1300","line":467,"column":6,"nodeType":"1173","endLine":473,"endColumn":4,"suggestions":"1301"},{"ruleId":"1160","severity":1,"message":"1302","line":38,"column":7,"nodeType":"1162","messageId":"1163","endLine":38,"endColumn":19},{"ruleId":"1160","severity":1,"message":"1303","line":43,"column":7,"nodeType":"1162","messageId":"1163","endLine":43,"endColumn":19},{"ruleId":"1160","severity":1,"message":"1304","line":57,"column":7,"nodeType":"1162","messageId":"1163","endLine":57,"endColumn":20},{"ruleId":"1160","severity":1,"message":"1296","line":1,"column":8,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":13},{"ruleId":"1160","severity":1,"message":"1305","line":2,"column":10,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":24},{"ruleId":"1160","severity":1,"message":"1306","line":2,"column":38,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":48},{"ruleId":"1160","severity":1,"message":"1307","line":2,"column":50,"nodeType":"1162","messageId":"1163","endLine":2,"endColumn":63},{"ruleId":"1160","severity":1,"message":"1308","line":4,"column":17,"nodeType":"1162","messageId":"1163","endLine":4,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1309","line":4,"column":30,"nodeType":"1162","messageId":"1163","endLine":4,"endColumn":34},{"ruleId":"1160","severity":1,"message":"1238","line":1,"column":14,"nodeType":"1162","messageId":"1163","endLine":1,"endColumn":22},{"ruleId":"1310","severity":1,"message":"1311","line":9,"column":1,"nodeType":"1312","endLine":11,"endColumn":2},{"ruleId":"1310","severity":1,"message":"1311","line":3,"column":1,"nodeType":"1312","endLine":5,"endColumn":2},{"ruleId":"1156","replacedBy":"1313"},{"ruleId":"1158","replacedBy":"1314"},{"ruleId":"1315","severity":1,"message":"1316","line":200,"column":24,"nodeType":"1317","messageId":"1318","endLine":200,"endColumn":26},{"ruleId":"1315","severity":1,"message":"1316","line":200,"column":44,"nodeType":"1317","messageId":"1318","endLine":200,"endColumn":46},{"ruleId":"1315","severity":1,"message":"1316","line":202,"column":35,"nodeType":"1317","messageId":"1318","endLine":202,"endColumn":37},{"ruleId":"1315","severity":1,"message":"1316","line":202,"column":66,"nodeType":"1317","messageId":"1318","endLine":202,"endColumn":68},{"ruleId":"1310","severity":1,"message":"1311","line":231,"column":1,"nodeType":"1312","endLine":244,"endColumn":2},"no-native-reassign",["1319"],"no-negated-in-lhs",["1320"],"no-unused-vars","'SentRequestsToAddFriends' is defined but never used.","Identifier","unusedVar","'ReceivedRequestsToAddFriend' is defined but never used.","'MessagesStorage' is defined but never used.","'CurrentChat' is defined but never used.","'NumberOfConversations' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["1321"],["1322"],"'cacheMutations' is defined but never used.","React Hook useEffect has a missing dependency: 'setIsAuth'. Either include it or remove the dependency array. If 'setIsAuth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1323"],"React Hook useEffect has missing dependencies: 'fetchCurrentPersonalUser' and 'setCurrentPersonalUser'. Either include them or remove the dependency array.",["1324"],"React Hook useEffect has missing dependencies: 'fetchListContact', 'friends.length', 'setFriends', 'setReceivedRequestsToAddFriend', and 'setSentRequestsToAddFriend'. Either include them or remove the dependency array.",["1325"],"React Hook useEffect has missing dependencies: 'fetchFriends', 'friends', and 'setFriends'. Either include them or remove the dependency array.",["1326"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchChatConversations', 'messagesStorage', 'setInitialMessagesStorage', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user'. Either include them or remove the dependency array.",["1327"],"'NoNotifications' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'i18n.store.data'. Either include it or remove the dependency array.",["1328"],"React Hook useEffect has a missing dependency: 'fetchMorePostsData'. Either include it or remove the dependency array.",["1329"],"'useEffect' is defined but never used.","'subscriptions' is defined but never used.","React Hook useEffect has a missing dependency: 'originData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setContactData' needs the current value of 'originData'.",["1330"],"'user' is assigned a value but never used.","'BsThreeDotsVertical' is defined but never used.",["1319"],["1320"],"'createRef' is defined but never used.","'currentPersonalUser' is assigned a value but never used.","'AiOutlineUsergroupDelete' is defined but never used.","'BiUserVoice' is defined but never used.","React Hook useEffect has missing dependencies: 'removeFriend' and 'updateMutationOnChange'. Either include them or remove the dependency array.",["1331"],"'onRemoveFriend' is assigned a value but never used.","'currentChatVar' is defined but never used.","'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'shouldScrollIntoView'. Either include them or remove the dependency array.",["1332"],"React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'messagesStorage'. Either include them or remove the dependency array.",["1333"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ChainExpression","React Hook useEffect has missing dependencies: 'currentChat._id', 'currentChat.scope', 'fetchMoreMessages', 'messagesStorage', and 'updateMoreMessages'. Either include them or remove the dependency array.",["1334"],"'useContext' is defined but never used.","'useRef' is defined but never used.","'css' is defined but never used.","'LazyLoad' is defined but never used.","'User' is defined but never used.","'Posts' is defined but never used.","'Notifications' is defined but never used.","'NewNotifications' is defined but never used.","'CountNumberNotificationsUnseen' is defined but never used.","'userVar' is defined but never used.","'postsVar' is defined but never used.","'countNumberOfNotificationUnseenVar' is defined but never used.","'notificationsVar' is defined but never used.","'newNotificationsVar' is defined but never used.","'initialState' is defined but never used.","'Link' is defined but never used.","'askLogin' is assigned a value but never used.",["1335"],"React Hook useEffect has a missing dependency: 'post.rawText'. Either include it or remove the dependency array. If 'setEditedEditorState' needs the current value of 'post.rawText', you can also switch to useReducer instead of useState and read 'post.rawText' in the reducer.",["1336"],"'useQuery' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'notificationRef.current'. Either exclude it or remove the dependency array. Mutable values like 'notificationRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1337"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'fetchNotifications' and 'notifications'. Either include them or remove the dependency array.",["1338"],["1319"],["1320"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'originalData' is assigned a value but never used.","'setOriginalData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data', 'fetchMoreContacts', and 'setFriends'. Either include them or remove the dependency array.",["1339"],"'setShowPopup' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_messagesStorage.length', 'fetchMoreConversations', 'messagesStorage', 'setInitialMessagesStorage', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user._id'. Either include them or remove the dependency array.",["1340"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useMemo' is defined but never used.","'Wrapper' is defined but never used.","'searchFriendsLoading' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'searchFriends'. Either include it or remove the dependency array.",["1341"],"React Hook useEffect has missing dependencies: 'isEdited' and 'postEdited'. Either include them or remove the dependency array.",["1342"],"'dragging' is assigned a value but never used.","'HashtagLink' is defined but never used.","React Hook useEffect has a missing dependency: 'post._id'. Either include it or remove the dependency array.",["1343"],"'message' is assigned a value but never used.","'useHistory' is defined but never used.",["1344"],"'colorMode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'comment._id', 'comment.post', 'removeComment', and 'removeResponse'. Either include them or remove the dependency array.",["1345"],"React Hook useCallback has missing dependencies: 'comment.responses.length' and 'onLoadResponses'. Either include them or remove the dependency array.",["1346"],"React Hook useEffect has missing dependencies: 'user._id' and 'user.name'. Either include them or remove the dependency array.",["1347"],["1348"],"React Hook useEffect has a missing dependency: 'removeFocus'. Either include it or remove the dependency array. If 'removeFocus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1349"],"React Hook useCallback has missing dependencies: 'likeResponse' and 'user._id'. Either include them or remove the dependency array.",["1350"],"React Hook useCallback has missing dependencies: 'removeLikeResponse' and 'user._id'. Either include them or remove the dependency array.",["1351"],"'action' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setMessagesStorage', 'updateMessagesStorage', 'updateMessagesStorageToReceivedWhenUserOnline', 'updateMessagesStorageWhenReceiverSeenAllMessages', and 'updatePersonalReceiverWhenReceivedNewMessage'. Either include them or remove the dependency array.",["1352"],"'_' is defined but never used.","'notifications' is assigned a value but never used.","'setReceivedRequestsToAddFriend' is assigned a value but never used.","'setFriends' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateSubscriptionOnChange'. Either include it or remove the dependency array.",["1353"],"'React' is defined but never used.","'personalPosts' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'setCountNumberNotificationsUnseen'. Either exclude it or remove the dependency array. Outer scope values like 'setCountNumberNotificationsUnseen' aren't valid dependencies because mutating them doesn't re-render the component.",["1354"],"React Hook useEffect has missing dependencies: 'updatedAddNotification' and 'updatedRemoveNotification'. Either include them or remove the dependency array.",["1355"],"'ButtonsGroup' is assigned a value but never used.","'ButtonAccept' is assigned a value but never used.","'ButtonDecline' is assigned a value but never used.","'createMuiTheme' is defined but never used.","'makeStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'purple' is defined but never used.","'blue' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["1319"],["1320"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"1356","fix":"1357"},{"desc":"1358","fix":"1359"},{"desc":"1360","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1364","fix":"1365"},{"desc":"1366","fix":"1367"},{"desc":"1368","fix":"1369"},{"desc":"1370","fix":"1371"},{"desc":"1372","fix":"1373"},{"desc":"1374","fix":"1375"},{"desc":"1376","fix":"1377"},{"desc":"1378","fix":"1379"},{"desc":"1380","fix":"1381"},{"desc":"1382","fix":"1383"},{"desc":"1370","fix":"1384"},{"desc":"1385","fix":"1386"},{"desc":"1387","fix":"1388"},{"desc":"1389","fix":"1390"},{"desc":"1391","fix":"1392"},{"desc":"1393","fix":"1394"},{"desc":"1395","fix":"1396"},{"desc":"1397","fix":"1398"},{"desc":"1399","fix":"1400"},{"desc":"1395","fix":"1401"},{"desc":"1402","fix":"1403"},{"desc":"1404","fix":"1405"},{"desc":"1406","fix":"1407"},{"desc":"1395","fix":"1408"},{"desc":"1409","fix":"1410"},{"desc":"1411","fix":"1412"},{"desc":"1413","fix":"1414"},{"desc":"1415","fix":"1416"},{"desc":"1417","fix":"1418"},{"desc":"1419","fix":"1420"},{"desc":"1421","fix":"1422"},"Update the dependencies array to be: [user, posts, fetchPosts]",{"range":"1423","text":"1424"},"Update the dependencies array to be: [user, posts, fetchMore, setFetchMore, fetchPosts]",{"range":"1425","text":"1426"},"Update the dependencies array to be: [user, history, location.state, setIsAuth]",{"range":"1427","text":"1428"},"Update the dependencies array to be: [fetchCurrentPersonalUser, setCurrentPersonalUser, slug]",{"range":"1429","text":"1430"},"Update the dependencies array to be: [user, fetched, setFetched, fetchListContact, friends.length, setSentRequestsToAddFriend, setReceivedRequestsToAddFriend, setFriends]",{"range":"1431","text":"1432"},"Update the dependencies array to be: [fetchFriends, friends, loadingMore, setFriends]",{"range":"1433","text":"1434"},"Update the dependencies array to be: [fetchChatConversations, messagesStorage, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",{"range":"1435","text":"1436"},"Update the dependencies array to be: [i18n.store.data, lang]",{"range":"1437","text":"1438"},"Update the dependencies array to be: [loadingMore, currentPersonalUser, fetchMorePostsData]",{"range":"1439","text":"1440"},"Update the dependencies array to be: [search, friends, originData]",{"range":"1441","text":"1442"},"Update the dependencies array to be: [dialog, currentPersonalUser, removeFriend, updateMutationOnChange]",{"range":"1443","text":"1444"},"Update the dependencies array to be: [chatBoardBodyRef, shouldScrollIntoView]",{"range":"1445","text":"1446"},"Update the dependencies array to be: [chatBoardBodyRef, currentChat, messagesStorage, user]",{"range":"1447","text":"1448"},"Update the dependencies array to be: [currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, updateMoreMessages]",{"range":"1449","text":"1450"},{"range":"1451","text":"1438"},"Update the dependencies array to be: [isEdited, post.rawText]",{"range":"1452","text":"1453"},"Update the dependencies array to be: [openNotificationBoard]",{"range":"1454","text":"1455"},"Update the dependencies array to be: [fetchNotifications, loadingNotificationsMore, notifications]",{"range":"1456","text":"1457"},"Update the dependencies array to be: [data, fetchMoreContacts, loadContactMore, setFriends]",{"range":"1458","text":"1459"},"Update the dependencies array to be: [_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",{"range":"1460","text":"1461"},"Update the dependencies array to be: [searchFriends]",{"range":"1462","text":"1463"},"Update the dependencies array to be: [editorState, isEdited, postEdited]",{"range":"1464","text":"1465"},"Update the dependencies array to be: [post._id]",{"range":"1466","text":"1467"},{"range":"1468","text":"1463"},"Update the dependencies array to be: [comment._id, comment.post, dialog, removeComment, removeResponse]",{"range":"1469","text":"1470"},"Update the dependencies array to be: [comment.responses.length, comment.responsesData?.length, onLoadResponses]",{"range":"1471","text":"1472"},"Update the dependencies array to be: [focus, editorState, response, dataResponse, user.name, user._id]",{"range":"1473","text":"1474"},{"range":"1475","text":"1463"},"Update the dependencies array to be: [focus, removeFocus]",{"range":"1476","text":"1477"},"Update the dependencies array to be: [likeResponse, user._id]",{"range":"1478","text":"1479"},"Update the dependencies array to be: [removeLikeResponse, user._id]",{"range":"1480","text":"1481"},"Update the dependencies array to be: [subscribeChatMessage, user, currentChat, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages, updateMessagesStorageToReceivedWhenUserOnline]",{"range":"1482","text":"1483"},"Update the dependencies array to be: [subscribeUser, user, receivedRequestsToAddFriend, friends, updateSubscriptionOnChange]",{"range":"1484","text":"1485"},"Update the dependencies array to be: [countNumberNotificationsUnseen, fetchCountNumberNotificationsUnseen]",{"range":"1486","text":"1487"},"Update the dependencies array to be: [countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification]",{"range":"1488","text":"1489"},[1772,1785],"[user, posts, fetchPosts]",[2736,2774],"[user, posts, fetchMore, setFetchMore, fetchPosts]",[686,717],"[user, history, location.state, setIsAuth]",[1102,1108],"[fetchCurrentPersonalUser, setCurrentPersonalUser, slug]",[2326,2353],"[user, fetched, setFetched, fetchListContact, friends.length, setSentRequestsToAddFriend, setReceivedRequestsToAddFriend, setFriends]",[3224,3237],"[fetchFriends, friends, loadingMore, setFriends]",[3268,3270],"[fetchChatConversations, messagesStorage, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",[1066,1072],"[i18n.store.data, lang]",[2455,2489],"[loadingMore, currentPersonalUser, fetchMorePostsData]",[1478,1495],"[search, friends, originData]",[3641,3670],"[dialog, currentPersonalUser, removeFriend, updateMutationOnChange]",[1538,1540],"[chatBoardBodyRef, shouldScrollIntoView]",[1911,1974],"[chatBoardBodyRef, currentChat, messagesStorage, user]",[3601,3619],"[currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, updateMoreMessages]",[849,855],[2010,2020],"[isEdited, post.rawText]",[1790,1838],"[openNotificationBoard]",[2777,2803],"[fetchNotifications, loadingNotificationsMore, notifications]",[1290,1307],"[data, fetchMoreContacts, loadContactMore, setFriends]",[4564,4610],"[_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",[1733,1735],"[searchFriends]",[2310,2323],"[editorState, isEdited, postEdited]",[948,950],"[post._id]",[1975,1977],[3146,3154],"[comment._id, comment.post, dialog, removeComment, removeResponse]",[4640,4663],"[comment.responses.length, comment.responsesData?.length, onLoadResponses]",[2391,2435],"[focus, editorState, response, dataResponse, user.name, user._id]",[3401,3403],[3785,3792],"[focus, removeFocus]",[1158,1160],"[likeResponse, user._id]",[1568,1570],"[removeLikeResponse, user._id]",[4399,4440],"[subscribeChatMessage, user, currentChat, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages, updateMessagesStorageToReceivedWhenUserOnline]",[5106,5165],"[subscribeUser, user, receivedRequestsToAddFriend, friends, updateSubscriptionOnChange]",[2777,2898],"[countNumberNotificationsUnseen, fetchCountNumberNotificationsUnseen]",[15919,16056],"[countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification]"]