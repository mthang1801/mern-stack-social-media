[{"D:\\github\\mern-stack-social-media\\frontend\\src\\index.js":"1","D:\\github\\mern-stack-social-media\\frontend\\src\\reportWebVitals.js":"2","D:\\github\\mern-stack-social-media\\frontend\\src\\App\\App.js":"3","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\client.js":"4","D:\\github\\mern-stack-social-media\\frontend\\src\\theme\\index.js":"5","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\cache.js":"6","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\auth.js":"7","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\home.js":"8","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.types.js":"9","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\explores.js":"10","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\personal.js":"11","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\contacts.js":"12","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\notifications.js":"13","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\chats.js":"14","D:\\github\\mern-stack-social-media\\frontend\\src\\App\\GlobalStyles.jsx":"15","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\ErrorBoundary.jsx":"16","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useContactSubscription.jsx":"17","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useUserStatusSubscriptions.jsx":"18","D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\index.js":"19","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\pages.styles.js":"20","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\initialState.js":"21","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.subscriptions.js":"22","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.queries.js":"23","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\currentPersonalUser.caches.js":"24","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.mutations.js":"25","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\chats.styles.js":"26","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\controls\\controls.caches.js":"27","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.queries.js":"28","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.caches.js":"29","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.types.js":"30","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.caches.js":"31","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.caches.js":"32","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.types.js":"33","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.types.js":"34","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.caches.js":"35","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\Layout.jsx":"36","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useHomePostsSubscription.jsx":"37","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\MainBody.jsx":"38","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.caches.js":"39","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.subscriptions.js":"40","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useChatSubscriptions.jsx":"41","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\notifications.styles.jsx":"42","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\SignUp.jsx":"43","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\HomeSidebar.jsx":"44","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\SignIn.jsx":"45","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendsBoard.jsx":"46","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonToggleFriendsList.jsx":"47","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalHeading.jsx":"48","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditor.jsx":"49","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Global\\useLanguage.jsx":"50","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalPosts.jsx":"51","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Posts.jsx":"52","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\SentRequestsToAddFriend.jsx":"53","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Conversations.jsx":"54","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\ReceivedRequestsToAddFriend.jsx":"55","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\FriendsList.jsx":"56","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardRequestAuth.jsx":"57","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Contact.jsx":"58","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\MenuChat.jsx":"59","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\NotificationItem.jsx":"60","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.subscriptions.js":"61","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.queries.js":"62","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.mutations.js":"63","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.subscriptions.js":"64","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.queries.js":"65","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.mutations.js":"66","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.types.js":"67","D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\notificationContent.js":"68","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\AlertDialogSlide.jsx":"69","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Aside\\Aside.jsx":"70","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\styles\\MainBody.styles.jsx":"71","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\useMenuList.jsx":"72","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoard.jsx":"73","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonSignUp.jsx":"74","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Search.jsx":"75","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ListContacts.jsx":"76","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonLogin.jsx":"77","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\ContactItem.jsx":"78","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\Contact.styles.jsx":"79","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomMaterialButton.jsx":"80","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\styles\\NotificationItem.styles.jsx":"81","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\MenuChat.styles.jsx":"82","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Chat.styles.jsx":"83","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.subscriptions.js":"84","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.mutations.js":"85","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\MenuList.jsx":"86","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardBody.jsx":"87","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardFooter.jsx":"88","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ContactItem.jsx":"89","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ListContacts.styles.jsx":"90","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonDefault.jsx":"91","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Search.styles.jsx":"92","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\hook\\usePopupActions.jsx":"93","D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\generateBase64Image.js":"94","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\ThreeDotsSetting.jsx":"95","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Bubble.jsx":"96","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ContactItem.styles.jsx":"97","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardFooter.styles.jsx":"98","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardBody.styles.jsx":"99","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Bubble.styles.jsx":"100","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\ThreeDotsSetting.styles.jsx":"101","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardHeading.jsx":"102","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoard.styles.jsx":"103","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ListConversations.jsx":"104","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCard.jsx":"105","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\IntroductionBox.jsx":"106","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\Auth.utility.js":"107","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalPosts.styles.jsx":"108","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditorHeader.jsx":"109","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditorBody.jsx":"110","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditor.styles.jsx":"111","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalHeadingContact.jsx":"112","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalHeading.styles.jsx":"113","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendsList.jsx":"114","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\FacebookAuth.jsx":"115","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\GoogleRecapcha.jsx":"116","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\GoogleAuth.jsx":"117","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\AuthForm.jsx":"118","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardUtility.jsx":"119","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardProfile.jsx":"120","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardHeading.styles.jsx":"121","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ConversationItem.jsx":"122","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\IntroductionBox.styles.jsx":"123","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\EditPostDialog.jsx":"124","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardFooter.jsx":"125","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Comments.jsx":"126","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardBody.jsx":"127","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardHeader.jsx":"128","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditorHeader.styles.jsx":"129","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\ImagesCarousel.jsx":"130","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalHeadingContact.styles.jsx":"131","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\useDraftEditorPlugin.jsx":"132","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditorBody.styles.jsx":"133","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendItem.jsx":"134","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ListConversations.styles.jsx":"135","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCard.styles.jsx":"136","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ConversationItem.styles.jsx":"137","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\EditPostDialog.styles.jsx":"138","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentEditor.jsx":"139","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentItem.jsx":"140","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\Comments.styles.jsx":"141","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardBody.styles.jsx":"142","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardFooter.styles.jsx":"143","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\Dropdown.styles.jsx":"144","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonDefaultCircle.jsx":"145","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\ImagesCarousel.styles.jsx":"146","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardHeader.styles.jsx":"147","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\useDraftEditorPlugin.styles.jsx":"148","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.mutations.js":"149","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.queries.js":"150","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\FriendItem.styles.jsx":"151","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomButton.jsx":"152","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Header.jsx":"153","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentEditor.styles.jsx":"154","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentCard.jsx":"155","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Responses.jsx":"156","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\ResponseEditor.jsx":"157","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentItem.styles.jsx":"158","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomButton.styles.jsx":"159","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Brand.jsx":"160","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\MessengerAndNotification.jsx":"161","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Navigation.jsx":"162","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Search.jsx":"163","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonMenu.jsx":"164","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\SettingAccount.jsx":"165","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentCard.styles.jsx":"166","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\FlashPopUpNotification.jsx":"167","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Tooltips.jsx":"168","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useNotificationsSubscription.jsx":"169","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\NotificationsBoard.jsx":"170","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonColorMode.jsx":"171","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Header.styles.jsx":"172","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\NotificationsBoard.styles.jsx":"173","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\styles\\FlashPopUpNotification.styles.jsx":"174","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\Notifications.jsx":"175","D:\\github\\mern-stack-social-media\\frontend\\src\\constant\\constant.js":"176","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useCurrentPersonalUser.supscription.jsx":"177","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\FriendsList.styles.jsx":"178","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\Sidebar.styles.jsx":"179","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CartProfile.styles.jsx":"180","D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\storage.js":"181","D:\\github\\mern-stack-social-media\\frontend\\src\\theme\\theme.js":"182","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CardRequestAuth.styles.jsx":"183","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CardUtility.styles.jsx":"184","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Navigation.styles.jsx":"185","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\SettingAccount.styles.jsx":"186","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\styles\\MenuList.styles.jsx":"187","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\styles\\Layout.styles.jsx":"188","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Search.styles.jsx":"189","D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\i18n.js":"190","D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\translation.en.js":"191","D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\translation.vi.js":"192","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\styles\\FacebookAuth.styles.jsx":"193"},{"size":848,"mtime":1638061744922,"results":"194","hashOfConfig":"195"},{"size":364,"mtime":1637717735369,"results":"196","hashOfConfig":"195"},{"size":2423,"mtime":1638036557589,"results":"197","hashOfConfig":"195"},{"size":1628,"mtime":1637971875236,"results":"198","hashOfConfig":"195"},{"size":1425,"mtime":1638039788059,"results":"199","hashOfConfig":"195"},{"size":3385,"mtime":1637717731688,"results":"200","hashOfConfig":"195"},{"size":1060,"mtime":1637717735236,"results":"201","hashOfConfig":"195"},{"size":4063,"mtime":1638011176025,"results":"202","hashOfConfig":"195"},{"size":282,"mtime":1637975087722,"results":"203","hashOfConfig":"195"},{"size":4839,"mtime":1637717735287,"results":"204","hashOfConfig":"195"},{"size":1367,"mtime":1637985977134,"results":"205","hashOfConfig":"195"},{"size":4426,"mtime":1638066811936,"results":"206","hashOfConfig":"195"},{"size":3393,"mtime":1637717735320,"results":"207","hashOfConfig":"195"},{"size":3832,"mtime":1637772449821,"results":"208","hashOfConfig":"195"},{"size":11672,"mtime":1638039039646,"results":"209","hashOfConfig":"195"},{"size":486,"mtime":1637717734910,"results":"210","hashOfConfig":"195"},{"size":3070,"mtime":1637717735001,"results":"211","hashOfConfig":"195"},{"size":1315,"mtime":1637741330763,"results":"212","hashOfConfig":"195"},{"size":1115,"mtime":1638062278424,"results":"213","hashOfConfig":"195"},{"size":1298,"mtime":1638010721984,"results":"214","hashOfConfig":"195"},{"size":585,"mtime":1637717731908,"results":"215","hashOfConfig":"195"},{"size":910,"mtime":1637717732635,"results":"216","hashOfConfig":"195"},{"size":1851,"mtime":1637977796031,"results":"217","hashOfConfig":"195"},{"size":130,"mtime":1637717732576,"results":"218","hashOfConfig":"195"},{"size":1386,"mtime":1637717732611,"results":"219","hashOfConfig":"195"},{"size":1001,"mtime":1638009749634,"results":"220","hashOfConfig":"195"},{"size":569,"mtime":1637717731889,"results":"221","hashOfConfig":"195"},{"size":1371,"mtime":1637939754884,"results":"222","hashOfConfig":"195"},{"size":23759,"mtime":1637940361230,"results":"223","hashOfConfig":"195"},{"size":463,"mtime":1637717731883,"results":"224","hashOfConfig":"195"},{"size":4722,"mtime":1637748157931,"results":"225","hashOfConfig":"195"},{"size":5521,"mtime":1637824743790,"results":"226","hashOfConfig":"195"},{"size":870,"mtime":1637909835415,"results":"227","hashOfConfig":"195"},{"size":611,"mtime":1637717731800,"results":"228","hashOfConfig":"195"},{"size":4213,"mtime":1637762755389,"results":"229","hashOfConfig":"195"},{"size":1166,"mtime":1638035265000,"results":"230","hashOfConfig":"195"},{"size":3898,"mtime":1637919595818,"results":"231","hashOfConfig":"195"},{"size":706,"mtime":1638035302754,"results":"232","hashOfConfig":"195"},{"size":2620,"mtime":1637717732599,"results":"233","hashOfConfig":"195"},{"size":1166,"mtime":1637717731878,"results":"234","hashOfConfig":"195"},{"size":4278,"mtime":1637717734987,"results":"235","hashOfConfig":"195"},{"size":774,"mtime":1638009749637,"results":"236","hashOfConfig":"195"},{"size":9374,"mtime":1637978143553,"results":"237","hashOfConfig":"195"},{"size":452,"mtime":1637998619925,"results":"238","hashOfConfig":"195"},{"size":5733,"mtime":1637970572649,"results":"239","hashOfConfig":"195"},{"size":679,"mtime":1638008865305,"results":"240","hashOfConfig":"195"},{"size":1175,"mtime":1638063478009,"results":"241","hashOfConfig":"195"},{"size":2451,"mtime":1638066527919,"results":"242","hashOfConfig":"195"},{"size":8096,"mtime":1638064035388,"results":"243","hashOfConfig":"195"},{"size":268,"mtime":1637717733850,"results":"244","hashOfConfig":"195"},{"size":2919,"mtime":1637987415244,"results":"245","hashOfConfig":"195"},{"size":389,"mtime":1637717734598,"results":"246","hashOfConfig":"195"},{"size":1969,"mtime":1638063378846,"results":"247","hashOfConfig":"195"},{"size":2552,"mtime":1637717733235,"results":"248","hashOfConfig":"195"},{"size":2145,"mtime":1638063406576,"results":"249","hashOfConfig":"195"},{"size":1807,"mtime":1638063343080,"results":"250","hashOfConfig":"195"},{"size":784,"mtime":1638025179778,"results":"251","hashOfConfig":"195"},{"size":3797,"mtime":1638025809743,"results":"252","hashOfConfig":"195"},{"size":452,"mtime":1638063147427,"results":"253","hashOfConfig":"195"},{"size":5528,"mtime":1638066319907,"results":"254","hashOfConfig":"195"},{"size":1956,"mtime":1637717731793,"results":"255","hashOfConfig":"195"},{"size":3208,"mtime":1637717731775,"results":"256","hashOfConfig":"195"},{"size":2363,"mtime":1637717731753,"results":"257","hashOfConfig":"195"},{"size":8421,"mtime":1637895202804,"results":"258","hashOfConfig":"195"},{"size":560,"mtime":1637717731943,"results":"259","hashOfConfig":"195"},{"size":232,"mtime":1637717731933,"results":"260","hashOfConfig":"195"},{"size":649,"mtime":1637895504613,"results":"261","hashOfConfig":"195"},{"size":3223,"mtime":1638062147203,"results":"262","hashOfConfig":"195"},{"size":1604,"mtime":1637921475720,"results":"263","hashOfConfig":"195"},{"size":760,"mtime":1638009749597,"results":"264","hashOfConfig":"195"},{"size":717,"mtime":1638010727836,"results":"265","hashOfConfig":"195"},{"size":433,"mtime":1638066997342,"results":"266","hashOfConfig":"195"},{"size":422,"mtime":1637717733052,"results":"267","hashOfConfig":"195"},{"size":821,"mtime":1638009749634,"results":"268","hashOfConfig":"195"},{"size":531,"mtime":1638037736195,"results":"269","hashOfConfig":"195"},{"size":1631,"mtime":1637717733257,"results":"270","hashOfConfig":"195"},{"size":821,"mtime":1638036527237,"results":"271","hashOfConfig":"195"},{"size":5208,"mtime":1638063178700,"results":"272","hashOfConfig":"195"},{"size":2055,"mtime":1638027724269,"results":"273","hashOfConfig":"195"},{"size":740,"mtime":1637717733827,"results":"274","hashOfConfig":"195"},{"size":1632,"mtime":1638032206374,"results":"275","hashOfConfig":"195"},{"size":331,"mtime":1638009749670,"results":"276","hashOfConfig":"195"},{"size":1500,"mtime":1638027100715,"results":"277","hashOfConfig":"195"},{"size":2595,"mtime":1637913132990,"results":"278","hashOfConfig":"195"},{"size":4224,"mtime":1637824536697,"results":"279","hashOfConfig":"195"},{"size":1328,"mtime":1638031761370,"results":"280","hashOfConfig":"195"},{"size":4430,"mtime":1638025611001,"results":"281","hashOfConfig":"195"},{"size":10148,"mtime":1638063351512,"results":"282","hashOfConfig":"195"},{"size":2502,"mtime":1638026326021,"results":"283","hashOfConfig":"195"},{"size":216,"mtime":1638009749670,"results":"284","hashOfConfig":"195"},{"size":2855,"mtime":1638029018623,"results":"285","hashOfConfig":"195"},{"size":875,"mtime":1638037918709,"results":"286","hashOfConfig":"195"},{"size":470,"mtime":1637717733244,"results":"287","hashOfConfig":"195"},{"size":434,"mtime":1637717735413,"results":"288","hashOfConfig":"195"},{"size":262,"mtime":1637717734899,"results":"289","hashOfConfig":"195"},{"size":3789,"mtime":1637717733046,"results":"290","hashOfConfig":"195"},{"size":1490,"mtime":1638027277723,"results":"291","hashOfConfig":"195"},{"size":15323,"mtime":1638025759385,"results":"292","hashOfConfig":"195"},{"size":246,"mtime":1638025669786,"results":"293","hashOfConfig":"195"},{"size":3254,"mtime":1638009749670,"results":"294","hashOfConfig":"195"},{"size":1139,"mtime":1638009749669,"results":"295","hashOfConfig":"195"},{"size":1527,"mtime":1637717733151,"results":"296","hashOfConfig":"195"},{"size":338,"mtime":1638009749669,"results":"297","hashOfConfig":"195"},{"size":5002,"mtime":1637717733277,"results":"298","hashOfConfig":"195"},{"size":2744,"mtime":1638066632155,"results":"299","hashOfConfig":"195"},{"size":2491,"mtime":1638032794118,"results":"300","hashOfConfig":"195"},{"size":1411,"mtime":1637717732749,"results":"301","hashOfConfig":"195"},{"size":594,"mtime":1638009749669,"results":"302","hashOfConfig":"195"},{"size":3059,"mtime":1638064145896,"results":"303","hashOfConfig":"195"},{"size":4406,"mtime":1638066736546,"results":"304","hashOfConfig":"195"},{"size":682,"mtime":1638033734770,"results":"305","hashOfConfig":"195"},{"size":13321,"mtime":1638033196657,"results":"306","hashOfConfig":"195"},{"size":2345,"mtime":1638038703406,"results":"307","hashOfConfig":"195"},{"size":3138,"mtime":1638066774605,"results":"308","hashOfConfig":"195"},{"size":774,"mtime":1638062456053,"results":"309","hashOfConfig":"195"},{"size":478,"mtime":1637717732840,"results":"310","hashOfConfig":"195"},{"size":1349,"mtime":1638062743739,"results":"311","hashOfConfig":"195"},{"size":1894,"mtime":1638009749634,"results":"312","hashOfConfig":"195"},{"size":957,"mtime":1638063052865,"results":"313","hashOfConfig":"195"},{"size":1570,"mtime":1638024436962,"results":"314","hashOfConfig":"195"},{"size":1215,"mtime":1638009749670,"results":"315","hashOfConfig":"195"},{"size":3033,"mtime":1638027080872,"results":"316","hashOfConfig":"195"},{"size":1087,"mtime":1638032885627,"results":"317","hashOfConfig":"195"},{"size":694,"mtime":1637717734401,"results":"318","hashOfConfig":"195"},{"size":3470,"mtime":1638066654488,"results":"319","hashOfConfig":"195"},{"size":544,"mtime":1637717734395,"results":"320","hashOfConfig":"195"},{"size":1611,"mtime":1637717734428,"results":"321","hashOfConfig":"195"},{"size":3364,"mtime":1638064427276,"results":"322","hashOfConfig":"195"},{"size":2473,"mtime":1638033880016,"results":"323","hashOfConfig":"195"},{"size":1497,"mtime":1637717734859,"results":"324","hashOfConfig":"195"},{"size":1986,"mtime":1638033988711,"results":"325","hashOfConfig":"195"},{"size":2119,"mtime":1637717734760,"results":"326","hashOfConfig":"195"},{"size":1047,"mtime":1638009750006,"results":"327","hashOfConfig":"195"},{"size":659,"mtime":1638034699150,"results":"328","hashOfConfig":"195"},{"size":149,"mtime":1638009749670,"results":"329","hashOfConfig":"195"},{"size":536,"mtime":1638060848600,"results":"330","hashOfConfig":"195"},{"size":2131,"mtime":1638027292853,"results":"331","hashOfConfig":"195"},{"size":431,"mtime":1638009749669,"results":"332","hashOfConfig":"195"},{"size":5670,"mtime":1638066565571,"results":"333","hashOfConfig":"195"},{"size":6906,"mtime":1638066856221,"results":"334","hashOfConfig":"195"},{"size":107,"mtime":1638009749669,"results":"335","hashOfConfig":"195"},{"size":915,"mtime":1638009749669,"results":"336","hashOfConfig":"195"},{"size":2286,"mtime":1638060900138,"results":"337","hashOfConfig":"195"},{"size":1169,"mtime":1638035122170,"results":"338","hashOfConfig":"195"},{"size":1079,"mtime":1638038555617,"results":"339","hashOfConfig":"195"},{"size":420,"mtime":1638009749669,"results":"340","hashOfConfig":"195"},{"size":970,"mtime":1638034670909,"results":"341","hashOfConfig":"195"},{"size":368,"mtime":1638009749669,"results":"342","hashOfConfig":"195"},{"size":4391,"mtime":1637717731857,"results":"343","hashOfConfig":"195"},{"size":1201,"mtime":1637717731869,"results":"344","hashOfConfig":"195"},{"size":1151,"mtime":1638034775096,"results":"345","hashOfConfig":"195"},{"size":645,"mtime":1637717733742,"results":"346","hashOfConfig":"195"},{"size":5192,"mtime":1638038051789,"results":"347","hashOfConfig":"195"},{"size":908,"mtime":1638034475748,"results":"348","hashOfConfig":"195"},{"size":2369,"mtime":1638066456079,"results":"349","hashOfConfig":"195"},{"size":1484,"mtime":1638066697705,"results":"350","hashOfConfig":"195"},{"size":7275,"mtime":1638066677930,"results":"351","hashOfConfig":"195"},{"size":892,"mtime":1638009749637,"results":"352","hashOfConfig":"195"},{"size":3382,"mtime":1638009749634,"results":"353","hashOfConfig":"195"},{"size":511,"mtime":1638009749634,"results":"354","hashOfConfig":"195"},{"size":6006,"mtime":1638029619951,"results":"355","hashOfConfig":"195"},{"size":1231,"mtime":1638063601522,"results":"356","hashOfConfig":"195"},{"size":736,"mtime":1638038205900,"results":"357","hashOfConfig":"195"},{"size":846,"mtime":1638029410192,"results":"358","hashOfConfig":"195"},{"size":4133,"mtime":1638035935853,"results":"359","hashOfConfig":"195"},{"size":1920,"mtime":1638033984158,"results":"360","hashOfConfig":"195"},{"size":1744,"mtime":1638066144513,"results":"361","hashOfConfig":"195"},{"size":1285,"mtime":1638009749634,"results":"362","hashOfConfig":"195"},{"size":15481,"mtime":1637910397264,"results":"363","hashOfConfig":"195"},{"size":1187,"mtime":1638030139275,"results":"364","hashOfConfig":"195"},{"size":1287,"mtime":1638035966836,"results":"365","hashOfConfig":"195"},{"size":972,"mtime":1638029649990,"results":"366","hashOfConfig":"195"},{"size":624,"mtime":1638030141502,"results":"367","hashOfConfig":"195"},{"size":1449,"mtime":1638031904703,"results":"368","hashOfConfig":"195"},{"size":594,"mtime":1638009749597,"results":"369","hashOfConfig":"195"},{"size":367,"mtime":1637861294659,"results":"370","hashOfConfig":"195"},{"size":3971,"mtime":1637919895662,"results":"371","hashOfConfig":"195"},{"size":2670,"mtime":1638039753294,"results":"372","hashOfConfig":"195"},{"size":323,"mtime":1638009749597,"results":"373","hashOfConfig":"195"},{"size":1239,"mtime":1638036727116,"results":"374","hashOfConfig":"195"},{"size":360,"mtime":1638039788114,"results":"375","hashOfConfig":"195"},{"size":1236,"mtime":1638060779845,"results":"376","hashOfConfig":"195"},{"size":695,"mtime":1638039786126,"results":"377","hashOfConfig":"195"},{"size":403,"mtime":1638039786136,"results":"378","hashOfConfig":"195"},{"size":1029,"mtime":1638039786872,"results":"379","hashOfConfig":"195"},{"size":1984,"mtime":1638039786901,"results":"380","hashOfConfig":"195"},{"size":1158,"mtime":1638039786928,"results":"381","hashOfConfig":"195"},{"size":603,"mtime":1638039787744,"results":"382","hashOfConfig":"195"},{"size":1333,"mtime":1638039786888,"results":"383","hashOfConfig":"195"},{"size":316,"mtime":1638062034825,"results":"384","hashOfConfig":"195"},{"size":9524,"mtime":1638066274691,"results":"385","hashOfConfig":"195"},{"size":10043,"mtime":1638066494730,"results":"386","hashOfConfig":"195"},{"size":667,"mtime":1638062418880,"results":"387","hashOfConfig":"195"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4tfh7m",{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"392"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"392"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"392"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"392"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"392"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"392"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"392"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"392"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"392"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"392"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"392"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"392"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"392"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"392"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"392"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"392"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"511","messages":"512","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"392"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"392"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"551","messages":"552","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"392"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"392"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"392"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"392"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"392"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"392"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"392"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"624","messages":"625","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"392"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"392"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"644","messages":"645","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"654","messages":"655","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"392"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"392"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"392"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"392"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"392"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"699","messages":"700","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"392"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"392"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"735","messages":"736","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"737","messages":"738","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"392"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"392"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"392"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"392"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"392"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"392"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"392"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"784","usedDeprecatedRules":"392"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"392"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796","usedDeprecatedRules":"392"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\github\\mern-stack-social-media\\frontend\\src\\index.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\reportWebVitals.js",[],["819","820"],"D:\\github\\mern-stack-social-media\\frontend\\src\\App\\App.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\client.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\theme\\index.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\cache.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\auth.js",["821"],"import React, { lazy, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { userVar } from '../apollo/cache';\nimport { useReactiveVar } from '@apollo/client';\nconst SignIn = lazy(() => import('../components/Auth/SignIn'));\nconst SignUp = lazy(() => import('../components/Auth/SignUp'));\n\nconst AuthPage = ({ setIsAuth, ...props }) => {\n  const { match, location, history } = props;\n  const user = useReactiveVar(userVar);\n  useEffect(() => {\n    if (user && location.state && location.state.from) {\n      history.replace(location.state.from);\n      setIsAuth(true);\n    } else if (user) {\n      history.replace('/');\n      setIsAuth(Date.now());\n    }\n  }, [user, history, location.state]);\n  return (\n    <Switch>\n      <Route\n        exact\n        path={match.path}\n        render={(props) => <SignIn authPath={match.path} {...props} />}\n      />\n      <Route\n        path={`${match.path}/signup`}\n        render={(props) => <SignUp authPath={match.path} {...props} />}\n      />\n    </Switch>\n  );\n};\n\nexport default AuthPage;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\home.js",["822","823","824"],"import React, { useEffect, useState, useCallback } from 'react';\nimport Layout from '../containers/Layout';\nimport PostEditor from '../components/Post/PostEditor/PostEditor';\nimport HomeSidebar from '../components/Sidebar/HomeSidebar';\nimport MainBody from '../containers/MainBody';\nimport FriendsBoard from '../components/Sidebar/FriendsBoard';\nimport { useReactiveVar, useQuery } from '@apollo/client';\nimport ButtonToggleFriendsList from '../components/Controls/ButtonToggleFriendsList';\nimport {\n  MainContent,\n  MainContentLeftSide,\n  MainContentRightSide,\n} from './styles/pages.styles.js';\nimport Posts from '../components/Post/Posts';\nimport useHomePostsSubscription from '../hooks/useHomePostsSubscription';\nimport LazyLoad from 'react-lazyload';\nimport { userVar, toggleFriendsBoardVar, postsVar } from '../apollo/cache';\nimport { setToggleFriendsBoard } from '../apollo/controls/controls.caches';\nimport { FETCH_POSTS } from '../apollo/post/post.queries';\nimport { addFetchedPostToCache } from '../apollo/post/post.caches';\nimport constant from '../constant/constant';\nimport Backdrop from '@material-ui/core/Backdrop';\nconst Home = () => {\n  const user = useReactiveVar(userVar);\n  const toggleFriendsBoard = useReactiveVar(toggleFriendsBoardVar);\n  const posts = useReactiveVar(postsVar);\n  const [fetched, setFetched] = useState(false);\n  const [loading, setLoading] = useState();\n  const [fetchMore, setFetchMore] = useState(false);\n  useHomePostsSubscription();\n  const { refetch: fetchPosts, subscribeToMore: subcscribePosts } = useQuery(\n    FETCH_POSTS,\n    {\n      fetchPolicy: 'no-cache',\n      skip: true,\n    }\n  );\n  useEffect(() => {\n    if (!posts.length && user && !fetched) {\n      setLoading(true);\n      setFetched(true);\n      fetchPosts().then(({ data }) => {\n        if (data) {\n          addFetchedPostToCache(data.fetchPosts);\n        }\n        setLoading(false);\n      });\n    }\n  }, [user, posts, fetched]);\n\n  useEffect(() => {\n    let isScrolling;\n    function onTrackUserScrolled(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { clientHeight, scrollTop, scrollHeight } =\n          document.documentElement;\n        if (clientHeight + scrollTop > scrollHeight * 0.8) {\n          setFetchMore(true);\n        }\n      }, 66);\n    }\n    window.addEventListener('scroll', onTrackUserScrolled);\n    return () => {\n      clearTimeout(isScrolling);\n      window.removeEventListener('scroll', onTrackUserScrolled);\n    };\n  });\n\n  useEffect(() => {\n    if (user && fetchMore) {\n      const skip = posts.length;\n      const limit = constant.REACT_APP_POSTS_PER_PAGE;\n      fetchPosts({ skip, limit }).then(({ data: { fetchPosts } }) => {\n        if (fetchPosts) {\n          addFetchedPostToCache(fetchPosts);\n        }\n        setFetchMore(false);\n      });\n    }\n  }, [user, posts, fetchMore, setFetchMore]);\n\n  const handleOpenFriendsList = useCallback(() => {\n    setToggleFriendsBoard();\n  }, []);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent openFriendBoard={toggleFriendsBoard}>\n          <MainContentLeftSide>\n            {user && (\n              <LazyLoad once>\n                <PostEditor />\n              </LazyLoad>\n            )}\n            {loading && <div>Loading post</div>}\n            {posts.length ? (\n              <LazyLoad>\n                <Posts posts={posts} />\n              </LazyLoad>\n            ) : null}\n          </MainContentLeftSide>\n          <MainContentRightSide>\n            <HomeSidebar user={user} />\n          </MainContentRightSide>\n        </MainContent>\n        {user && (\n          <>\n            <Backdrop\n              open={toggleFriendsBoard}\n              style={{ zIndex: 9998 }}\n              onClick={() => toggleFriendsBoardVar(!toggleFriendsBoard)}\n            />\n            <FriendsBoard />\n            <ButtonToggleFriendsList\n              hide={toggleFriendsBoard}\n              onClick={handleOpenFriendsList}\n            />\n          </>\n        )}\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default Home;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\explores.js",["825"],"import React, { useState } from 'react';\nimport { EditorState } from 'draft-js';\nimport Editor from '@draft-js-plugins/editor';\nimport createLinkifyPlugin from '@draft-js-plugins/linkify';\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from '@draft-js-plugins/mention';\nimport createEmojiPlugin from '@draft-js-plugins/emoji';\nconst emojiPlugin = createEmojiPlugin();\nconst { EmojiSelect, EmojiSuggestions } = emojiPlugin;\nconst linkifyPlugin = createLinkifyPlugin({\n  component(props) {\n    return <a {...props} onClick={() => alert('Clicked on Link!')} />;\n  },\n});\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [linkifyPlugin, mentionPlugin, emojiPlugin];\n\nconst Linkify = () => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n\n  const onOpenChange = React.useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = React.useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n  return (\n    <div className=\"wrapper\">\n      <h2 style={{ color: '#43a047' }}>Draftjs Linkify</h2>\n      <Editor\n        editorState={editorState}\n        onChange={setEditorState}\n        plugins={plugins}\n      />\n      <MentionSuggestions\n        open={open}\n        suggestions={suggestions}\n        onOpenChange={onOpenChange}\n        onSearchChange={onSearchChange}\n      />\n      <EmojiSuggestions />\n      <EmojiSelect />\n    </div>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: 'Matthewwqeeqs Russell',\n    email: 'matthew.russell@google.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg',\n  },\n  {\n    id: 1230,\n    name: 'Juliasadaw Krispel-Samsel',\n    email: 'julian.krispel@google.com',\n    avatar: 'https://avatars2.githubusercontent.com/u/1188186?v=3&s=400',\n  },\n  {\n    id: 66,\n    name: 'Jyotiewq Puri',\n    email: 'jyoti@yahoo.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/2182307?v=3&s=400',\n  },\n  {\n    id: 905,\n    name: 'Maxcxzc Stoiber',\n    email: 'max.stoiber@university.edu',\n    avatar:\n      'https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg',\n  },\n  {\n    id: 54111,\n    name: 'Nikeq Graf',\n    email: 'info@nik-graf.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/223045?v=3&s=400',\n  },\n  {\n    id: 22,\n    name: 'Pascalewq Brandt',\n    email: 'pascalbrandt@fastmail.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png',\n  },\n  {\n    id: 3216361,\n    name: 'Matthewewqeq Russell',\n    email: 'matthew.russell@google.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg',\n  },\n  {\n    id: 192365,\n    name: 'Julianewqeq Krispel-Samsel',\n    email: 'julian.krispel@google.com',\n    avatar: 'https://avatars2.githubusercontent.com/u/1188186?v=3&s=400',\n  },\n  {\n    id: 23648,\n    name: 'Jyotiewqeqw Puri',\n    email: 'jyoti@yahoo.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/2182307?v=3&s=400',\n  },\n  {\n    id: 36812,\n    name: 'Maxewqeq Stoiber',\n    email: 'max.stoiber@university.edu',\n    avatar:\n      'https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg',\n  },\n  {\n    id: 789327,\n    name: 'Nikewqewqad Graf',\n    email: 'info@nik-graf.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/223045?v=3&s=400',\n  },\n  {\n    id: 32131,\n    name: 'Pascalsadwq Brandt',\n    email: 'pascalbrandt@fastmail.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png',\n  },\n  {\n    id: 121312,\n    name: 'Matthewewqe Russell',\n    email: 'matthew.russell@google.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg',\n  },\n  {\n    id: 125134,\n    name: 'Julianewq Krispel-Samsel',\n    email: 'julian.krispel@google.com',\n    avatar: 'https://avatars2.githubusercontent.com/u/1188186?v=3&s=400',\n  },\n  {\n    id: 3213214,\n    name: 'Jyotiasd Puri',\n    email: 'jyoti@yahoo.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/2182307?v=3&s=400',\n  },\n  {\n    id: 65361,\n    name: 'Maxewq Stoiber',\n    email: 'max.stoiber@university.edu',\n    avatar:\n      'https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg',\n  },\n  {\n    id: 5321,\n    name: 'Nikewq Graf',\n    email: 'info@nik-graf.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/223045?v=3&s=400',\n  },\n  {\n    id: 43,\n    name: 'Pascalewq Brandt',\n    email: 'pascalbrandt@fastmail.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png',\n  },\n];\n\nexport default Linkify;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\personal.js",["826"],"import React, { useEffect, useState } from 'react';\nimport PersonalHeading from '../components/Personal/PersonalHeading';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport { currentPersonalUserVar } from '../apollo/cache';\nimport { FETCH_PERSONAL_USER } from '../apollo/user/user.types';\nimport Layout from '../containers/Layout';\nimport { setCurrentPersonalUser } from '../apollo/user/currentPersonalUser.caches';\nimport PersonalPosts from '../components/Personal/PersonalPosts';\nimport useCurrentPersonalUser from '../hooks/useCurrentPersonalUser.supscription';\nconst PersonalPage = (props) => {\n  const { slug } = props.match.params;\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const { refetch: fetchCurrentPersonalUser } = useQuery(FETCH_PERSONAL_USER, {\n    skip: true,\n  });\n\n  useCurrentPersonalUser();\n  const [fetched, setFetched] = useState(false);\n  useEffect(() => {\n    let _mounted = true;\n    fetchCurrentPersonalUser({ slug }).then(({ data }) => {\n      if (data && _mounted) {\n        setCurrentPersonalUser(data.fetchPersonalUser);\n        setFetched(true);\n      }\n    });\n    return () => (_mounted = false);\n  }, [slug]);\n\n  if (!currentPersonalUser || !fetched) return null;\n  return (\n    <Layout>\n      <PersonalHeading />\n      <PersonalPosts />\n    </Layout>\n  );\n};\n\nexport default PersonalPage;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\contacts.js",["827","828","829","830"],"D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\notifications.js",["831","832"],"import React, { useEffect, useState } from 'react';\nimport Layout from '../containers/Layout';\nimport {\n  Wrapper,\n  NotificationsContent,\n  OtherContents,\n} from './styles/notifications.styles';\nimport NotificationItem from '../components/Notification/NotificationItem';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport { userVar, notificationsVar } from '../apollo/cache';\nimport CardRequestAuth from '../components/Card/CardRequestAuth';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport MainBody from '../containers/MainBody';\nimport { FETCH_NOTIFICATIONS } from '../apollo/notification/notification.types';\nimport {\n  addNotificationsToNotifcationsList,\n  setNotifications,\n} from '../apollo/notification/notification.caches';\nimport constant from '../constant/constant';\nconst NotificationsPage = () => {\n  const user = useReactiveVar(userVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const [fetchedNotifications, setFetchedNotifications] = useState(false);\n  const [loadingNotifications, setLoadingNotifications] = useState(true);\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: 'cache-and-network',\n    skip: true,\n  });\n\n  useEffect(() => {\n    if (\n      !fetchedNotifications &&\n      user?.notifications?.length &&\n      !notifications.length\n    ) {\n      fetchNotifications()\n        .then(({ data }) => {\n          console.log(data);\n          if (data) {\n            setNotifications(data.fetchNotifications);\n            setLoadingNotifications(false);\n            setFetchedNotifications(true);\n          }\n        })\n        .catch(() => {\n          setLoadingNotifications(false);\n          setFetchedNotifications(true);\n        });\n    } else if (!fetchedNotifications && notifications.length) {\n      setFetchedNotifications(true);\n      setLoadingNotifications(false);\n    }\n  }, [\n    fetchedNotifications,\n    user,\n    user?.notifications?.length && notifications,\n  ]);\n\n  const fetchMoreNotifications = () => {\n    const skip = notifications.length;\n    const limit = constant.REACT_APP_NOTIFICATIONS_PER_PAGE;\n    fetchNotifications({ skip, limit }).then(({ data }) => {\n      if (data) {\n        addNotificationsToNotifcationsList(data.fetchNotifications);\n      }\n    });\n  };\n\n  return (\n    <Layout>\n      <MainBody>\n        <Wrapper>\n          <NotificationsContent>\n            {loadingNotifications ? (\n              <div>Loading Notifications 1...</div>\n            ) : user ? (\n              <InfiniteScroll\n                dataLength={notifications.length}\n                hasMore={notifications.length < user.notifications.length}\n                loader={<div>Loading Notifications...</div>}\n                next={fetchMoreNotifications}\n                scrollThreshold={0.85}\n              >\n                {notifications.map((notification) => (\n                  <NotificationItem\n                    key={`notification-${notification._id}`}\n                    notifications={notifications}\n                    notification={notification}\n                  />\n                ))}\n              </InfiniteScroll>\n            ) : (\n              <CardRequestAuth />\n            )}\n          </NotificationsContent>\n          <OtherContents></OtherContents>\n        </Wrapper>\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default NotificationsPage;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\chats.js",["833"],"import React, { lazy, useEffect, useState } from 'react';\nimport Layout from '../containers/Layout';\nimport { userVar, messagesStorageVar } from '../apollo/cache';\n\nimport { useQuery, useMutation, useReactiveVar } from '@apollo/client';\nimport CardRequestAuth from '../components/Card/CardRequestAuth';\nimport {\n  RequestAuthScreen,\n  ChatsWrapper,\n  SidebarNav,\n  MainTab,\n} from './styles/chats.styles';\nimport MenuChat from '../components/Chat/MenuChat';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  FETCH_CHAT_CONVERSATIONS,\n  UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED,\n} from '../apollo/chat/chat.types';\n\nimport { setInitialMessagesStorage } from '../apollo/chat/chat.caches';\nimport useChatSubscriptions from '../hooks/useChatSubscriptions';\nimport { setNumberOfConversations } from '../apollo/chat/chat.caches';\nconst ChatConversations = lazy(() =>\n  import('../components/Chat/Conversations')\n);\nconst ChatContacts = lazy(() => import('../components/Chat/Contact'));\n\nconst ChatsPage = ({ match }) => {\n  const [fetched, setFetched] = useState(false);\n  //use Query\n  const user = useReactiveVar(userVar);\n  const messagesStorage = useReactiveVar(messagesStorageVar);\n  const { refetch: fetchChatConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      fetchPolicy: 'cache-and-network',\n      skip: true,\n    }\n  );\n  const [updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched] =\n    useMutation(\n      UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n    );\n  //useState\n\n  useChatSubscriptions();\n  useEffect(() => {\n    let _isMounted = true;\n    if (!Object.keys(messagesStorage).length && user && !fetch) {\n      //fetch conversations\n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchChatConversations().then(({ data }) => {\n        if (_isMounted) {\n          const { conversations, numberOfConversations } =\n            data.fetchChatConversations;\n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === 'PERSONAL') {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === 'SENT'\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n\n          setInitialMessagesStorage({ ...storage });\n          //update those conversations to received when user online if he/she has offlined before\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setNumberOfConversations(numberOfConversations);\n        }\n      });\n      setFetched(true);\n    }\n    return () => (_isMounted = false);\n  }, [user, messagesStorage, fetched]);\n  if (!user)\n    return (\n      <Layout>\n        <RequestAuthScreen>\n          <CardRequestAuth />\n        </RequestAuthScreen>\n      </Layout>\n    );\n  return (\n    <Layout>\n      <ChatsWrapper>\n        <SidebarNav>\n          <MenuChat />\n        </SidebarNav>\n        <MainTab>\n          <Switch>\n            <Route exact path={match.path} component={ChatConversations} />\n            <Route\n              exact\n              path={`${match.path}/contacts`}\n              component={ChatContacts}\n            />\n          </Switch>\n        </MainTab>\n      </ChatsWrapper>\n    </Layout>\n  );\n};\n\nexport default ChatsPage;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\App\\GlobalStyles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\ErrorBoundary.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useContactSubscription.jsx",["834"],"import { useEffect } from 'react';\nimport { FETCH_CURRENT_USER } from '../apollo/user/user.types';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport {\n  userVar,\n  receivedRequestsToAddFriendVar,\n  currentPersonalUserVar,\n} from '../apollo/cache';\nimport {\n  REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  REMOVE_FRIEND_SUBSCRIPTION,\n} from '../apollo/contact/contact.subscriptions';\nimport { removeNotificationItemFromNotificationsList } from '../apollo/notification/notification.caches';\nimport { setCurrentUser } from '../apollo/user/user.caches';\nimport { setCurrentPersonalUser } from '../apollo/user/currentPersonalUser.caches';\nimport {\n  removeSentRequestToAddFriend,\n  removeFriendsFromContact,\n} from '../apollo/contact/contact.caches';\n\nconst useContactSubscription = () => {\n  const user = useReactiveVar(userVar);\n  const receivedRequestsToAddFriend = useReactiveVar(\n    receivedRequestsToAddFriendVar\n  );\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n\n  const { subscribeToMore: subscribeUser } = useQuery(FETCH_CURRENT_USER, {\n    skip: true,\n  });\n\n  //function to handle when subscription called\n  const updateSubscriptionOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      ...sender,\n    });\n\n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id.toString() === receiver._id.toString()\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        ...receiver,\n      });\n    }\n  };\n  useEffect(() => {\n    let unsubscribeRejectRquestToAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeRemoveFriend;\n    if (subscribeUser && user) {\n      unsubscribeRejectRquestToAddFriend = subscribeUser({\n        document: REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const { sender, receiver } =\n            subscriptionData.data.rejectRequestToAddFriendSubscription;\n          removeSentRequestToAddFriend(receiver);\n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      unsubscribeRemoveFriend = subscribeUser({\n        document: REMOVE_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const { sender, receiver, notification } =\n            subscriptionData.data.removeFriendSubscription;\n          console.log(subscriptionData);\n          removeFriendsFromContact(sender);\n          removeNotificationItemFromNotificationsList(notification);\n          updateSubscriptionOnChange(receiver, sender);\n        },\n      });\n    }\n\n    return () => {\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeRejectRquestToAddFriend) {\n        unsubscribeRejectRquestToAddFriend();\n      }\n      if (unsubscribeRemoveFriend) {\n        unsubscribeRemoveFriend();\n      }\n    };\n  }, [subscribeUser, user, receivedRequestsToAddFriend]);\n};\n\nexport default useContactSubscription;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useUserStatusSubscriptions.jsx",["835"],"import { useEffect } from 'react';\nimport { useReactiveVar } from '@apollo/client';\nimport { userVar } from '../apollo/cache';\n\nimport io from 'socket.io-client';\nimport _ from 'lodash';\nimport { updateUserOnlineOfflineMessagesStorage } from '../apollo/chat/chat.caches';\nimport { updateUserOnlineOffline } from '../apollo/contact/contact.caches';\nconst useUserStatusSubscriptions = () => {\n  const user = useReactiveVar(userVar);\n\n  useEffect(() => {\n    const socket = io('http://localhost:5000');\n\n    if (user) {\n      //pass socket to backend to update status online\n      socket.open();\n      const { _id, name, slug, avatar } = user;\n      socket.emit('client-send-user-info', {\n        _id,\n        name,\n        slug,\n        avatar,\n        isOnline: true,\n      });\n      socket.on('server-send-user-online', (data) => {\n        updateUserOnlineOffline(data);\n        updateUserOnlineOfflineMessagesStorage(data._id);\n      });\n      socket.on('server-send-user-is-offline', (userId) => {\n        updateUserOnlineOffline({ _id: userId }, false);\n        updateUserOnlineOfflineMessagesStorage(userId, false);\n      });\n    } else {\n      socket.disconnect();\n    }\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [user]);\n};\n\nexport default useUserStatusSubscriptions;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\index.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\pages.styles.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\initialState.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\currentPersonalUser.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.mutations.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\chats.styles.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\controls\\controls.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.caches.js",["836","837"],"import { AiOutlineConsoleSql } from 'react-icons/ai';\nimport { contactVar, userVar } from '../cache';\nimport { initialState } from '../initialState';\nimport _ from 'lodash';\nexport const setContactList = (\n  friends,\n  receivedRequestsToAddFriend,\n  sentRequestsToAddFriend\n) => {\n  const contact = { ...contactVar() };\n  if (friends) contact.friends = [...friends];\n  if (receivedRequestsToAddFriend)\n    contact.receivedRequestsToAddFriend = [...receivedRequestsToAddFriend];\n  if (sentRequestsToAddFriend)\n    contact.sentRequestsToAddFriend = [...sentRequestsToAddFriend];\n  return contactVar(contact);\n};\n\nexport const pushFriendsListToContact = (friends) => {\n  const contact = { ...contactVar() };\n  contact.friends = [...contact.friends, ...friends];\n  console.log(contact);\n  return contactVar(contact);\n};\n\nexport const fetchMoreReceivedRequestsToAddFriend = (receivedRequestsData) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend = [\n    ...contact.receivedRequestsToAddFriend,\n    ...receivedRequestsData,\n  ];\n  return contactVar(contact);\n};\n\nexport const fetchMoreSentRequestsToAddFriend = (sentRequestsData) => {\n  const contact = { ...contactVar() };\n  contact.sentRequestsToAddFriend = [\n    ...contact.sentRequestsToAddFriend,\n    ...sentRequestsData,\n  ];\n  return contactVar(contact);\n};\n\nexport const moveReceivedRequestToFriend = (senderRequest) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend =\n    contact.receivedRequestsToAddFriend.filter(\n      (receivedUser) => receivedUser._id !== senderRequest._id\n    );\n  contact.friends = [{ ...senderRequest }, ...contact.friends];\n  return contactVar(contact);\n};\nexport const moveSentRequestToFriend = (senderRequest) => {\n  const contact = { ...contactVar() };\n  contact.sentRequestsToAddFriend = contact.sentRequestsToAddFriend.filter(\n    (receivedUser) => receivedUser._id !== senderRequest._id\n  );\n  contact.friends = [{ ...senderRequest }, ...contact.friends];\n  return contactVar(contact);\n};\n\nexport const removeSentRequestToAddFriend = (receiverRequest) => {\n  const contact = { ...contactVar() };\n  contact.sentRequestsToAddFriend = contact.sentRequestsToAddFriend.filter(\n    (sentUser) => sentUser._id !== receiverRequest._id\n  );\n  return contactVar(contact);\n};\n\nexport const addUserToReceivedRequestToAddFriend = (sender) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend = [\n    { ...sender },\n    ...contact.receivedRequestsToAddFriend,\n  ];\n  return contactVar(contact);\n};\n\nexport const removeUserFromReceivedRequestToAddFriend = (sender) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend =\n    contact.receivedRequestsToAddFriend.filter(\n      (receivedUserRequest) => receivedUserRequest._id !== sender._id\n    );\n  return contactVar(contact);\n};\n\nexport const removeReceivedRequestToAddFriend = (senderRequest) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend =\n    contact.receivedRequestsToAddFriend.filter(\n      (receivedRequest) => receivedRequest._id !== senderRequest._id\n    );\n  return contactVar(contact);\n};\n\nexport const removeFriendsFromContact = (friend) => {\n  const contact = { ...contactVar() };\n  contact.friends = contact.friends.filter(\n    (_friend) => _friend._id !== friend._id\n  );\n  return contactVar(contact);\n};\n\nexport const clearContact = () => contactVar(initialState.contact);\n\nexport const updateUserOnlineOffline = (user, isOnline = true) => {\n  let contact = { ...contactVar() };\n  if (typeof isOnline === 'boolean') {\n    if (isOnline) {\n      //update user is online\n      if (\n        contact.friends.find(\n          (friend) => friend._id.toString() === user._id.toString()\n        )\n      ) {\n        contact.friends = contact.friends.filter(\n          (friend) => friend._id.toString() !== user._id.toString()\n        );\n        contact.friends = [{ ...user }, ...contact.friends];\n      }\n      return contactVar(contact);\n    }\n    //update user is Offline\n    const { _id } = user;\n    if (_id) {\n      contact.friends = contact.friends.map((friend) => {\n        let updatedFriends = { ...friend };\n        if (updatedFriends._id.toString() === _id.toString()) {\n          updatedFriends.isOnline = false;\n          updatedFriends.offlinedAt = new Date();\n        }\n        return { ...updatedFriends };\n      });\n      contact.friends = _.orderBy(\n        contact.friends,\n        [\n          function (item) {\n            return item.isOnline;\n          },\n          function (item) {\n            return item.slug;\n          },\n        ],\n        ['desc', 'asc']\n      );\n      return contactVar(contact);\n    }\n  }\n};\n","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.caches.js",["838","839"],"import {\n  currentChatVar,\n  numberOfConversationsVar,\n  friendsVar,\n  messagesStorageVar,\n  contactVar,\n} from '../cache';\nimport { initialState } from '../initialState';\nexport const setCurrentChat = (userOrGroup) =>\n  currentChatVar({ ...userOrGroup });\n\nexport const setNumberOfConversations = (number) =>\n  numberOfConversationsVar(number);\n\n/**\n * {user} Object\n */\n\nexport const updateUserOnlineOfflineMessagesStorage = (\n  userId,\n  isOnline = true\n) => {\n  const storage = { ...messagesStorageVar() };\n  const checkUserExistedInStore = storage[userId];\n  if (checkUserExistedInStore) {\n    return messagesStorageVar({\n      ...storage,\n      [userId]: {\n        ...storage[userId],\n        profile: {\n          ...storage[userId].profile,\n          isOnline,\n          offlinedAt: isOnline ? null : new Date(),\n        },\n      },\n    });\n  }\n};\n\nexport const clearCurrentChat = () =>\n  currentChatVar(initialState.currentUserChat);\n\nexport const addNewConversationToMessagesStorage = (key, value) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({ ...storage, [key]: { ...value } });\n};\n\nexport const setInitialMessagesStorage = (data) =>\n  messagesStorageVar({ ...data });\n\n/**\n *\n * @param {Object} conversation\n * @param {Array} message\n * @param {String} scope [\"private\", \"group\"]\n * @param {Boolean} hasSeenLatestMessage\n * @returns\n */\nexport const setMessagesStorage = (\n  conversation,\n  message,\n  scope,\n  hasSeenLatestMessage = false\n) => {\n  const storage = { ...messagesStorageVar() };\n\n  return messagesStorageVar({\n    ...storage,\n    [conversation._id]: {\n      profile: { ...conversation },\n      messages: storage[conversation._id]\n        ? [...storage[conversation._id].messages, { ...message }]\n        : [{ ...message }],\n      scope,\n      latestMessage: { ...message },\n      hasSeenLatestMessage,\n    },\n  });\n};\n\nexport const updateHasSeenLatestMessage = (conversationId) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({\n    ...storage,\n    [conversationId]: {\n      ...storage[conversationId],\n      hasSeenLatestMessage: true,\n    },\n  });\n};\n\nexport const updateMessagesStorage = (\n  messenger,\n  updatedMessage,\n  scope,\n  hasSeenLatestMessage\n) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({\n    ...storage,\n    [messenger._id]: {\n      profile: { ...messenger },\n      messages: storage[messenger._id].messages.map((message) => {\n        if (message._id === updatedMessage._id) {\n          return { ...updatedMessage };\n        }\n        return { ...message };\n      }),\n      scope,\n      latestMessage: updatedMessage,\n      hasSeenLatestMessage,\n    },\n  });\n};\n\nexport const updateMessagesStorageToReceivedWhenUserOnline = (\n  conversationId\n) => {\n  const storage = { ...messagesStorageVar() };\n  if (storage[conversationId]) {\n    return messagesStorageVar({\n      ...storage,\n      [conversationId]: {\n        ...storage[conversationId],\n        messages: storage[conversationId].messages.map((message) => {\n          let __message = { ...message };\n          if (message.receiverStatus === 'SENT') {\n            __message.receiverStatus = 'DELIVERED';\n          }\n          return { ...__message };\n        }),\n      },\n    });\n  }\n};\nexport const updateMessagesStorageWhenReceiverSeenAllMessages = (\n  conversationId\n) => {\n  const storage = { ...messagesStorageVar() };\n  return setMessagesStorage({\n    ...storage,\n    [conversationId]: {\n      ...storage[conversationId],\n      messages: storage[conversationId].messages.map((message) => {\n        if (message.receiver._id === conversationId) {\n          return { ...message, receiverStatus: 'SEEN' };\n        }\n        return { ...message };\n      }),\n      hasSeenLatestMessage: true,\n    },\n  });\n};\n\nexport const updateMoreMessages = (conversationsId, newMessages) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({\n    ...storage,\n    [conversationsId]: {\n      ...storage[conversationsId],\n      messages: [...newMessages, ...storage[conversationsId].messages],\n    },\n  });\n};\n\nexport const clearMessageStorage = () =>\n  messagesStorageVar(initialState.messagesStorage);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\Layout.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useHomePostsSubscription.jsx",["840","841","842"],"import { useEffect } from 'react';\nimport { useQuery, useReactiveVar, useSubscription } from '@apollo/client';\nimport { FETCH_POSTS } from '../apollo/post/post.queries';\nimport {\n  CREATE_COMMENT_SUBSCIPTION,\n  LIKE_COMMENT_SUBSCRIPTION,\n  CREATE_RESPONSE_SUBSCRIPTION,\n  LIKE_RESPONSE_SUBSCRIPTION,\n  EDIT_POST_SUBSCRIPTION,\n  LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n  REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n} from '../apollo/post/post.types';\nimport { userVar } from '../apollo/cache';\nimport {\n  addCommentToPost,\n  addLikeComment,\n  addNewResponseToCommentAtHomePage,\n  updatePost,\n  updateLikePostSubscription,\n  removeLikePost,\n  addLikeResponseAtHomePage,\n  removeLikeResponseAtHomePage,\n  removeLikeComment,\n} from '../apollo/post/post.caches';\n\nconst useHomePostsSubscription = () => {\n  const { subscribeToMore: subscribePosts } = useQuery(FETCH_POSTS, {\n    skip: true,\n    fetchPolicy: 'network-only',\n  });\n  const user = useReactiveVar(userVar);\n  useSubscription(LIKE_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data) {\n        const { likePostSubscription } = subscriptionData.data;\n        updateLikePostSubscription(likePostSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data) {\n        const { removeLikePostSubscription } = subscriptionData.data;\n        removeLikePost(removeLikePostSubscription);\n      }\n    },\n  });\n  useSubscription(CREATE_COMMENT_SUBSCIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.createCommentSubscription) {\n        const { createCommentSubscription } = subscriptionData.data;\n        addCommentToPost(createCommentSubscription);\n      }\n    },\n  });\n  useSubscription(LIKE_COMMENT_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.likeCommentSubscription) {\n        const { likeCommentSubscription } = subscriptionData.data;\n        addLikeComment(likeCommentSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_COMMENT_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.removeLikeCommentSubscription) {\n        const { removeLikeCommentSubscription } = subscriptionData.data;\n        removeLikeComment(removeLikeCommentSubscription);\n      }\n    },\n  });\n  useSubscription(CREATE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.createResponseSubscription) {\n        const { createResponseSubscription } = subscriptionData.data;\n        addNewResponseToCommentAtHomePage(createResponseSubscription);\n      }\n    },\n  });\n  useSubscription(LIKE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data.likeResponseSubscription) {\n        const { likeResponseSubscription } = subscriptionData.data;\n        addLikeResponseAtHomePage(likeResponseSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data.removeLikeResponseSubscription) {\n        const { removeLikeResponseSubscription } = subscriptionData.data;\n        removeLikeResponseAtHomePage(removeLikeResponseSubscription);\n      }\n    },\n  });\n  useSubscription(EDIT_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      console.log(subscriptionData);\n      if (subscriptionData.data?.editPostSubscription) {\n        const { editPostSubscription } = subscriptionData.data;\n        updatePost(editPostSubscription);\n      }\n    },\n  });\n};\n\nexport default useHomePostsSubscription;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\MainBody.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useChatSubscriptions.jsx",["843","844"],"import { useEffect } from 'react';\nimport {\n  FETCH_CHAT_CONVERSATIONS,\n  UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE,\n} from '../apollo/chat/chat.types';\nimport { useQuery, useMutation, useReactiveVar } from '@apollo/client';\nimport { userVar, currentChatVar } from '../apollo/cache';\nimport {\n  setMessagesStorage,\n  updateMessagesStorage,\n  updateMessagesStorageWhenReceiverSeenAllMessages,\n  updateMessagesStorageToReceivedWhenUserOnline,\n} from '../apollo/chat/chat.caches';\nimport {\n  SENT_MESSAGE_CHAT_SUBSCRIPTION,\n  NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n  SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n  NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n} from '../apollo/chat/chat.types';\n\nconst useChatSubscriptions = () => {\n  const user = useReactiveVar(userVar);\n  const currentChat = useReactiveVar(currentChatVar);\n  const { subscribeToMore: subscribeChatMessage } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      skip: true,\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const [updatePersonalReceiverWhenReceivedNewMessage] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE\n  );\n  useEffect(() => {\n    let unsubscribeChatMessage;\n    let unsubscribeNotifySenderThatReceiverHasReceivedMessage;\n    let unsubscribeSubscribeReceiverHasSeenAllMessages;\n    let unsubscribeNotifySendersReceiverOnlineHasReceivedMessages;\n    if (subscribeChatMessage && user) {\n      unsubscribeChatMessage = subscribeChatMessage({\n        document: SENT_MESSAGE_CHAT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const { action, scope, message } =\n            subscriptionData.data.sentMessageChatSubscription;\n          const { sender } = message;\n\n          setMessagesStorage(sender, message, scope, false);\n          //update Delivered status\n          const messageStatus =\n            currentChat?._id === sender._id ? 'SEEN' : 'DELIVERED';\n          updatePersonalReceiverWhenReceivedNewMessage({\n            variables: { messageId: message._id, messageStatus },\n          });\n        },\n      });\n      unsubscribeNotifySenderThatReceiverHasReceivedMessage =\n        subscribeChatMessage({\n          document: NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const { action, scope, message } =\n              subscriptionData.data\n                .notifySenderThatReceiverHasReceivedMessageChat;\n            const { receiver } = message;\n            updateMessagesStorage(receiver, message, scope, action === 'SEEN');\n          },\n        });\n      unsubscribeSubscribeReceiverHasSeenAllMessages = subscribeChatMessage({\n        document: SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const { receiverId } =\n            subscriptionData.data.senderSubscribeWhenReceiverHasSeenAllMessages;\n          updateMessagesStorageWhenReceiverSeenAllMessages(receiverId);\n        },\n      });\n      unsubscribeNotifySendersReceiverOnlineHasReceivedMessages =\n        subscribeChatMessage({\n          document: NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const { receiver } =\n              subscriptionData.data\n                .notifySendersThatReceiverOnlineHasReceivedMessagesChat;\n            updateMessagesStorageToReceivedWhenUserOnline(receiver);\n          },\n        });\n    }\n    return () => {\n      if (unsubscribeChatMessage) {\n        unsubscribeChatMessage();\n      }\n      if (unsubscribeNotifySenderThatReceiverHasReceivedMessage) {\n        unsubscribeNotifySenderThatReceiverHasReceivedMessage();\n      }\n      if (unsubscribeSubscribeReceiverHasSeenAllMessages) {\n        unsubscribeSubscribeReceiverHasSeenAllMessages();\n      }\n      if (unsubscribeNotifySendersReceiverOnlineHasReceivedMessages) {\n        unsubscribeNotifySendersReceiverOnlineHasReceivedMessages();\n      }\n    };\n  }, [subscribeChatMessage, user, currentChat]);\n};\n\nexport default useChatSubscriptions;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\notifications.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\SignUp.jsx",["845","846","847"],"import React from 'react';\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  Title,\n  SubTitle,\n  ErrorMessage,\n  TextForm,\n  ValidTextField,\n} from './AuthForm';\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport CustomButton from '../Custom/CustomButton';\nimport { withRouter } from 'react-router-dom';\nimport GoogleRecaptcha from './GoogleRecapcha';\nimport FacebookLogin from './FacebookAuth';\nimport GoogleLogin from './GoogleAuth';\nimport { useMutation } from '@apollo/client';\nimport { SIGNUP } from '../../apollo/user/user.types';\nimport { login } from './Auth.utility';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst INITIAL_STATE = {\n  controls: {\n    name: {\n      type: 'text',\n      name: 'name',\n      valid: false,\n      label: 'Name',\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 50,\n      },\n      value: '',\n      touched: false,\n      validationErrors: '',\n    },\n    email: {\n      type: 'email',\n      name: 'email',\n      label: 'Email',\n      valid: false,\n      validation: {\n        required: true,\n        isEmail: true,\n        regex:\n          /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\n      },\n      value: '',\n      touched: false,\n      validationErrors: '',\n    },\n    password: {\n      type: 'password',\n      name: 'password',\n      valid: false,\n      label: 'Password',\n      validation: {\n        required: true,\n        isPassword: true,\n        regex: /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      },\n      value: '',\n      touched: false,\n      validationErrors: '',\n    },\n    confirmPassword: {\n      type: 'password',\n      name: 'confirmPassword',\n      label: 'Confirm Password',\n      valid: false,\n      validation: {\n        required: true,\n        match: true,\n      },\n      value: '',\n      touched: false,\n      validationErrors: '',\n    },\n  },\n  formIsValid: false,\n  captcha_loaded: false,\n  disabled: true,\n  title: '',\n};\n\nfunction withSignUpMutation(WrappedComponent) {\n  return function MutationWrapper(props) {\n    const [createUser, { data, loading, error }] = useMutation(SIGNUP, {\n      errorPolicy: 'all',\n    });\n    return (\n      <WrappedComponent\n        createUser={createUser}\n        data={data}\n        loading={loading}\n        error={error}\n        {...props}\n      />\n    );\n  };\n}\n\nconst SignUp = withSignUpMutation(\n  class extends React.Component {\n    state = { ...INITIAL_STATE };\n    timer = null;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 0);\n    }\n    componentWillUnmount() {\n      clearTimeout(this.timer);\n      if (this.unsubcribeLogin) {\n        this.unsubcribeLogin();\n      }\n    }\n    unsubcribeLogin;\n    async componentDidUpdate(prevProps) {\n      if (prevProps.error !== this.props.error) {\n        this.clearForm();\n      }\n      if (prevProps.data !== this.props.data && this.props.data) {\n        const { user, token, tokenExpire } = this.props.data.createUser;\n        console.log(user);\n        this.unsubcribeLogin = await login(user, token, tokenExpire);\n        this.clearForm();\n      }\n    }\n\n    clearForm = () => {\n      this.setState({ ...INITIAL_STATE });\n      setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 0);\n    };\n\n    checkValidity = (value, rules) => {\n      let isValid = true;\n      let errorsMessage = [];\n      if (rules.required) {\n        isValid = value.trim().length && isValid;\n        if (!isValid) {\n          errorsMessage.push('This field is required');\n        }\n      }\n      if (rules.regex) {\n        isValid = rules.regex.test(value) && isValid;\n        if (!isValid) {\n          if (rules.isEmail) {\n            errorsMessage.push('Email is invalid');\n          }\n          if (rules.isPassword) {\n            errorsMessage.push('Password is invalid');\n          }\n        }\n      }\n      if (rules.minLength) {\n        isValid = value.trim().length >= rules.minLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at least ${rules.minLength} characters`);\n        }\n      }\n      if (rules.maxLength) {\n        isValid = value.trim().length <= rules.maxLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at most ${rules.maxLength} characters`);\n        }\n      }\n      if (rules.match) {\n        isValid = value === this.state.controls.password.value && isValid;\n        if (!isValid) {\n          errorsMessage.push('Password and confirm Password do not match');\n        }\n      }\n      return errorsMessage;\n    };\n\n    handleChange = (e, name) => {\n      let updatedControls = { ...this.state.controls };\n      let updatedControlElement = { ...updatedControls[name] };\n      updatedControlElement.value = e.target.value;\n      const checkValid = this.checkValidity(\n        e.target.value,\n        updatedControlElement.validation\n      );\n      updatedControlElement.valid = checkValid.length === 0;\n      updatedControlElement.touched = true;\n      updatedControlElement.validationErrors = checkValid;\n      updatedControls[name] = updatedControlElement;\n      let { email, password, confirmPassword } = updatedControls;\n      const formIsValid =\n        email.valid &&\n        updatedControlElement.valid &&\n        password.valid &&\n        confirmPassword.valid;\n      this.setState({ controls: updatedControls, formIsValid });\n    };\n\n    handleSubmitSignUpForm = (e) => {\n      e.preventDefault();\n      if (!this.state.formIsValid) {\n        this.setState({ ...INITIAL_STATE });\n        return;\n      }\n      const { name, email, password } = this.state.controls;\n\n      this.props.createUser({\n        variables: {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        },\n      });\n    };\n\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {\n      const { formIsValid, captcha_loaded, disabled } = this.state;\n      let formInputArray = [];\n      Object.keys(this.state.controls).forEach((controlItem) => {\n        formInputArray.push(this.state.controls[controlItem]);\n      });\n      const { error, loading } = this.props;\n      return (\n        <CustomFormContainer onSubmit={this.handleSubmitSignUpForm}>\n          <FormHeader>\n            <Title>Sign Up</Title>\n            <SubTitle>Sign up your account via email and password.</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}\n          <FlashForm>\n            {/* <FacebookLogin /> */}\n            <GoogleLogin />\n          </FlashForm>\n          <FormGroups>\n            {formInputArray.map(\n              ({\n                label,\n                name,\n                touched,\n                type,\n                valid,\n                validation,\n                validationErrors,\n                value,\n              }) => (\n                <TextForm valid={valid && touched}>\n                  <TextField\n                    size=\"small\"\n                    key={name}\n                    type={type}\n                    variant=\"outlined\"\n                    name={name}\n                    value={value}\n                    error={!valid && touched}\n                    label={label}\n                    onChange={(e) => this.handleChange(e, name)}\n                    required={validation.required}\n                    helperText={validationErrors}\n                  />\n                  {valid && touched ? (\n                    <ValidTextField>\n                      <AiFillCheckCircle />\n                    </ValidTextField>\n                  ) : null}\n                </TextForm>\n              )\n            )}\n\n            {captcha_loaded && (\n              <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n            )}\n            <Button\n              variant=\"outlined\"\n              size=\"medium\"\n              color=\"primary\"\n              disabled={!formIsValid || disabled}\n              type=\"submit\"\n            >\n              <span>Submit</span>\n              {loading && (\n                <CircularProgress size={12} style={{ marginLeft: '0.5rem' }} />\n              )}\n            </Button>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              <StyledLink to=\"/auth\">Signin account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{' '}\n              <StyledLink to=\"/auth/restore-account\">\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignUp);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\HomeSidebar.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\SignIn.jsx",["848","849"],"import React from 'react';\nimport {\n  CustomFormContainer,\n  FormHeader,\n  Title,\n  SubTitle,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  ErrorMessage,\n  TextForm,\n} from './AuthForm';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { withRouter } from 'react-router-dom';\nimport GoogleRecaptcha from './GoogleRecapcha';\nimport FacebookAuth from './FacebookAuth';\nimport GoogleAuth from './GoogleAuth';\nimport { LOGIN } from '../../apollo/user/user.types';\nimport { useLazyQuery } from '@apollo/client';\nimport { login } from './Auth.utility';\nimport TextField from '@material-ui/core/TextField';\nfunction withLoginQuery(WrappedComponent) {\n  return function QueryWrapper(props) {\n    const [loginUser, { loading, data, error }] = useLazyQuery(LOGIN, {\n      fetchPolicy: 'cache-and-network',\n    });\n    return (\n      <WrappedComponent\n        data={data}\n        loading={loading}\n        error={error}\n        loginUser={loginUser}\n        {...props}\n      />\n    );\n  };\n}\n\nconst SignIn = withLoginQuery(\n  class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.signInRef = React.createRef();\n      this._isMounted = true;\n    }\n    state = {\n      email: '',\n      password: '',\n      disabled: true,\n      captcha_value: null,\n      loading: false,\n      captcha_loaded: false,\n    };\n\n    timer = null;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 50);\n      if (this.signInRef.current) {\n        window.scrollTo({\n          top: this.signInRef.current.offsetTop,\n          behavior: 'smooth',\n        });\n      }\n    }\n\n    handleChange = (e) => {\n      const { name, value } = e.target;\n      this.setState({ [name]: value });\n    };\n    unsubscribeLogin;\n    async componentDidUpdate(prevProps) {\n      if (prevProps.error !== this.props.error) {\n        this.clearForm();\n      }\n      if (prevProps.data !== this.props.data && this.props.data) {\n        const { user, token, tokenExpire } = this.props.data.loginUser;\n        if (this._isMounted) {\n          this.unsubscribeLogin = await login(user, token, tokenExpire);\n          this.clearForm();\n        }\n      }\n    }\n    componentWillUnmount() {\n      clearTimeout(this.timer);\n      this._isMounted = false;\n      if (this.unsubscribeLogin) {\n        this.unsubscribeLogin();\n      }\n    }\n    clearForm = () => {\n      this.setState({\n        email: '',\n        password: '',\n        disabled: true,\n        captcha_loaded: false,\n      });\n      setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 10);\n    };\n\n    onSubmitSigninForm = async (e) => {\n      e.preventDefault();\n\n      const { email, password } = this.state;\n      if (!email || !password) {\n        this.setState({\n          error: 'Email và mật khẩu không được để trống',\n        });\n        return;\n      }\n      this.setState({ loading: true });\n      this.props.loginUser({ variables: { email, password } });\n      this.setState({ loading: false });\n    };\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {\n      const { email, password, disabled, loading, captcha_loaded } = this.state;\n      const { authPath, error } = this.props;\n      return (\n        <CustomFormContainer\n          onSubmit={this.onSubmitSigninForm}\n          ref={this.signInRef}\n        >\n          <FormHeader>\n            <Title>Đăng nhập</Title>\n            <SubTitle>Đăng nhập tài khoản bằng email và mật khẩu</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}\n          <FlashForm>\n            {/* <FacebookAuth /> */}\n            <GoogleAuth />\n          </FlashForm>\n          <FormGroups>\n            <TextForm>\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                label=\"Email\"\n                onChange={this.handleChange}\n                required\n              />\n            </TextForm>\n            <TextForm>\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                label=\"Password\"\n                onChange={this.handleChange}\n                required\n                autocomplete=\"on\"\n              />\n            </TextForm>\n\n            <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n\n            <Button\n              variant=\"outlined\"\n              size=\"medium\"\n              disabled={disabled || loading}\n              color=\"primary\"\n              style={{ marginTop: '1rem' }}\n              type=\"submit\"\n            >\n              <span>Sign In</span>\n              {loading && (\n                <CircularProgress size={14} style={{ marginLeft: '1rem' }} />\n              )}\n            </Button>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              Don't have account ?{' '}\n              <StyledLink to={`${authPath}/signup`}>Signup account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{' '}\n              <StyledLink to={`${authPath}/restore-account`}>\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignIn);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendsBoard.jsx",["850","851"],"import React, { useState } from 'react';\nimport FriendsList from './FriendsList';\nimport ButtonToggleFriendsList from '../Controls/ButtonToggleFriendsList';\nimport { FriendsBoardWrapper } from './styles/Sidebar.styles';\nimport { useReactiveVar } from '@apollo/client';\nimport { toggleFriendsBoardVar } from '../../apollo/cache';\nconst FriendsBoard = () => {\n  const toggleFriendsBoard = useReactiveVar(toggleFriendsBoardVar);\n  return (\n    <FriendsBoardWrapper show={toggleFriendsBoard}>\n      <FriendsList\n        show={toggleFriendsBoard}\n        close={() => toggleFriendsBoardVar(false)}\n      />\n    </FriendsBoardWrapper>\n  );\n};\n\nexport default React.memo(FriendsBoard);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonToggleFriendsList.jsx",["852"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalHeading.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditor.jsx",["853"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Global\\useLanguage.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalPosts.jsx",["854"],"import React, { useEffect, useState } from 'react';\nimport { Wrapper, LeftSide, RightSide } from './styles/PersonalPosts.styles';\nimport Posts from '../Post/Posts';\nimport PostEditor from '../Post/PostEditor/PostEditor';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport { currentPersonalUserVar, userVar } from '../../apollo/cache';\nimport { FETCH_POSTS } from '../../apollo/post/post.queries';\nimport { addPostsToCurrentPersonalUser } from '../../apollo/post/post.caches';\nimport IntroductionBox from './IntroductionBox';\nimport constant from '../../constant/constant';\n\nconst PersonalPosts = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const user = useReactiveVar(userVar);\n  const {\n    data: fetchedPostsData,\n    loading,\n    fetchMore: fetchMorePostsData,\n  } = useQuery(FETCH_POSTS, {\n    variables: {\n      userId: currentPersonalUser._id,\n      skip: 0,\n      limit: constant.REACT_APP_POSTS_PER_PAGE,\n    },\n    onCompleted: (data) => {\n      if (data) {\n        addPostsToCurrentPersonalUser(data.fetchPosts);\n      }\n    },\n  });\n\n  useEffect(() => {\n    let isScrolling;\n    function trackUserScroll(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollHeight, scrollTop, clientHeight } =\n          document.documentElement;\n        if (\n          scrollTop + clientHeight > 0.8 * scrollHeight &&\n          currentPersonalUser.posts.length >\n            currentPersonalUser.postsData?.length\n        ) {\n          setLoadingMore(true);\n        }\n      }, 66);\n    }\n    window.addEventListener('scroll', trackUserScroll);\n    return () => {\n      window.removeEventListener('scroll', trackUserScroll);\n      if (isScrolling) {\n        clearTimeout(isScrolling);\n      }\n    };\n  });\n\n  useEffect(() => {\n    if (loadingMore && currentPersonalUser.postsData) {\n      const skip = currentPersonalUser.postsData.length;\n      const limit = constant.REACT_APP_POSTS_PER_PAGE;\n      fetchMorePostsData({\n        variables: {\n          userId: currentPersonalUser._id,\n          skip,\n          limit,\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (fetchMoreResult) {\n            addPostsToCurrentPersonalUser(fetchMoreResult.fetchPosts);\n          }\n        },\n      }).then(() => setLoadingMore(false));\n    }\n  }, [loadingMore, currentPersonalUser]);\n\n  if (!fetchedPostsData) return null;\n  if (loading) return <div>Loading...</div>;\n  return (\n    <Wrapper>\n      <LeftSide>\n        <IntroductionBox />\n      </LeftSide>\n      <RightSide>\n        {user?._id === currentPersonalUser?._id && <PostEditor />}\n        {currentPersonalUser?.postsData?.length ? (\n          <Posts posts={currentPersonalUser.postsData} />\n        ) : null}\n      </RightSide>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(PersonalPosts);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Posts.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\SentRequestsToAddFriend.jsx",["855"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Conversations.jsx",["856","857","858","859"],"import React, { useState, useEffect, createContext, useRef } from 'react';\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from './styles/Chat.styles';\nimport { userVar } from '../../apollo/cache';\n\nimport { useReactiveVar } from '@apollo/client';\nimport Search from './Search';\nimport ListConversations from './ListConversations';\nimport { useThemeUI } from 'theme-ui';\nimport ChatBoard from './ChatBoard';\nimport { setCurrentChat } from '../../apollo/chat/chat.caches';\nexport const MessagesContext = createContext({});\nconst Conversations = () => {\n  //query\n  const user = useReactiveVar(userVar);\n\n  //state\n  const [showPopup, setShowPopup] = useState(false);\n  const [search, setSearch] = useState('');\n  const [originalData, setOriginalData] = useState([]);\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const { colorMode } = useThemeUI();\n  const popupRef = useRef(null);\n\n  //empty current chat when change page\n  useEffect(() => {\n    setCurrentChat(null);\n  }, []);\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-messages-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener('click', (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener('click', (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n\n  if (!user) return null;\n  return (\n    <MessagesContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top}\n      >\n        <span>Pin this conversation</span>\n        <hr />\n        <span>Label</span>\n        <hr />\n        <span>Add to group</span>\n        <span>Turn notification off</span>\n        <hr />\n        <span>Delete conversation</span>\n        <hr />\n        <span>Report</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search />\n          <hr />\n          <ListConversations />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </MessagesContext.Provider>\n  );\n};\n\nexport default Conversations;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\ReceivedRequestsToAddFriend.jsx",["860","861"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\FriendsList.jsx",["862"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardRequestAuth.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Contact.jsx",["863","864","865","866","867","868"],"import React, { useEffect, useState, useRef, createContext } from 'react';\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from './styles/Chat.styles';\nimport { userVar } from '../../apollo/cache';\nimport Search from './Search';\nimport { useTheme } from '../../theme';\nimport { setCurrentChat } from '../../apollo/chat/chat.caches';\nimport ListContacts from './ListContacts';\nimport { FETCH_USER_FRIENDS_DATA } from '../../apollo/contact/contact.queries';\nimport { contactVar } from '../../apollo/cache';\nimport { pushFriendsListToContact } from '../../apollo/contact/contact.caches';\nimport ChatBoard from './ChatBoard';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport constant from '../../constant/constant';\nexport const ContactContext = createContext({});\n\nconst Contact = () => {\n  //useQuery\n  const user = useReactiveVar(userVar);\n  //useState\n  const [search, setSearch] = useState('');\n  const [contactData, setContactData] = useState([]);\n  const [originData, setOriginData] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [fetched, setFetched] = useState(false);\n  const contact = useReactiveVar(contactVar);\n  const { refetch: fetchFriends } = useQuery(FETCH_USER_FRIENDS_DATA, {\n    skip: true,\n  });\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const popupRef = useRef(null);\n\n  useEffect(() => {\n    // if (friends.length) {\n    //   if (!search) {\n    //     setContactData([...originData]);\n    //   } else {\n    //     const searchRegex = new RegExp(search, \"i\");\n    //     const searchResults = originData.filter(\n    //       ({ name }) => !!name.match(searchRegex)\n    //     );\n    //     setContactData([...searchResults]);\n    //   }\n    // }\n  }, [search]);\n\n  useEffect(() => {\n    if (!contact.friends.length && !fetched) {\n      fetchFriends({\n        skip: 0,\n        limit: constant.REACT_APP_FRIENDS_PER_LOAD,\n      }).then(({ data }) => {\n        pushFriendsListToContact(data.fetchFriends);\n      });\n    }\n    // setContactData([...friends]);\n    // setOriginData([...friends]);\n  }, [contact, fetched]);\n\n  useEffect(() => {\n    setCurrentChat(null);\n  }, []);\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-contact-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener('click', (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener('click', (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n  const { theme } = useTheme();\n\n  const onChangeSearch = React.useCallback((e) => {\n    setSearch(e.target.value);\n  }, []);\n  if (!user) return null;\n  return (\n    <ContactContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top + 50}\n      >\n        <span>Mark as favorite</span>\n        <hr />\n        <span>Label</span>\n        <span>Set alias</span>\n        <hr />\n        <span>Block</span>\n        <span>Delete</span>\n      </PopupSettings>\n      <Wrapper theme={theme}>\n        <LeftSide theme={theme}>\n          <Search search={search} onChange={onChangeSearch} />\n          <hr />\n          <ListContacts data={contact.friends} />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </ContactContext.Provider>\n  );\n};\n\nexport default Contact;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\MenuChat.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\NotificationItem.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.mutations.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.mutations.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\notificationContent.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\AlertDialogSlide.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Aside\\Aside.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\styles\\MainBody.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\useMenuList.jsx",["869"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoard.jsx",["870"],"import React, { createRef } from 'react';\nimport { Wrapper } from './styles/ChatBoard.styles';\n\nimport ChatBoardHeading from './ChatBoardHeading';\nimport ChatBoardBody from './ChatBoardBody';\nimport ChatBoardFooter from './ChatBoardFooter';\n\nconst ChatCenter = () => {\n  return (\n    <Wrapper>\n      <ChatBoardHeading />\n      <ChatBoardBody />\n      <ChatBoardFooter />\n    </Wrapper>\n  );\n};\n\nexport default ChatCenter;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonSignUp.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Search.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ListContacts.jsx",["871"],"import React, { useState, useEffect } from 'react';\nimport { Wrapper } from './styles/ListContacts.styles';\nimport ContactItem from './ContactItem';\nimport { usePopupContactActions } from './hook/usePopupActions';\nimport { useQuery } from '@apollo/client';\nimport { FETCH_USER_FRIENDS_DATA } from '../../apollo/contact/contact.types';\nimport { setFriends } from '../../apollo/user/user.caches';\nimport constant from '../../constant/constant';\nconst ListContacts = ({ data }) => {\n  const { setShowPopup } = usePopupContactActions();\n  const [loadContactMore, setLoadContactMore] = useState(false);\n  const { refetch: fetchMoreContacts } = useQuery(FETCH_USER_FRIENDS_DATA, {\n    skip: true,\n    fetchPolicy: 'cache-and-network',\n  });\n  const onScrollListContacts = (e) => {\n    e.preventDefault();\n    const { clientHeight, scrollHeight, scrollTop } = e.target;\n    if (clientHeight + scrollTop > scrollHeight * 0.75) {\n      setLoadContactMore(true);\n    }\n  };\n\n  useEffect(() => {\n    if (loadContactMore) {\n      const skip = data.length;\n      const limit = constant.REACT_APP_FRIENDS_PER_LOAD;\n      fetchMoreContacts({ skip, limit }).then(({ data: { fetchFriends } }) => {\n        setFriends([...data, ...fetchFriends]);\n        setLoadContactMore(false);\n      });\n    }\n  }, [loadContactMore]);\n  if (!data.length) return null;\n  return (\n    <Wrapper\n      onScroll={() => setShowPopup(false)}\n      onScrollCapture={onScrollListContacts}\n    >\n      {data.map((friend) => (\n        <ContactItem key={`contact-${friend._id}`} friend={friend} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(ListContacts);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonLogin.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\ContactItem.jsx",["872"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\Contact.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomMaterialButton.jsx",["873","874","875","876","877","878"],"import React from 'react';\nimport {\n  createMuiTheme,\n  withStyles,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { green, purple, red, blue } from '@material-ui/core/colors';\n\nexport const AcceptButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[600]),\n    fontWeight: 600,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n}))(Button);\n\nexport const DenyButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(red[600]),\n    fontWeight: 600,\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[700],\n    },\n  },\n}))(Button);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\styles\\NotificationItem.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\MenuChat.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Chat.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.mutations.js",["879"],"import { gql } from '@apollo/client';\nexport const CREATE_POST = gql`\n  mutation CreatePost(\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n    $fileNames: [String!]\n    $fileMimetype: [String!]\n    $fileEncodings: [String!]\n    $status: String!\n  ) {\n    createPost(\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n        fileNames: $fileNames\n        fileMimetype: $fileMimetype\n        fileEncodings: $fileEncodings\n        status: $status\n      }\n    ) {\n      _id\n      text\n      rawText\n      shortenText\n      mentions {\n        _id\n        name\n        avatar\n        slug\n        isOnline\n      }\n      author {\n        _id\n        name\n        slug\n        avatar\n      }\n      files {\n        filename\n        mimetype\n        data\n      }\n      comments\n      responses\n      likes\n      status\n      createdAt\n    }\n  }\n`;\n\nexport const CREATE_COMMENT = gql`\n  mutation (\n    $postId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n  ) {\n    createComment(\n      postId: $postId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n      }\n    ) {\n      _id\n      text\n      shortenText\n      rawText\n      author {\n        _id\n        name\n        avatar\n        slug\n      }\n      post\n      likes\n      responses\n      createdAt\n    }\n  }\n`;\n\nexport const CREATE_RESPONSE = gql`\n  mutation CreateResponse(\n    $commentId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n  ) {\n    createResponse(\n      commentId: $commentId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n      }\n    ) {\n      _id\n      text\n      shortenText\n      rawText\n      author {\n        _id\n        name\n        avatar\n        slug\n      }\n      comment\n      likes\n      post\n      createdAt\n    }\n  }\n`;\n\nexport const EDIT_POST = gql`\n  mutation EditPost(\n    $postId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n    $fileNames: [String!]\n    $fileMimetype: [String!]\n    $fileEncodings: [String!]\n    $status: String!\n  ) {\n    editPost(\n      postId: $postId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n        fileNames: $fileNames\n        fileMimetype: $fileMimetype\n        fileEncodings: $fileEncodings\n        status: $status\n      }\n    ) {\n      _id\n      text\n      rawText\n      shortenText\n      mentions {\n        _id\n        name\n        avatar\n        slug\n        isOnline\n      }\n      author {\n        _id\n        name\n        slug\n        avatar\n      }\n      files {\n        filename\n        mimetype\n        data\n      }\n      comments\n      responses\n      likes\n      status\n      createdAt\n    }\n  }\n`;\n\nexport const LIKE_COMMENT = gql`\n  mutation LikeComment($commentId: ID!) {\n    likeComment(commentId: $commentId)\n  }\n`;\n\nexport const LIKE_POST = gql`\n  mutation ($postId: ID!) {\n    likePost(postId: $postId)\n  }\n`;\nexport const LIKE_RESPONSE = gql`\n  mutation LikeResponse($responseId: ID!) {\n    likeResponse(responseId: $responseId)\n  }\n`;\n\nexport const REMOVE_COMMENT = gql`\n  mutation RemoveComment($commentId: ID!) {\n    removeComment(commentId: $commentId)\n  }\n`;\nexport const REMOVE_LIKE_COMMENT = gql`\n  mutation RemoveLikeComment($commentId: ID!) {\n    removeLikeComment(commentId: $commentId)\n  }\n`;\n\nexport const REMOVE_LIKE_POST = gql`\n  mutation ($postId: ID!) {\n    removeLikePost(postId: $postId)\n  }\n`;\n\nexport const REMOVE_LIKE_RESPONSE = gql`\n  mutation RemoveLikeResponse($responseId: ID!) {\n    removeLikeResponse(responseId: $responseId)\n  }\n`;\n\nexport const REMOVE_RESPONSE = gql`\n  mutation RemoveResponse($responseId: ID!) {\n    removeResponse(responseId: $responseId)\n  }\n`;\n\nexport default {\n  CREATE_POST,\n  CREATE_COMMENT,\n  CREATE_RESPONSE,\n  EDIT_POST,\n  LIKE_COMMENT,\n  LIKE_POST,\n  LIKE_RESPONSE,\n  REMOVE_COMMENT,\n  REMOVE_LIKE_COMMENT,\n  REMOVE_LIKE_POST,\n  REMOVE_LIKE_RESPONSE,\n  REMOVE_RESPONSE,\n};\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\MenuList.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardBody.jsx",["880","881","882","883"],"import React, { useState, useEffect, createRef } from 'react';\nimport { Wrapper } from './styles/ChatBoardBody.styles';\nimport Bubble from './Bubble';\nimport { useTheme } from '../../theme';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport {\n  userVar,\n  currentChatVar,\n  messagesStorageVar,\n} from '../../apollo/cache';\nimport { FETCH_MESSAGES } from '../../apollo/chat/chat.types';\nimport { updateMoreMessages } from '../../apollo/chat/chat.caches';\nimport constant from '../../constant/constant';\nconst ChatBoardBody = () => {\n  //useState\n  const [loadMoreMessages, setLoadMoreMessages] = useState(false);\n  //useQuery\n  const currentChat = useReactiveVar(currentChatVar);\n  const user = useReactiveVar(userVar);\n  const messagesStorage = useReactiveVar(messagesStorageVar);\n  const { refetch: fetchMoreMessages } = useQuery(FETCH_MESSAGES, {\n    fetchPolicy: 'cache-and-network',\n    skip: true,\n  });\n  const chatBoardBodyRef = createRef(null);\n  const [shouldScrollIntoView, setShouldScrollIntoView] = useState(true);\n  const { theme } = useTheme();\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      if (chatBoardBodyRef.current && shouldScrollIntoView) {\n        chatBoardBodyRef.current.scrollIntoView({\n          behavior: 'auto',\n        });\n      }\n    }, 50);\n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (\n      messagesStorage[currentChat?._id]?.latestMessage?.sender?._id === user._id\n    ) {\n      timer = setTimeout(() => {\n        if (chatBoardBodyRef.current) {\n          chatBoardBodyRef.current.scrollIntoView({\n            behavior: 'auto',\n          });\n        }\n      }, 10);\n    }\n\n    return () => clearTimeout(timer);\n  }, [currentChat, messagesStorage[currentChat?._id]?.messages, user]);\n\n  useEffect(() => {\n    let isScrolling;\n    function onScrollBodyBoard(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollHeight, scrollTop, clientHeight } = e.target;\n        if (scrollTop + clientHeight === scrollHeight) {\n          setShouldScrollIntoView(true);\n        } else {\n          setShouldScrollIntoView(false);\n        }\n        if (\n          scrollTop + clientHeight <\n          (scrollHeight - scrollTop) / 2 + scrollHeight * 0.15\n        ) {\n          setLoadMoreMessages(true);\n        }\n      }, 66);\n    }\n    document.getElementById('body-board').addEventListener(\n      'scroll',\n      function (e) {\n        onScrollBodyBoard(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById('body-board').removeEventListener(\n        'scroll',\n        function (e) {\n          onScrollBodyBoard(e);\n        },\n        false\n      );\n    };\n  });\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (loadMoreMessages) {\n      const skip = messagesStorage[currentChat._id].messages.length;\n      const limit = constant.REACT_APP_NUMBER_MESSAGES_PER_LOAD;\n      const conversationId = currentChat._id;\n      const scope = currentChat.scope;\n      fetchMoreMessages({ conversationId, scope, skip, limit }).then(\n        ({ data }) => {\n          if (_isMounted) {\n            const { messages } = data.fetchMessages;\n            updateMoreMessages(conversationId, messages);\n            setLoadMoreMessages(false);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [loadMoreMessages]);\n  console.log(currentChat);\n  console.log(messagesStorage);\n  return (\n    <Wrapper\n      theme={theme}\n      id=\"body-board\"\n      // onScrollCapture={onScrollBoardBody}\n    >\n      {currentChat &&\n      messagesStorage[currentChat._id] &&\n      messagesStorage[currentChat._id]?.messages?.length &&\n      user\n        ? messagesStorage[currentChat._id].messages.map((message, idx) => {\n            return (\n              <Bubble\n                key={`bubble-${message._id}`}\n                message={message}\n                user={user}\n                me={message.sender && message.sender._id === user._id}\n                senderAvatar={\n                  message.sender && message.sender._id === user._id\n                    ? user.avatar\n                    : currentChat.avatar\n                }\n                index={idx}\n              />\n            );\n          })\n        : null}\n      <div ref={chatBoardBodyRef}></div>\n    </Wrapper>\n  );\n};\n\nexport default ChatBoardBody;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardFooter.jsx",["884"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ContactItem.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ListContacts.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonDefault.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Search.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\hook\\usePopupActions.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\generateBase64Image.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\ThreeDotsSetting.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Bubble.jsx",["885","886"],"import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport {\n  Wrapper,\n  Avatar,\n  BubbleContainer,\n  Message,\n  MentionWrapper,\n  MentionInfo,\n  MentionLinkInfo,\n  MentionAvatar,\n  BubbleTimeline,\n  ImageContainer,\n  AttachmentContainer,\n} from './styles/Bubble.styles';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { convertFromRaw, EditorState } from 'draft-js';\nimport Editor from '@draft-js-plugins/editor';\nimport createLinkifyPlugin from '@draft-js-plugins/linkify';\nimport createMentionPlugin from '@draft-js-plugins/mention';\nimport Moment from 'react-moment';\nimport LazyLoad from 'react-lazyload';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nconst linkifyPlugin = createLinkifyPlugin({\n  target: '_blank',\n  rel: 'noopener noreferrer',\n});\nconst mentionPlugin = createMentionPlugin({\n  mentionComponent({ mention }) {\n    return (\n      <MentionWrapper to={`/${mention.slug}`}>\n        <MentionLinkInfo to={`/${mention.slug}`}>\n          <MentionAvatar src={mention.avatar} />\n          <MentionInfo>\n            <span>{mention.name}</span>\n            <span>@{mention.slug}</span>\n          </MentionInfo>\n        </MentionLinkInfo>\n        <span>@{mention.name}</span>\n      </MentionWrapper>\n    );\n  },\n});\nconst Bubble = ({ message, me, user, senderAvatar, index }) => {\n  const [editorState, setEditorState] = useState(() =>\n    message.messageType === 'TEXT'\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(message.text)))\n      : null\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [bubbleDimensions, setBubbleDimensions] = useState({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const bubbleRef = useRef(null);\n  useEffect(() => {\n    if (bubbleRef.current) {\n      setBubbleDimensions(bubbleRef.current.getBoundingClientRect());\n    }\n  }, [bubbleRef]);\n\n  if (!user) return null;\n  return (\n    <Wrapper index={index}>\n      <BubbleContainer me={me}>\n        <Avatar>\n          <LazyLoadImage src={senderAvatar} />\n        </Avatar>\n        <Message me={me} ref={bubbleRef} messageType={message.messageType}>\n          {message.messageType === 'TEXT' ? (\n            <Editor\n              editorState={editorState}\n              setEditorState={setEditorState}\n              plugins={[linkifyPlugin, mentionPlugin]}\n              onChange={setEditorState}\n              readOnly\n            />\n          ) : message.messageType === 'IMAGE' ? (\n            <ImageContainer>\n              <img\n                src={message.file.data}\n                alt={message.file.filename}\n                onClick={() => setIsOpen(true)}\n              />\n              {isOpen && (\n                <Lightbox\n                  mainSrc={message.file.data}\n                  onCloseRequest={() => setIsOpen(false)}\n                />\n              )}\n            </ImageContainer>\n          ) : message.messageType === 'ATTACHMENT' ? (\n            <AttachmentContainer>\n              <a\n                href={message.file.data}\n                download={message.file.filename}\n                title={message.file.filename}\n              >\n                {message.file.filename}\n              </a>\n            </AttachmentContainer>\n          ) : null}\n        </Message>\n      </BubbleContainer>\n      <BubbleTimeline width={bubbleDimensions.width} me={me}>\n        <div>\n          <span>\n            <Moment fromNow>{+message.createdAt}</Moment>\n          </span>\n          {user._id === message.sender._id ? (\n            <span style={{ textTransform: 'capitalize' }}>\n              {message.receiverStatus.toLowerCase()}\n            </span>\n          ) : null}\n        </div>\n      </BubbleTimeline>\n    </Wrapper>\n  );\n};\n\nexport default Bubble;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ContactItem.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardFooter.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardBody.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Bubble.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\ThreeDotsSetting.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardHeading.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoard.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ListConversations.jsx",["887","888"],"import React, { useEffect, useState } from 'react';\nimport { ListConversationsWrapper } from './styles/ListConversations.styles';\nimport {\n  userVar,\n  messagesStorageVar,\n  currentChatVar,\n  numberOfConversationsVar,\n} from '../../apollo/cache';\nimport ConversationItem from './ConversationItem';\nimport _ from 'lodash';\nimport { usePopupMessagesActions } from './hook/usePopupActions';\nimport {\n  FETCH_CHAT_CONVERSATIONS,\n  UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED,\n} from '../../apollo/chat/chat.types';\nimport { useQuery, useMutation, useReactiveVar } from '@apollo/client';\nimport { setInitialMessagesStorage } from '../../apollo/chat/chat.caches';\nimport constant from '../../constant/constant';\nconst ListConversations = () => {\n  //use Query\n  const currentChat = useReactiveVar(currentChatVar);\n  const messagesStorage = useReactiveVar(messagesStorageVar);\n  const numberOfConversations = useReactiveVar(numberOfConversationsVar);\n  const user = useReactiveVar(userVar);\n\n  const { refetch: fetchMoreConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    { fetchPolicy: 'cache-and-network', skip: true }\n  );\n  //use State\n  const [_messagesStorage, _setMessagesStorage] = useState([]);\n  const [loadMoreConversations, setLoadMoreConversations] = useState(false);\n  const [updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched] =\n    useMutation(\n      UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n    );\n  const { setShowPopup } = usePopupMessagesActions();\n  useEffect(() => {\n    const _convertStorageToArray = Object.values(messagesStorage);\n    const _sortedByLatestMessages = _.sortBy(_convertStorageToArray, [\n      function (o) {\n        return -o.latestMessage.createdAt;\n      },\n    ]);\n    _setMessagesStorage([..._sortedByLatestMessages]);\n  }, [messagesStorage]);\n\n  useEffect(() => {\n    let isScrolling;\n    function onScrollListConversations(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollTop, clientHeight, scrollHeight } = e.target;\n        console.log(scrollTop, clientHeight, scrollHeight);\n        if (scrollTop + clientHeight > 0.8 * scrollHeight) {\n          setLoadMoreConversations(true);\n        }\n      }, 66);\n    }\n    document.getElementById('list-conversations').addEventListener(\n      'scroll',\n      (e) => {\n        onScrollListConversations(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById('list-conversations').removeEventListener(\n        'scroll',\n        (e) => {\n          onScrollListConversations(e);\n        },\n        false\n      );\n    };\n  });\n  useEffect(() => {\n    let _isMounted = true;\n\n    if (\n      loadMoreConversations &&\n      numberOfConversations > _messagesStorage.length\n    ) {\n      const skip = _messagesStorage.length;\n      const limit = constant.REACT_APP_NUMBER_CONVERSATIONS_LIMITATION;\n      const except = Object.keys(messagesStorage);\n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchMoreConversations({ except, skip, limit }).then(({ data }) => {\n        if (_isMounted) {\n          const { conversations } = data.fetchChatConversations;\n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === 'PERSONAL') {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === 'SENT'\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n          setInitialMessagesStorage({ ...messagesStorage, ...storage });\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setLoadMoreConversations(false);\n        }\n      });\n    }\n  }, [loadMoreConversations, numberOfConversations]);\n\n  return (\n    <ListConversationsWrapper id=\"list-conversations\">\n      {_messagesStorage.length\n        ? _messagesStorage.map(\n            ({ profile, scope, latestMessage, hasSeenLatestMessage }) => (\n              <ConversationItem\n                key={`conversation-${profile._id}`}\n                conversation={profile}\n                scope={scope}\n                hasSeenLatestMessage={hasSeenLatestMessage}\n                latestMessage={latestMessage}\n                active={currentChat && currentChat._id === profile._id}\n              />\n            )\n          )\n        : null}\n    </ListConversationsWrapper>\n  );\n};\n\nexport default React.memo(ListConversations);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCard.jsx",["889"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\IntroductionBox.jsx",["890","891"],"import React from 'react';\nimport {\n  BoxWrapper,\n  WorkList,\n  Introduce,\n  Website,\n} from './styles/IntroductionBox.styles';\nimport { useReactiveVar } from '@apollo/client';\nimport { currentPersonalUserVar } from '../../apollo/cache';\nimport { useTheme } from '../../theme';\nimport { Link } from 'react-router-dom';\nimport { FaGlobe } from 'react-icons/fa';\nimport { MdWork } from 'react-icons/md';\nconst works = [\n  {\n    job_name: 'Data Engineer',\n    company_name: 'iTech Corp',\n    company_location: 'HCM city',\n    company_coordinates_href:\n      'https://www.latlong.net/c/?lat=12.554564&long=107.080476',\n    company_href: 'http://google.com',\n  },\n  {\n    job_name: 'Data Scientist',\n    company_name: 'Samsung',\n    company_location: 'HCM city',\n    company_coordinates_href:\n      'https://www.latlong.net/c/?lat=12.554564&long=107.080476',\n    company_href: 'http://google.com',\n  },\n  {\n    job_name: 'Junior Developer',\n    company_name: 'Freelance',\n    company_location: 'HCM city',\n    company_coordinates_href:\n      'https://www.latlong.net/c/?lat=12.554564&long=107.080476',\n    company_href: 'http://google.com',\n  },\n];\n\nconst IntroductionBox = () => {\n  const { theme } = useTheme();\n  return (\n    <BoxWrapper theme={theme}>\n      <h4>Introduction</h4>\n      {/* Introduce */}\n      <Introduce>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem\n        possimus harum aliquam nobis qui! Temporibus, commodi facilis ex nihil\n        veniam in quia eius dicta quos.\n      </Introduce>\n      {/* works list */}\n      <WorkList>\n        {works.map((work) => (\n          <li key={work.job_name}>\n            <Website>\n              <span>\n                <MdWork />\n              </span>\n              <Link to={`/tags/${work.job_name}`}>{work.job_name}</Link>at\n              <Link to={work.company_href}>{work.company_name}</Link>\n            </Website>\n          </li>\n        ))}\n      </WorkList>\n      {/* Live in */}\n      <p>\n        Live in <Link to=\"https://google.com\">Can Tho</Link>\n      </p>\n      {/* Followers */}\n      <p>\n        Current Have <strong>200</strong> followers\n      </p>\n      {/* Contact */}\n      <p>Contact me via : 0123 456 789</p>\n      <Website>\n        {' '}\n        <span>\n          <FaGlobe />\n        </span>{' '}\n        <Link href=\"https://github.com/mthang1801\">\n          https://github.com/mthang1801\n        </Link>\n      </Website>\n    </BoxWrapper>\n  );\n};\n\nexport default IntroductionBox;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\Auth.utility.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalPosts.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditorHeader.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditorBody.jsx",["892","893","894","895","896"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditor.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalHeadingContact.jsx",["897","898","899","900"],"import React, { useState, useEffect, useRef } from 'react';\n\nimport {\n  AiOutlineUnorderedList,\n  AiOutlineEdit,\n  AiOutlineUsergroupDelete,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from 'react-icons/ai';\nimport {\n  BsThreeDots,\n  BsExclamationSquare,\n  BsQuestionSquare,\n} from 'react-icons/bs';\nimport { BiUserVoice, BiBlock } from 'react-icons/bi';\n\nimport { FiUserX, FiUsers, FiUserCheck, FiUserPlus } from 'react-icons/fi';\nimport { RiMessengerLine } from 'react-icons/ri';\nimport { IoMdUndo } from 'react-icons/io';\n\nimport { FcCheckmark, FcCancel } from 'react-icons/fc';\nimport { setCurrentPersonalUser } from '../../apollo/user/currentPersonalUser.caches';\nimport {\n  ACCEPT_REQUEST_TO_ADD_FRIEND,\n  SEND_REQUEST_TO_ADD_FRIEND,\n  REJECT_REQUEST_TO_ADD_FRIEND,\n  CANCEL_REQUEST_TO_ADD_FRIEND,\n  REMOVE_FRIEND,\n} from '../../apollo/contact/contact.types';\nimport { FOLLOW_USER, UNFOLLOW_USER } from '../../apollo/user/user.types';\nimport Button from '@material-ui/core/Button';\nimport { useMutation, useReactiveVar } from '@apollo/client';\n\nimport {\n  dialogVar,\n  notificationsVar,\n  latestNotificationVar,\n  currentPersonalUserVar,\n} from '../../apollo/cache';\nimport { useTheme } from '../../theme';\nimport {\n  PersonalContactContainer,\n  ResponseRequests,\n  DropdownResponseRequest,\n  Dropdown,\n  DropdownMenu,\n  DropdownItem,\n} from './styles/PersonalHeadingContact.styles';\nimport { setCurrentUser } from '../../apollo/user/user.caches';\nimport {\n  setAlertDialog,\n  clearAlertDialog,\n} from '../../apollo/controls/controls.caches';\nimport {\n  removeNotificationItemFromNotificationsList,\n  setLatestNotification,\n} from '../../apollo/notification/notification.caches';\nconst PersonalContact = ({ user }) => {\n  const [relationship, setRelationship] = useState('stranger');\n  const [openResponse, setOpenResponse] = useState(false);\n  const [openSettings, setOpenSettings] = useState(false);\n  const [openUserInteraction, setOpenUserInteraction] = useState(false);\n  const dialog = useReactiveVar(dialogVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const latestNotification = useReactiveVar(latestNotificationVar);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  //Mutations\n  const [sendRequestToAddFriend] = useMutation(SEND_REQUEST_TO_ADD_FRIEND);\n  const [rejectRequestToAddFriend] = useMutation(REJECT_REQUEST_TO_ADD_FRIEND);\n  const [cancelRequestToAddFriend] = useMutation(CANCEL_REQUEST_TO_ADD_FRIEND);\n  const [followUser] = useMutation(FOLLOW_USER);\n  const [unFollowUser] = useMutation(UNFOLLOW_USER);\n  const [acceptRequestToAddFriend] = useMutation(ACCEPT_REQUEST_TO_ADD_FRIEND);\n  const [removeFriend] = useMutation(REMOVE_FRIEND);\n  //color theme\n  const { theme } = useTheme();\n  //useRef\n  const responseRef = useRef(false);\n  const settingRef = useRef(false);\n  const interactionRef = useRef(false);\n\n  useEffect(() => {\n    if (\n      dialog &&\n      dialog?.data?.type === 'remove contact' &&\n      dialog?.data?.userId === currentPersonalUser._id &&\n      dialog?.agree\n    ) {\n      removeFriend({ variables: { friendId: currentPersonalUser._id } })\n        .then(({ data }) => {\n          clearAlertDialog();\n          const { sender, receiver, notification } = data.removeFriend;\n          updateMutationOnChange(sender, receiver, notification);\n        })\n        .catch((err) => clearAlertDialog());\n    }\n  }, [dialog, currentPersonalUser]);\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver, removedNotification) => {\n    console.log(removedNotification, user.notifications);\n    if (\n      removedNotification &&\n      user.notifications.includes(removedNotification._id)\n    ) {\n      if (latestNotification?._id === removedNotification._id) {\n        setLatestNotification(null);\n      }\n      removeNotificationItemFromNotificationsList(removedNotification);\n      setCurrentUser({\n        ...user,\n        notifications: [\n          ...notifications.filter((_id) => _id !== removedNotification._id),\n        ],\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    } else {\n      setCurrentUser({\n        ...user,\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    }\n    if (currentPersonalUser?._id === receiver._id) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        followed: [...receiver.followed],\n        following: [...receiver.following],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n      });\n    }\n  };\n  //track user click event\n  useEffect(() => {\n    function trackUserClickEvent(e) {\n      if (\n        responseRef.current &&\n        !responseRef.current.contains(e.target) &&\n        openResponse\n      ) {\n        setOpenResponse(false);\n      }\n      if (\n        settingRef.current &&\n        !settingRef.current.contains(e.target) &&\n        openSettings\n      ) {\n        setOpenSettings(false);\n      }\n      if (\n        interactionRef.current &&\n        !interactionRef.current.contains(e.target) &&\n        openUserInteraction\n      ) {\n        setOpenUserInteraction(false);\n      }\n    }\n    window.addEventListener('click', trackUserClickEvent);\n    return () => window.removeEventListener('click', trackUserClickEvent);\n  });\n\n  useEffect(() => {\n    if (currentPersonalUser) {\n      if (user && currentPersonalUser._id === user._id) {\n        setRelationship('me');\n      } else if (\n        user &&\n        currentPersonalUser.friends.includes(user._id.toString())\n      ) {\n        setRelationship('friend');\n      } else {\n        setRelationship('stranger');\n      }\n    }\n  }, [user, currentPersonalUser]);\n  // Handle add friend\n  const onSendRequestToAddFriend = (e) => {\n    sendRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.sendRequestToAddFriend;\n        updateMutationOnChange(sender, receiver);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    rejectRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver, notification } =\n          data.rejectRequestToAddFriend;\n        updateMutationOnChange(receiver, sender, notification);\n        setOpenResponse(false);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    cancelRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n  //Handle Follow User\n  const onHandleFollowUser = () => {\n    followUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.followUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle Unfollow user\n  const onHandleUnfollowUser = () => {\n    unFollowUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.unFollowUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle accept request to add friend\n  const onAcceptRequestToAddFriend = () => {\n    acceptRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver, notification } = data.acceptRequestToAddFriend;\n      updateMutationOnChange(receiver, sender, notification);\n      setOpenResponse(false);\n    });\n  };\n  //handle remove friend\n  const onRemoveFriend = () => {\n    removeFriend({ variables: { friendId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver, notification } = data.removeFriend;\n        updateMutationOnChange(sender, receiver, notification);\n      }\n    );\n  };\n\n  const MyActionsContact = (\n    <>\n      <Button size=\"large\" theme={theme} title=\"update personal\">\n        <AiOutlineEdit />\n      </Button>\n      <Button size=\"large\" theme={theme} title=\"history actions\">\n        <AiOutlineUnorderedList />\n      </Button>\n    </>\n  );\n  const FriendActionsContact = (\n    <>\n      <Button size=\"large\" theme={theme} title=\"chat\">\n        <RiMessengerLine />\n      </Button>\n    </>\n  );\n  const StrangerActionsContact = (\n    <>\n      {user &&\n      currentPersonalUser &&\n      user?.sentRequestToAddFriend?.includes(\n        currentPersonalUser._id.toString()\n      ) ? (\n        <Button\n          size=\"large\"\n          theme={theme}\n          title=\"Cancel request\"\n          onClick={onCancelRequestToAddFriend}\n        >\n          <IoMdUndo />\n        </Button>\n      ) : user &&\n        currentPersonalUser &&\n        user?.receivedRequestToAddFriend?.includes(\n          currentPersonalUser._id.toString()\n        ) ? (\n        <ResponseRequests ref={responseRef}>\n          <Button size=\"large\" theme={theme} title=\"Response the request\">\n            <BsQuestionSquare\n              onClick={() => setOpenResponse((prevState) => !prevState)}\n            />\n          </Button>\n          <DropdownResponseRequest theme={theme} open={openResponse}>\n            <div onClick={onAcceptRequestToAddFriend}>\n              <FcCheckmark /> Accept\n            </div>\n            <div onClick={onRejectRequestToAddFriend}>\n              <FcCancel /> Reject\n            </div>\n          </DropdownResponseRequest>\n        </ResponseRequests>\n      ) : (\n        <Button\n          theme={theme}\n          title=\"add friend\"\n          onClick={onSendRequestToAddFriend}\n          size=\"large\"\n        >\n          <FiUserPlus />\n        </Button>\n      )}\n\n      <Button size=\"large\" theme={theme} title=\"Chat\">\n        <RiMessengerLine />\n      </Button>\n    </>\n  );\n\n  const onClickRemoveFriend = () => {\n    setAlertDialog({\n      title: `Remove friend`,\n      content: `Are you sure to remove ${currentPersonalUser?.name}`,\n      data: { type: 'remove contact', userId: currentPersonalUser._id },\n    });\n  };\n\n  const UserInteraction = (\n    <Dropdown ref={interactionRef}>\n      <Button\n        size=\"large\"\n        title={\n          user.friends.includes(currentPersonalUser._id)\n            ? 'Friend'\n            : user.following.includes(currentPersonalUser._id)\n            ? 'Following'\n            : 'Follow'\n        }\n        onClick={() => setOpenUserInteraction((prevState) => !prevState)}\n      >\n        {user.friends.includes(currentPersonalUser._id) ? (\n          <FiUserCheck />\n        ) : user.following.includes(currentPersonalUser._id) ? (\n          <FiUsers />\n        ) : (\n          <AiOutlineEye />\n        )}\n      </Button>\n      {openUserInteraction && (\n        <DropdownMenu>\n          {user.following.includes(currentPersonalUser?._id) ? (\n            <DropdownItem theme={theme} onClick={onHandleUnfollowUser}>\n              <span>\n                <AiOutlineEyeInvisible />\n              </span>\n              <span>Unfollow</span>\n            </DropdownItem>\n          ) : (\n            <DropdownItem theme={theme} onClick={onHandleFollowUser}>\n              <span>\n                <AiOutlineEye />\n              </span>\n              <span>Follow</span>\n            </DropdownItem>\n          )}\n\n          {user.friends.includes(currentPersonalUser?._id) && (\n            <DropdownItem theme={theme} onClick={onClickRemoveFriend}>\n              <span>\n                <FiUserX />\n              </span>\n              <span>Remove Friend</span>\n            </DropdownItem>\n          )}\n        </DropdownMenu>\n      )}\n    </Dropdown>\n  );\n\n  const UserSettings = (\n    <Dropdown ref={settingRef}>\n      <Button\n        size=\"large\"\n        title=\"Setting\"\n        onClick={() => setOpenSettings((prevState) => !prevState)}\n      >\n        <BsThreeDots />\n      </Button>\n      {openSettings ? (\n        <DropdownMenu theme={theme}>\n          <DropdownItem theme={theme}>\n            <span>\n              <BsExclamationSquare />\n            </span>\n            <span>Find Report</span>\n          </DropdownItem>\n          <DropdownItem theme={theme}>\n            <span>\n              <BiBlock />\n            </span>\n            <span>Block</span>\n          </DropdownItem>\n        </DropdownMenu>\n      ) : null}\n    </Dropdown>\n  );\n\n  return (\n    <PersonalContactContainer>\n      {relationship === 'me'\n        ? MyActionsContact\n        : relationship === 'friend'\n        ? FriendActionsContact\n        : StrangerActionsContact}\n      {UserInteraction}\n      {UserSettings}\n    </PersonalContactContainer>\n  );\n};\n\nexport default PersonalContact;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalHeading.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendsList.jsx",["901"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\FacebookAuth.jsx",["902","903"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\GoogleRecapcha.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\GoogleAuth.jsx",["904","905"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\AuthForm.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardUtility.jsx",["906","907"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardProfile.jsx",["908"],"import React from 'react';\nimport styled from 'styled-components/macro';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { useTheme } from '../../theme';\nimport { Link } from 'react-router-dom';\nimport { CardWrapper } from './styles/CartProfile.styles';\nconst CardProfile = ({ user }) => {\n  const { theme } = useTheme();\n  return (\n    <CardWrapper theme={theme}>\n      <div className=\"user-avatar\">\n        <Link to={`/${user.slug}`} className=\"user-avatar__container\">\n          <LazyLoadImage\n            src={user.avatar}\n            alt={user.avatar}\n            effect=\"blur\"\n            width=\"60px\"\n            height=\"60px\"\n            className=\"user-avatar__image\"\n          />\n        </Link>\n      </div>\n      <a href={`/${user.slug}`} className=\"user-name\">\n        <h4 className=\"user-name__primary\">{user.name}</h4>\n\n        <h6 className=\"user-name__secondary\">@{user.slug}</h6>\n      </a>\n      <div className=\"user-association\">\n        <Link to={`/${user.slug}/friends`}>\n          <div>\n            <strong>{user.friends.length}</strong>\n          </div>\n          <div>Friends</div>\n        </Link>\n        <Link to={`/${user.slug}/groups`}>\n          <div>\n            <strong>{user.following.length}</strong>\n          </div>\n          <div>Following</div>\n        </Link>\n        <Link to={`/${user.slug}/followers`}>\n          <div>\n            <strong>{user.followed.length}</strong>\n          </div>\n          <div>Followers</div>\n        </Link>\n      </div>\n    </CardWrapper>\n  );\n};\n\nexport default CardProfile;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardHeading.styles.jsx",["909"],"import styled, { css } from 'styled-components/macro';\n\nexport const Wrapper = styled.header`\n  height: 65px;\n  width: 100%;\n  background-color: #e8f5e9;\n  display: flex;\n  padding: 1rem 2rem;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Avatar = styled.div`\n  width: 2.5rem;\n  height: 2.5rem;\n  & > img {\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n`;\n\nexport const UserInfo = styled.div`\n  margin-left: 0.4rem;\n  h4 {\n    font-size: 1rem;\n  }\n  flex: 1;\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const LinkItem = styled.span`\n  display: inline-block;\n  cursor: pointer;\n  font-size: 1.4rem;\n  margin: 0 0.5rem;\n  ${({ phone }) =>\n    phone &&\n    `\n    color : #039be5 ;\n    &:hover{\n      color : #0277bd ; \n    }\n  `}\n  ${({ video }) =>\n    video &&\n    `\n    color : #e53935; \n    &:hover{\n      color : #c62828;\n    }\n  `}\n  ${({ photo }) =>\n    photo &&\n    `\n    color : #00897b;\n    &:hover{\n      color : #00695c;\n    }\n  `}\n\n  ${({ file }) =>\n    file &&\n    `\n    color : #3949ab;\n    &:hover{\n      color: #283593;\n    }\n  `}\n`;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ConversationItem.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\IntroductionBox.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\EditPostDialog.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardFooter.jsx",["910"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Comments.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardBody.jsx",["911","912","913","914"],"import React, { useState, useMemo, useEffect } from 'react';\nimport { ReactTinyLink } from 'react-tiny-link';\nimport ImagesCarousel from '../UI/ImagesCarousel';\nimport LazyLoad from 'react-lazyload';\nimport {\n  Wrapper,\n  DraftEditor,\n  HashtagLink,\n  CardPreview,\n} from './styles/PostCardBody.styles';\nconst PostCardBody = ({ post }) => {\n  const [urlPreview, setUrlPreview] = useState(null);\n  const images = post.files.length\n    ? post.files.map((file) => ({\n        src: file.data,\n        name: file.filename,\n      }))\n    : [];\n  useEffect(() => {\n    const DOMTarget = document.querySelector(`[data-target=post-${post._id}]`);\n    //find Preview URL\n    const urlLength = DOMTarget.querySelectorAll('[aria-label=link]').length;\n    if (urlLength) {\n      const url =\n        DOMTarget.querySelectorAll('[aria-label=link]')[\n          urlLength - 1\n        ].getAttribute('href');\n      setUrlPreview(url);\n    } else {\n      setUrlPreview(null);\n    }\n  }, []);\n\n  return (\n    <>\n      <DraftEditor\n        data-target={`post-${post._id}`}\n        dangerouslySetInnerHTML={{ __html: post.text }}\n      ></DraftEditor>\n      {urlPreview && (\n        <CardPreview>\n          <ReactTinyLink\n            cardSize=\"large\"\n            showGraphic={true}\n            maxLine={3}\n            minLine={1}\n            url={urlPreview}\n            proxyUrl=\"https://cors-anywhere.herokuapp.com\"\n          />\n        </CardPreview>\n      )}\n      {images.length ? (\n        <LazyLoad>\n          <ImagesCarousel images={images} />\n        </LazyLoad>\n      ) : null}\n    </>\n  );\n};\n\nexport default PostCardBody;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardHeader.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditorHeader.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\ImagesCarousel.jsx",["915"],"import React, { useState } from 'react';\nimport Slider from 'react-slick';\nimport LightBox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport {\n  ImageContainer,\n  NextArrow,\n  PrevArrow,\n} from './styles/ImagesCarousel.styles';\n\nfunction CustomNextArrow(props) {\n  return <NextArrow {...props} />;\n}\n\nfunction CustomPrevArrow(props) {\n  return <PrevArrow {...props} />;\n}\n\nconst ImagesCarousel = ({ images }) => {\n  const [openLightBox, setOpenLightBox] = useState(-1);\n  let dragging = false;\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: images.length > 2 ? 2 : images.length,\n    slidesToScroll: images.length > 2 ? 2 : images.length,\n    swipeToSlide: true,\n    lazyLoad: true,\n    beforeChange: () => (dragging = true),\n    afterChange: () => (dragging = false),\n    nextArrow: <CustomNextArrow />,\n    prevArrow: <CustomPrevArrow />,\n  };\n  if (!images.length) return null;\n  return (\n    <>\n      {openLightBox !== -1 && (\n        <LightBox\n          mainSrc={images[openLightBox].src}\n          onCloseRequest={() => setOpenLightBox(-1)}\n        />\n      )}\n      <Slider {...settings}>\n        {images.map((image, idx) => (\n          <ImageContainer key={image.name}>\n            <img\n              src={image.src}\n              alt={image.src}\n              onClick={() => setOpenLightBox(idx)}\n            />\n          </ImageContainer>\n        ))}\n      </Slider>\n    </>\n  );\n};\n\nexport default ImagesCarousel;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalHeadingContact.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\useDraftEditorPlugin.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditorBody.styles.jsx",["916"],"import styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\nexport const Wrapper = styled.div``;\n\nexport const DraftEditor = styled.div`\n  flex: 1;\n  cursor: text !important;\n  .DraftEditor-root {\n    width: 100% !important;\n    max-height: 8rem;\n    min-height: 4rem;\n    padding: 0.5rem 1rem;\n    overflow: auto;\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n`;\n\nexport const Toolbar = styled.div`\n  display: flex;\n  padding: 0.5rem 0.75rem;\n`;\n\nexport const Label = styled.label`\n  font-size: 1.4rem;\n  display: flex;\n  align-items: center;\n  color: ${({ name }) => (name === 'post-images' ? 'var(--cyan-1)' : 'orange')};\n  &:hover {\n    color: ${({ name }) =>\n      name === 'post-images' ? 'var(--cyan-2)' : 'orange'};\n  }\n  input {\n    display: none;\n  }\n  margin: 0 0.5rem;\n  cursor: pointer;\n`;\n\nexport const CardPreview = styled.div`\n  margin: 1rem auto;\n  width: 100%;\n  & * {\n    width: 100%;\n    max-width: unset;\n  }\n`;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendItem.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ListConversations.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCard.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ConversationItem.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\EditPostDialog.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentEditor.jsx",["917","918","919","920"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentItem.jsx",["921","922"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\Comments.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardBody.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardFooter.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\Dropdown.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonDefaultCircle.jsx",["923"],"import React from 'react';\nimport styled from 'styled-components/macro';\nimport { useTheme } from '../../theme';\nimport { darken, invert } from 'polished';\nconst ButtonDefaultCircle = ({ children, ...props }) => {\n  const { theme } = useTheme();\n  return (\n    <Button theme={theme} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) =>\n    theme.name === 'dark' ? 'var(--gray-2)' : 'var(--light-gray-2)'};\n  height: 40px;\n  width: 40px;\n  font-size: 1em;\n  border-radius: 50%;\n  outline: none;\n  border: none;\n  transition: var(--mainTransition);\n  cursor: pointer;\n  color: ${({ theme }) => (theme ? theme.text : 'var(--text)')};\n  &:hover {\n    background-color: ${({ color, theme }) =>\n      color\n        ? `${darken(0.1, `${color}`)}`\n        : theme.name === 'dark'\n        ? `${darken(0.1, '#454545')}`\n        : `${darken(0.005, '#dedede')}`};\n    opacity: 0.65;\n  }\n  & img {\n    width: 100%;\n  }\n`;\n\nexport default ButtonDefaultCircle;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\ImagesCarousel.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardHeader.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\useDraftEditorPlugin.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.mutations.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\FriendItem.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomButton.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Header.jsx",["924"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/macro';\nimport Brand from './Brand';\nimport Search from './Search';\nimport Navigation from './Navigation';\nimport MessengerAndNotification from './MessengerAndNotification';\nimport SettingAccount from './SettingAccount';\nimport Button from '../Controls/ButtonDefaultCircle';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport ButtonMenu from '../Controls/ButtonMenu';\nimport { toggleMenu } from '../../apollo/controls/controls.caches';\n\nimport classNames from 'classnames';\nimport { userVar, toggleFriendsBoardVar } from '../../apollo/cache';\nimport { useReactiveVar } from '@apollo/client';\nimport { useLocation } from 'react-router-dom';\nimport { useTheme } from '../../theme';\nimport ButtonLogin from '../Controls/ButtonLogin';\nimport ButtonSignUp from '../Controls/ButtonSignUp';\nconst Header = () => {\n  const [openSearch, setOpenSearch] = useState(false);\n  const user = useReactiveVar(userVar);\n  const { theme } = useTheme();\n  const { pathname } = useLocation();\n  const toggleFriendsBoard = useReactiveVar(toggleFriendsBoardVar);\n  const NavControls = user ? (\n    <div className=\"nav-controls\">\n      <div className=\"center\">\n        <div className=\"nav-toggle\">\n          <ButtonMenu onClick={toggleMenu} />\n        </div>\n        <div className=\"nav-bar\">\n          <Navigation />\n        </div>\n\n        <div className=\"control\">\n          <MessengerAndNotification />\n        </div>\n      </div>\n      <div className=\"setting-account\">\n        <SettingAccount />\n      </div>\n    </div>\n  ) : (\n    <div className=\"nav-controls\">\n      <div className=\"nav-auth\">\n        <ButtonLogin to=\"/auth\" from={pathname}>\n          Login\n        </ButtonLogin>\n        <ButtonSignUp to=\"/auth/signup\" from={pathname}>\n          Sign up\n        </ButtonSignUp>\n        <div className=\"setting-account\">\n          <SettingAccount />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Wrapper theme={theme} openFriendBoard={toggleFriendsBoard}>\n      <div className={classNames('nav-header', { shorten: !openSearch })}>\n        <div className={classNames('nav-brand', { hide: openSearch })}>\n          <Brand />\n        </div>\n        <div\n          className={classNames(\n            'close-search',\n            { 'on-search-open': !openSearch },\n            { hide: !openSearch }\n          )}\n        >\n          <Button onClick={() => setOpenSearch(false)} variant=\"outlined\">\n            <FaArrowLeft />\n          </Button>\n        </div>\n        <div className={classNames('search-bar')}>\n          <Search\n            openSearch={openSearch}\n            setOpenSearch={() => setOpenSearch(true)}\n          />\n        </div>\n      </div>\n      {NavControls}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.header`\n  filter: ${({ openFriendBoard }) => (openFriendBoard ? 'blur(5px)' : 'unset')};\n  width: 100vw;\n  height: 60px;\n  background-color: ${({ theme }) =>\n    theme ? theme.background : 'var(--background)'};\n  border-bottom: 1px solid\n    ${({ theme }) => (theme ? theme.border : 'var(--border)')};\n  position: fixed;\n  top: 0;\n  padding: 0 0.4rem;\n  display: flex;\n  align-items: center;\n  flex-wrap: no-wrap;\n  z-index: 100;\n  .nav-header {\n    display: flex;\n    align-items: center;\n    transition: var(--mainTransition);\n    flex-wrap: nowrap;\n    .nav-brand,\n    .on-search-open {\n      width: 60px;\n      transition: var(--mainTransition);\n    }\n    .search-bar {\n      width: calc(100% - 60px);\n      transition: var(--mainTransition);\n    }\n    .nav-brand {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .nav-controls {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: var(--mainTransition);\n    height: 100%;\n    padding: 0 1.5rem;\n    .nav-bar {\n      display: none;\n    }\n    .center {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: space-between;\n      flex: 1;\n      padding: 0 0.5rem;\n    }\n    .nav-toggle {\n      margin-right: 0.75rem;\n    }\n    .nav-auth {\n      width: 100%;\n      display: flex;\n      justify-content: flex-end;\n      & > * {\n        font-size: 0.8em;\n        margin-right: 0.25rem;\n      }\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .hide {\n      width: 0 !important;\n      opacity: 0;\n      visibility: hidden;\n      transition: var(--mainTransition);\n      transition-delay: 0.5s;\n    }\n    .shorten {\n      width: auto !important;\n      transition: var(--mainTransition);\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding: 0 2rem;\n    .close-search {\n      display: none;\n    }\n    .nav-header {\n      width: 30%;\n    }\n    .nav-controls {\n      width: 70%;\n      .nav-bar {\n        display: block;\n        height: 100%;\n      }\n      .center {\n        justify-content: flex-end;\n      }\n      .control {\n        padding: 0 0.5rem;\n      }\n    }\n  }\n  @media screen and (min-width: 992px) {\n    .nav-header {\n      width: 35%;\n    }\n    .nav-controls {\n      width: 65%;\n      .nav-toggle {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport default Header;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentEditor.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentCard.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Responses.jsx",["925","926","927","928","929"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\ResponseEditor.jsx",["930","931","932","933","934"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentItem.styles.jsx",["935"],"import styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\n\nexport const ResponseInput = styled.div`\n  width: 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display: flex;\n`;\nexport const ResponsesComponent = styled.div`\n  width: 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display: block;\n`;\n\nexport const Response = styled.div`\n  flex: 1;\n  margin-left: 0.5rem;\n`;\n\nexport const LoadMoreResponse = styled.span`\n  color: inherit;\n  font-size: 0.88rem;\n  padding: 0.5rem 0.4rem;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n  display: flex;\n  align-items: center;\n  & span {\n    margin-left: 0.1rem;\n  }\n`;\nexport const UserAvatar = styled.div`\n  width: 2rem;\n  height: 2rem;\n  img {\n    width: 100%;\n    border-radius: 50%;\n  }\n`;\n\nexport const CommentResponse = styled.div`\n  width: 90%;\n  margin-left: auto;\n  margin-right: 1rem;\n  padding: 0 1rem;\n`;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomButton.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Brand.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\MessengerAndNotification.jsx",["936","937","938"],"import React, { useEffect, useState, useRef, useCallback } from 'react';\n\nimport {\n  Wrapper,\n  Notification,\n  UnseenNotification,\n  NotificationBoard,\n} from './styles/Header.styles';\nimport { IoMdNotifications } from 'react-icons/io';\nimport Button from '../Controls/ButtonDefaultCircle';\nimport NotificationsBoard from './NotificationsBoard';\nimport useNotificationsSubscription from '../../hooks/useNotificationsSubscription';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport {\n  userVar,\n  notificationsVar,\n  countNumberOfNotificationUnseenVar,\n} from '../../apollo/cache';\nimport {\n  FETCH_NOTIFICATIONS,\n  FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n} from '../../apollo/notification/notification.types';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport FlashPopUpNotification from '../Notification/FlashPopUpNotification';\nimport {\n  setLatestNotification,\n  setNotifications,\n  addNotificationsToNotifcationsList,\n  setCountNumberNotificationsUnseen,\n} from '../../apollo/notification/notification.caches';\nimport { useTheme } from '../../theme';\nimport constant from '../../constant/constant';\nconst Control = () => {\n  const [openNotificationBoard, setOpenNotificationBoard] = useState(false);\n  const [fetchedNotifications, setFetchedNotifications] = useState(false);\n  const [loadingFetchNotifications, setLoadingFetchNotifications] =\n    useState(false);\n  const [loadingNotificationsMore, setLoadingNotificationsMore] =\n    useState(false);\n  const notificationRef = useRef(false);\n  const { theme } = useTheme();\n  const { refetch: fetchNumberNotificationsUnseen } = useQuery(\n    FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n    { skip: true }\n  );\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: 'cache-and-network',\n    skip: true,\n  });\n  const user = useReactiveVar(userVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const countNumberNotificationsUnseen = useReactiveVar(\n    countNumberOfNotificationUnseenVar\n  );\n\n  useNotificationsSubscription();\n\n  useEffect(() => {\n    if (!countNumberNotificationsUnseen) {\n      fetchNumberNotificationsUnseen()\n        .then(({ data }) => {\n          if (data) {\n            setCountNumberNotificationsUnseen(data.countNotificationsUnseen);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setCountNumberNotificationsUnseen(0);\n        });\n    }\n  }, [fetchNumberNotificationsUnseen, countNumberNotificationsUnseen]);\n\n  useEffect(() => {\n    function handleClickOutsideNotificationBoard(e) {\n      if (openNotificationBoard) {\n        setOpenNotificationBoard(false);\n      }\n    }\n    window.addEventListener('click', handleClickOutsideNotificationBoard);\n    return () =>\n      window.removeEventListener('click', handleClickOutsideNotificationBoard);\n  }, [notificationRef.current, openNotificationBoard]);\n\n  const handleClickNotification = useCallback(async () => {\n    setLoadingNotificationsMore(false);\n    setOpenNotificationBoard((prevStatus) => !prevStatus);\n    setLatestNotification(null);\n  });\n\n  const getMoreNotifications = (e) => {\n    const { target } = e;\n    if (\n      target.clientHeight + target.scrollTop > target.scrollHeight * 0.75 &&\n      !loadingNotificationsMore\n    ) {\n      setLoadingNotificationsMore(true);\n    }\n  };\n  useEffect(() => {\n    let _isMounted = true;\n    if (\n      loadingNotificationsMore &&\n      fetchNotifications &&\n      notifications.length < user.notifications.length\n    ) {\n      const skip = notifications.length;\n      const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n      fetchNotifications({ skip, limit })\n        .then(({ data: { fetchNotifications } }) => {\n          if (_isMounted && fetchNotifications) {\n            addNotificationsToNotifcationsList(fetchNotifications);\n            setLoadingNotificationsMore(false);\n          }\n        })\n        .catch((err) => {\n          setLoadingNotificationsMore(false);\n        });\n    }\n    return () => (_isMounted = false);\n  }, [loadingNotificationsMore, user, notifications, fetchNotifications]);\n\n  useEffect(() => {}, [openNotificationBoard]);\n\n  const onOpenNotificationBoard = () => {\n    setOpenNotificationBoard(true);\n  };\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (\n      !fetchedNotifications &&\n      openNotificationBoard &&\n      notifications.length < constant.REACT_APP_NOTIFICATIONS_PER_PAGE\n    ) {\n      setLoadingFetchNotifications(true);\n      fetchNotifications()\n        .then(({ data }) => {\n          if (data && _isMounted) {\n            setNotifications(data.fetchNotifications);\n          }\n          setLoadingFetchNotifications(false);\n          setFetchedNotifications(true);\n        })\n        .catch((err) => {\n          console.log(err);\n          setLoadingFetchNotifications(false);\n          setFetchedNotifications(true);\n        });\n    }\n    return () => (_isMounted = false);\n  }, [fetchedNotifications, openNotificationBoard, notifications]);\n\n  return (\n    <Wrapper>\n      <Notification ref={notificationRef}>\n        <FlashPopUpNotification onClick={onOpenNotificationBoard} />\n        <Button onClick={handleClickNotification}>\n          <IoMdNotifications />\n          {countNumberNotificationsUnseen ? (\n            <UnseenNotification>\n              {countNumberNotificationsUnseen}\n            </UnseenNotification>\n          ) : null}\n        </Button>\n\n        <NotificationBoard open={openNotificationBoard} theme={theme}>\n          <Scrollbars\n            autoHide\n            autoHideTimeout={1000}\n            autoHideDuration={200}\n            autoHeightMin={0}\n            autoHeightMax={200}\n            onScroll={getMoreNotifications}\n          >\n            <NotificationsBoard\n              notifications={notifications}\n              loading={loadingFetchNotifications}\n            />\n          </Scrollbars>\n        </NotificationBoard>\n      </Notification>\n    </Wrapper>\n  );\n};\n\nexport default Control;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Navigation.jsx",["939"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Search.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonMenu.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\SettingAccount.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentCard.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\FlashPopUpNotification.jsx",["940"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Tooltips.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useNotificationsSubscription.jsx",["941","942"],"import { useEffect } from 'react';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport {\n  countNumberOfNotificationUnseenVar,\n  userVar,\n  currentPersonalUserVar,\n  notificationsVar,\n  receivedRequestsToAddFriendVar,\n  latestNotificationVar,\n} from '../apollo/cache';\nimport {\n  FETCH_NOTIFICATIONS,\n  FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n} from '../apollo/notification/notification.types';\nimport { setCurrentPersonalUser } from '../apollo/user/currentPersonalUser.caches';\nimport {\n  addUserToReceivedRequestToAddFriend,\n  removeUserFromReceivedRequestToAddFriend,\n  moveSentRequestToFriend,\n} from '../apollo/contact/contact.caches';\nimport {\n  ACCEPT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  LIKE_COMMENT_SUBSCRIPTION,\n  LIKE_POST_SUBSCRIPTION_NOTIFICATION,\n  LIKE_RESPONSE_SUBSCRIPTION_NOTIFICATION,\n  NOTIFY_MENTIONED_USERS_IN_COMMENT_SUBSCRIPTION,\n  NOTIFY_MENTIONED_USERS_IN_POST,\n  NOTIFY_MENTIONED_USERS_IN_RESPONSE,\n  NOTIFFY_USER_COMMENT_POST_SUBSCRIPTION,\n  NOTIFY_USER_RESPONSE_COMMENT_SUBSCRIPTION,\n  REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n  REMOVE_LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n  REMOVE_MENTIONED_USERS_NOTIFICATION_IN_POST,\n  SENT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n} from '../apollo/notification/notification.types';\nimport { addNotificationItemToNotificationsList } from '../apollo/notification/notification.caches';\nimport { setCurrentUser } from '../apollo/user/user.caches';\nimport {\n  removeNotificationItemFromNotificationsList,\n  setCountNumberNotificationsUnseen,\n  setNewNotifications,\n  setLatestNotification,\n  updateNotificationItemInNotificationsList,\n} from '../apollo/notification/notification.caches';\nconst useNotificationsPostSubscription = () => {\n  const { subscribeToMore: subscribeToMoreNotifications } = useQuery(\n    FETCH_NOTIFICATIONS,\n    {\n      skip: true,\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n  const { refetch: fetchCountNumberNotificationsUnseen } = useQuery(\n    FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n    {\n      skip: true,\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n  const countNumberNotificationsUnseen = useReactiveVar(\n    countNumberOfNotificationUnseenVar\n  );\n  const user = useReactiveVar(userVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const receivedRequestsToAddFriend = useReactiveVar(\n    receivedRequestsToAddFriendVar\n  );\n  const latestNotification = useReactiveVar(latestNotificationVar);\n  useEffect(() => {\n    let _isMounted = true;\n    if (countNumberNotificationsUnseen === null) {\n      fetchCountNumberNotificationsUnseen().then(\n        ({ data: { countNotificationsUnseen } }) => {\n          if (_isMounted) {\n            setCountNumberNotificationsUnseen(countNotificationsUnseen);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [\n    countNumberNotificationsUnseen,\n    fetchCountNumberNotificationsUnseen,\n    setCountNumberNotificationsUnseen,\n  ]);\n\n  //sender and receiver only use in field 'user'\n  const updatedAddNotification = (\n    newNotification,\n    sender = null,\n    receiver = null\n  ) => {\n    setLatestNotification(newNotification);\n    setNewNotifications(newNotification._id);\n\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n    }\n    if (\n      notifications.find(\n        (notification) => notification._id === newNotification._id\n      )\n    ) {\n      updateNotificationItemInNotificationsList(newNotification);\n    } else {\n      addNotificationItemToNotificationsList(newNotification);\n    }\n  };\n\n  const updatedRemoveNotification = (removedNotification, sender, receiver) => {\n    if (latestNotification?._id === removedNotification._id) {\n      setLatestNotification(null);\n    }\n    removeNotificationItemFromNotificationsList(removedNotification);\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n      return;\n    }\n    setCurrentUser({\n      ...user,\n      notifications: [\n        ...notifications.filter((_id) => _id !== removedNotification._id),\n      ],\n    });\n  };\n\n  useEffect(() => {\n    let unsubscribeRequestAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeAcceptRequestToAddFriend,\n      unsubscribeMentionedUsersInPost,\n      unsubscribeAcceptRequestAddFriend,\n      unsubscribeUserLikePost,\n      unsubscribeUserRemoveLikePost,\n      unsubscribeOwnerPostReceivedUserComment,\n      unsubscribeMentionedUsersInComment,\n      unsubscribeLikeComment,\n      unsubscribeRemoveLikeComment,\n      unsubscribeUserResponseComment,\n      unsubscribeMentionedUsersInResponse,\n      unsubscribeUserLikeResponse,\n      unsubscribeUserRemoveLikeResponse,\n      unsubscribeRemoveMentionedUsersNotificationInPost;\n    if (subscribeToMoreNotifications && user) {\n      //#region Contact\n      unsubscribeRequestAddFriend = subscribeToMoreNotifications({\n        document: SENT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { sentRequestToAddFriendSubscription: notification } =\n              subscriptionData.data;\n            const { receiver, sender } = notification?.fieldIdentity;\n            console.log(subscriptionData);\n            if (sender && receiver) {\n              addUserToReceivedRequestToAddFriend(sender);\n              updatedAddNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeCancelRequestToAddFriend = subscribeToMoreNotifications({\n        document: CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { cancelRequestToAddFriendSubscription: notification } =\n              subscriptionData.data;\n            const { sender, receiver } = notification.fieldIdentity;\n            if (sender && receiver) {\n              removeUserFromReceivedRequestToAddFriend(sender);\n              updatedRemoveNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeAcceptRequestToAddFriend = subscribeToMoreNotifications({\n        document: ACCEPT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { acceptRequestToAddFriendSubscription: notification } =\n              subscriptionData.data;\n            const { sender, receiver } = notification.fieldIdentity;\n            moveSentRequestToFriend(sender);\n            updatedAddNotification(notification, sender, receiver);\n          }\n        },\n      });\n\n      //#endregion\n\n      //#region Post\n      unsubscribeMentionedUsersInPost = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_POST,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionedUsersInPost } = subscriptionData.data;\n            updatedAddNotification(notifyMentionedUsersInPost);\n          }\n        },\n      });\n      unsubscribeUserLikePost = subscribeToMoreNotifications({\n        document: LIKE_POST_SUBSCRIPTION_NOTIFICATION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likePostSubscriptionNotification } = subscriptionData.data;\n            if (\n              user._id.toString() ===\n              likePostSubscriptionNotification?.receiver.toString()\n            ) {\n              updatedAddNotification(likePostSubscriptionNotification);\n            }\n          }\n        },\n      });\n      unsubscribeUserRemoveLikePost = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_POST_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikePostSubscription } = subscriptionData.data;\n            if (removeLikePostSubscription?.receiver === user._id) {\n              updatedRemoveNotification(removeLikePostSubscription);\n            }\n          }\n        },\n      });\n\n      unsubscribeOwnerPostReceivedUserComment = subscribeToMoreNotifications({\n        document: NOTIFFY_USER_COMMENT_POST_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyUserCommentPostSubscription } = subscriptionData.data;\n            console.log(notifyUserCommentPostSubscription);\n            updatedAddNotification(notifyUserCommentPostSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInComment = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionUsersInComment } = subscriptionData.data;\n            updatedAddNotification(notifyMentionUsersInComment);\n          }\n        },\n      });\n      unsubscribeLikeComment = subscribeToMoreNotifications({\n        document: LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          console.log(subscriptionData);\n          if (subscriptionData) {\n            const { likeCommentSubscriptionNotification } =\n              subscriptionData.data;\n            //create notification to receiver\n            if (\n              likeCommentSubscriptionNotification &&\n              likeCommentSubscriptionNotification.receiver === user._id\n            ) {\n              updatedAddNotification(likeCommentSubscriptionNotification);\n            }\n          }\n        },\n      });\n      unsubscribeRemoveLikeComment = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (\n            subscriptionData.data?.removeLikeCommentSubscriptionNotification\n          ) {\n            const { removeLikeCommentSubscriptionNotification } =\n              subscriptionData.data;\n            if (\n              removeLikeCommentSubscriptionNotification &&\n              removeLikeCommentSubscriptionNotification.receiver === user._id\n            ) {\n              updatedRemoveNotification(\n                removeLikeCommentSubscriptionNotification\n              );\n            }\n          }\n        },\n      });\n      unsubscribeUserResponseComment = subscribeToMoreNotifications({\n        document: NOTIFY_USER_RESPONSE_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyUserResponseCommentSubscription } =\n              subscriptionData.data;\n            updatedAddNotification(notifyUserResponseCommentSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInResponse = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_RESPONSE,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionedUsersInResponse } = subscriptionData.data;\n            updatedAddNotification(notifyMentionedUsersInResponse);\n          }\n        },\n      });\n      unsubscribeUserLikeResponse = subscribeToMoreNotifications({\n        document: LIKE_RESPONSE_SUBSCRIPTION_NOTIFICATION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likeResponseSubscriptionNotification } =\n              subscriptionData.data;\n            console.log(likeResponseSubscriptionNotification);\n            if (\n              likeResponseSubscriptionNotification.receiver.toString() ===\n              user._id\n            ) {\n              updatedAddNotification(likeResponseSubscriptionNotification);\n            }\n          }\n        },\n      });\n      unsubscribeUserRemoveLikeResponse = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikeResponseSubscription } = subscriptionData.data;\n            if (\n              removeLikeResponseSubscription.receiver.toString() === user._id\n            ) {\n              updatedRemoveNotification(removeLikeResponseSubscription);\n            }\n          }\n        },\n      });\n\n      unsubscribeRemoveMentionedUsersNotificationInPost =\n        subscribeToMoreNotifications({\n          document: REMOVE_MENTIONED_USERS_NOTIFICATION_IN_POST,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            if (subscriptionData) {\n              const { removeMentionedNotificationSubscription } =\n                subscriptionData.data;\n              updatedRemoveNotification(\n                removeMentionedNotificationSubscription\n              );\n            }\n          },\n        });\n      //#endregion\n    }\n\n    return () => {\n      if (unsubscribeRequestAddFriend) {\n        unsubscribeRequestAddFriend();\n      }\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeAcceptRequestToAddFriend) {\n        unsubscribeAcceptRequestToAddFriend();\n      }\n      if (unsubscribeMentionedUsersInPost) {\n        unsubscribeMentionedUsersInPost();\n      }\n      if (unsubscribeUserLikePost) {\n        unsubscribeUserLikePost();\n      }\n      if (unsubscribeUserRemoveLikePost) {\n        unsubscribeUserRemoveLikePost();\n      }\n      if (unsubscribeAcceptRequestAddFriend) {\n        unsubscribeAcceptRequestAddFriend();\n      }\n      if (unsubscribeOwnerPostReceivedUserComment) {\n        unsubscribeOwnerPostReceivedUserComment();\n      }\n      if (unsubscribeMentionedUsersInComment) {\n        unsubscribeMentionedUsersInComment();\n      }\n      if (unsubscribeLikeComment) {\n        unsubscribeLikeComment();\n      }\n      if (unsubscribeRemoveLikeComment) {\n        unsubscribeRemoveLikeComment();\n      }\n      if (unsubscribeUserResponseComment) {\n        unsubscribeUserResponseComment();\n      }\n      if (unsubscribeMentionedUsersInResponse) {\n        unsubscribeMentionedUsersInResponse();\n      }\n      if (unsubscribeUserLikeResponse) {\n        unsubscribeUserLikeResponse();\n      }\n      if (unsubscribeUserRemoveLikeResponse) {\n        unsubscribeUserRemoveLikeResponse();\n      }\n      if (unsubscribeRemoveMentionedUsersNotificationInPost) {\n        unsubscribeRemoveMentionedUsersNotificationInPost();\n      }\n    };\n  }, [\n    countNumberNotificationsUnseen,\n    subscribeToMoreNotifications,\n    receivedRequestsToAddFriend,\n    notifications,\n    user,\n  ]);\n};\n\nexport default useNotificationsPostSubscription;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\NotificationsBoard.jsx",["943"],"import React, { memo } from 'react';\nimport { Wrapper, Title, Header } from './styles/NotificationsBoard.styles';\nimport Button from '../Controls/ButtonDefaultCircle';\nimport { BiDotsHorizontalRounded } from 'react-icons/bi';\nimport { useTheme } from '../../theme';\nimport Notifications from '../Notification/Notifications';\nimport NotificationItem from '../Notification/NotificationItem';\nconst NotificationsBoard = ({ notifications, loading }) => {\n  const { theme } = useTheme();\n  return (\n    <Wrapper theme={theme}>\n      <Header>\n        <Title>Notifications</Title>\n        <Button variant=\"outlined\">\n          <BiDotsHorizontalRounded />\n        </Button>\n      </Header>\n      <section>\n        {loading ? (\n          <div>Loading</div>\n        ) : notifications.length ? (\n          notifications.map((notification) => (\n            <NotificationItem\n              key={`home-page-notification-${notification._id}`}\n              notifications={notifications}\n              notification={notification}\n            />\n          ))\n        ) : (\n          <div>No notifications</div>\n        )}\n      </section>\n    </Wrapper>\n  );\n};\n\nexport default memo(NotificationsBoard);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonColorMode.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Header.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\NotificationsBoard.styles.jsx",["944"],"import styled from 'styled-components/macro';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) =>\n    theme ? theme.card.primary : 'var(--card-primary)'};\n  border-radius: 0.5rem;\n  box-shadow: var(--mediumShadow);\n  color: inherit;\n  border: 1px solid ${({ theme }) => (theme ? theme.border : 'var(--border)')};\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0rem 0.75rem;\n`;\n\nexport const Title = styled.h4`\n  font-size: 1.2rem;\n`;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\styles\\FlashPopUpNotification.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\Notifications.jsx",["945"],"import React from 'react';\nimport NotificationItem from './NotificationItem';\nimport styled from 'styled-components/macro';\nimport LazyLoad from 'react-lazyload';\nconst Notifications = ({ notifications }) => {\n  return (\n    <LazyLoad>\n      {notifications.length\n        ? notifications.map((notification) => (\n            <NotificationItem\n              key={`notification-${notification._id}`}\n              notifications={notifications}\n              notification={notification}\n            />\n          ))\n        : null}\n    </LazyLoad>\n  );\n};\n\nexport default React.memo(Notifications);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\constant\\constant.js",["946"],"export default {\n  REACT_APP_POSTS_PER_PAGE: 7,\n  REACT_APP_COMMENTS_PER_POST: 10,\n  REACT_APP_RESPONSES_PER_COMMENT: 10,\n  REACT_APP_NOTIFICATIONS_PER_PAGE: 5,\n  REACT_APP_FRIENDS_PER_LOAD: 10,\n  REACT_APP_USERS_CONTACT_PER_LOAD: 2,\n  REACT_APP_CONTACT_USER_PER_PAGE: 10,\n  REACT_APP_NUMBER_CONVERSATIONS_LIMITATION: 10,\n  REACT_APP_NUMBER_MESSAGES_PER_LOAD: 15,\n};\n","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useCurrentPersonalUser.supscription.jsx",["947","948","949"],"import { useEffect } from 'react';\nimport { useQuery, useReactiveVar, useSubscription } from '@apollo/client';\nimport { FETCH_POSTS } from '../apollo/post/post.queries';\nimport {\n  CREATE_COMMENT_SUBSCIPTION,\n  LIKE_COMMENT_SUBSCRIPTION,\n  CREATE_RESPONSE_SUBSCRIPTION,\n  LIKE_RESPONSE_SUBSCRIPTION,\n  EDIT_POST_SUBSCRIPTION,\n  LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n  REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n} from '../apollo/post/post.types';\nimport { userVar } from '../apollo/cache';\nimport {\n  addCommentToPost,\n  addNewResponseToCommentAtPersonalUser,\n  updatePost,\n  updateLikePostSubscription,\n  removeLikePost,\n  addLikeResponseAtCurrentPersonalUserPage,\n  removeLikeResponseAtCurrentPersonalUser,\n  addLikeComment,\n  removeLikeComment,\n} from '../apollo/post/post.caches';\n\nconst useCurrentPersonalSubscription = () => {\n  const { subscribeToMore: subscribePosts } = useQuery(FETCH_POSTS, {\n    skip: true,\n    fetchPolicy: 'network-only',\n  });\n  const user = useReactiveVar(userVar);\n  useSubscription(LIKE_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data) {\n        const { likePostSubscription } = subscriptionData.data;\n        updateLikePostSubscription(likePostSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data) {\n        const { removeLikePostSubscription } = subscriptionData.data;\n        removeLikePost(removeLikePostSubscription);\n      }\n    },\n  });\n  useSubscription(CREATE_COMMENT_SUBSCIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.createCommentSubscription) {\n        const { createCommentSubscription } = subscriptionData.data;\n        addCommentToPost(createCommentSubscription);\n      }\n    },\n  });\n  useSubscription(LIKE_COMMENT_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.likeCommentSubscription) {\n        const { likeCommentSubscription } = subscriptionData.data;\n        addLikeComment(likeCommentSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_COMMENT_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.removeLikeCommentSubscription) {\n        const { removeLikeCommentSubscription } = subscriptionData.data;\n        removeLikeComment(removeLikeCommentSubscription);\n      }\n    },\n  });\n  useSubscription(CREATE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.createResponseSubscription) {\n        const { createResponseSubscription } = subscriptionData.data;\n        addNewResponseToCommentAtPersonalUser(createResponseSubscription);\n      }\n    },\n  });\n  useSubscription(LIKE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data.likeResponseSubscription) {\n        const { likeResponseSubscription } = subscriptionData.data;\n        addLikeResponseAtCurrentPersonalUserPage(likeResponseSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data.removeLikeResponseSubscription) {\n        const { removeLikeResponseSubscription } = subscriptionData.data;\n        removeLikeResponseAtCurrentPersonalUser(removeLikeResponseSubscription);\n      }\n    },\n  });\n\n  useSubscription(EDIT_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      console.log(subscriptionData);\n      if (subscriptionData.data?.editPostSubscription) {\n        const { editPostSubscription } = subscriptionData.data;\n        updatePost(editPostSubscription);\n      }\n    },\n  });\n};\n\nexport default useCurrentPersonalSubscription;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\FriendsList.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\Sidebar.styles.jsx",["950","951"],"import styled, { css } from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\n\nexport const FriendsBoardWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  height: 100%;\n  width: 300px;\n  overflow: auto;\n  transition: var(--mainTransition);\n  z-index: ${({ show }) => (show ? 9999 : -1)};\n`;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CartProfile.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\storage.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\theme\\theme.js",["952","953"],"export const theme = {\n  initialColorModeName: 'light',\n  modes: {\n    light: {\n      name: 'light',\n      text: '#000000',\n      background: '#fff',\n      backgroundSecondary: '#ededed',\n      panelBackground: '#f9f9f9',\n      hover: {\n        background: '#f5f5f5',\n        text: '#ffc107',\n      },\n      border: '#e0e0e0',\n      boxShadow: '0 0 3px 3px #f5f5f5',\n      disabled: {\n        background: '#f5f5f5',\n        color: '#424242',\n      },\n      card: {\n        primary: '#f7f7f7',\n        secondary: '#17181a',\n      },\n      border: '#e0e0e0',\n      notification: {\n        hasSeen: '#fff',\n        unSeen: '#e9e9e9',\n      },\n    },\n    dark: {\n      name: 'dark',\n      background: '#212121',\n      backgroundSecondary: '#303030',\n      panelBackground: '#282828',\n      text: '#fff',\n      hover: {\n        background: '#343a40',\n        text: '#ffc107',\n      },\n      border: '#616161',\n      boxShadow: '0 0 3px 3px #302f2f',\n      disabled: {\n        background: '#2d2d2d',\n        color: '#bdbdbd',\n      },\n      card: {\n        primary: '#2d2f31',\n        secondary: '#17181a',\n      },\n      border: '#616161',\n      notification: {\n        hasSeen: '#292929',\n        unSeen: '#1c1a1a',\n      },\n    },\n  },\n};\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CardRequestAuth.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CardUtility.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Navigation.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\SettingAccount.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\styles\\MenuList.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\styles\\Layout.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Search.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\i18n.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\translation.en.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\translation.vi.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\styles\\FacebookAuth.styles.jsx",[],{"ruleId":"954","replacedBy":"955"},{"ruleId":"956","replacedBy":"957"},{"ruleId":"958","severity":1,"message":"959","line":19,"column":6,"nodeType":"960","endLine":19,"endColumn":37,"suggestions":"961"},{"ruleId":"962","severity":1,"message":"963","line":31,"column":49,"nodeType":"964","messageId":"965","endLine":31,"endColumn":64},{"ruleId":"958","severity":1,"message":"966","line":49,"column":6,"nodeType":"960","endLine":49,"endColumn":28,"suggestions":"967"},{"ruleId":"958","severity":1,"message":"966","line":81,"column":6,"nodeType":"960","endLine":81,"endColumn":44,"suggestions":"968"},{"ruleId":"969","severity":1,"message":"970","line":13,"column":12,"nodeType":"971","endLine":13,"endColumn":70},{"ruleId":"958","severity":1,"message":"972","line":28,"column":6,"nodeType":"960","endLine":28,"endColumn":12,"suggestions":"973"},{"ruleId":"962","severity":1,"message":"974","line":28,"column":10,"nodeType":"964","messageId":"965","endLine":28,"endColumn":21},{"ruleId":"962","severity":1,"message":"975","line":28,"column":23,"nodeType":"964","messageId":"965","endLine":28,"endColumn":37},{"ruleId":"958","severity":1,"message":"976","line":67,"column":6,"nodeType":"960","endLine":67,"endColumn":33,"suggestions":"977"},{"ruleId":"958","severity":1,"message":"978","line":101,"column":6,"nodeType":"960","endLine":101,"endColumn":59,"suggestions":"979"},{"ruleId":"958","severity":1,"message":"980","line":53,"column":6,"nodeType":"960","endLine":57,"endColumn":4,"suggestions":"981"},{"ruleId":"958","severity":1,"message":"982","line":56,"column":5,"nodeType":"983","endLine":56,"endColumn":49},{"ruleId":"958","severity":1,"message":"984","line":87,"column":6,"nodeType":"960","endLine":87,"endColumn":38,"suggestions":"985"},{"ruleId":"958","severity":1,"message":"986","line":90,"column":6,"nodeType":"960","endLine":90,"endColumn":56,"suggestions":"987"},{"ruleId":"962","severity":1,"message":"988","line":6,"column":8,"nodeType":"964","messageId":"965","endLine":6,"endColumn":9},{"ruleId":"962","severity":1,"message":"989","line":1,"column":10,"nodeType":"964","messageId":"965","endLine":1,"endColumn":29},{"ruleId":"962","severity":1,"message":"990","line":2,"column":22,"nodeType":"964","messageId":"965","endLine":2,"endColumn":29},{"ruleId":"962","severity":1,"message":"991","line":4,"column":3,"nodeType":"964","messageId":"965","endLine":4,"endColumn":13},{"ruleId":"962","severity":1,"message":"992","line":6,"column":3,"nodeType":"964","messageId":"965","endLine":6,"endColumn":13},{"ruleId":"962","severity":1,"message":"993","line":1,"column":10,"nodeType":"964","messageId":"965","endLine":1,"endColumn":19},{"ruleId":"962","severity":1,"message":"994","line":29,"column":28,"nodeType":"964","messageId":"965","endLine":29,"endColumn":42},{"ruleId":"962","severity":1,"message":"995","line":33,"column":9,"nodeType":"964","messageId":"965","endLine":33,"endColumn":13},{"ruleId":"962","severity":1,"message":"996","line":45,"column":19,"nodeType":"964","messageId":"965","endLine":45,"endColumn":25},{"ruleId":"958","severity":1,"message":"997","line":105,"column":6,"nodeType":"960","endLine":105,"endColumn":47,"suggestions":"998"},{"ruleId":"962","severity":1,"message":"999","line":17,"column":8,"nodeType":"964","messageId":"965","endLine":17,"endColumn":20},{"ruleId":"962","severity":1,"message":"1000","line":20,"column":8,"nodeType":"964","messageId":"965","endLine":20,"endColumn":21},{"ruleId":"1001","severity":1,"message":"1002","line":53,"column":11,"nodeType":"1003","messageId":"1004","endLine":53,"endColumn":439},{"ruleId":"962","severity":1,"message":"1005","line":19,"column":8,"nodeType":"964","messageId":"965","endLine":19,"endColumn":20},{"ruleId":"962","severity":1,"message":"1006","line":127,"column":51,"nodeType":"964","messageId":"965","endLine":127,"endColumn":65},{"ruleId":"962","severity":1,"message":"1007","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":25},{"ruleId":"962","severity":1,"message":"1008","line":3,"column":8,"nodeType":"964","messageId":"965","endLine":3,"endColumn":31},{"ruleId":"962","severity":1,"message":"1009","line":4,"column":24,"nodeType":"964","messageId":"965","endLine":4,"endColumn":46},{"ruleId":"1010","severity":1,"message":"1011","line":108,"column":62,"nodeType":"1012","messageId":"1013","endLine":108,"endColumn":64},{"ruleId":"958","severity":1,"message":"1014","line":75,"column":6,"nodeType":"960","endLine":75,"endColumn":40,"suggestions":"1015"},{"ruleId":"962","severity":1,"message":"993","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":26},{"ruleId":"962","severity":1,"message":"1016","line":23,"column":10,"nodeType":"964","messageId":"965","endLine":23,"endColumn":16},{"ruleId":"962","severity":1,"message":"1017","line":23,"column":18,"nodeType":"964","messageId":"965","endLine":23,"endColumn":27},{"ruleId":"962","severity":1,"message":"1018","line":24,"column":10,"nodeType":"964","messageId":"965","endLine":24,"endColumn":22},{"ruleId":"962","severity":1,"message":"1019","line":24,"column":24,"nodeType":"964","messageId":"965","endLine":24,"endColumn":39},{"ruleId":"962","severity":1,"message":"993","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":26},{"ruleId":"962","severity":1,"message":"988","line":9,"column":8,"nodeType":"964","messageId":"965","endLine":9,"endColumn":9},{"ruleId":"962","severity":1,"message":"988","line":11,"column":8,"nodeType":"964","messageId":"965","endLine":11,"endColumn":9},{"ruleId":"962","severity":1,"message":"1020","line":26,"column":10,"nodeType":"964","messageId":"965","endLine":26,"endColumn":21},{"ruleId":"962","severity":1,"message":"1021","line":26,"column":23,"nodeType":"964","messageId":"965","endLine":26,"endColumn":37},{"ruleId":"962","severity":1,"message":"1022","line":27,"column":10,"nodeType":"964","messageId":"965","endLine":27,"endColumn":20},{"ruleId":"962","severity":1,"message":"1023","line":27,"column":22,"nodeType":"964","messageId":"965","endLine":27,"endColumn":35},{"ruleId":"962","severity":1,"message":"1024","line":29,"column":19,"nodeType":"964","messageId":"965","endLine":29,"endColumn":29},{"ruleId":"958","severity":1,"message":"1025","line":65,"column":6,"nodeType":"960","endLine":65,"endColumn":24,"suggestions":"1026"},{"ruleId":"962","severity":1,"message":"1027","line":1,"column":8,"nodeType":"964","messageId":"965","endLine":1,"endColumn":13},{"ruleId":"962","severity":1,"message":"1028","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":26},{"ruleId":"958","severity":1,"message":"1029","line":33,"column":6,"nodeType":"960","endLine":33,"endColumn":23,"suggestions":"1030"},{"ruleId":"962","severity":1,"message":"1031","line":29,"column":3,"nodeType":"964","messageId":"965","endLine":29,"endColumn":33},{"ruleId":"962","severity":1,"message":"1027","line":1,"column":8,"nodeType":"964","messageId":"965","endLine":1,"endColumn":13},{"ruleId":"962","severity":1,"message":"1032","line":3,"column":3,"nodeType":"964","messageId":"965","endLine":3,"endColumn":17},{"ruleId":"962","severity":1,"message":"1033","line":5,"column":3,"nodeType":"964","messageId":"965","endLine":5,"endColumn":13},{"ruleId":"962","severity":1,"message":"1034","line":6,"column":3,"nodeType":"964","messageId":"965","endLine":6,"endColumn":16},{"ruleId":"962","severity":1,"message":"1035","line":9,"column":17,"nodeType":"964","messageId":"965","endLine":9,"endColumn":23},{"ruleId":"962","severity":1,"message":"1036","line":9,"column":30,"nodeType":"964","messageId":"965","endLine":9,"endColumn":34},{"ruleId":"1037","severity":1,"message":"1038","line":228,"column":1,"nodeType":"1039","endLine":241,"endColumn":3},{"ruleId":"958","severity":1,"message":"1040","line":38,"column":6,"nodeType":"960","endLine":38,"endColumn":8,"suggestions":"1041"},{"ruleId":"958","severity":1,"message":"1042","line":55,"column":6,"nodeType":"960","endLine":55,"endColumn":70,"suggestions":"1043"},{"ruleId":"958","severity":1,"message":"982","line":55,"column":20,"nodeType":"1044","endLine":55,"endColumn":63},{"ruleId":"958","severity":1,"message":"1045","line":113,"column":6,"nodeType":"960","endLine":113,"endColumn":24,"suggestions":"1046"},{"ruleId":"969","severity":1,"message":"970","line":65,"column":18,"nodeType":"971","endLine":65,"endColumn":76},{"ruleId":"962","severity":1,"message":"1047","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":28},{"ruleId":"962","severity":1,"message":"1048","line":21,"column":8,"nodeType":"964","messageId":"965","endLine":21,"endColumn":16},{"ruleId":"962","severity":1,"message":"1049","line":37,"column":11,"nodeType":"964","messageId":"965","endLine":37,"endColumn":23},{"ruleId":"958","severity":1,"message":"1050","line":119,"column":6,"nodeType":"960","endLine":119,"endColumn":52,"suggestions":"1051"},{"ruleId":"958","severity":1,"message":"1052","line":60,"column":6,"nodeType":"960","endLine":60,"endColumn":16,"suggestions":"1053"},{"ruleId":"962","severity":1,"message":"1054","line":8,"column":10,"nodeType":"964","messageId":"965","endLine":8,"endColumn":24},{"ruleId":"962","severity":1,"message":"1055","line":9,"column":10,"nodeType":"964","messageId":"965","endLine":9,"endColumn":32},{"ruleId":"962","severity":1,"message":"1056","line":3,"column":3,"nodeType":"964","messageId":"965","endLine":3,"endColumn":10},{"ruleId":"962","severity":1,"message":"1057","line":9,"column":3,"nodeType":"964","messageId":"965","endLine":9,"endColumn":10},{"ruleId":"962","severity":1,"message":"1058","line":36,"column":44,"nodeType":"964","messageId":"965","endLine":36,"endColumn":64},{"ruleId":"958","severity":1,"message":"1059","line":57,"column":6,"nodeType":"960","endLine":57,"endColumn":8,"suggestions":"1060"},{"ruleId":"958","severity":1,"message":"1061","line":81,"column":6,"nodeType":"960","endLine":81,"endColumn":19,"suggestions":"1062"},{"ruleId":"962","severity":1,"message":"1063","line":6,"column":3,"nodeType":"964","messageId":"965","endLine":6,"endColumn":27},{"ruleId":"962","severity":1,"message":"1064","line":15,"column":10,"nodeType":"964","messageId":"965","endLine":15,"endColumn":21},{"ruleId":"958","severity":1,"message":"1065","line":97,"column":6,"nodeType":"960","endLine":97,"endColumn":35,"suggestions":"1066"},{"ruleId":"962","severity":1,"message":"1067","line":246,"column":9,"nodeType":"964","messageId":"965","endLine":246,"endColumn":23},{"ruleId":"962","severity":1,"message":"995","line":24,"column":9,"nodeType":"964","messageId":"965","endLine":24,"endColumn":13},{"ruleId":"962","severity":1,"message":"1007","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":25},{"ruleId":"962","severity":1,"message":"993","line":1,"column":27,"nodeType":"964","messageId":"965","endLine":1,"endColumn":36},{"ruleId":"962","severity":1,"message":"1007","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":25},{"ruleId":"962","severity":1,"message":"993","line":1,"column":27,"nodeType":"964","messageId":"965","endLine":1,"endColumn":36},{"ruleId":"962","severity":1,"message":"1007","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":25},{"ruleId":"962","severity":1,"message":"993","line":1,"column":27,"nodeType":"964","messageId":"965","endLine":1,"endColumn":36},{"ruleId":"962","severity":1,"message":"1068","line":2,"column":8,"nodeType":"964","messageId":"965","endLine":2,"endColumn":14},{"ruleId":"962","severity":1,"message":"1069","line":1,"column":18,"nodeType":"964","messageId":"965","endLine":1,"endColumn":21},{"ruleId":"962","severity":1,"message":"1054","line":18,"column":23,"nodeType":"964","messageId":"965","endLine":18,"endColumn":37},{"ruleId":"962","severity":1,"message":"1056","line":1,"column":27,"nodeType":"964","messageId":"965","endLine":1,"endColumn":34},{"ruleId":"962","severity":1,"message":"1057","line":6,"column":3,"nodeType":"964","messageId":"965","endLine":6,"endColumn":10},{"ruleId":"962","severity":1,"message":"1070","line":8,"column":3,"nodeType":"964","messageId":"965","endLine":8,"endColumn":14},{"ruleId":"958","severity":1,"message":"1071","line":32,"column":6,"nodeType":"960","endLine":32,"endColumn":8,"suggestions":"1072"},{"ruleId":"962","severity":1,"message":"1073","line":31,"column":25,"nodeType":"964","messageId":"965","endLine":31,"endColumn":33},{"ruleId":"962","severity":1,"message":"1074","line":2,"column":10,"nodeType":"964","messageId":"965","endLine":2,"endColumn":14},{"ruleId":"962","severity":1,"message":"1056","line":3,"column":3,"nodeType":"964","messageId":"965","endLine":3,"endColumn":10},{"ruleId":"962","severity":1,"message":"1058","line":26,"column":44,"nodeType":"964","messageId":"965","endLine":26,"endColumn":64},{"ruleId":"958","severity":1,"message":"1059","line":48,"column":6,"nodeType":"960","endLine":48,"endColumn":8,"suggestions":"1075"},{"ruleId":"1010","severity":1,"message":"1011","line":92,"column":64,"nodeType":"1012","messageId":"1013","endLine":92,"endColumn":66},{"ruleId":"958","severity":1,"message":"1076","line":82,"column":6,"nodeType":"960","endLine":82,"endColumn":14,"suggestions":"1077"},{"ruleId":"958","severity":1,"message":"1078","line":115,"column":5,"nodeType":"960","endLine":115,"endColumn":28,"suggestions":"1079"},{"ruleId":"962","severity":1,"message":"1080","line":4,"column":18,"nodeType":"964","messageId":"965","endLine":4,"endColumn":24},{"ruleId":"962","severity":1,"message":"993","line":1,"column":27,"nodeType":"964","messageId":"965","endLine":1,"endColumn":36},{"ruleId":"962","severity":1,"message":"993","line":1,"column":30,"nodeType":"964","messageId":"965","endLine":1,"endColumn":39},{"ruleId":"962","severity":1,"message":"1081","line":3,"column":23,"nodeType":"964","messageId":"965","endLine":3,"endColumn":31},{"ruleId":"958","severity":1,"message":"1082","line":18,"column":6,"nodeType":"960","endLine":18,"endColumn":8,"suggestions":"1083"},{"ruleId":"958","severity":1,"message":"1084","line":21,"column":6,"nodeType":"960","endLine":21,"endColumn":8,"suggestions":"1085"},{"ruleId":"958","severity":1,"message":"1086","line":23,"column":33,"nodeType":"964","endLine":23,"endColumn":44},{"ruleId":"962","severity":1,"message":"1056","line":3,"column":3,"nodeType":"964","messageId":"965","endLine":3,"endColumn":10},{"ruleId":"958","severity":1,"message":"1087","line":70,"column":6,"nodeType":"960","endLine":70,"endColumn":50,"suggestions":"1088"},{"ruleId":"958","severity":1,"message":"1059","line":96,"column":6,"nodeType":"960","endLine":96,"endColumn":8,"suggestions":"1089"},{"ruleId":"958","severity":1,"message":"1090","line":112,"column":6,"nodeType":"960","endLine":112,"endColumn":13,"suggestions":"1091"},{"ruleId":"1010","severity":1,"message":"1011","line":161,"column":64,"nodeType":"1012","messageId":"1013","endLine":161,"endColumn":66},{"ruleId":"962","severity":1,"message":"1074","line":2,"column":10,"nodeType":"964","messageId":"965","endLine":2,"endColumn":14},{"ruleId":"958","severity":1,"message":"1092","line":82,"column":6,"nodeType":"960","endLine":82,"endColumn":54,"suggestions":"1093"},{"ruleId":"958","severity":1,"message":"1086","line":84,"column":35,"nodeType":"964","endLine":84,"endColumn":46},{"ruleId":"958","severity":1,"message":"1094","line":151,"column":6,"nodeType":"960","endLine":151,"endColumn":66,"suggestions":"1095"},{"ruleId":"962","severity":1,"message":"993","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":26},{"ruleId":"962","severity":1,"message":"1007","line":1,"column":17,"nodeType":"964","messageId":"965","endLine":1,"endColumn":25},{"ruleId":"958","severity":1,"message":"1096","line":84,"column":6,"nodeType":"960","endLine":88,"endColumn":4,"suggestions":"1097"},{"ruleId":"958","severity":1,"message":"1098","line":429,"column":6,"nodeType":"960","endLine":435,"endColumn":4,"suggestions":"1099"},{"ruleId":"962","severity":1,"message":"1100","line":6,"column":8,"nodeType":"964","messageId":"965","endLine":6,"endColumn":21},{"ruleId":"962","severity":1,"message":"1101","line":2,"column":8,"nodeType":"964","messageId":"965","endLine":2,"endColumn":22},{"ruleId":"962","severity":1,"message":"1068","line":3,"column":8,"nodeType":"964","messageId":"965","endLine":3,"endColumn":14},{"ruleId":"1037","severity":1,"message":"1038","line":1,"column":1,"nodeType":"1039","endLine":11,"endColumn":3},{"ruleId":"962","severity":1,"message":"993","line":1,"column":10,"nodeType":"964","messageId":"965","endLine":1,"endColumn":19},{"ruleId":"962","severity":1,"message":"994","line":29,"column":28,"nodeType":"964","messageId":"965","endLine":29,"endColumn":42},{"ruleId":"962","severity":1,"message":"995","line":33,"column":9,"nodeType":"964","messageId":"965","endLine":33,"endColumn":13},{"ruleId":"962","severity":1,"message":"1069","line":1,"column":18,"nodeType":"964","messageId":"965","endLine":1,"endColumn":21},{"ruleId":"962","severity":1,"message":"1074","line":2,"column":10,"nodeType":"964","messageId":"965","endLine":2,"endColumn":14},{"ruleId":"1102","severity":1,"message":"1103","line":24,"column":7,"nodeType":"1104","messageId":"1004","endLine":24,"endColumn":13},{"ruleId":"1102","severity":1,"message":"1103","line":50,"column":7,"nodeType":"1104","messageId":"1004","endLine":50,"endColumn":13},"no-native-reassign",["1105"],"no-negated-in-lhs",["1106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsAuth'. Either include it or remove the dependency array. If 'setIsAuth' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["1107"],"no-unused-vars","'subcscribePosts' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["1108"],["1109"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchCurrentPersonalUser'. Either include it or remove the dependency array.",["1110"],"'loadingMore' is assigned a value but never used.","'setLoadingMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchListContact'. Either include it or remove the dependency array.",["1111"],"React Hook useEffect has a missing dependency: 'fetchReceivedRequestsToAddFriend'. Either include it or remove the dependency array.",["1112"],"React Hook useEffect has missing dependencies: 'fetchNotifications' and 'notifications.length'. Either include them or remove the dependency array.",["1113"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has missing dependencies: 'fetchChatConversations' and 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched'. Either include them or remove the dependency array.",["1114"],"React Hook useEffect has a missing dependency: 'updateSubscriptionOnChange'. Either include it or remove the dependency array.",["1115"],"'_' is defined but never used.","'AiOutlineConsoleSql' is defined but never used.","'userVar' is defined but never used.","'friendsVar' is defined but never used.","'contactVar' is defined but never used.","'useEffect' is defined but never used.","'subscribePosts' is assigned a value but never used.","'user' is assigned a value but never used.","'action' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updatePersonalReceiverWhenReceivedNewMessage'. Either include it or remove the dependency array.",["1116"],"'CustomButton' is defined but never used.","'FacebookLogin' is defined but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","Literal","unexpected","'FacebookAuth' is defined but never used.","'captcha_loaded' is assigned a value but never used.","'useState' is defined but never used.","'ButtonToggleFriendsList' is defined but never used.","'IoMdCloseCircleOutline' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'fetchMorePostsData'. Either include it or remove the dependency array.",["1117"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'originalData' is assigned a value but never used.","'setOriginalData' is assigned a value but never used.","'contactData' is assigned a value but never used.","'setContactData' is assigned a value but never used.","'originData' is assigned a value but never used.","'setOriginData' is assigned a value but never used.","'setFetched' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchFriends'. Either include it or remove the dependency array.",["1118"],"'React' is defined but never used.","'createRef' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'fetchMoreContacts'. Either include them or remove the dependency array.",["1119"],"'receivedRequestsToAddFriendVar' is defined but never used.","'createMuiTheme' is defined but never used.","'makeStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'purple' is defined but never used.","'blue' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'shouldScrollIntoView'. Either include them or remove the dependency array.",["1120"],"React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'messagesStorage'. Either include them or remove the dependency array.",["1121"],"ChainExpression","React Hook useEffect has missing dependencies: 'currentChat._id', 'currentChat.scope', 'fetchMoreMessages', and 'messagesStorage'. Either include them or remove the dependency array.",["1122"],"'useCallback' is defined but never used.","'LazyLoad' is defined but never used.","'setShowPopup' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_messagesStorage.length', 'fetchMoreConversations', 'messagesStorage', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user._id'. Either include them or remove the dependency array.",["1123"],"React Hook useEffect has a missing dependency: 'post.rawText'. Either include it or remove the dependency array. If 'setEditedEditorState' needs the current value of 'post.rawText', you can also switch to useReducer instead of useState and read 'post.rawText' in the reducer.",["1124"],"'useReactiveVar' is defined but never used.","'currentPersonalUserVar' is defined but never used.","'useMemo' is defined but never used.","'Wrapper' is defined but never used.","'searchFriendsLoading' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'searchFriends'. Either include it or remove the dependency array.",["1125"],"React Hook useEffect has missing dependencies: 'isEdited' and 'postEdited'. Either include them or remove the dependency array.",["1126"],"'AiOutlineUsergroupDelete' is defined but never used.","'BiUserVoice' is defined but never used.","React Hook useEffect has missing dependencies: 'removeFriend' and 'updateMutationOnChange'. Either include them or remove the dependency array.",["1127"],"'onRemoveFriend' is assigned a value but never used.","'styled' is defined but never used.","'css' is defined but never used.","'HashtagLink' is defined but never used.","React Hook useEffect has a missing dependency: 'post._id'. Either include it or remove the dependency array.",["1128"],"'dragging' is assigned a value but never used.","'Link' is defined but never used.",["1129"],"React Hook useEffect has missing dependencies: 'comment._id', 'comment.post', 'removeComment', and 'removeResponse'. Either include them or remove the dependency array.",["1130"],"React Hook useCallback has missing dependencies: 'comment.responses.length' and 'onLoadResponses'. Either include them or remove the dependency array.",["1131"],"'invert' is defined but never used.","'useQuery' is defined but never used.","React Hook useCallback has a missing dependency: 'likeResponse'. Either include it or remove the dependency array.",["1132"],"React Hook useCallback has a missing dependency: 'removeLikeResponse'. Either include it or remove the dependency array.",["1133"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'user._id' and 'user.name'. Either include them or remove the dependency array.",["1134"],["1135"],"React Hook useEffect has a missing dependency: 'removeFocus'. Either include it or remove the dependency array. If 'removeFocus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1136"],"React Hook useEffect has an unnecessary dependency: 'notificationRef.current'. Either exclude it or remove the dependency array. Mutable values like 'notificationRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1137"],"React Hook useEffect has a missing dependency: 'fetchNotifications'. Either include it or remove the dependency array.",["1138"],"React Hook useEffect has an unnecessary dependency: 'setCountNumberNotificationsUnseen'. Either exclude it or remove the dependency array. Outer scope values like 'setCountNumberNotificationsUnseen' aren't valid dependencies because mutating them doesn't re-render the component.",["1139"],"React Hook useEffect has missing dependencies: 'updatedAddNotification' and 'updatedRemoveNotification'. Either include them or remove the dependency array.",["1140"],"'Notifications' is defined but never used.","'InfiniteScroll' is defined but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"1141","fix":"1142"},{"desc":"1143","fix":"1144"},{"desc":"1145","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1153","fix":"1154"},{"desc":"1155","fix":"1156"},{"desc":"1157","fix":"1158"},{"desc":"1159","fix":"1160"},{"desc":"1161","fix":"1162"},{"desc":"1163","fix":"1164"},{"desc":"1165","fix":"1166"},{"desc":"1167","fix":"1168"},{"desc":"1169","fix":"1170"},{"desc":"1171","fix":"1172"},{"desc":"1173","fix":"1174"},{"desc":"1175","fix":"1176"},{"desc":"1177","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1181","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1177","fix":"1185"},{"desc":"1186","fix":"1187"},{"desc":"1188","fix":"1189"},{"desc":"1190","fix":"1191"},{"desc":"1192","fix":"1193"},{"desc":"1194","fix":"1195"},{"desc":"1177","fix":"1196"},{"desc":"1197","fix":"1198"},{"desc":"1199","fix":"1200"},{"desc":"1201","fix":"1202"},{"desc":"1203","fix":"1204"},{"desc":"1205","fix":"1206"},"Update the dependencies array to be: [user, history, location.state, setIsAuth]",{"range":"1207","text":"1208"},"Update the dependencies array to be: [user, posts, fetched, fetchPosts]",{"range":"1209","text":"1210"},"Update the dependencies array to be: [user, posts, fetchMore, setFetchMore, fetchPosts]",{"range":"1211","text":"1212"},"Update the dependencies array to be: [fetchCurrentPersonalUser, slug]",{"range":"1213","text":"1214"},"Update the dependencies array to be: [user, fetched, setFetched, fetchListContact]",{"range":"1215","text":"1216"},"Update the dependencies array to be: [fetched, contact, user, fetchSentRequestToAddFriend, fetchReceivedRequestsToAddFriend]",{"range":"1217","text":"1218"},"Update the dependencies array to be: [fetchNotifications, fetchedNotifications, notifications.length, user]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [user, messagesStorage, fetched, fetchChatConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched]",{"range":"1221","text":"1222"},"Update the dependencies array to be: [subscribeUser, user, receivedRequestsToAddFriend, updateSubscriptionOnChange]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [subscribeChatMessage, user, currentChat, updatePersonalReceiverWhenReceivedNewMessage]",{"range":"1225","text":"1226"},"Update the dependencies array to be: [loadingMore, currentPersonalUser, fetchMorePostsData]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [contact, fetchFriends, fetched]",{"range":"1229","text":"1230"},"Update the dependencies array to be: [data, fetchMoreContacts, loadContactMore]",{"range":"1231","text":"1232"},"Update the dependencies array to be: [chatBoardBodyRef, shouldScrollIntoView]",{"range":"1233","text":"1234"},"Update the dependencies array to be: [chatBoardBodyRef, currentChat, messagesStorage, user]",{"range":"1235","text":"1236"},"Update the dependencies array to be: [currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage]",{"range":"1237","text":"1238"},"Update the dependencies array to be: [_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",{"range":"1239","text":"1240"},"Update the dependencies array to be: [isEdited, post.rawText]",{"range":"1241","text":"1242"},"Update the dependencies array to be: [searchFriends]",{"range":"1243","text":"1244"},"Update the dependencies array to be: [editorState, isEdited, postEdited]",{"range":"1245","text":"1246"},"Update the dependencies array to be: [dialog, currentPersonalUser, removeFriend, updateMutationOnChange]",{"range":"1247","text":"1248"},"Update the dependencies array to be: [post._id]",{"range":"1249","text":"1250"},{"range":"1251","text":"1244"},"Update the dependencies array to be: [comment._id, comment.post, dialog, removeComment, removeResponse]",{"range":"1252","text":"1253"},"Update the dependencies array to be: [comment.responses.length, comment.responsesData?.length, onLoadResponses]",{"range":"1254","text":"1255"},"Update the dependencies array to be: [likeResponse]",{"range":"1256","text":"1257"},"Update the dependencies array to be: [removeLikeResponse]",{"range":"1258","text":"1259"},"Update the dependencies array to be: [focus, editorState, response, dataResponse, user.name, user._id]",{"range":"1260","text":"1261"},{"range":"1262","text":"1244"},"Update the dependencies array to be: [focus, removeFocus]",{"range":"1263","text":"1264"},"Update the dependencies array to be: [openNotificationBoard]",{"range":"1265","text":"1266"},"Update the dependencies array to be: [fetchedNotifications, openNotificationBoard, notifications, fetchNotifications]",{"range":"1267","text":"1268"},"Update the dependencies array to be: [countNumberNotificationsUnseen, fetchCountNumberNotificationsUnseen]",{"range":"1269","text":"1270"},"Update the dependencies array to be: [countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification]",{"range":"1271","text":"1272"},[688,719],"[user, history, location.state, setIsAuth]",[1920,1942],"[user, posts, fetched, fetchPosts]",[2842,2880],"[user, posts, fetchMore, setFetchMore, fetchPosts]",[1178,1184],"[fetchCurrentPersonalUser, slug]",[2246,2273],"[user, fetched, setFetched, fetchListContact]",[3401,3454],"[fetched, contact, user, fetchSentRequestToAddFriend, fetchReceivedRequestsToAddFriend]",[1903,1994],"[fetchNotifications, fetchedNotifications, notifications.length, user]",[3173,3205],"[user, messagesStorage, fetched, fetchChatConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched]",[2974,3024],"[subscribeUser, user, receivedRequestsToAddFriend, updateSubscriptionOnChange]",[4193,4234],"[subscribeChatMessage, user, currentChat, updatePersonalReceiverWhenReceivedNewMessage]",[2412,2446],"[loadingMore, currentPersonalUser, fetchMorePostsData]",[2135,2153],"[contact, fetchFriends, fetched]",[1285,1302],"[data, fetchMoreContacts, loadContactMore]",[1356,1358],"[chatBoardBodyRef, shouldScrollIntoView]",[1738,1802],"[chatBoardBodyRef, currentChat, messagesStorage, user]",[3423,3441],"[currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage]",[4271,4317],"[_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",[1997,2007],"[isEdited, post.rawText]",[1664,1666],"[searchFriends]",[2241,2254],"[editorState, isEdited, postEdited]",[3396,3425],"[dialog, currentPersonalUser, removeFriend, updateMutationOnChange]",[967,969],"[post._id]",[1821,1823],[2985,2993],"[comment._id, comment.post, dialog, removeComment, removeResponse]",[4151,4174],"[comment.responses.length, comment.responsesData?.length, onLoadResponses]",[741,743],"[likeResponse]",[879,881],"[removeLikeResponse]",[2312,2356],"[focus, editorState, response, dataResponse, user.name, user._id]",[3291,3293],[3660,3667],"[focus, removeFocus]",[2848,2896],"[openNotificationBoard]",[4957,5017],"[fetchedNotifications, openNotificationBoard, notifications, fetchNotifications]",[2947,3068],"[countNumberNotificationsUnseen, fetchCountNumberNotificationsUnseen]",[15288,15425],"[countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification]"]