[{"D:\\github\\mern-stack-social-media\\frontend\\src\\index.js":"1","D:\\github\\mern-stack-social-media\\frontend\\src\\reportWebVitals.js":"2","D:\\github\\mern-stack-social-media\\frontend\\src\\i18n.js":"3","D:\\github\\mern-stack-social-media\\frontend\\src\\App\\App.js":"4","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\client.js":"5","D:\\github\\mern-stack-social-media\\frontend\\src\\theme\\index.js":"6","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\cache.js":"7","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\auth.js":"8","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\home.js":"9","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.types.js":"10","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\explores.js":"11","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\personal.js":"12","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\contacts.js":"13","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\notifications.js":"14","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\chats.js":"15","D:\\github\\mern-stack-social-media\\frontend\\src\\App\\GlobalStyles.jsx":"16","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\ErrorBoundary.jsx":"17","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useContactSubscription.jsx":"18","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useUserStatusSubscriptions.jsx":"19","D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\index.js":"20","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\pages.styles.js":"21","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\initialState.js":"22","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.subscriptions.js":"23","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.queries.js":"24","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\currentPersonalUser.caches.js":"25","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.mutations.js":"26","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\chats.styles.js":"27","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\controls\\controls.caches.js":"28","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.queries.js":"29","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.caches.js":"30","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.types.js":"31","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.caches.js":"32","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.caches.js":"33","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.types.js":"34","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.types.js":"35","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.caches.js":"36","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\Layout.jsx":"37","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useHomePostsSubscription.jsx":"38","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\MainBody.jsx":"39","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.caches.js":"40","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.subscriptions.js":"41","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useChatSubscriptions.jsx":"42","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\notifications.styles.jsx":"43","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\SignUp.jsx":"44","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\HomeSidebar.jsx":"45","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\SignIn.jsx":"46","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendsBoard.jsx":"47","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonToggleFriendsList.jsx":"48","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalHeading.jsx":"49","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditor.jsx":"50","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Global\\useLanguage.jsx":"51","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalPosts.jsx":"52","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Posts.jsx":"53","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\SentRequestsToAddFriend.jsx":"54","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Conversations.jsx":"55","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\ReceivedRequestsToAddFriend.jsx":"56","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\FriendsList.jsx":"57","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardRequestAuth.jsx":"58","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Contact.jsx":"59","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\MenuChat.jsx":"60","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\NotificationItem.jsx":"61","D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\en\\translation.js":"62","D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\vi\\translation.js":"63","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.subscriptions.js":"64","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.queries.js":"65","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.mutations.js":"66","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.subscriptions.js":"67","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.queries.js":"68","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.mutations.js":"69","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.types.js":"70","D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\notificationContent.js":"71","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\AlertDialogSlide.jsx":"72","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Aside\\Aside.jsx":"73","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\styles\\MainBody.styles.jsx":"74","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\useMenuList.jsx":"75","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoard.jsx":"76","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonSignUp.jsx":"77","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Search.jsx":"78","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ListContacts.jsx":"79","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonLogin.jsx":"80","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\ContactItem.jsx":"81","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\Contact.styles.jsx":"82","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomMaterialButton.jsx":"83","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\styles\\NotificationItem.styles.jsx":"84","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\MenuChat.styles.jsx":"85","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Chat.styles.jsx":"86","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.subscriptions.js":"87","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.mutations.js":"88","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\MenuList.jsx":"89","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardBody.jsx":"90","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardFooter.jsx":"91","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ContactItem.jsx":"92","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ListContacts.styles.jsx":"93","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonDefault.jsx":"94","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Search.styles.jsx":"95","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\hook\\usePopupActions.jsx":"96","D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\generateBase64Image.js":"97","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\ThreeDotsSetting.jsx":"98","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Bubble.jsx":"99","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ContactItem.styles.jsx":"100","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardFooter.styles.jsx":"101","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardBody.styles.jsx":"102","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Bubble.styles.jsx":"103","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\ThreeDotsSetting.styles.jsx":"104","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardHeading.jsx":"105","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoard.styles.jsx":"106","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ListConversations.jsx":"107","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCard.jsx":"108","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\IntroductionBox.jsx":"109","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\Auth.utility.js":"110","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalPosts.styles.jsx":"111","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditorHeader.jsx":"112","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditorBody.jsx":"113","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditor.styles.jsx":"114","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalHeadingContact.jsx":"115","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalHeading.styles.jsx":"116","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendsList.jsx":"117","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\FacebookAuth.jsx":"118","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\GoogleRecapcha.jsx":"119","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\GoogleAuth.jsx":"120","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\AuthForm.jsx":"121","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardUtility.jsx":"122","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardProfile.jsx":"123","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardHeading.styles.jsx":"124","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ConversationItem.jsx":"125","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\IntroductionBox.styles.jsx":"126","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\EditPostDialog.jsx":"127","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardFooter.jsx":"128","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Comments.jsx":"129","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardBody.jsx":"130","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardHeader.jsx":"131","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditorHeader.styles.jsx":"132","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\ImagesCarousel.jsx":"133","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalHeadingContact.styles.jsx":"134","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\useDraftEditorPlugin.jsx":"135","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditorBody.styles.jsx":"136","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendItem.jsx":"137","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ListConversations.styles.jsx":"138","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCard.styles.jsx":"139","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ConversationItem.styles.jsx":"140","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\EditPostDialog.styles.jsx":"141","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentEditor.jsx":"142","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentItem.jsx":"143","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\Comments.styles.jsx":"144","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardBody.styles.jsx":"145","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardFooter.styles.jsx":"146","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\Dropdown.styles.jsx":"147","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonDefaultCircle.jsx":"148","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\ImagesCarousel.styles.jsx":"149","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardHeader.styles.jsx":"150","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\useDraftEditorPlugin.styles.jsx":"151","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.mutations.js":"152","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.queries.js":"153","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\FriendItem.styles.jsx":"154","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomButton.jsx":"155","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Header.jsx":"156","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentEditor.styles.jsx":"157","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentCard.jsx":"158","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Responses.jsx":"159","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\ResponseEditor.jsx":"160","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentItem.styles.jsx":"161","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomButton.styles.jsx":"162","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Brand.jsx":"163","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\MessengerAndNotification.jsx":"164","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Navigation.jsx":"165","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Search.jsx":"166","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonMenu.jsx":"167","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\SettingAccount.jsx":"168","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentCard.styles.jsx":"169","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\FlashPopUpNotification.jsx":"170","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Tooltips.jsx":"171","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useNotificationsSubscription.jsx":"172","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\NotificationsBoard.jsx":"173","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonColorMode.jsx":"174","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Header.styles.jsx":"175","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\NotificationsBoard.styles.jsx":"176","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\styles\\FlashPopUpNotification.styles.jsx":"177","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\Notifications.jsx":"178","D:\\github\\mern-stack-social-media\\frontend\\src\\constant\\constant.js":"179","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useCurrentPersonalUser.supscription.jsx":"180","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\FriendsList.styles.jsx":"181","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\Sidebar.styles.jsx":"182","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CartProfile.styles.jsx":"183","D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\storage.js":"184","D:\\github\\mern-stack-social-media\\frontend\\src\\theme\\theme.js":"185","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CardRequestAuth.styles.jsx":"186","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CardUtility.styles.jsx":"187","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Navigation.styles.jsx":"188","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\SettingAccount.styles.jsx":"189","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\styles\\MenuList.styles.jsx":"190","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\styles\\Layout.styles.jsx":"191","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Search.styles.jsx":"192"},{"size":840,"mtime":1638022086204,"results":"193","hashOfConfig":"194"},{"size":364,"mtime":1637717735369,"results":"195","hashOfConfig":"194"},{"size":297,"mtime":1637717735146,"results":"196","hashOfConfig":"194"},{"size":2423,"mtime":1638036557589,"results":"197","hashOfConfig":"194"},{"size":1628,"mtime":1637971875236,"results":"198","hashOfConfig":"194"},{"size":1474,"mtime":1638035335264,"results":"199","hashOfConfig":"194"},{"size":3385,"mtime":1637717731688,"results":"200","hashOfConfig":"194"},{"size":1060,"mtime":1637717735236,"results":"201","hashOfConfig":"194"},{"size":4063,"mtime":1638011176025,"results":"202","hashOfConfig":"194"},{"size":282,"mtime":1637975087722,"results":"203","hashOfConfig":"194"},{"size":4839,"mtime":1637717735287,"results":"204","hashOfConfig":"194"},{"size":1367,"mtime":1637985977134,"results":"205","hashOfConfig":"194"},{"size":4501,"mtime":1637772293728,"results":"206","hashOfConfig":"194"},{"size":3393,"mtime":1637717735320,"results":"207","hashOfConfig":"194"},{"size":3832,"mtime":1637772449821,"results":"208","hashOfConfig":"194"},{"size":11672,"mtime":1638039039646,"results":"209","hashOfConfig":"194"},{"size":486,"mtime":1637717734910,"results":"210","hashOfConfig":"194"},{"size":3070,"mtime":1637717735001,"results":"211","hashOfConfig":"194"},{"size":1315,"mtime":1637741330763,"results":"212","hashOfConfig":"194"},{"size":575,"mtime":1637717735186,"results":"213","hashOfConfig":"194"},{"size":1298,"mtime":1638010721984,"results":"214","hashOfConfig":"194"},{"size":585,"mtime":1637717731908,"results":"215","hashOfConfig":"194"},{"size":910,"mtime":1637717732635,"results":"216","hashOfConfig":"194"},{"size":1851,"mtime":1637977796031,"results":"217","hashOfConfig":"194"},{"size":130,"mtime":1637717732576,"results":"218","hashOfConfig":"194"},{"size":1386,"mtime":1637717732611,"results":"219","hashOfConfig":"194"},{"size":1001,"mtime":1638009749634,"results":"220","hashOfConfig":"194"},{"size":569,"mtime":1637717731889,"results":"221","hashOfConfig":"194"},{"size":1371,"mtime":1637939754884,"results":"222","hashOfConfig":"194"},{"size":23759,"mtime":1637940361230,"results":"223","hashOfConfig":"194"},{"size":463,"mtime":1637717731883,"results":"224","hashOfConfig":"194"},{"size":4722,"mtime":1637748157931,"results":"225","hashOfConfig":"194"},{"size":5521,"mtime":1637824743790,"results":"226","hashOfConfig":"194"},{"size":870,"mtime":1637909835415,"results":"227","hashOfConfig":"194"},{"size":611,"mtime":1637717731800,"results":"228","hashOfConfig":"194"},{"size":4213,"mtime":1637762755389,"results":"229","hashOfConfig":"194"},{"size":1166,"mtime":1638035265000,"results":"230","hashOfConfig":"194"},{"size":3898,"mtime":1637919595818,"results":"231","hashOfConfig":"194"},{"size":706,"mtime":1638035302754,"results":"232","hashOfConfig":"194"},{"size":2620,"mtime":1637717732599,"results":"233","hashOfConfig":"194"},{"size":1166,"mtime":1637717731878,"results":"234","hashOfConfig":"194"},{"size":4278,"mtime":1637717734987,"results":"235","hashOfConfig":"194"},{"size":774,"mtime":1638009749637,"results":"236","hashOfConfig":"194"},{"size":9374,"mtime":1637978143553,"results":"237","hashOfConfig":"194"},{"size":452,"mtime":1637998619925,"results":"238","hashOfConfig":"194"},{"size":5733,"mtime":1637970572649,"results":"239","hashOfConfig":"194"},{"size":679,"mtime":1638008865305,"results":"240","hashOfConfig":"194"},{"size":1208,"mtime":1638029488272,"results":"241","hashOfConfig":"194"},{"size":2562,"mtime":1638032925009,"results":"242","hashOfConfig":"194"},{"size":8059,"mtime":1638033666830,"results":"243","hashOfConfig":"194"},{"size":268,"mtime":1637717733850,"results":"244","hashOfConfig":"194"},{"size":2919,"mtime":1637987415244,"results":"245","hashOfConfig":"194"},{"size":389,"mtime":1637717734598,"results":"246","hashOfConfig":"194"},{"size":2040,"mtime":1638028326166,"results":"247","hashOfConfig":"194"},{"size":2552,"mtime":1637717733235,"results":"248","hashOfConfig":"194"},{"size":2216,"mtime":1638028276531,"results":"249","hashOfConfig":"194"},{"size":1837,"mtime":1638028220660,"results":"250","hashOfConfig":"194"},{"size":784,"mtime":1638025179778,"results":"251","hashOfConfig":"194"},{"size":3797,"mtime":1638025809743,"results":"252","hashOfConfig":"194"},{"size":485,"mtime":1637717733282,"results":"253","hashOfConfig":"194"},{"size":5453,"mtime":1638031954814,"results":"254","hashOfConfig":"194"},{"size":9165,"mtime":1637717735181,"results":"255","hashOfConfig":"194"},{"size":9638,"mtime":1637717735223,"results":"256","hashOfConfig":"194"},{"size":1956,"mtime":1637717731793,"results":"257","hashOfConfig":"194"},{"size":3208,"mtime":1637717731775,"results":"258","hashOfConfig":"194"},{"size":2363,"mtime":1637717731753,"results":"259","hashOfConfig":"194"},{"size":8421,"mtime":1637895202804,"results":"260","hashOfConfig":"194"},{"size":560,"mtime":1637717731943,"results":"261","hashOfConfig":"194"},{"size":232,"mtime":1637717731933,"results":"262","hashOfConfig":"194"},{"size":649,"mtime":1637895504613,"results":"263","hashOfConfig":"194"},{"size":3215,"mtime":1637717735428,"results":"264","hashOfConfig":"194"},{"size":1604,"mtime":1637921475720,"results":"265","hashOfConfig":"194"},{"size":760,"mtime":1638009749597,"results":"266","hashOfConfig":"194"},{"size":717,"mtime":1638010727836,"results":"267","hashOfConfig":"194"},{"size":964,"mtime":1637717734074,"results":"268","hashOfConfig":"194"},{"size":422,"mtime":1637717733052,"results":"269","hashOfConfig":"194"},{"size":821,"mtime":1638009749634,"results":"270","hashOfConfig":"194"},{"size":531,"mtime":1638037736195,"results":"271","hashOfConfig":"194"},{"size":1631,"mtime":1637717733257,"results":"272","hashOfConfig":"194"},{"size":821,"mtime":1638036527237,"results":"273","hashOfConfig":"194"},{"size":5285,"mtime":1638027780489,"results":"274","hashOfConfig":"194"},{"size":2055,"mtime":1638027724269,"results":"275","hashOfConfig":"194"},{"size":740,"mtime":1637717733827,"results":"276","hashOfConfig":"194"},{"size":1632,"mtime":1638032206374,"results":"277","hashOfConfig":"194"},{"size":331,"mtime":1638009749670,"results":"278","hashOfConfig":"194"},{"size":1500,"mtime":1638027100715,"results":"279","hashOfConfig":"194"},{"size":2595,"mtime":1637913132990,"results":"280","hashOfConfig":"194"},{"size":4224,"mtime":1637824536697,"results":"281","hashOfConfig":"194"},{"size":1328,"mtime":1638031761370,"results":"282","hashOfConfig":"194"},{"size":4430,"mtime":1638025611001,"results":"283","hashOfConfig":"194"},{"size":10181,"mtime":1638025717289,"results":"284","hashOfConfig":"194"},{"size":2502,"mtime":1638026326021,"results":"285","hashOfConfig":"194"},{"size":216,"mtime":1638009749670,"results":"286","hashOfConfig":"194"},{"size":2855,"mtime":1638029018623,"results":"287","hashOfConfig":"194"},{"size":875,"mtime":1638037918709,"results":"288","hashOfConfig":"194"},{"size":470,"mtime":1637717733244,"results":"289","hashOfConfig":"194"},{"size":434,"mtime":1637717735413,"results":"290","hashOfConfig":"194"},{"size":262,"mtime":1637717734899,"results":"291","hashOfConfig":"194"},{"size":3789,"mtime":1637717733046,"results":"292","hashOfConfig":"194"},{"size":1490,"mtime":1638027277723,"results":"293","hashOfConfig":"194"},{"size":15323,"mtime":1638025759385,"results":"294","hashOfConfig":"194"},{"size":246,"mtime":1638025669786,"results":"295","hashOfConfig":"194"},{"size":3254,"mtime":1638009749670,"results":"296","hashOfConfig":"194"},{"size":1139,"mtime":1638009749669,"results":"297","hashOfConfig":"194"},{"size":1527,"mtime":1637717733151,"results":"298","hashOfConfig":"194"},{"size":338,"mtime":1638009749669,"results":"299","hashOfConfig":"194"},{"size":5002,"mtime":1637717733277,"results":"300","hashOfConfig":"194"},{"size":2777,"mtime":1638033526350,"results":"301","hashOfConfig":"194"},{"size":2491,"mtime":1638032794118,"results":"302","hashOfConfig":"194"},{"size":1411,"mtime":1637717732749,"results":"303","hashOfConfig":"194"},{"size":594,"mtime":1638009749669,"results":"304","hashOfConfig":"194"},{"size":3085,"mtime":1638033684624,"results":"305","hashOfConfig":"194"},{"size":4459,"mtime":1637717734547,"results":"306","hashOfConfig":"194"},{"size":682,"mtime":1638033734770,"results":"307","hashOfConfig":"194"},{"size":13321,"mtime":1638033196657,"results":"308","hashOfConfig":"194"},{"size":2345,"mtime":1638038703406,"results":"309","hashOfConfig":"194"},{"size":3193,"mtime":1638034729872,"results":"310","hashOfConfig":"194"},{"size":1646,"mtime":1638009749634,"results":"311","hashOfConfig":"194"},{"size":478,"mtime":1637717732840,"results":"312","hashOfConfig":"194"},{"size":1525,"mtime":1637977925872,"results":"313","hashOfConfig":"194"},{"size":1894,"mtime":1638009749634,"results":"314","hashOfConfig":"194"},{"size":1261,"mtime":1638025402970,"results":"315","hashOfConfig":"194"},{"size":1570,"mtime":1638024436962,"results":"316","hashOfConfig":"194"},{"size":1215,"mtime":1638009749670,"results":"317","hashOfConfig":"194"},{"size":3033,"mtime":1638027080872,"results":"318","hashOfConfig":"194"},{"size":1087,"mtime":1638032885627,"results":"319","hashOfConfig":"194"},{"size":694,"mtime":1637717734401,"results":"320","hashOfConfig":"194"},{"size":3503,"mtime":1638033554140,"results":"321","hashOfConfig":"194"},{"size":544,"mtime":1637717734395,"results":"322","hashOfConfig":"194"},{"size":1611,"mtime":1637717734428,"results":"323","hashOfConfig":"194"},{"size":3354,"mtime":1638033578259,"results":"324","hashOfConfig":"194"},{"size":2473,"mtime":1638033880016,"results":"325","hashOfConfig":"194"},{"size":1497,"mtime":1637717734859,"results":"326","hashOfConfig":"194"},{"size":1986,"mtime":1638033988711,"results":"327","hashOfConfig":"194"},{"size":2119,"mtime":1637717734760,"results":"328","hashOfConfig":"194"},{"size":1047,"mtime":1638009750006,"results":"329","hashOfConfig":"194"},{"size":659,"mtime":1638034699150,"results":"330","hashOfConfig":"194"},{"size":149,"mtime":1638009749670,"results":"331","hashOfConfig":"194"},{"size":533,"mtime":1638034526731,"results":"332","hashOfConfig":"194"},{"size":2131,"mtime":1638027292853,"results":"333","hashOfConfig":"194"},{"size":431,"mtime":1638009749669,"results":"334","hashOfConfig":"194"},{"size":5703,"mtime":1638033447964,"results":"335","hashOfConfig":"194"},{"size":6961,"mtime":1638033495858,"results":"336","hashOfConfig":"194"},{"size":107,"mtime":1638009749669,"results":"337","hashOfConfig":"194"},{"size":915,"mtime":1638009749669,"results":"338","hashOfConfig":"194"},{"size":2289,"mtime":1638038912640,"results":"339","hashOfConfig":"194"},{"size":1169,"mtime":1638035122170,"results":"340","hashOfConfig":"194"},{"size":1079,"mtime":1638038555617,"results":"341","hashOfConfig":"194"},{"size":420,"mtime":1638009749669,"results":"342","hashOfConfig":"194"},{"size":970,"mtime":1638034670909,"results":"343","hashOfConfig":"194"},{"size":368,"mtime":1638009749669,"results":"344","hashOfConfig":"194"},{"size":4391,"mtime":1637717731857,"results":"345","hashOfConfig":"194"},{"size":1201,"mtime":1637717731869,"results":"346","hashOfConfig":"194"},{"size":1151,"mtime":1638034775096,"results":"347","hashOfConfig":"194"},{"size":645,"mtime":1637717733742,"results":"348","hashOfConfig":"194"},{"size":5192,"mtime":1638038051789,"results":"349","hashOfConfig":"194"},{"size":908,"mtime":1638034475748,"results":"350","hashOfConfig":"194"},{"size":2402,"mtime":1638033422584,"results":"351","hashOfConfig":"194"},{"size":1517,"mtime":1637911215463,"results":"352","hashOfConfig":"194"},{"size":7308,"mtime":1638033624062,"results":"353","hashOfConfig":"194"},{"size":892,"mtime":1638009749637,"results":"354","hashOfConfig":"194"},{"size":3382,"mtime":1638009749634,"results":"355","hashOfConfig":"194"},{"size":511,"mtime":1638009749634,"results":"356","hashOfConfig":"194"},{"size":6006,"mtime":1638029619951,"results":"357","hashOfConfig":"194"},{"size":1398,"mtime":1638029737923,"results":"358","hashOfConfig":"194"},{"size":736,"mtime":1638038205900,"results":"359","hashOfConfig":"194"},{"size":846,"mtime":1638029410192,"results":"360","hashOfConfig":"194"},{"size":4133,"mtime":1638035935853,"results":"361","hashOfConfig":"194"},{"size":1920,"mtime":1638033984158,"results":"362","hashOfConfig":"194"},{"size":1834,"mtime":1638031813571,"results":"363","hashOfConfig":"194"},{"size":1285,"mtime":1638009749634,"results":"364","hashOfConfig":"194"},{"size":15481,"mtime":1637910397264,"results":"365","hashOfConfig":"194"},{"size":1187,"mtime":1638030139275,"results":"366","hashOfConfig":"194"},{"size":1287,"mtime":1638035966836,"results":"367","hashOfConfig":"194"},{"size":972,"mtime":1638029649990,"results":"368","hashOfConfig":"194"},{"size":624,"mtime":1638030141502,"results":"369","hashOfConfig":"194"},{"size":1449,"mtime":1638031904703,"results":"370","hashOfConfig":"194"},{"size":594,"mtime":1638009749597,"results":"371","hashOfConfig":"194"},{"size":367,"mtime":1637861294659,"results":"372","hashOfConfig":"194"},{"size":3971,"mtime":1637919895662,"results":"373","hashOfConfig":"194"},{"size":2670,"mtime":1638039753294,"results":"374","hashOfConfig":"194"},{"size":323,"mtime":1638009749597,"results":"375","hashOfConfig":"194"},{"size":1239,"mtime":1638036727116,"results":"376","hashOfConfig":"194"},{"size":375,"mtime":1638021835838,"results":"377","hashOfConfig":"194"},{"size":1293,"mtime":1638038445204,"results":"378","hashOfConfig":"194"},{"size":728,"mtime":1638025383177,"results":"379","hashOfConfig":"194"},{"size":423,"mtime":1638029929707,"results":"380","hashOfConfig":"194"},{"size":1079,"mtime":1638029788350,"results":"381","hashOfConfig":"194"},{"size":2072,"mtime":1638035451600,"results":"382","hashOfConfig":"194"},{"size":1207,"mtime":1638037464940,"results":"383","hashOfConfig":"194"},{"size":629,"mtime":1638035277307,"results":"384","hashOfConfig":"194"},{"size":1384,"mtime":1638038231548,"results":"385","hashOfConfig":"194"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},"4tfh7m",{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"388"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"388"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"388"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"388"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"388"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"388"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"388"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"388"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"388"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"388"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"388"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"388"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"388"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"388"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"388"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"388"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"388"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"388"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"388"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"388"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"388"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"388"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"388"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"388"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"388"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"388"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"657","messages":"658","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"659","messages":"660","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"388"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"388"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"679","messages":"680","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"388"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"388"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"701","messages":"702","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"388"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"738","messages":"739","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"388"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"388"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"774","messages":"775","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"388"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"388"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"388"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"388"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\github\\mern-stack-social-media\\frontend\\src\\index.js",[],["808","809"],"D:\\github\\mern-stack-social-media\\frontend\\src\\reportWebVitals.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\i18n.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\App\\App.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\client.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\theme\\index.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\cache.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\auth.js",["810"],"import React, { lazy, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { userVar } from '../apollo/cache';\nimport { useReactiveVar } from '@apollo/client';\nconst SignIn = lazy(() => import('../components/Auth/SignIn'));\nconst SignUp = lazy(() => import('../components/Auth/SignUp'));\n\nconst AuthPage = ({ setIsAuth, ...props }) => {\n  const { match, location, history } = props;\n  const user = useReactiveVar(userVar);\n  useEffect(() => {\n    if (user && location.state && location.state.from) {\n      history.replace(location.state.from);\n      setIsAuth(true);\n    } else if (user) {\n      history.replace('/');\n      setIsAuth(Date.now());\n    }\n  }, [user, history, location.state]);\n  return (\n    <Switch>\n      <Route\n        exact\n        path={match.path}\n        render={(props) => <SignIn authPath={match.path} {...props} />}\n      />\n      <Route\n        path={`${match.path}/signup`}\n        render={(props) => <SignUp authPath={match.path} {...props} />}\n      />\n    </Switch>\n  );\n};\n\nexport default AuthPage;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\home.js",["811","812","813"],"import React, { useEffect, useState, useCallback } from 'react';\nimport Layout from '../containers/Layout';\nimport PostEditor from '../components/Post/PostEditor/PostEditor';\nimport HomeSidebar from '../components/Sidebar/HomeSidebar';\nimport MainBody from '../containers/MainBody';\nimport FriendsBoard from '../components/Sidebar/FriendsBoard';\nimport { useReactiveVar, useQuery } from '@apollo/client';\nimport ButtonToggleFriendsList from '../components/Controls/ButtonToggleFriendsList';\nimport {\n  MainContent,\n  MainContentLeftSide,\n  MainContentRightSide,\n} from './styles/pages.styles.js';\nimport Posts from '../components/Post/Posts';\nimport useHomePostsSubscription from '../hooks/useHomePostsSubscription';\nimport LazyLoad from 'react-lazyload';\nimport { userVar, toggleFriendsBoardVar, postsVar } from '../apollo/cache';\nimport { setToggleFriendsBoard } from '../apollo/controls/controls.caches';\nimport { FETCH_POSTS } from '../apollo/post/post.queries';\nimport { addFetchedPostToCache } from '../apollo/post/post.caches';\nimport constant from '../constant/constant';\nimport Backdrop from '@material-ui/core/Backdrop';\nconst Home = () => {\n  const user = useReactiveVar(userVar);\n  const toggleFriendsBoard = useReactiveVar(toggleFriendsBoardVar);\n  const posts = useReactiveVar(postsVar);\n  const [fetched, setFetched] = useState(false);\n  const [loading, setLoading] = useState();\n  const [fetchMore, setFetchMore] = useState(false);\n  useHomePostsSubscription();\n  const { refetch: fetchPosts, subscribeToMore: subcscribePosts } = useQuery(\n    FETCH_POSTS,\n    {\n      fetchPolicy: 'no-cache',\n      skip: true,\n    }\n  );\n  useEffect(() => {\n    if (!posts.length && user && !fetched) {\n      setLoading(true);\n      setFetched(true);\n      fetchPosts().then(({ data }) => {\n        if (data) {\n          addFetchedPostToCache(data.fetchPosts);\n        }\n        setLoading(false);\n      });\n    }\n  }, [user, posts, fetched]);\n\n  useEffect(() => {\n    let isScrolling;\n    function onTrackUserScrolled(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { clientHeight, scrollTop, scrollHeight } =\n          document.documentElement;\n        if (clientHeight + scrollTop > scrollHeight * 0.8) {\n          setFetchMore(true);\n        }\n      }, 66);\n    }\n    window.addEventListener('scroll', onTrackUserScrolled);\n    return () => {\n      clearTimeout(isScrolling);\n      window.removeEventListener('scroll', onTrackUserScrolled);\n    };\n  });\n\n  useEffect(() => {\n    if (user && fetchMore) {\n      const skip = posts.length;\n      const limit = constant.REACT_APP_POSTS_PER_PAGE;\n      fetchPosts({ skip, limit }).then(({ data: { fetchPosts } }) => {\n        if (fetchPosts) {\n          addFetchedPostToCache(fetchPosts);\n        }\n        setFetchMore(false);\n      });\n    }\n  }, [user, posts, fetchMore, setFetchMore]);\n\n  const handleOpenFriendsList = useCallback(() => {\n    setToggleFriendsBoard();\n  }, []);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent openFriendBoard={toggleFriendsBoard}>\n          <MainContentLeftSide>\n            {user && (\n              <LazyLoad once>\n                <PostEditor />\n              </LazyLoad>\n            )}\n            {loading && <div>Loading post</div>}\n            {posts.length ? (\n              <LazyLoad>\n                <Posts posts={posts} />\n              </LazyLoad>\n            ) : null}\n          </MainContentLeftSide>\n          <MainContentRightSide>\n            <HomeSidebar user={user} />\n          </MainContentRightSide>\n        </MainContent>\n        {user && (\n          <>\n            <Backdrop\n              open={toggleFriendsBoard}\n              style={{ zIndex: 9998 }}\n              onClick={() => toggleFriendsBoardVar(!toggleFriendsBoard)}\n            />\n            <FriendsBoard />\n            <ButtonToggleFriendsList\n              hide={toggleFriendsBoard}\n              onClick={handleOpenFriendsList}\n            />\n          </>\n        )}\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default Home;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\explores.js",["814"],"import React, { useState } from 'react';\nimport { EditorState } from 'draft-js';\nimport Editor from '@draft-js-plugins/editor';\nimport createLinkifyPlugin from '@draft-js-plugins/linkify';\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from '@draft-js-plugins/mention';\nimport createEmojiPlugin from '@draft-js-plugins/emoji';\nconst emojiPlugin = createEmojiPlugin();\nconst { EmojiSelect, EmojiSuggestions } = emojiPlugin;\nconst linkifyPlugin = createLinkifyPlugin({\n  component(props) {\n    return <a {...props} onClick={() => alert('Clicked on Link!')} />;\n  },\n});\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [linkifyPlugin, mentionPlugin, emojiPlugin];\n\nconst Linkify = () => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n\n  const onOpenChange = React.useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = React.useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n  return (\n    <div className=\"wrapper\">\n      <h2 style={{ color: '#43a047' }}>Draftjs Linkify</h2>\n      <Editor\n        editorState={editorState}\n        onChange={setEditorState}\n        plugins={plugins}\n      />\n      <MentionSuggestions\n        open={open}\n        suggestions={suggestions}\n        onOpenChange={onOpenChange}\n        onSearchChange={onSearchChange}\n      />\n      <EmojiSuggestions />\n      <EmojiSelect />\n    </div>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: 'Matthewwqeeqs Russell',\n    email: 'matthew.russell@google.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg',\n  },\n  {\n    id: 1230,\n    name: 'Juliasadaw Krispel-Samsel',\n    email: 'julian.krispel@google.com',\n    avatar: 'https://avatars2.githubusercontent.com/u/1188186?v=3&s=400',\n  },\n  {\n    id: 66,\n    name: 'Jyotiewq Puri',\n    email: 'jyoti@yahoo.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/2182307?v=3&s=400',\n  },\n  {\n    id: 905,\n    name: 'Maxcxzc Stoiber',\n    email: 'max.stoiber@university.edu',\n    avatar:\n      'https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg',\n  },\n  {\n    id: 54111,\n    name: 'Nikeq Graf',\n    email: 'info@nik-graf.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/223045?v=3&s=400',\n  },\n  {\n    id: 22,\n    name: 'Pascalewq Brandt',\n    email: 'pascalbrandt@fastmail.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png',\n  },\n  {\n    id: 3216361,\n    name: 'Matthewewqeq Russell',\n    email: 'matthew.russell@google.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg',\n  },\n  {\n    id: 192365,\n    name: 'Julianewqeq Krispel-Samsel',\n    email: 'julian.krispel@google.com',\n    avatar: 'https://avatars2.githubusercontent.com/u/1188186?v=3&s=400',\n  },\n  {\n    id: 23648,\n    name: 'Jyotiewqeqw Puri',\n    email: 'jyoti@yahoo.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/2182307?v=3&s=400',\n  },\n  {\n    id: 36812,\n    name: 'Maxewqeq Stoiber',\n    email: 'max.stoiber@university.edu',\n    avatar:\n      'https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg',\n  },\n  {\n    id: 789327,\n    name: 'Nikewqewqad Graf',\n    email: 'info@nik-graf.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/223045?v=3&s=400',\n  },\n  {\n    id: 32131,\n    name: 'Pascalsadwq Brandt',\n    email: 'pascalbrandt@fastmail.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png',\n  },\n  {\n    id: 121312,\n    name: 'Matthewewqe Russell',\n    email: 'matthew.russell@google.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg',\n  },\n  {\n    id: 125134,\n    name: 'Julianewq Krispel-Samsel',\n    email: 'julian.krispel@google.com',\n    avatar: 'https://avatars2.githubusercontent.com/u/1188186?v=3&s=400',\n  },\n  {\n    id: 3213214,\n    name: 'Jyotiasd Puri',\n    email: 'jyoti@yahoo.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/2182307?v=3&s=400',\n  },\n  {\n    id: 65361,\n    name: 'Maxewq Stoiber',\n    email: 'max.stoiber@university.edu',\n    avatar:\n      'https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg',\n  },\n  {\n    id: 5321,\n    name: 'Nikewq Graf',\n    email: 'info@nik-graf.com',\n    avatar: 'https://avatars0.githubusercontent.com/u/223045?v=3&s=400',\n  },\n  {\n    id: 43,\n    name: 'Pascalewq Brandt',\n    email: 'pascalbrandt@fastmail.com',\n    avatar:\n      'https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png',\n  },\n];\n\nexport default Linkify;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\personal.js",["815"],"import React, { useEffect, useState } from 'react';\nimport PersonalHeading from '../components/Personal/PersonalHeading';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport { currentPersonalUserVar } from '../apollo/cache';\nimport { FETCH_PERSONAL_USER } from '../apollo/user/user.types';\nimport Layout from '../containers/Layout';\nimport { setCurrentPersonalUser } from '../apollo/user/currentPersonalUser.caches';\nimport PersonalPosts from '../components/Personal/PersonalPosts';\nimport useCurrentPersonalUser from '../hooks/useCurrentPersonalUser.supscription';\nconst PersonalPage = (props) => {\n  const { slug } = props.match.params;\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const { refetch: fetchCurrentPersonalUser } = useQuery(FETCH_PERSONAL_USER, {\n    skip: true,\n  });\n\n  useCurrentPersonalUser();\n  const [fetched, setFetched] = useState(false);\n  useEffect(() => {\n    let _mounted = true;\n    fetchCurrentPersonalUser({ slug }).then(({ data }) => {\n      if (data && _mounted) {\n        setCurrentPersonalUser(data.fetchPersonalUser);\n        setFetched(true);\n      }\n    });\n    return () => (_mounted = false);\n  }, [slug]);\n\n  if (!currentPersonalUser || !fetched) return null;\n  return (\n    <Layout>\n      <PersonalHeading />\n      <PersonalPosts />\n    </Layout>\n  );\n};\n\nexport default PersonalPage;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\contacts.js",["816","817","818","819"],"import React, { useEffect, useState } from 'react';\nimport Layout from '../containers/Layout';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport { userVar, contactVar } from '../apollo/cache';\nimport { FETCH_LIST_CONTACT } from '../apollo/contact/contact.types';\nimport {\n  FETCH_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n  FETCH_SENT_REQUEST_TO_ADD_FRIEND,\n} from '../apollo/contact/contact.types';\n\nimport {\n  setContactList,\n  fetchMoreSentRequestsToAddFriend,\n  fetchMoreReceivedRequestsToAddFriend,\n} from '../apollo/contact/contact.caches';\nimport MainBody from '../containers/MainBody';\nimport {\n  MainContent,\n  MainContentFullSize,\n  ContactTitle,\n} from './styles/pages.styles';\nimport SentRequestsToAddFriend from '../components/Contact/SentRequestsToAddFriend';\nimport ReceivedRequestsToAddFriend from '../components/Contact/ReceivedRequestsToAddFriend';\nimport FriendsList from '../components/Contact/FriendsList';\nimport useLanguage from '../components/Global/useLanguage';\nimport constant from '../constant/constant';\nconst FriendsPage = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [fetched, setFetched] = useState(false);\n  const { i18n, lang } = useLanguage();\n  const user = useReactiveVar(userVar);\n  const contact = useReactiveVar(contactVar);\n\n  const { refetch: fetchListContact } = useQuery(FETCH_LIST_CONTACT, {\n    skip: true,\n  });\n  const { refetch: fetchReceivedRequestsToAddFriend } = useQuery(\n    FETCH_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n    { skip: true }\n  );\n  const { refetch: fetchSentRequestToAddFriend } = useQuery(\n    FETCH_SENT_REQUEST_TO_ADD_FRIEND,\n    { skip: true }\n  );\n  useEffect(() => {\n    if (!fetched && user) {\n      if (\n        user?.sentRequestToAddFriend.length ||\n        user?.receivedRequestToAddFriend.length ||\n        user?.friends.length\n      ) {\n        fetchListContact()\n          .then(({ data }) => {\n            console.log(data);\n            setFetched(true);\n            const { sentRequests, receivedRequests, friends } =\n              data.fetchListContact;\n\n            setContactList(friends, receivedRequests, sentRequests);\n          })\n          .catch((err) => {\n            setFetched(true);\n            console.log(err);\n          });\n      }\n    }\n  }, [user, fetched, setFetched]);\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (fetched) {\n      const limit = constant.REACT_APP_USERS_CONTACT_PER_LOAD;\n      if (\n        contact.sentRequestsToAddFriend.length <= 1 &&\n        user.sentRequestToAddFriend.length > 1\n      ) {\n        const skip = contact.sentRequestsToAddFriend.length;\n\n        fetchSentRequestToAddFriend({ skip, limit }).then(({ data }) => {\n          if (data?.fetchSentRequestToAddFriend?.length && _isMounted) {\n            fetchMoreSentRequestsToAddFriend(data.fetchSentRequestToAddFriend);\n          }\n        });\n      }\n      if (\n        contact.receivedRequestsToAddFriend.length <= 1 &&\n        user.receivedRequestToAddFriend.length > 1\n      ) {\n        const skip = contact.receivedRequestsToAddFriend.length;\n        fetchReceivedRequestsToAddFriend({ skip, limit }).then(({ data }) => {\n          if (data?.fetchReceivedRequestToAddFriend?.length && _isMounted) {\n            fetchMoreReceivedRequestsToAddFriend(\n              data.fetchReceivedRequestToAddFriend\n            );\n          }\n        });\n      }\n    }\n\n    return () => (_isMounted = false);\n  }, [fetched, contact, user, fetchSentRequestToAddFriend]);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentFullSize>\n            <ContactTitle>\n              {i18n.store.data[lang].translation.contacts.title}\n            </ContactTitle>\n            {user && contact.sentRequestsToAddFriend.length ? (\n              <SentRequestsToAddFriend\n                user={user}\n                sentRequestsToAddFriend={contact.sentRequestsToAddFriend}\n              />\n            ) : null}\n            {user && contact.receivedRequestsToAddFriend.length ? (\n              <ReceivedRequestsToAddFriend\n                user={user}\n                receivedRequestsToAddFriend={\n                  contact.receivedRequestsToAddFriend\n                }\n              />\n            ) : null}\n            {user && contact.friends.length ? (\n              <FriendsList user={user} friends={contact.friends} />\n            ) : null}\n          </MainContentFullSize>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default FriendsPage;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\notifications.js",["820","821"],"import React, { useEffect, useState } from 'react';\nimport Layout from '../containers/Layout';\nimport {\n  Wrapper,\n  NotificationsContent,\n  OtherContents,\n} from './styles/notifications.styles';\nimport NotificationItem from '../components/Notification/NotificationItem';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport { userVar, notificationsVar } from '../apollo/cache';\nimport CardRequestAuth from '../components/Card/CardRequestAuth';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport MainBody from '../containers/MainBody';\nimport { FETCH_NOTIFICATIONS } from '../apollo/notification/notification.types';\nimport {\n  addNotificationsToNotifcationsList,\n  setNotifications,\n} from '../apollo/notification/notification.caches';\nimport constant from '../constant/constant';\nconst NotificationsPage = () => {\n  const user = useReactiveVar(userVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const [fetchedNotifications, setFetchedNotifications] = useState(false);\n  const [loadingNotifications, setLoadingNotifications] = useState(true);\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: 'cache-and-network',\n    skip: true,\n  });\n\n  useEffect(() => {\n    if (\n      !fetchedNotifications &&\n      user?.notifications?.length &&\n      !notifications.length\n    ) {\n      fetchNotifications()\n        .then(({ data }) => {\n          console.log(data);\n          if (data) {\n            setNotifications(data.fetchNotifications);\n            setLoadingNotifications(false);\n            setFetchedNotifications(true);\n          }\n        })\n        .catch(() => {\n          setLoadingNotifications(false);\n          setFetchedNotifications(true);\n        });\n    } else if (!fetchedNotifications && notifications.length) {\n      setFetchedNotifications(true);\n      setLoadingNotifications(false);\n    }\n  }, [\n    fetchedNotifications,\n    user,\n    user?.notifications?.length && notifications,\n  ]);\n\n  const fetchMoreNotifications = () => {\n    const skip = notifications.length;\n    const limit = constant.REACT_APP_NOTIFICATIONS_PER_PAGE;\n    fetchNotifications({ skip, limit }).then(({ data }) => {\n      if (data) {\n        addNotificationsToNotifcationsList(data.fetchNotifications);\n      }\n    });\n  };\n\n  return (\n    <Layout>\n      <MainBody>\n        <Wrapper>\n          <NotificationsContent>\n            {loadingNotifications ? (\n              <div>Loading Notifications 1...</div>\n            ) : user ? (\n              <InfiniteScroll\n                dataLength={notifications.length}\n                hasMore={notifications.length < user.notifications.length}\n                loader={<div>Loading Notifications...</div>}\n                next={fetchMoreNotifications}\n                scrollThreshold={0.85}\n              >\n                {notifications.map((notification) => (\n                  <NotificationItem\n                    key={`notification-${notification._id}`}\n                    notifications={notifications}\n                    notification={notification}\n                  />\n                ))}\n              </InfiniteScroll>\n            ) : (\n              <CardRequestAuth />\n            )}\n          </NotificationsContent>\n          <OtherContents></OtherContents>\n        </Wrapper>\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default NotificationsPage;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\chats.js",["822"],"import React, { lazy, useEffect, useState } from 'react';\nimport Layout from '../containers/Layout';\nimport { userVar, messagesStorageVar } from '../apollo/cache';\n\nimport { useQuery, useMutation, useReactiveVar } from '@apollo/client';\nimport CardRequestAuth from '../components/Card/CardRequestAuth';\nimport {\n  RequestAuthScreen,\n  ChatsWrapper,\n  SidebarNav,\n  MainTab,\n} from './styles/chats.styles';\nimport MenuChat from '../components/Chat/MenuChat';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  FETCH_CHAT_CONVERSATIONS,\n  UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED,\n} from '../apollo/chat/chat.types';\n\nimport { setInitialMessagesStorage } from '../apollo/chat/chat.caches';\nimport useChatSubscriptions from '../hooks/useChatSubscriptions';\nimport { setNumberOfConversations } from '../apollo/chat/chat.caches';\nconst ChatConversations = lazy(() =>\n  import('../components/Chat/Conversations')\n);\nconst ChatContacts = lazy(() => import('../components/Chat/Contact'));\n\nconst ChatsPage = ({ match }) => {\n  const [fetched, setFetched] = useState(false);\n  //use Query\n  const user = useReactiveVar(userVar);\n  const messagesStorage = useReactiveVar(messagesStorageVar);\n  const { refetch: fetchChatConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      fetchPolicy: 'cache-and-network',\n      skip: true,\n    }\n  );\n  const [updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched] =\n    useMutation(\n      UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n    );\n  //useState\n\n  useChatSubscriptions();\n  useEffect(() => {\n    let _isMounted = true;\n    if (!Object.keys(messagesStorage).length && user && !fetch) {\n      //fetch conversations\n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchChatConversations().then(({ data }) => {\n        if (_isMounted) {\n          const { conversations, numberOfConversations } =\n            data.fetchChatConversations;\n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === 'PERSONAL') {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === 'SENT'\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n\n          setInitialMessagesStorage({ ...storage });\n          //update those conversations to received when user online if he/she has offlined before\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setNumberOfConversations(numberOfConversations);\n        }\n      });\n      setFetched(true);\n    }\n    return () => (_isMounted = false);\n  }, [user, messagesStorage, fetched]);\n  if (!user)\n    return (\n      <Layout>\n        <RequestAuthScreen>\n          <CardRequestAuth />\n        </RequestAuthScreen>\n      </Layout>\n    );\n  return (\n    <Layout>\n      <ChatsWrapper>\n        <SidebarNav>\n          <MenuChat />\n        </SidebarNav>\n        <MainTab>\n          <Switch>\n            <Route exact path={match.path} component={ChatConversations} />\n            <Route\n              exact\n              path={`${match.path}/contacts`}\n              component={ChatContacts}\n            />\n          </Switch>\n        </MainTab>\n      </ChatsWrapper>\n    </Layout>\n  );\n};\n\nexport default ChatsPage;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\App\\GlobalStyles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\ErrorBoundary.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useContactSubscription.jsx",["823"],"import { useEffect } from 'react';\nimport { FETCH_CURRENT_USER } from '../apollo/user/user.types';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport {\n  userVar,\n  receivedRequestsToAddFriendVar,\n  currentPersonalUserVar,\n} from '../apollo/cache';\nimport {\n  REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  REMOVE_FRIEND_SUBSCRIPTION,\n} from '../apollo/contact/contact.subscriptions';\nimport { removeNotificationItemFromNotificationsList } from '../apollo/notification/notification.caches';\nimport { setCurrentUser } from '../apollo/user/user.caches';\nimport { setCurrentPersonalUser } from '../apollo/user/currentPersonalUser.caches';\nimport {\n  removeSentRequestToAddFriend,\n  removeFriendsFromContact,\n} from '../apollo/contact/contact.caches';\n\nconst useContactSubscription = () => {\n  const user = useReactiveVar(userVar);\n  const receivedRequestsToAddFriend = useReactiveVar(\n    receivedRequestsToAddFriendVar\n  );\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n\n  const { subscribeToMore: subscribeUser } = useQuery(FETCH_CURRENT_USER, {\n    skip: true,\n  });\n\n  //function to handle when subscription called\n  const updateSubscriptionOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      ...sender,\n    });\n\n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id.toString() === receiver._id.toString()\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        ...receiver,\n      });\n    }\n  };\n  useEffect(() => {\n    let unsubscribeRejectRquestToAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeRemoveFriend;\n    if (subscribeUser && user) {\n      unsubscribeRejectRquestToAddFriend = subscribeUser({\n        document: REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const { sender, receiver } =\n            subscriptionData.data.rejectRequestToAddFriendSubscription;\n          removeSentRequestToAddFriend(receiver);\n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      unsubscribeRemoveFriend = subscribeUser({\n        document: REMOVE_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const { sender, receiver, notification } =\n            subscriptionData.data.removeFriendSubscription;\n          console.log(subscriptionData);\n          removeFriendsFromContact(sender);\n          removeNotificationItemFromNotificationsList(notification);\n          updateSubscriptionOnChange(receiver, sender);\n        },\n      });\n    }\n\n    return () => {\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeRejectRquestToAddFriend) {\n        unsubscribeRejectRquestToAddFriend();\n      }\n      if (unsubscribeRemoveFriend) {\n        unsubscribeRemoveFriend();\n      }\n    };\n  }, [subscribeUser, user, receivedRequestsToAddFriend]);\n};\n\nexport default useContactSubscription;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useUserStatusSubscriptions.jsx",["824"],"import { useEffect } from 'react';\nimport { useReactiveVar } from '@apollo/client';\nimport { userVar } from '../apollo/cache';\n\nimport io from 'socket.io-client';\nimport _ from 'lodash';\nimport { updateUserOnlineOfflineMessagesStorage } from '../apollo/chat/chat.caches';\nimport { updateUserOnlineOffline } from '../apollo/contact/contact.caches';\nconst useUserStatusSubscriptions = () => {\n  const user = useReactiveVar(userVar);\n\n  useEffect(() => {\n    const socket = io('http://localhost:5000');\n\n    if (user) {\n      //pass socket to backend to update status online\n      socket.open();\n      const { _id, name, slug, avatar } = user;\n      socket.emit('client-send-user-info', {\n        _id,\n        name,\n        slug,\n        avatar,\n        isOnline: true,\n      });\n      socket.on('server-send-user-online', (data) => {\n        updateUserOnlineOffline(data);\n        updateUserOnlineOfflineMessagesStorage(data._id);\n      });\n      socket.on('server-send-user-is-offline', (userId) => {\n        updateUserOnlineOffline({ _id: userId }, false);\n        updateUserOnlineOfflineMessagesStorage(userId, false);\n      });\n    } else {\n      socket.disconnect();\n    }\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [user]);\n};\n\nexport default useUserStatusSubscriptions;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\index.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\pages.styles.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\initialState.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\currentPersonalUser.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.mutations.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\chats.styles.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\controls\\controls.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.caches.js",["825","826"],"import { AiOutlineConsoleSql } from 'react-icons/ai';\nimport { contactVar, userVar } from '../cache';\nimport { initialState } from '../initialState';\nimport _ from 'lodash';\nexport const setContactList = (\n  friends,\n  receivedRequestsToAddFriend,\n  sentRequestsToAddFriend\n) => {\n  const contact = { ...contactVar() };\n  if (friends) contact.friends = [...friends];\n  if (receivedRequestsToAddFriend)\n    contact.receivedRequestsToAddFriend = [...receivedRequestsToAddFriend];\n  if (sentRequestsToAddFriend)\n    contact.sentRequestsToAddFriend = [...sentRequestsToAddFriend];\n  return contactVar(contact);\n};\n\nexport const pushFriendsListToContact = (friends) => {\n  const contact = { ...contactVar() };\n  contact.friends = [...contact.friends, ...friends];\n  console.log(contact);\n  return contactVar(contact);\n};\n\nexport const fetchMoreReceivedRequestsToAddFriend = (receivedRequestsData) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend = [\n    ...contact.receivedRequestsToAddFriend,\n    ...receivedRequestsData,\n  ];\n  return contactVar(contact);\n};\n\nexport const fetchMoreSentRequestsToAddFriend = (sentRequestsData) => {\n  const contact = { ...contactVar() };\n  contact.sentRequestsToAddFriend = [\n    ...contact.sentRequestsToAddFriend,\n    ...sentRequestsData,\n  ];\n  return contactVar(contact);\n};\n\nexport const moveReceivedRequestToFriend = (senderRequest) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend =\n    contact.receivedRequestsToAddFriend.filter(\n      (receivedUser) => receivedUser._id !== senderRequest._id\n    );\n  contact.friends = [{ ...senderRequest }, ...contact.friends];\n  return contactVar(contact);\n};\nexport const moveSentRequestToFriend = (senderRequest) => {\n  const contact = { ...contactVar() };\n  contact.sentRequestsToAddFriend = contact.sentRequestsToAddFriend.filter(\n    (receivedUser) => receivedUser._id !== senderRequest._id\n  );\n  contact.friends = [{ ...senderRequest }, ...contact.friends];\n  return contactVar(contact);\n};\n\nexport const removeSentRequestToAddFriend = (receiverRequest) => {\n  const contact = { ...contactVar() };\n  contact.sentRequestsToAddFriend = contact.sentRequestsToAddFriend.filter(\n    (sentUser) => sentUser._id !== receiverRequest._id\n  );\n  return contactVar(contact);\n};\n\nexport const addUserToReceivedRequestToAddFriend = (sender) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend = [\n    { ...sender },\n    ...contact.receivedRequestsToAddFriend,\n  ];\n  return contactVar(contact);\n};\n\nexport const removeUserFromReceivedRequestToAddFriend = (sender) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend =\n    contact.receivedRequestsToAddFriend.filter(\n      (receivedUserRequest) => receivedUserRequest._id !== sender._id\n    );\n  return contactVar(contact);\n};\n\nexport const removeReceivedRequestToAddFriend = (senderRequest) => {\n  const contact = { ...contactVar() };\n  contact.receivedRequestsToAddFriend =\n    contact.receivedRequestsToAddFriend.filter(\n      (receivedRequest) => receivedRequest._id !== senderRequest._id\n    );\n  return contactVar(contact);\n};\n\nexport const removeFriendsFromContact = (friend) => {\n  const contact = { ...contactVar() };\n  contact.friends = contact.friends.filter(\n    (_friend) => _friend._id !== friend._id\n  );\n  return contactVar(contact);\n};\n\nexport const clearContact = () => contactVar(initialState.contact);\n\nexport const updateUserOnlineOffline = (user, isOnline = true) => {\n  let contact = { ...contactVar() };\n  if (typeof isOnline === 'boolean') {\n    if (isOnline) {\n      //update user is online\n      if (\n        contact.friends.find(\n          (friend) => friend._id.toString() === user._id.toString()\n        )\n      ) {\n        contact.friends = contact.friends.filter(\n          (friend) => friend._id.toString() !== user._id.toString()\n        );\n        contact.friends = [{ ...user }, ...contact.friends];\n      }\n      return contactVar(contact);\n    }\n    //update user is Offline\n    const { _id } = user;\n    if (_id) {\n      contact.friends = contact.friends.map((friend) => {\n        let updatedFriends = { ...friend };\n        if (updatedFriends._id.toString() === _id.toString()) {\n          updatedFriends.isOnline = false;\n          updatedFriends.offlinedAt = new Date();\n        }\n        return { ...updatedFriends };\n      });\n      contact.friends = _.orderBy(\n        contact.friends,\n        [\n          function (item) {\n            return item.isOnline;\n          },\n          function (item) {\n            return item.slug;\n          },\n        ],\n        ['desc', 'asc']\n      );\n      return contactVar(contact);\n    }\n  }\n};\n","D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.caches.js",["827","828"],"import {\n  currentChatVar,\n  numberOfConversationsVar,\n  friendsVar,\n  messagesStorageVar,\n  contactVar,\n} from '../cache';\nimport { initialState } from '../initialState';\nexport const setCurrentChat = (userOrGroup) =>\n  currentChatVar({ ...userOrGroup });\n\nexport const setNumberOfConversations = (number) =>\n  numberOfConversationsVar(number);\n\n/**\n * {user} Object\n */\n\nexport const updateUserOnlineOfflineMessagesStorage = (\n  userId,\n  isOnline = true\n) => {\n  const storage = { ...messagesStorageVar() };\n  const checkUserExistedInStore = storage[userId];\n  if (checkUserExistedInStore) {\n    return messagesStorageVar({\n      ...storage,\n      [userId]: {\n        ...storage[userId],\n        profile: {\n          ...storage[userId].profile,\n          isOnline,\n          offlinedAt: isOnline ? null : new Date(),\n        },\n      },\n    });\n  }\n};\n\nexport const clearCurrentChat = () =>\n  currentChatVar(initialState.currentUserChat);\n\nexport const addNewConversationToMessagesStorage = (key, value) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({ ...storage, [key]: { ...value } });\n};\n\nexport const setInitialMessagesStorage = (data) =>\n  messagesStorageVar({ ...data });\n\n/**\n *\n * @param {Object} conversation\n * @param {Array} message\n * @param {String} scope [\"private\", \"group\"]\n * @param {Boolean} hasSeenLatestMessage\n * @returns\n */\nexport const setMessagesStorage = (\n  conversation,\n  message,\n  scope,\n  hasSeenLatestMessage = false\n) => {\n  const storage = { ...messagesStorageVar() };\n\n  return messagesStorageVar({\n    ...storage,\n    [conversation._id]: {\n      profile: { ...conversation },\n      messages: storage[conversation._id]\n        ? [...storage[conversation._id].messages, { ...message }]\n        : [{ ...message }],\n      scope,\n      latestMessage: { ...message },\n      hasSeenLatestMessage,\n    },\n  });\n};\n\nexport const updateHasSeenLatestMessage = (conversationId) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({\n    ...storage,\n    [conversationId]: {\n      ...storage[conversationId],\n      hasSeenLatestMessage: true,\n    },\n  });\n};\n\nexport const updateMessagesStorage = (\n  messenger,\n  updatedMessage,\n  scope,\n  hasSeenLatestMessage\n) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({\n    ...storage,\n    [messenger._id]: {\n      profile: { ...messenger },\n      messages: storage[messenger._id].messages.map((message) => {\n        if (message._id === updatedMessage._id) {\n          return { ...updatedMessage };\n        }\n        return { ...message };\n      }),\n      scope,\n      latestMessage: updatedMessage,\n      hasSeenLatestMessage,\n    },\n  });\n};\n\nexport const updateMessagesStorageToReceivedWhenUserOnline = (\n  conversationId\n) => {\n  const storage = { ...messagesStorageVar() };\n  if (storage[conversationId]) {\n    return messagesStorageVar({\n      ...storage,\n      [conversationId]: {\n        ...storage[conversationId],\n        messages: storage[conversationId].messages.map((message) => {\n          let __message = { ...message };\n          if (message.receiverStatus === 'SENT') {\n            __message.receiverStatus = 'DELIVERED';\n          }\n          return { ...__message };\n        }),\n      },\n    });\n  }\n};\nexport const updateMessagesStorageWhenReceiverSeenAllMessages = (\n  conversationId\n) => {\n  const storage = { ...messagesStorageVar() };\n  return setMessagesStorage({\n    ...storage,\n    [conversationId]: {\n      ...storage[conversationId],\n      messages: storage[conversationId].messages.map((message) => {\n        if (message.receiver._id === conversationId) {\n          return { ...message, receiverStatus: 'SEEN' };\n        }\n        return { ...message };\n      }),\n      hasSeenLatestMessage: true,\n    },\n  });\n};\n\nexport const updateMoreMessages = (conversationsId, newMessages) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({\n    ...storage,\n    [conversationsId]: {\n      ...storage[conversationsId],\n      messages: [...newMessages, ...storage[conversationsId].messages],\n    },\n  });\n};\n\nexport const clearMessageStorage = () =>\n  messagesStorageVar(initialState.messagesStorage);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\Layout.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useHomePostsSubscription.jsx",["829","830","831"],"import { useEffect } from 'react';\nimport { useQuery, useReactiveVar, useSubscription } from '@apollo/client';\nimport { FETCH_POSTS } from '../apollo/post/post.queries';\nimport {\n  CREATE_COMMENT_SUBSCIPTION,\n  LIKE_COMMENT_SUBSCRIPTION,\n  CREATE_RESPONSE_SUBSCRIPTION,\n  LIKE_RESPONSE_SUBSCRIPTION,\n  EDIT_POST_SUBSCRIPTION,\n  LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n  REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n} from '../apollo/post/post.types';\nimport { userVar } from '../apollo/cache';\nimport {\n  addCommentToPost,\n  addLikeComment,\n  addNewResponseToCommentAtHomePage,\n  updatePost,\n  updateLikePostSubscription,\n  removeLikePost,\n  addLikeResponseAtHomePage,\n  removeLikeResponseAtHomePage,\n  removeLikeComment,\n} from '../apollo/post/post.caches';\n\nconst useHomePostsSubscription = () => {\n  const { subscribeToMore: subscribePosts } = useQuery(FETCH_POSTS, {\n    skip: true,\n    fetchPolicy: 'network-only',\n  });\n  const user = useReactiveVar(userVar);\n  useSubscription(LIKE_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data) {\n        const { likePostSubscription } = subscriptionData.data;\n        updateLikePostSubscription(likePostSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data) {\n        const { removeLikePostSubscription } = subscriptionData.data;\n        removeLikePost(removeLikePostSubscription);\n      }\n    },\n  });\n  useSubscription(CREATE_COMMENT_SUBSCIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.createCommentSubscription) {\n        const { createCommentSubscription } = subscriptionData.data;\n        addCommentToPost(createCommentSubscription);\n      }\n    },\n  });\n  useSubscription(LIKE_COMMENT_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.likeCommentSubscription) {\n        const { likeCommentSubscription } = subscriptionData.data;\n        addLikeComment(likeCommentSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_COMMENT_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.removeLikeCommentSubscription) {\n        const { removeLikeCommentSubscription } = subscriptionData.data;\n        removeLikeComment(removeLikeCommentSubscription);\n      }\n    },\n  });\n  useSubscription(CREATE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.createResponseSubscription) {\n        const { createResponseSubscription } = subscriptionData.data;\n        addNewResponseToCommentAtHomePage(createResponseSubscription);\n      }\n    },\n  });\n  useSubscription(LIKE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data.likeResponseSubscription) {\n        const { likeResponseSubscription } = subscriptionData.data;\n        addLikeResponseAtHomePage(likeResponseSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data.removeLikeResponseSubscription) {\n        const { removeLikeResponseSubscription } = subscriptionData.data;\n        removeLikeResponseAtHomePage(removeLikeResponseSubscription);\n      }\n    },\n  });\n  useSubscription(EDIT_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      console.log(subscriptionData);\n      if (subscriptionData.data?.editPostSubscription) {\n        const { editPostSubscription } = subscriptionData.data;\n        updatePost(editPostSubscription);\n      }\n    },\n  });\n};\n\nexport default useHomePostsSubscription;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\MainBody.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\user\\user.caches.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useChatSubscriptions.jsx",["832","833"],"import { useEffect } from 'react';\nimport {\n  FETCH_CHAT_CONVERSATIONS,\n  UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE,\n} from '../apollo/chat/chat.types';\nimport { useQuery, useMutation, useReactiveVar } from '@apollo/client';\nimport { userVar, currentChatVar } from '../apollo/cache';\nimport {\n  setMessagesStorage,\n  updateMessagesStorage,\n  updateMessagesStorageWhenReceiverSeenAllMessages,\n  updateMessagesStorageToReceivedWhenUserOnline,\n} from '../apollo/chat/chat.caches';\nimport {\n  SENT_MESSAGE_CHAT_SUBSCRIPTION,\n  NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n  SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n  NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n} from '../apollo/chat/chat.types';\n\nconst useChatSubscriptions = () => {\n  const user = useReactiveVar(userVar);\n  const currentChat = useReactiveVar(currentChatVar);\n  const { subscribeToMore: subscribeChatMessage } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      skip: true,\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const [updatePersonalReceiverWhenReceivedNewMessage] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE\n  );\n  useEffect(() => {\n    let unsubscribeChatMessage;\n    let unsubscribeNotifySenderThatReceiverHasReceivedMessage;\n    let unsubscribeSubscribeReceiverHasSeenAllMessages;\n    let unsubscribeNotifySendersReceiverOnlineHasReceivedMessages;\n    if (subscribeChatMessage && user) {\n      unsubscribeChatMessage = subscribeChatMessage({\n        document: SENT_MESSAGE_CHAT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const { action, scope, message } =\n            subscriptionData.data.sentMessageChatSubscription;\n          const { sender } = message;\n\n          setMessagesStorage(sender, message, scope, false);\n          //update Delivered status\n          const messageStatus =\n            currentChat?._id === sender._id ? 'SEEN' : 'DELIVERED';\n          updatePersonalReceiverWhenReceivedNewMessage({\n            variables: { messageId: message._id, messageStatus },\n          });\n        },\n      });\n      unsubscribeNotifySenderThatReceiverHasReceivedMessage =\n        subscribeChatMessage({\n          document: NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const { action, scope, message } =\n              subscriptionData.data\n                .notifySenderThatReceiverHasReceivedMessageChat;\n            const { receiver } = message;\n            updateMessagesStorage(receiver, message, scope, action === 'SEEN');\n          },\n        });\n      unsubscribeSubscribeReceiverHasSeenAllMessages = subscribeChatMessage({\n        document: SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const { receiverId } =\n            subscriptionData.data.senderSubscribeWhenReceiverHasSeenAllMessages;\n          updateMessagesStorageWhenReceiverSeenAllMessages(receiverId);\n        },\n      });\n      unsubscribeNotifySendersReceiverOnlineHasReceivedMessages =\n        subscribeChatMessage({\n          document: NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const { receiver } =\n              subscriptionData.data\n                .notifySendersThatReceiverOnlineHasReceivedMessagesChat;\n            updateMessagesStorageToReceivedWhenUserOnline(receiver);\n          },\n        });\n    }\n    return () => {\n      if (unsubscribeChatMessage) {\n        unsubscribeChatMessage();\n      }\n      if (unsubscribeNotifySenderThatReceiverHasReceivedMessage) {\n        unsubscribeNotifySenderThatReceiverHasReceivedMessage();\n      }\n      if (unsubscribeSubscribeReceiverHasSeenAllMessages) {\n        unsubscribeSubscribeReceiverHasSeenAllMessages();\n      }\n      if (unsubscribeNotifySendersReceiverOnlineHasReceivedMessages) {\n        unsubscribeNotifySendersReceiverOnlineHasReceivedMessages();\n      }\n    };\n  }, [subscribeChatMessage, user, currentChat]);\n};\n\nexport default useChatSubscriptions;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\pages\\styles\\notifications.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\SignUp.jsx",["834","835","836"],"import React from 'react';\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  Title,\n  SubTitle,\n  ErrorMessage,\n  TextForm,\n  ValidTextField,\n} from './AuthForm';\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport CustomButton from '../Custom/CustomButton';\nimport { withRouter } from 'react-router-dom';\nimport GoogleRecaptcha from './GoogleRecapcha';\nimport FacebookLogin from './FacebookAuth';\nimport GoogleLogin from './GoogleAuth';\nimport { useMutation } from '@apollo/client';\nimport { SIGNUP } from '../../apollo/user/user.types';\nimport { login } from './Auth.utility';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst INITIAL_STATE = {\n  controls: {\n    name: {\n      type: 'text',\n      name: 'name',\n      valid: false,\n      label: 'Name',\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 50,\n      },\n      value: '',\n      touched: false,\n      validationErrors: '',\n    },\n    email: {\n      type: 'email',\n      name: 'email',\n      label: 'Email',\n      valid: false,\n      validation: {\n        required: true,\n        isEmail: true,\n        regex:\n          /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\n      },\n      value: '',\n      touched: false,\n      validationErrors: '',\n    },\n    password: {\n      type: 'password',\n      name: 'password',\n      valid: false,\n      label: 'Password',\n      validation: {\n        required: true,\n        isPassword: true,\n        regex: /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n      },\n      value: '',\n      touched: false,\n      validationErrors: '',\n    },\n    confirmPassword: {\n      type: 'password',\n      name: 'confirmPassword',\n      label: 'Confirm Password',\n      valid: false,\n      validation: {\n        required: true,\n        match: true,\n      },\n      value: '',\n      touched: false,\n      validationErrors: '',\n    },\n  },\n  formIsValid: false,\n  captcha_loaded: false,\n  disabled: true,\n  title: '',\n};\n\nfunction withSignUpMutation(WrappedComponent) {\n  return function MutationWrapper(props) {\n    const [createUser, { data, loading, error }] = useMutation(SIGNUP, {\n      errorPolicy: 'all',\n    });\n    return (\n      <WrappedComponent\n        createUser={createUser}\n        data={data}\n        loading={loading}\n        error={error}\n        {...props}\n      />\n    );\n  };\n}\n\nconst SignUp = withSignUpMutation(\n  class extends React.Component {\n    state = { ...INITIAL_STATE };\n    timer = null;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 0);\n    }\n    componentWillUnmount() {\n      clearTimeout(this.timer);\n      if (this.unsubcribeLogin) {\n        this.unsubcribeLogin();\n      }\n    }\n    unsubcribeLogin;\n    async componentDidUpdate(prevProps) {\n      if (prevProps.error !== this.props.error) {\n        this.clearForm();\n      }\n      if (prevProps.data !== this.props.data && this.props.data) {\n        const { user, token, tokenExpire } = this.props.data.createUser;\n        console.log(user);\n        this.unsubcribeLogin = await login(user, token, tokenExpire);\n        this.clearForm();\n      }\n    }\n\n    clearForm = () => {\n      this.setState({ ...INITIAL_STATE });\n      setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 0);\n    };\n\n    checkValidity = (value, rules) => {\n      let isValid = true;\n      let errorsMessage = [];\n      if (rules.required) {\n        isValid = value.trim().length && isValid;\n        if (!isValid) {\n          errorsMessage.push('This field is required');\n        }\n      }\n      if (rules.regex) {\n        isValid = rules.regex.test(value) && isValid;\n        if (!isValid) {\n          if (rules.isEmail) {\n            errorsMessage.push('Email is invalid');\n          }\n          if (rules.isPassword) {\n            errorsMessage.push('Password is invalid');\n          }\n        }\n      }\n      if (rules.minLength) {\n        isValid = value.trim().length >= rules.minLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at least ${rules.minLength} characters`);\n        }\n      }\n      if (rules.maxLength) {\n        isValid = value.trim().length <= rules.maxLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at most ${rules.maxLength} characters`);\n        }\n      }\n      if (rules.match) {\n        isValid = value === this.state.controls.password.value && isValid;\n        if (!isValid) {\n          errorsMessage.push('Password and confirm Password do not match');\n        }\n      }\n      return errorsMessage;\n    };\n\n    handleChange = (e, name) => {\n      let updatedControls = { ...this.state.controls };\n      let updatedControlElement = { ...updatedControls[name] };\n      updatedControlElement.value = e.target.value;\n      const checkValid = this.checkValidity(\n        e.target.value,\n        updatedControlElement.validation\n      );\n      updatedControlElement.valid = checkValid.length === 0;\n      updatedControlElement.touched = true;\n      updatedControlElement.validationErrors = checkValid;\n      updatedControls[name] = updatedControlElement;\n      let { email, password, confirmPassword } = updatedControls;\n      const formIsValid =\n        email.valid &&\n        updatedControlElement.valid &&\n        password.valid &&\n        confirmPassword.valid;\n      this.setState({ controls: updatedControls, formIsValid });\n    };\n\n    handleSubmitSignUpForm = (e) => {\n      e.preventDefault();\n      if (!this.state.formIsValid) {\n        this.setState({ ...INITIAL_STATE });\n        return;\n      }\n      const { name, email, password } = this.state.controls;\n\n      this.props.createUser({\n        variables: {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        },\n      });\n    };\n\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {\n      const { formIsValid, captcha_loaded, disabled } = this.state;\n      let formInputArray = [];\n      Object.keys(this.state.controls).forEach((controlItem) => {\n        formInputArray.push(this.state.controls[controlItem]);\n      });\n      const { error, loading } = this.props;\n      return (\n        <CustomFormContainer onSubmit={this.handleSubmitSignUpForm}>\n          <FormHeader>\n            <Title>Sign Up</Title>\n            <SubTitle>Sign up your account via email and password.</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}\n          <FlashForm>\n            {/* <FacebookLogin /> */}\n            <GoogleLogin />\n          </FlashForm>\n          <FormGroups>\n            {formInputArray.map(\n              ({\n                label,\n                name,\n                touched,\n                type,\n                valid,\n                validation,\n                validationErrors,\n                value,\n              }) => (\n                <TextForm valid={valid && touched}>\n                  <TextField\n                    size=\"small\"\n                    key={name}\n                    type={type}\n                    variant=\"outlined\"\n                    name={name}\n                    value={value}\n                    error={!valid && touched}\n                    label={label}\n                    onChange={(e) => this.handleChange(e, name)}\n                    required={validation.required}\n                    helperText={validationErrors}\n                  />\n                  {valid && touched ? (\n                    <ValidTextField>\n                      <AiFillCheckCircle />\n                    </ValidTextField>\n                  ) : null}\n                </TextForm>\n              )\n            )}\n\n            {captcha_loaded && (\n              <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n            )}\n            <Button\n              variant=\"outlined\"\n              size=\"medium\"\n              color=\"primary\"\n              disabled={!formIsValid || disabled}\n              type=\"submit\"\n            >\n              <span>Submit</span>\n              {loading && (\n                <CircularProgress size={12} style={{ marginLeft: '0.5rem' }} />\n              )}\n            </Button>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              <StyledLink to=\"/auth\">Signin account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{' '}\n              <StyledLink to=\"/auth/restore-account\">\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignUp);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\HomeSidebar.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\SignIn.jsx",["837","838"],"import React from 'react';\nimport {\n  CustomFormContainer,\n  FormHeader,\n  Title,\n  SubTitle,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  ErrorMessage,\n  TextForm,\n} from './AuthForm';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { withRouter } from 'react-router-dom';\nimport GoogleRecaptcha from './GoogleRecapcha';\nimport FacebookAuth from './FacebookAuth';\nimport GoogleAuth from './GoogleAuth';\nimport { LOGIN } from '../../apollo/user/user.types';\nimport { useLazyQuery } from '@apollo/client';\nimport { login } from './Auth.utility';\nimport TextField from '@material-ui/core/TextField';\nfunction withLoginQuery(WrappedComponent) {\n  return function QueryWrapper(props) {\n    const [loginUser, { loading, data, error }] = useLazyQuery(LOGIN, {\n      fetchPolicy: 'cache-and-network',\n    });\n    return (\n      <WrappedComponent\n        data={data}\n        loading={loading}\n        error={error}\n        loginUser={loginUser}\n        {...props}\n      />\n    );\n  };\n}\n\nconst SignIn = withLoginQuery(\n  class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.signInRef = React.createRef();\n      this._isMounted = true;\n    }\n    state = {\n      email: '',\n      password: '',\n      disabled: true,\n      captcha_value: null,\n      loading: false,\n      captcha_loaded: false,\n    };\n\n    timer = null;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 50);\n      if (this.signInRef.current) {\n        window.scrollTo({\n          top: this.signInRef.current.offsetTop,\n          behavior: 'smooth',\n        });\n      }\n    }\n\n    handleChange = (e) => {\n      const { name, value } = e.target;\n      this.setState({ [name]: value });\n    };\n    unsubscribeLogin;\n    async componentDidUpdate(prevProps) {\n      if (prevProps.error !== this.props.error) {\n        this.clearForm();\n      }\n      if (prevProps.data !== this.props.data && this.props.data) {\n        const { user, token, tokenExpire } = this.props.data.loginUser;\n        if (this._isMounted) {\n          this.unsubscribeLogin = await login(user, token, tokenExpire);\n          this.clearForm();\n        }\n      }\n    }\n    componentWillUnmount() {\n      clearTimeout(this.timer);\n      this._isMounted = false;\n      if (this.unsubscribeLogin) {\n        this.unsubscribeLogin();\n      }\n    }\n    clearForm = () => {\n      this.setState({\n        email: '',\n        password: '',\n        disabled: true,\n        captcha_loaded: false,\n      });\n      setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 10);\n    };\n\n    onSubmitSigninForm = async (e) => {\n      e.preventDefault();\n\n      const { email, password } = this.state;\n      if (!email || !password) {\n        this.setState({\n          error: 'Email và mật khẩu không được để trống',\n        });\n        return;\n      }\n      this.setState({ loading: true });\n      this.props.loginUser({ variables: { email, password } });\n      this.setState({ loading: false });\n    };\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {\n      const { email, password, disabled, loading, captcha_loaded } = this.state;\n      const { authPath, error } = this.props;\n      return (\n        <CustomFormContainer\n          onSubmit={this.onSubmitSigninForm}\n          ref={this.signInRef}\n        >\n          <FormHeader>\n            <Title>Đăng nhập</Title>\n            <SubTitle>Đăng nhập tài khoản bằng email và mật khẩu</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}\n          <FlashForm>\n            {/* <FacebookAuth /> */}\n            <GoogleAuth />\n          </FlashForm>\n          <FormGroups>\n            <TextForm>\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                label=\"Email\"\n                onChange={this.handleChange}\n                required\n              />\n            </TextForm>\n            <TextForm>\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                label=\"Password\"\n                onChange={this.handleChange}\n                required\n                autocomplete=\"on\"\n              />\n            </TextForm>\n\n            <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n\n            <Button\n              variant=\"outlined\"\n              size=\"medium\"\n              disabled={disabled || loading}\n              color=\"primary\"\n              style={{ marginTop: '1rem' }}\n              type=\"submit\"\n            >\n              <span>Sign In</span>\n              {loading && (\n                <CircularProgress size={14} style={{ marginLeft: '1rem' }} />\n              )}\n            </Button>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              Don't have account ?{' '}\n              <StyledLink to={`${authPath}/signup`}>Signup account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{' '}\n              <StyledLink to={`${authPath}/restore-account`}>\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignIn);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendsBoard.jsx",["839","840"],"import React, { useState } from 'react';\nimport FriendsList from './FriendsList';\nimport ButtonToggleFriendsList from '../Controls/ButtonToggleFriendsList';\nimport { FriendsBoardWrapper } from './styles/Sidebar.styles';\nimport { useReactiveVar } from '@apollo/client';\nimport { toggleFriendsBoardVar } from '../../apollo/cache';\nconst FriendsBoard = () => {\n  const toggleFriendsBoard = useReactiveVar(toggleFriendsBoardVar);\n  return (\n    <FriendsBoardWrapper show={toggleFriendsBoard}>\n      <FriendsList\n        show={toggleFriendsBoard}\n        close={() => toggleFriendsBoardVar(false)}\n      />\n    </FriendsBoardWrapper>\n  );\n};\n\nexport default React.memo(FriendsBoard);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonToggleFriendsList.jsx",["841"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalHeading.jsx",["842"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditor.jsx",["843"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Global\\useLanguage.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalPosts.jsx",["844"],"import React, { useEffect, useState } from 'react';\nimport { Wrapper, LeftSide, RightSide } from './styles/PersonalPosts.styles';\nimport Posts from '../Post/Posts';\nimport PostEditor from '../Post/PostEditor/PostEditor';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport { currentPersonalUserVar, userVar } from '../../apollo/cache';\nimport { FETCH_POSTS } from '../../apollo/post/post.queries';\nimport { addPostsToCurrentPersonalUser } from '../../apollo/post/post.caches';\nimport IntroductionBox from './IntroductionBox';\nimport constant from '../../constant/constant';\n\nconst PersonalPosts = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const user = useReactiveVar(userVar);\n  const {\n    data: fetchedPostsData,\n    loading,\n    fetchMore: fetchMorePostsData,\n  } = useQuery(FETCH_POSTS, {\n    variables: {\n      userId: currentPersonalUser._id,\n      skip: 0,\n      limit: constant.REACT_APP_POSTS_PER_PAGE,\n    },\n    onCompleted: (data) => {\n      if (data) {\n        addPostsToCurrentPersonalUser(data.fetchPosts);\n      }\n    },\n  });\n\n  useEffect(() => {\n    let isScrolling;\n    function trackUserScroll(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollHeight, scrollTop, clientHeight } =\n          document.documentElement;\n        if (\n          scrollTop + clientHeight > 0.8 * scrollHeight &&\n          currentPersonalUser.posts.length >\n            currentPersonalUser.postsData?.length\n        ) {\n          setLoadingMore(true);\n        }\n      }, 66);\n    }\n    window.addEventListener('scroll', trackUserScroll);\n    return () => {\n      window.removeEventListener('scroll', trackUserScroll);\n      if (isScrolling) {\n        clearTimeout(isScrolling);\n      }\n    };\n  });\n\n  useEffect(() => {\n    if (loadingMore && currentPersonalUser.postsData) {\n      const skip = currentPersonalUser.postsData.length;\n      const limit = constant.REACT_APP_POSTS_PER_PAGE;\n      fetchMorePostsData({\n        variables: {\n          userId: currentPersonalUser._id,\n          skip,\n          limit,\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (fetchMoreResult) {\n            addPostsToCurrentPersonalUser(fetchMoreResult.fetchPosts);\n          }\n        },\n      }).then(() => setLoadingMore(false));\n    }\n  }, [loadingMore, currentPersonalUser]);\n\n  if (!fetchedPostsData) return null;\n  if (loading) return <div>Loading...</div>;\n  return (\n    <Wrapper>\n      <LeftSide>\n        <IntroductionBox />\n      </LeftSide>\n      <RightSide>\n        {user?._id === currentPersonalUser?._id && <PostEditor />}\n        {currentPersonalUser?.postsData?.length ? (\n          <Posts posts={currentPersonalUser.postsData} />\n        ) : null}\n      </RightSide>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(PersonalPosts);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Posts.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\SentRequestsToAddFriend.jsx",["845"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Conversations.jsx",["846","847","848","849"],"import React, { useState, useEffect, createContext, useRef } from 'react';\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from './styles/Chat.styles';\nimport { userVar } from '../../apollo/cache';\n\nimport { useReactiveVar } from '@apollo/client';\nimport Search from './Search';\nimport ListConversations from './ListConversations';\nimport { useThemeUI } from 'theme-ui';\nimport ChatBoard from './ChatBoard';\nimport { setCurrentChat } from '../../apollo/chat/chat.caches';\nexport const MessagesContext = createContext({});\nconst Conversations = () => {\n  //query\n  const user = useReactiveVar(userVar);\n\n  //state\n  const [showPopup, setShowPopup] = useState(false);\n  const [search, setSearch] = useState('');\n  const [originalData, setOriginalData] = useState([]);\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const { colorMode } = useThemeUI();\n  const popupRef = useRef(null);\n\n  //empty current chat when change page\n  useEffect(() => {\n    setCurrentChat(null);\n  }, []);\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-messages-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener('click', (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener('click', (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n\n  if (!user) return null;\n  return (\n    <MessagesContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top}\n      >\n        <span>Pin this conversation</span>\n        <hr />\n        <span>Label</span>\n        <hr />\n        <span>Add to group</span>\n        <span>Turn notification off</span>\n        <hr />\n        <span>Delete conversation</span>\n        <hr />\n        <span>Report</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search />\n          <hr />\n          <ListConversations />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </MessagesContext.Provider>\n  );\n};\n\nexport default Conversations;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\ReceivedRequestsToAddFriend.jsx",["850","851"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\FriendsList.jsx",["852"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardRequestAuth.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Contact.jsx",["853","854","855","856","857","858"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\MenuChat.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\NotificationItem.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\en\\translation.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\locales\\vi\\translation.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\chat\\chat.mutations.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\notification\\notification.mutations.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.types.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\notificationContent.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\AlertDialogSlide.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Aside\\Aside.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\styles\\MainBody.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\useMenuList.jsx",["859"],"import { useState, useEffect } from 'react';\nimport useLanguage from '../Global/useLanguage';\nimport { useLocation } from 'react-router-dom';\nimport { useReactiveVar } from '@apollo/client';\nimport { userVar } from '../../apollo/cache';\nconst useMenuList = () => {\n  const user = useReactiveVar(userVar);\n\n  const location = useLocation();\n  const { lang, i18n } = useLanguage();\n  const [namePage, setNamePage] = useState('');\n  const [menu, setMenu] = useState([]);\n  const [explores, setExplores] = useState([]);\n\n  useEffect(() => {\n    const menuName = i18n.store.data[lang].translation.menuList.find(\n      (item) => item.path === location.pathname\n    );\n    setNamePage(menuName ? menuName.name : '');\n    setMenu(i18n.store.data[lang].translation.menuList);\n    setExplores(i18n.store.data[lang].translation.explores);\n  }, [lang, i18n.store.data, location.pathname]);\n  return {\n    namePage,\n    menu,\n    explores,\n  };\n};\n\nexport default useMenuList;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoard.jsx",["860"],"import React, { createRef } from 'react';\nimport { Wrapper } from './styles/ChatBoard.styles';\n\nimport ChatBoardHeading from './ChatBoardHeading';\nimport ChatBoardBody from './ChatBoardBody';\nimport ChatBoardFooter from './ChatBoardFooter';\n\nconst ChatCenter = () => {\n  return (\n    <Wrapper>\n      <ChatBoardHeading />\n      <ChatBoardBody />\n      <ChatBoardFooter />\n    </Wrapper>\n  );\n};\n\nexport default ChatCenter;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonSignUp.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Search.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ListContacts.jsx",["861"],"import React, { useState, useEffect } from 'react';\nimport { Wrapper } from './styles/ListContacts.styles';\nimport ContactItem from './ContactItem';\nimport { usePopupContactActions } from './hook/usePopupActions';\nimport { useQuery } from '@apollo/client';\nimport { FETCH_USER_FRIENDS_DATA } from '../../apollo/contact/contact.types';\nimport { setFriends } from '../../apollo/user/user.caches';\nimport constant from '../../constant/constant';\nconst ListContacts = ({ data }) => {\n  const { setShowPopup } = usePopupContactActions();\n  const [loadContactMore, setLoadContactMore] = useState(false);\n  const { refetch: fetchMoreContacts } = useQuery(FETCH_USER_FRIENDS_DATA, {\n    skip: true,\n    fetchPolicy: 'cache-and-network',\n  });\n  const onScrollListContacts = (e) => {\n    e.preventDefault();\n    const { clientHeight, scrollHeight, scrollTop } = e.target;\n    if (clientHeight + scrollTop > scrollHeight * 0.75) {\n      setLoadContactMore(true);\n    }\n  };\n\n  useEffect(() => {\n    if (loadContactMore) {\n      const skip = data.length;\n      const limit = constant.REACT_APP_FRIENDS_PER_LOAD;\n      fetchMoreContacts({ skip, limit }).then(({ data: { fetchFriends } }) => {\n        setFriends([...data, ...fetchFriends]);\n        setLoadContactMore(false);\n      });\n    }\n  }, [loadContactMore]);\n  if (!data.length) return null;\n  return (\n    <Wrapper\n      onScroll={() => setShowPopup(false)}\n      onScrollCapture={onScrollListContacts}\n    >\n      {data.map((friend) => (\n        <ContactItem key={`contact-${friend._id}`} friend={friend} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(ListContacts);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonLogin.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\ContactItem.jsx",["862"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Contact\\Contact.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomMaterialButton.jsx",["863","864","865","866","867","868"],"import React from 'react';\nimport {\n  createMuiTheme,\n  withStyles,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { green, purple, red, blue } from '@material-ui/core/colors';\n\nexport const AcceptButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[600]),\n    fontWeight: 600,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n}))(Button);\n\nexport const DenyButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(red[600]),\n    fontWeight: 600,\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[700],\n    },\n  },\n}))(Button);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\styles\\NotificationItem.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\MenuChat.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Chat.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.subscriptions.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\post\\post.mutations.js",["869"],"import { gql } from '@apollo/client';\nexport const CREATE_POST = gql`\n  mutation CreatePost(\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n    $fileNames: [String!]\n    $fileMimetype: [String!]\n    $fileEncodings: [String!]\n    $status: String!\n  ) {\n    createPost(\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n        fileNames: $fileNames\n        fileMimetype: $fileMimetype\n        fileEncodings: $fileEncodings\n        status: $status\n      }\n    ) {\n      _id\n      text\n      rawText\n      shortenText\n      mentions {\n        _id\n        name\n        avatar\n        slug\n        isOnline\n      }\n      author {\n        _id\n        name\n        slug\n        avatar\n      }\n      files {\n        filename\n        mimetype\n        data\n      }\n      comments\n      responses\n      likes\n      status\n      createdAt\n    }\n  }\n`;\n\nexport const CREATE_COMMENT = gql`\n  mutation (\n    $postId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n  ) {\n    createComment(\n      postId: $postId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n      }\n    ) {\n      _id\n      text\n      shortenText\n      rawText\n      author {\n        _id\n        name\n        avatar\n        slug\n      }\n      post\n      likes\n      responses\n      createdAt\n    }\n  }\n`;\n\nexport const CREATE_RESPONSE = gql`\n  mutation CreateResponse(\n    $commentId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n  ) {\n    createResponse(\n      commentId: $commentId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n      }\n    ) {\n      _id\n      text\n      shortenText\n      rawText\n      author {\n        _id\n        name\n        avatar\n        slug\n      }\n      comment\n      likes\n      post\n      createdAt\n    }\n  }\n`;\n\nexport const EDIT_POST = gql`\n  mutation EditPost(\n    $postId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n    $fileNames: [String!]\n    $fileMimetype: [String!]\n    $fileEncodings: [String!]\n    $status: String!\n  ) {\n    editPost(\n      postId: $postId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n        fileNames: $fileNames\n        fileMimetype: $fileMimetype\n        fileEncodings: $fileEncodings\n        status: $status\n      }\n    ) {\n      _id\n      text\n      rawText\n      shortenText\n      mentions {\n        _id\n        name\n        avatar\n        slug\n        isOnline\n      }\n      author {\n        _id\n        name\n        slug\n        avatar\n      }\n      files {\n        filename\n        mimetype\n        data\n      }\n      comments\n      responses\n      likes\n      status\n      createdAt\n    }\n  }\n`;\n\nexport const LIKE_COMMENT = gql`\n  mutation LikeComment($commentId: ID!) {\n    likeComment(commentId: $commentId)\n  }\n`;\n\nexport const LIKE_POST = gql`\n  mutation ($postId: ID!) {\n    likePost(postId: $postId)\n  }\n`;\nexport const LIKE_RESPONSE = gql`\n  mutation LikeResponse($responseId: ID!) {\n    likeResponse(responseId: $responseId)\n  }\n`;\n\nexport const REMOVE_COMMENT = gql`\n  mutation RemoveComment($commentId: ID!) {\n    removeComment(commentId: $commentId)\n  }\n`;\nexport const REMOVE_LIKE_COMMENT = gql`\n  mutation RemoveLikeComment($commentId: ID!) {\n    removeLikeComment(commentId: $commentId)\n  }\n`;\n\nexport const REMOVE_LIKE_POST = gql`\n  mutation ($postId: ID!) {\n    removeLikePost(postId: $postId)\n  }\n`;\n\nexport const REMOVE_LIKE_RESPONSE = gql`\n  mutation RemoveLikeResponse($responseId: ID!) {\n    removeLikeResponse(responseId: $responseId)\n  }\n`;\n\nexport const REMOVE_RESPONSE = gql`\n  mutation RemoveResponse($responseId: ID!) {\n    removeResponse(responseId: $responseId)\n  }\n`;\n\nexport default {\n  CREATE_POST,\n  CREATE_COMMENT,\n  CREATE_RESPONSE,\n  EDIT_POST,\n  LIKE_COMMENT,\n  LIKE_POST,\n  LIKE_RESPONSE,\n  REMOVE_COMMENT,\n  REMOVE_LIKE_COMMENT,\n  REMOVE_LIKE_POST,\n  REMOVE_LIKE_RESPONSE,\n  REMOVE_RESPONSE,\n};\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\MenuList.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardBody.jsx",["870","871","872","873"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardFooter.jsx",["874"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ContactItem.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ListContacts.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonDefault.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Search.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\hook\\usePopupActions.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\generateBase64Image.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\ThreeDotsSetting.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\Bubble.jsx",["875","876"],"import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport {\n  Wrapper,\n  Avatar,\n  BubbleContainer,\n  Message,\n  MentionWrapper,\n  MentionInfo,\n  MentionLinkInfo,\n  MentionAvatar,\n  BubbleTimeline,\n  ImageContainer,\n  AttachmentContainer,\n} from './styles/Bubble.styles';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { convertFromRaw, EditorState } from 'draft-js';\nimport Editor from '@draft-js-plugins/editor';\nimport createLinkifyPlugin from '@draft-js-plugins/linkify';\nimport createMentionPlugin from '@draft-js-plugins/mention';\nimport Moment from 'react-moment';\nimport LazyLoad from 'react-lazyload';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nconst linkifyPlugin = createLinkifyPlugin({\n  target: '_blank',\n  rel: 'noopener noreferrer',\n});\nconst mentionPlugin = createMentionPlugin({\n  mentionComponent({ mention }) {\n    return (\n      <MentionWrapper to={`/${mention.slug}`}>\n        <MentionLinkInfo to={`/${mention.slug}`}>\n          <MentionAvatar src={mention.avatar} />\n          <MentionInfo>\n            <span>{mention.name}</span>\n            <span>@{mention.slug}</span>\n          </MentionInfo>\n        </MentionLinkInfo>\n        <span>@{mention.name}</span>\n      </MentionWrapper>\n    );\n  },\n});\nconst Bubble = ({ message, me, user, senderAvatar, index }) => {\n  const [editorState, setEditorState] = useState(() =>\n    message.messageType === 'TEXT'\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(message.text)))\n      : null\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [bubbleDimensions, setBubbleDimensions] = useState({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const bubbleRef = useRef(null);\n  useEffect(() => {\n    if (bubbleRef.current) {\n      setBubbleDimensions(bubbleRef.current.getBoundingClientRect());\n    }\n  }, [bubbleRef]);\n\n  if (!user) return null;\n  return (\n    <Wrapper index={index}>\n      <BubbleContainer me={me}>\n        <Avatar>\n          <LazyLoadImage src={senderAvatar} />\n        </Avatar>\n        <Message me={me} ref={bubbleRef} messageType={message.messageType}>\n          {message.messageType === 'TEXT' ? (\n            <Editor\n              editorState={editorState}\n              setEditorState={setEditorState}\n              plugins={[linkifyPlugin, mentionPlugin]}\n              onChange={setEditorState}\n              readOnly\n            />\n          ) : message.messageType === 'IMAGE' ? (\n            <ImageContainer>\n              <img\n                src={message.file.data}\n                alt={message.file.filename}\n                onClick={() => setIsOpen(true)}\n              />\n              {isOpen && (\n                <Lightbox\n                  mainSrc={message.file.data}\n                  onCloseRequest={() => setIsOpen(false)}\n                />\n              )}\n            </ImageContainer>\n          ) : message.messageType === 'ATTACHMENT' ? (\n            <AttachmentContainer>\n              <a\n                href={message.file.data}\n                download={message.file.filename}\n                title={message.file.filename}\n              >\n                {message.file.filename}\n              </a>\n            </AttachmentContainer>\n          ) : null}\n        </Message>\n      </BubbleContainer>\n      <BubbleTimeline width={bubbleDimensions.width} me={me}>\n        <div>\n          <span>\n            <Moment fromNow>{+message.createdAt}</Moment>\n          </span>\n          {user._id === message.sender._id ? (\n            <span style={{ textTransform: 'capitalize' }}>\n              {message.receiverStatus.toLowerCase()}\n            </span>\n          ) : null}\n        </div>\n      </BubbleTimeline>\n    </Wrapper>\n  );\n};\n\nexport default Bubble;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ContactItem.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardFooter.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardBody.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\Bubble.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\ThreeDotsSetting.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ChatBoardHeading.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoard.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ListConversations.jsx",["877","878"],"import React, { useEffect, useState } from 'react';\nimport { ListConversationsWrapper } from './styles/ListConversations.styles';\nimport {\n  userVar,\n  messagesStorageVar,\n  currentChatVar,\n  numberOfConversationsVar,\n} from '../../apollo/cache';\nimport ConversationItem from './ConversationItem';\nimport _ from 'lodash';\nimport { usePopupMessagesActions } from './hook/usePopupActions';\nimport {\n  FETCH_CHAT_CONVERSATIONS,\n  UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED,\n} from '../../apollo/chat/chat.types';\nimport { useQuery, useMutation, useReactiveVar } from '@apollo/client';\nimport { setInitialMessagesStorage } from '../../apollo/chat/chat.caches';\nimport constant from '../../constant/constant';\nconst ListConversations = () => {\n  //use Query\n  const currentChat = useReactiveVar(currentChatVar);\n  const messagesStorage = useReactiveVar(messagesStorageVar);\n  const numberOfConversations = useReactiveVar(numberOfConversationsVar);\n  const user = useReactiveVar(userVar);\n\n  const { refetch: fetchMoreConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    { fetchPolicy: 'cache-and-network', skip: true }\n  );\n  //use State\n  const [_messagesStorage, _setMessagesStorage] = useState([]);\n  const [loadMoreConversations, setLoadMoreConversations] = useState(false);\n  const [updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched] =\n    useMutation(\n      UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n    );\n  const { setShowPopup } = usePopupMessagesActions();\n  useEffect(() => {\n    const _convertStorageToArray = Object.values(messagesStorage);\n    const _sortedByLatestMessages = _.sortBy(_convertStorageToArray, [\n      function (o) {\n        return -o.latestMessage.createdAt;\n      },\n    ]);\n    _setMessagesStorage([..._sortedByLatestMessages]);\n  }, [messagesStorage]);\n\n  useEffect(() => {\n    let isScrolling;\n    function onScrollListConversations(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollTop, clientHeight, scrollHeight } = e.target;\n        console.log(scrollTop, clientHeight, scrollHeight);\n        if (scrollTop + clientHeight > 0.8 * scrollHeight) {\n          setLoadMoreConversations(true);\n        }\n      }, 66);\n    }\n    document.getElementById('list-conversations').addEventListener(\n      'scroll',\n      (e) => {\n        onScrollListConversations(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById('list-conversations').removeEventListener(\n        'scroll',\n        (e) => {\n          onScrollListConversations(e);\n        },\n        false\n      );\n    };\n  });\n  useEffect(() => {\n    let _isMounted = true;\n\n    if (\n      loadMoreConversations &&\n      numberOfConversations > _messagesStorage.length\n    ) {\n      const skip = _messagesStorage.length;\n      const limit = constant.REACT_APP_NUMBER_CONVERSATIONS_LIMITATION;\n      const except = Object.keys(messagesStorage);\n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchMoreConversations({ except, skip, limit }).then(({ data }) => {\n        if (_isMounted) {\n          const { conversations } = data.fetchChatConversations;\n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === 'PERSONAL') {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === 'SENT'\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n          setInitialMessagesStorage({ ...messagesStorage, ...storage });\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setLoadMoreConversations(false);\n        }\n      });\n    }\n  }, [loadMoreConversations, numberOfConversations]);\n\n  return (\n    <ListConversationsWrapper id=\"list-conversations\">\n      {_messagesStorage.length\n        ? _messagesStorage.map(\n            ({ profile, scope, latestMessage, hasSeenLatestMessage }) => (\n              <ConversationItem\n                key={`conversation-${profile._id}`}\n                conversation={profile}\n                scope={scope}\n                hasSeenLatestMessage={hasSeenLatestMessage}\n                latestMessage={latestMessage}\n                active={currentChat && currentChat._id === profile._id}\n              />\n            )\n          )\n        : null}\n    </ListConversationsWrapper>\n  );\n};\n\nexport default React.memo(ListConversations);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCard.jsx",["879"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\IntroductionBox.jsx",["880","881"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\Auth.utility.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalPosts.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditorHeader.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\PostEditorBody.jsx",["882","883","884","885","886"],"import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  useEffect,\n} from 'react';\nimport {\n  Wrapper,\n  DraftEditor,\n  Toolbar,\n  Label,\n  CardPreview,\n} from './styles/PostEditorBody.styles';\nimport { ReactTinyLink } from 'react-tiny-link';\nimport Editor from '@draft-js-plugins/editor';\nimport useDraftEditorPlugin from '../useDraftEditorPlugin';\nimport { IoIosImage } from 'react-icons/io';\nimport generateBase64Image from '../../../utils/generateBase64Image';\nimport ImagesCarousel from '../../UI/ImagesCarousel';\nimport { useQuery } from '@apollo/client';\nimport { SEARCH_FRIENDS } from '../../../apollo/user/user.types';\nimport useLanguage from '../../Global/useLanguage';\nconst PostEditorBody = ({\n  editorState,\n  setEditorState,\n  images,\n  setImages,\n  isEdited,\n  postEdited,\n}) => {\n  const [urlPreview, setUrlPreview] = useState(null);\n  const editorRef = useRef(null);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openMention, setOpenMention] = useState(true);\n  const { refetch: searchFriends, loading: searchFriendsLoading } = useQuery(\n    SEARCH_FRIENDS,\n    { fetchPolicy: 'network-only', skip: true }\n  );\n  const { i18n, lang } = useLanguage();\n  const { postPlaceholder } = i18n.store.data[lang].translation.post;\n\n  const { plugins, MentionSuggestions, EmojiSelect, EmojiSuggestions } =\n    useDraftEditorPlugin();\n\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n\n  useEffect(() => {\n    let elementId;\n    if (isEdited && postEdited) {\n      elementId = `edited-post-body-${postEdited._id}`;\n    } else {\n      elementId = 'post-editor-body';\n    }\n    let urlLength;\n\n    urlLength = document\n      .getElementById(elementId)\n      .querySelectorAll('[aria-label=link]').length;\n\n    if (urlLength) {\n      const url = document\n        .getElementById(elementId)\n        .querySelectorAll('[aria-label=link]')\n        [urlLength - 1].getAttribute('href');\n      setUrlPreview(url);\n    } else {\n      setUrlPreview(null);\n    }\n  }, [editorState]);\n\n  const onChangeImages = async (e) => {\n    const length = e.target.files.length;\n    const fileData = e.target.files;\n    const matches = ['image/png', 'image/gif', 'image/jpg', 'image/jpeg'];\n    let listImages = [];\n    for (let i = 0; i < length; i++) {\n      if (!matches.includes(fileData[i].type)) {\n        alert('invalid image');\n        return;\n      }\n      listImages.push(fileData[i]);\n    }\n\n    let base64Images = [];\n    for (let image of listImages) {\n      const base64ImageItem = await generateBase64Image(image);\n      base64Images = [...base64Images, { ...base64ImageItem }];\n    }\n    if (base64Images.length) {\n      setImages([...base64Images]);\n    }\n  };\n\n  return (\n    <>\n      <DraftEditor\n        onClick={() => editorRef.current?.focus()}\n        id={\n          isEdited ? `edited-post-body-${postEdited._id}` : 'post-editor-body'\n        }\n        style={{ alignItems: 'flex-start' }}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          ref={editorRef}\n          tabIndex={0}\n          placeholder={postPlaceholder}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </DraftEditor>\n      {urlPreview && (\n        <CardPreview>\n          <ReactTinyLink\n            cardSize=\"large\"\n            showGraphic={true}\n            maxLine={3}\n            minLine={1}\n            url={urlPreview}\n            proxyUrl=\"https://cors-anywhere.herokuapp.com\"\n          />\n        </CardPreview>\n      )}\n      {images.length ? <ImagesCarousel images={images} /> : null}\n      <Toolbar>\n        <EmojiSelect />\n        <Label htmlFor=\"post-images\" name=\"post-images\">\n          <IoIosImage />\n          <input\n            type=\"file\"\n            multiple={true}\n            name=\"post-images\"\n            id=\"post-images\"\n            onChange={onChangeImages}\n          />\n        </Label>\n      </Toolbar>\n    </>\n  );\n};\n\nexport default React.memo(PostEditorBody);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditor.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\PersonalHeadingContact.jsx",["887","888","889","890"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalHeading.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendsList.jsx",["891"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\FacebookAuth.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\GoogleRecapcha.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\GoogleAuth.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Auth\\AuthForm.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardUtility.jsx",["892","893"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\CardProfile.jsx",["894"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ChatBoardHeading.styles.jsx",["895"],"import styled, { css } from 'styled-components/macro';\n\nexport const Wrapper = styled.header`\n  height: 65px;\n  width: 100%;\n  background-color: #e8f5e9;\n  display: flex;\n  padding: 1rem 2rem;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Avatar = styled.div`\n  width: 2.5rem;\n  height: 2.5rem;\n  & > img {\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n`;\n\nexport const UserInfo = styled.div`\n  margin-left: 0.4rem;\n  h4 {\n    font-size: 1rem;\n  }\n  flex: 1;\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const LinkItem = styled.span`\n  display: inline-block;\n  cursor: pointer;\n  font-size: 1.4rem;\n  margin: 0 0.5rem;\n  ${({ phone }) =>\n    phone &&\n    `\n    color : #039be5 ;\n    &:hover{\n      color : #0277bd ; \n    }\n  `}\n  ${({ video }) =>\n    video &&\n    `\n    color : #e53935; \n    &:hover{\n      color : #c62828;\n    }\n  `}\n  ${({ photo }) =>\n    photo &&\n    `\n    color : #00897b;\n    &:hover{\n      color : #00695c;\n    }\n  `}\n\n  ${({ file }) =>\n    file &&\n    `\n    color : #3949ab;\n    &:hover{\n      color: #283593;\n    }\n  `}\n`;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\ConversationItem.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\IntroductionBox.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\EditPostDialog.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardFooter.jsx",["896"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Comments.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardBody.jsx",["897","898","899","900"],"import React, { useState, useMemo, useEffect } from 'react';\nimport { ReactTinyLink } from 'react-tiny-link';\nimport ImagesCarousel from '../UI/ImagesCarousel';\nimport LazyLoad from 'react-lazyload';\nimport {\n  Wrapper,\n  DraftEditor,\n  HashtagLink,\n  CardPreview,\n} from './styles/PostCardBody.styles';\nconst PostCardBody = ({ post }) => {\n  const [urlPreview, setUrlPreview] = useState(null);\n  const images = post.files.length\n    ? post.files.map((file) => ({\n        src: file.data,\n        name: file.filename,\n      }))\n    : [];\n  useEffect(() => {\n    const DOMTarget = document.querySelector(`[data-target=post-${post._id}]`);\n    //find Preview URL\n    const urlLength = DOMTarget.querySelectorAll('[aria-label=link]').length;\n    if (urlLength) {\n      const url =\n        DOMTarget.querySelectorAll('[aria-label=link]')[\n          urlLength - 1\n        ].getAttribute('href');\n      setUrlPreview(url);\n    } else {\n      setUrlPreview(null);\n    }\n  }, []);\n\n  return (\n    <>\n      <DraftEditor\n        data-target={`post-${post._id}`}\n        dangerouslySetInnerHTML={{ __html: post.text }}\n      ></DraftEditor>\n      {urlPreview && (\n        <CardPreview>\n          <ReactTinyLink\n            cardSize=\"large\"\n            showGraphic={true}\n            maxLine={3}\n            minLine={1}\n            url={urlPreview}\n            proxyUrl=\"https://cors-anywhere.herokuapp.com\"\n          />\n        </CardPreview>\n      )}\n      {images.length ? (\n        <LazyLoad>\n          <ImagesCarousel images={images} />\n        </LazyLoad>\n      ) : null}\n    </>\n  );\n};\n\nexport default PostCardBody;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostCardHeader.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditorHeader.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\ImagesCarousel.jsx",["901"],"import React, { useState } from 'react';\nimport Slider from 'react-slick';\nimport LightBox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport {\n  ImageContainer,\n  NextArrow,\n  PrevArrow,\n} from './styles/ImagesCarousel.styles';\n\nfunction CustomNextArrow(props) {\n  return <NextArrow {...props} />;\n}\n\nfunction CustomPrevArrow(props) {\n  return <PrevArrow {...props} />;\n}\n\nconst ImagesCarousel = ({ images }) => {\n  const [openLightBox, setOpenLightBox] = useState(-1);\n  let dragging = false;\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: images.length > 2 ? 2 : images.length,\n    slidesToScroll: images.length > 2 ? 2 : images.length,\n    swipeToSlide: true,\n    lazyLoad: true,\n    beforeChange: () => (dragging = true),\n    afterChange: () => (dragging = false),\n    nextArrow: <CustomNextArrow />,\n    prevArrow: <CustomPrevArrow />,\n  };\n  if (!images.length) return null;\n  return (\n    <>\n      {openLightBox !== -1 && (\n        <LightBox\n          mainSrc={images[openLightBox].src}\n          onCloseRequest={() => setOpenLightBox(-1)}\n        />\n      )}\n      <Slider {...settings}>\n        {images.map((image, idx) => (\n          <ImageContainer key={image.name}>\n            <img\n              src={image.src}\n              alt={image.src}\n              onClick={() => setOpenLightBox(idx)}\n            />\n          </ImageContainer>\n        ))}\n      </Slider>\n    </>\n  );\n};\n\nexport default ImagesCarousel;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Personal\\styles\\PersonalHeadingContact.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\useDraftEditorPlugin.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\PostEditor\\styles\\PostEditorBody.styles.jsx",["902"],"import styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\nexport const Wrapper = styled.div``;\n\nexport const DraftEditor = styled.div`\n  flex: 1;\n  cursor: text !important;\n  .DraftEditor-root {\n    width: 100% !important;\n    max-height: 8rem;\n    min-height: 4rem;\n    padding: 0.5rem 1rem;\n    overflow: auto;\n    -ms-overflow-style: none; /* IE and Edge */\n    scrollbar-width: none;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n`;\n\nexport const Toolbar = styled.div`\n  display: flex;\n  padding: 0.5rem 0.75rem;\n`;\n\nexport const Label = styled.label`\n  font-size: 1.4rem;\n  display: flex;\n  align-items: center;\n  color: ${({ name }) => (name === 'post-images' ? 'var(--cyan-1)' : 'orange')};\n  &:hover {\n    color: ${({ name }) =>\n      name === 'post-images' ? 'var(--cyan-2)' : 'orange'};\n  }\n  input {\n    display: none;\n  }\n  margin: 0 0.5rem;\n  cursor: pointer;\n`;\n\nexport const CardPreview = styled.div`\n  margin: 1rem auto;\n  width: 100%;\n  & * {\n    width: 100%;\n    max-width: unset;\n  }\n`;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\FriendItem.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ListConversations.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCard.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Chat\\styles\\ConversationItem.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\EditPostDialog.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentEditor.jsx",["903","904","905","906"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentItem.jsx",["907","908"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\Comments.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardBody.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardFooter.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\Dropdown.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonDefaultCircle.jsx",["909"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\UI\\styles\\ImagesCarousel.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\PostCardHeader.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\useDraftEditorPlugin.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.mutations.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\apollo\\contact\\contact.queries.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\FriendItem.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomButton.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Header.jsx",["910"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentEditor.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\CommentCard.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\Responses.jsx",["911","912","913","914","915"],"import React, { useCallback, useEffect } from 'react';\nimport CommentCard from './CommentCard';\nimport { useMutation, useQuery } from '@apollo/client';\nimport {\n  LIKE_RESPONSE,\n  REMOVE_LIKE_RESPONSE,\n} from '../../apollo/post/post.types';\nimport { setAlertDialog } from '../../apollo/controls/controls.caches';\nimport useLanguage from '../Global/useLanguage';\nconst Responses = ({ responses, user, onClickResponse }) => {\n  const [likeResponse] = useMutation(LIKE_RESPONSE);\n  const [removeLikeResponse] = useMutation(REMOVE_LIKE_RESPONSE);\n  const { i18n, lang } = useLanguage();\n  const { dialog: dialogAlert } = i18n.store.data[lang].translation;\n\n  const onLikeResponse = useCallback((response) => {\n    likeResponse({ variables: { responseId: response._id } });\n  }, []);\n  const onRemoveLikeResponse = useCallback((response) => {\n    removeLikeResponse({ variables: { responseId: response._id } });\n  }, []);\n\n  const onClickRemoveResponse = useCallback((response) => {\n    setAlertDialog({\n      agree: false,\n      title: dialogAlert.removeComment.title,\n      content: dialogAlert.removeComment.content,\n      data: { response, role: 'response' },\n    });\n  });\n  return responses.map((response) => (\n    <CommentCard\n      key={`response-${response._id}`}\n      comment={response}\n      user={user}\n      onLike={onLikeResponse}\n      onRemoveLike={onRemoveLikeResponse}\n      onClickResponse={onClickResponse}\n      onClickRemoveComment={onClickRemoveResponse}\n    />\n  ));\n};\n\nexport default Responses;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\ResponseEditor.jsx",["916","917","918","919","920"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentItem.styles.jsx",["921"],"import styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\n\nexport const ResponseInput = styled.div`\n  width: 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display: flex;\n`;\nexport const ResponsesComponent = styled.div`\n  width: 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display: block;\n`;\n\nexport const Response = styled.div`\n  flex: 1;\n  margin-left: 0.5rem;\n`;\n\nexport const LoadMoreResponse = styled.span`\n  color: inherit;\n  font-size: 0.88rem;\n  padding: 0.5rem 0.4rem;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n  display: flex;\n  align-items: center;\n  & span {\n    margin-left: 0.1rem;\n  }\n`;\nexport const UserAvatar = styled.div`\n  width: 2rem;\n  height: 2rem;\n  img {\n    width: 100%;\n    border-radius: 50%;\n  }\n`;\n\nexport const CommentResponse = styled.div`\n  width: 90%;\n  margin-left: auto;\n  margin-right: 1rem;\n  padding: 0 1rem;\n`;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Custom\\CustomButton.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Brand.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\MessengerAndNotification.jsx",["922","923","924"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Navigation.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Search.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonMenu.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\SettingAccount.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Post\\styles\\CommentCard.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\FlashPopUpNotification.jsx",["925","926"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\Tooltips.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useNotificationsSubscription.jsx",["927","928"],"import { useEffect } from 'react';\nimport { useQuery, useReactiveVar } from '@apollo/client';\nimport {\n  countNumberOfNotificationUnseenVar,\n  userVar,\n  currentPersonalUserVar,\n  notificationsVar,\n  receivedRequestsToAddFriendVar,\n  latestNotificationVar,\n} from '../apollo/cache';\nimport {\n  FETCH_NOTIFICATIONS,\n  FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n} from '../apollo/notification/notification.types';\nimport { setCurrentPersonalUser } from '../apollo/user/currentPersonalUser.caches';\nimport {\n  addUserToReceivedRequestToAddFriend,\n  removeUserFromReceivedRequestToAddFriend,\n  moveSentRequestToFriend,\n} from '../apollo/contact/contact.caches';\nimport {\n  ACCEPT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  LIKE_COMMENT_SUBSCRIPTION,\n  LIKE_POST_SUBSCRIPTION_NOTIFICATION,\n  LIKE_RESPONSE_SUBSCRIPTION_NOTIFICATION,\n  NOTIFY_MENTIONED_USERS_IN_COMMENT_SUBSCRIPTION,\n  NOTIFY_MENTIONED_USERS_IN_POST,\n  NOTIFY_MENTIONED_USERS_IN_RESPONSE,\n  NOTIFFY_USER_COMMENT_POST_SUBSCRIPTION,\n  NOTIFY_USER_RESPONSE_COMMENT_SUBSCRIPTION,\n  REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n  REMOVE_LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n  REMOVE_MENTIONED_USERS_NOTIFICATION_IN_POST,\n  SENT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n} from '../apollo/notification/notification.types';\nimport { addNotificationItemToNotificationsList } from '../apollo/notification/notification.caches';\nimport { setCurrentUser } from '../apollo/user/user.caches';\nimport {\n  removeNotificationItemFromNotificationsList,\n  setCountNumberNotificationsUnseen,\n  setNewNotifications,\n  setLatestNotification,\n  updateNotificationItemInNotificationsList,\n} from '../apollo/notification/notification.caches';\nconst useNotificationsPostSubscription = () => {\n  const { subscribeToMore: subscribeToMoreNotifications } = useQuery(\n    FETCH_NOTIFICATIONS,\n    {\n      skip: true,\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n  const { refetch: fetchCountNumberNotificationsUnseen } = useQuery(\n    FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n    {\n      skip: true,\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n  const countNumberNotificationsUnseen = useReactiveVar(\n    countNumberOfNotificationUnseenVar\n  );\n  const user = useReactiveVar(userVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const receivedRequestsToAddFriend = useReactiveVar(\n    receivedRequestsToAddFriendVar\n  );\n  const latestNotification = useReactiveVar(latestNotificationVar);\n  useEffect(() => {\n    let _isMounted = true;\n    if (countNumberNotificationsUnseen === null) {\n      fetchCountNumberNotificationsUnseen().then(\n        ({ data: { countNotificationsUnseen } }) => {\n          if (_isMounted) {\n            setCountNumberNotificationsUnseen(countNotificationsUnseen);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [\n    countNumberNotificationsUnseen,\n    fetchCountNumberNotificationsUnseen,\n    setCountNumberNotificationsUnseen,\n  ]);\n\n  //sender and receiver only use in field 'user'\n  const updatedAddNotification = (\n    newNotification,\n    sender = null,\n    receiver = null\n  ) => {\n    setLatestNotification(newNotification);\n    setNewNotifications(newNotification._id);\n\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n    }\n    if (\n      notifications.find(\n        (notification) => notification._id === newNotification._id\n      )\n    ) {\n      updateNotificationItemInNotificationsList(newNotification);\n    } else {\n      addNotificationItemToNotificationsList(newNotification);\n    }\n  };\n\n  const updatedRemoveNotification = (removedNotification, sender, receiver) => {\n    if (latestNotification?._id === removedNotification._id) {\n      setLatestNotification(null);\n    }\n    removeNotificationItemFromNotificationsList(removedNotification);\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n      return;\n    }\n    setCurrentUser({\n      ...user,\n      notifications: [\n        ...notifications.filter((_id) => _id !== removedNotification._id),\n      ],\n    });\n  };\n\n  useEffect(() => {\n    let unsubscribeRequestAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeAcceptRequestToAddFriend,\n      unsubscribeMentionedUsersInPost,\n      unsubscribeAcceptRequestAddFriend,\n      unsubscribeUserLikePost,\n      unsubscribeUserRemoveLikePost,\n      unsubscribeOwnerPostReceivedUserComment,\n      unsubscribeMentionedUsersInComment,\n      unsubscribeLikeComment,\n      unsubscribeRemoveLikeComment,\n      unsubscribeUserResponseComment,\n      unsubscribeMentionedUsersInResponse,\n      unsubscribeUserLikeResponse,\n      unsubscribeUserRemoveLikeResponse,\n      unsubscribeRemoveMentionedUsersNotificationInPost;\n    if (subscribeToMoreNotifications && user) {\n      //#region Contact\n      unsubscribeRequestAddFriend = subscribeToMoreNotifications({\n        document: SENT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { sentRequestToAddFriendSubscription: notification } =\n              subscriptionData.data;\n            const { receiver, sender } = notification?.fieldIdentity;\n            console.log(subscriptionData);\n            if (sender && receiver) {\n              addUserToReceivedRequestToAddFriend(sender);\n              updatedAddNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeCancelRequestToAddFriend = subscribeToMoreNotifications({\n        document: CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { cancelRequestToAddFriendSubscription: notification } =\n              subscriptionData.data;\n            const { sender, receiver } = notification.fieldIdentity;\n            if (sender && receiver) {\n              removeUserFromReceivedRequestToAddFriend(sender);\n              updatedRemoveNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeAcceptRequestToAddFriend = subscribeToMoreNotifications({\n        document: ACCEPT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { acceptRequestToAddFriendSubscription: notification } =\n              subscriptionData.data;\n            const { sender, receiver } = notification.fieldIdentity;\n            moveSentRequestToFriend(sender);\n            updatedAddNotification(notification, sender, receiver);\n          }\n        },\n      });\n\n      //#endregion\n\n      //#region Post\n      unsubscribeMentionedUsersInPost = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_POST,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionedUsersInPost } = subscriptionData.data;\n            updatedAddNotification(notifyMentionedUsersInPost);\n          }\n        },\n      });\n      unsubscribeUserLikePost = subscribeToMoreNotifications({\n        document: LIKE_POST_SUBSCRIPTION_NOTIFICATION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likePostSubscriptionNotification } = subscriptionData.data;\n            if (\n              user._id.toString() ===\n              likePostSubscriptionNotification?.receiver.toString()\n            ) {\n              updatedAddNotification(likePostSubscriptionNotification);\n            }\n          }\n        },\n      });\n      unsubscribeUserRemoveLikePost = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_POST_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikePostSubscription } = subscriptionData.data;\n            if (removeLikePostSubscription?.receiver === user._id) {\n              updatedRemoveNotification(removeLikePostSubscription);\n            }\n          }\n        },\n      });\n\n      unsubscribeOwnerPostReceivedUserComment = subscribeToMoreNotifications({\n        document: NOTIFFY_USER_COMMENT_POST_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyUserCommentPostSubscription } = subscriptionData.data;\n            console.log(notifyUserCommentPostSubscription);\n            updatedAddNotification(notifyUserCommentPostSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInComment = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionUsersInComment } = subscriptionData.data;\n            updatedAddNotification(notifyMentionUsersInComment);\n          }\n        },\n      });\n      unsubscribeLikeComment = subscribeToMoreNotifications({\n        document: LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          console.log(subscriptionData);\n          if (subscriptionData) {\n            const { likeCommentSubscriptionNotification } =\n              subscriptionData.data;\n            //create notification to receiver\n            if (\n              likeCommentSubscriptionNotification &&\n              likeCommentSubscriptionNotification.receiver === user._id\n            ) {\n              updatedAddNotification(likeCommentSubscriptionNotification);\n            }\n          }\n        },\n      });\n      unsubscribeRemoveLikeComment = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (\n            subscriptionData.data?.removeLikeCommentSubscriptionNotification\n          ) {\n            const { removeLikeCommentSubscriptionNotification } =\n              subscriptionData.data;\n            if (\n              removeLikeCommentSubscriptionNotification &&\n              removeLikeCommentSubscriptionNotification.receiver === user._id\n            ) {\n              updatedRemoveNotification(\n                removeLikeCommentSubscriptionNotification\n              );\n            }\n          }\n        },\n      });\n      unsubscribeUserResponseComment = subscribeToMoreNotifications({\n        document: NOTIFY_USER_RESPONSE_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyUserResponseCommentSubscription } =\n              subscriptionData.data;\n            updatedAddNotification(notifyUserResponseCommentSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInResponse = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_RESPONSE,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionedUsersInResponse } = subscriptionData.data;\n            updatedAddNotification(notifyMentionedUsersInResponse);\n          }\n        },\n      });\n      unsubscribeUserLikeResponse = subscribeToMoreNotifications({\n        document: LIKE_RESPONSE_SUBSCRIPTION_NOTIFICATION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likeResponseSubscriptionNotification } =\n              subscriptionData.data;\n            console.log(likeResponseSubscriptionNotification);\n            if (\n              likeResponseSubscriptionNotification.receiver.toString() ===\n              user._id\n            ) {\n              updatedAddNotification(likeResponseSubscriptionNotification);\n            }\n          }\n        },\n      });\n      unsubscribeUserRemoveLikeResponse = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikeResponseSubscription } = subscriptionData.data;\n            if (\n              removeLikeResponseSubscription.receiver.toString() === user._id\n            ) {\n              updatedRemoveNotification(removeLikeResponseSubscription);\n            }\n          }\n        },\n      });\n\n      unsubscribeRemoveMentionedUsersNotificationInPost =\n        subscribeToMoreNotifications({\n          document: REMOVE_MENTIONED_USERS_NOTIFICATION_IN_POST,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            if (subscriptionData) {\n              const { removeMentionedNotificationSubscription } =\n                subscriptionData.data;\n              updatedRemoveNotification(\n                removeMentionedNotificationSubscription\n              );\n            }\n          },\n        });\n      //#endregion\n    }\n\n    return () => {\n      if (unsubscribeRequestAddFriend) {\n        unsubscribeRequestAddFriend();\n      }\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeAcceptRequestToAddFriend) {\n        unsubscribeAcceptRequestToAddFriend();\n      }\n      if (unsubscribeMentionedUsersInPost) {\n        unsubscribeMentionedUsersInPost();\n      }\n      if (unsubscribeUserLikePost) {\n        unsubscribeUserLikePost();\n      }\n      if (unsubscribeUserRemoveLikePost) {\n        unsubscribeUserRemoveLikePost();\n      }\n      if (unsubscribeAcceptRequestAddFriend) {\n        unsubscribeAcceptRequestAddFriend();\n      }\n      if (unsubscribeOwnerPostReceivedUserComment) {\n        unsubscribeOwnerPostReceivedUserComment();\n      }\n      if (unsubscribeMentionedUsersInComment) {\n        unsubscribeMentionedUsersInComment();\n      }\n      if (unsubscribeLikeComment) {\n        unsubscribeLikeComment();\n      }\n      if (unsubscribeRemoveLikeComment) {\n        unsubscribeRemoveLikeComment();\n      }\n      if (unsubscribeUserResponseComment) {\n        unsubscribeUserResponseComment();\n      }\n      if (unsubscribeMentionedUsersInResponse) {\n        unsubscribeMentionedUsersInResponse();\n      }\n      if (unsubscribeUserLikeResponse) {\n        unsubscribeUserLikeResponse();\n      }\n      if (unsubscribeUserRemoveLikeResponse) {\n        unsubscribeUserRemoveLikeResponse();\n      }\n      if (unsubscribeRemoveMentionedUsersNotificationInPost) {\n        unsubscribeRemoveMentionedUsersNotificationInPost();\n      }\n    };\n  }, [\n    countNumberNotificationsUnseen,\n    subscribeToMoreNotifications,\n    receivedRequestsToAddFriend,\n    notifications,\n    user,\n  ]);\n};\n\nexport default useNotificationsPostSubscription;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\NotificationsBoard.jsx",["929"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Controls\\ButtonColorMode.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Header.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\NotificationsBoard.styles.jsx",["930"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\styles\\FlashPopUpNotification.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Notification\\Notifications.jsx",["931"],"import React from 'react';\nimport NotificationItem from './NotificationItem';\nimport styled from 'styled-components/macro';\nimport LazyLoad from 'react-lazyload';\nconst Notifications = ({ notifications }) => {\n  return (\n    <LazyLoad>\n      {notifications.length\n        ? notifications.map((notification) => (\n            <NotificationItem\n              key={`notification-${notification._id}`}\n              notifications={notifications}\n              notification={notification}\n            />\n          ))\n        : null}\n    </LazyLoad>\n  );\n};\n\nexport default React.memo(Notifications);\n","D:\\github\\mern-stack-social-media\\frontend\\src\\constant\\constant.js",["932"],"export default {\n  REACT_APP_POSTS_PER_PAGE: 7,\n  REACT_APP_COMMENTS_PER_POST: 10,\n  REACT_APP_RESPONSES_PER_COMMENT: 10,\n  REACT_APP_NOTIFICATIONS_PER_PAGE: 5,\n  REACT_APP_FRIENDS_PER_LOAD: 10,\n  REACT_APP_USERS_CONTACT_PER_LOAD: 2,\n  REACT_APP_CONTACT_USER_PER_PAGE: 10,\n  REACT_APP_NUMBER_CONVERSATIONS_LIMITATION: 10,\n  REACT_APP_NUMBER_MESSAGES_PER_LOAD: 15,\n};\n","D:\\github\\mern-stack-social-media\\frontend\\src\\hooks\\useCurrentPersonalUser.supscription.jsx",["933","934","935"],"import { useEffect } from 'react';\nimport { useQuery, useReactiveVar, useSubscription } from '@apollo/client';\nimport { FETCH_POSTS } from '../apollo/post/post.queries';\nimport {\n  CREATE_COMMENT_SUBSCIPTION,\n  LIKE_COMMENT_SUBSCRIPTION,\n  CREATE_RESPONSE_SUBSCRIPTION,\n  LIKE_RESPONSE_SUBSCRIPTION,\n  EDIT_POST_SUBSCRIPTION,\n  LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n  REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n} from '../apollo/post/post.types';\nimport { userVar } from '../apollo/cache';\nimport {\n  addCommentToPost,\n  addNewResponseToCommentAtPersonalUser,\n  updatePost,\n  updateLikePostSubscription,\n  removeLikePost,\n  addLikeResponseAtCurrentPersonalUserPage,\n  removeLikeResponseAtCurrentPersonalUser,\n  addLikeComment,\n  removeLikeComment,\n} from '../apollo/post/post.caches';\n\nconst useCurrentPersonalSubscription = () => {\n  const { subscribeToMore: subscribePosts } = useQuery(FETCH_POSTS, {\n    skip: true,\n    fetchPolicy: 'network-only',\n  });\n  const user = useReactiveVar(userVar);\n  useSubscription(LIKE_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data) {\n        const { likePostSubscription } = subscriptionData.data;\n        updateLikePostSubscription(likePostSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data) {\n        const { removeLikePostSubscription } = subscriptionData.data;\n        removeLikePost(removeLikePostSubscription);\n      }\n    },\n  });\n  useSubscription(CREATE_COMMENT_SUBSCIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.createCommentSubscription) {\n        const { createCommentSubscription } = subscriptionData.data;\n        addCommentToPost(createCommentSubscription);\n      }\n    },\n  });\n  useSubscription(LIKE_COMMENT_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.likeCommentSubscription) {\n        const { likeCommentSubscription } = subscriptionData.data;\n        addLikeComment(likeCommentSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_COMMENT_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.removeLikeCommentSubscription) {\n        const { removeLikeCommentSubscription } = subscriptionData.data;\n        removeLikeComment(removeLikeCommentSubscription);\n      }\n    },\n  });\n  useSubscription(CREATE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data?.createResponseSubscription) {\n        const { createResponseSubscription } = subscriptionData.data;\n        addNewResponseToCommentAtPersonalUser(createResponseSubscription);\n      }\n    },\n  });\n  useSubscription(LIKE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data.likeResponseSubscription) {\n        const { likeResponseSubscription } = subscriptionData.data;\n        addLikeResponseAtCurrentPersonalUserPage(likeResponseSubscription);\n      }\n    },\n  });\n  useSubscription(REMOVE_LIKE_RESPONSE_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      if (subscriptionData.data.removeLikeResponseSubscription) {\n        const { removeLikeResponseSubscription } = subscriptionData.data;\n        removeLikeResponseAtCurrentPersonalUser(removeLikeResponseSubscription);\n      }\n    },\n  });\n\n  useSubscription(EDIT_POST_SUBSCRIPTION, {\n    onSubscriptionData: ({ client, subscriptionData }) => {\n      console.log(subscriptionData);\n      if (subscriptionData.data?.editPostSubscription) {\n        const { editPostSubscription } = subscriptionData.data;\n        updatePost(editPostSubscription);\n      }\n    },\n  });\n};\n\nexport default useCurrentPersonalSubscription;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\FriendsList.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Sidebar\\styles\\Sidebar.styles.jsx",["936","937"],"import styled, { css } from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\n\nexport const FriendsBoardWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  height: 100%;\n  width: 300px;\n  overflow: auto;\n  transition: var(--mainTransition);\n  z-index: ${({ show }) => (show ? 9999 : -1)};\n`;\n","D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CartProfile.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\utils\\storage.js",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\theme\\theme.js",["938","939"],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CardRequestAuth.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Card\\styles\\CardUtility.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Navigation.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\SettingAccount.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Menu\\styles\\MenuList.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\containers\\styles\\Layout.styles.jsx",[],"D:\\github\\mern-stack-social-media\\frontend\\src\\components\\Header\\styles\\Search.styles.jsx",[],{"ruleId":"940","replacedBy":"941"},{"ruleId":"942","replacedBy":"943"},{"ruleId":"944","severity":1,"message":"945","line":19,"column":6,"nodeType":"946","endLine":19,"endColumn":37,"suggestions":"947"},{"ruleId":"948","severity":1,"message":"949","line":31,"column":49,"nodeType":"950","messageId":"951","endLine":31,"endColumn":64},{"ruleId":"944","severity":1,"message":"952","line":49,"column":6,"nodeType":"946","endLine":49,"endColumn":28,"suggestions":"953"},{"ruleId":"944","severity":1,"message":"952","line":81,"column":6,"nodeType":"946","endLine":81,"endColumn":44,"suggestions":"954"},{"ruleId":"955","severity":1,"message":"956","line":13,"column":12,"nodeType":"957","endLine":13,"endColumn":70},{"ruleId":"944","severity":1,"message":"958","line":28,"column":6,"nodeType":"946","endLine":28,"endColumn":12,"suggestions":"959"},{"ruleId":"948","severity":1,"message":"960","line":28,"column":10,"nodeType":"950","messageId":"951","endLine":28,"endColumn":21},{"ruleId":"948","severity":1,"message":"961","line":28,"column":23,"nodeType":"950","messageId":"951","endLine":28,"endColumn":37},{"ruleId":"944","severity":1,"message":"962","line":67,"column":6,"nodeType":"946","endLine":67,"endColumn":33,"suggestions":"963"},{"ruleId":"944","severity":1,"message":"964","line":101,"column":6,"nodeType":"946","endLine":101,"endColumn":59,"suggestions":"965"},{"ruleId":"944","severity":1,"message":"966","line":53,"column":6,"nodeType":"946","endLine":57,"endColumn":4,"suggestions":"967"},{"ruleId":"944","severity":1,"message":"968","line":56,"column":5,"nodeType":"969","endLine":56,"endColumn":49},{"ruleId":"944","severity":1,"message":"970","line":87,"column":6,"nodeType":"946","endLine":87,"endColumn":38,"suggestions":"971"},{"ruleId":"944","severity":1,"message":"972","line":90,"column":6,"nodeType":"946","endLine":90,"endColumn":56,"suggestions":"973"},{"ruleId":"948","severity":1,"message":"974","line":6,"column":8,"nodeType":"950","messageId":"951","endLine":6,"endColumn":9},{"ruleId":"948","severity":1,"message":"975","line":1,"column":10,"nodeType":"950","messageId":"951","endLine":1,"endColumn":29},{"ruleId":"948","severity":1,"message":"976","line":2,"column":22,"nodeType":"950","messageId":"951","endLine":2,"endColumn":29},{"ruleId":"948","severity":1,"message":"977","line":4,"column":3,"nodeType":"950","messageId":"951","endLine":4,"endColumn":13},{"ruleId":"948","severity":1,"message":"978","line":6,"column":3,"nodeType":"950","messageId":"951","endLine":6,"endColumn":13},{"ruleId":"948","severity":1,"message":"979","line":1,"column":10,"nodeType":"950","messageId":"951","endLine":1,"endColumn":19},{"ruleId":"948","severity":1,"message":"980","line":29,"column":28,"nodeType":"950","messageId":"951","endLine":29,"endColumn":42},{"ruleId":"948","severity":1,"message":"981","line":33,"column":9,"nodeType":"950","messageId":"951","endLine":33,"endColumn":13},{"ruleId":"948","severity":1,"message":"982","line":45,"column":19,"nodeType":"950","messageId":"951","endLine":45,"endColumn":25},{"ruleId":"944","severity":1,"message":"983","line":105,"column":6,"nodeType":"946","endLine":105,"endColumn":47,"suggestions":"984"},{"ruleId":"948","severity":1,"message":"985","line":17,"column":8,"nodeType":"950","messageId":"951","endLine":17,"endColumn":20},{"ruleId":"948","severity":1,"message":"986","line":20,"column":8,"nodeType":"950","messageId":"951","endLine":20,"endColumn":21},{"ruleId":"987","severity":1,"message":"988","line":53,"column":11,"nodeType":"989","messageId":"990","endLine":53,"endColumn":439},{"ruleId":"948","severity":1,"message":"991","line":19,"column":8,"nodeType":"950","messageId":"951","endLine":19,"endColumn":20},{"ruleId":"948","severity":1,"message":"992","line":127,"column":51,"nodeType":"950","messageId":"951","endLine":127,"endColumn":65},{"ruleId":"948","severity":1,"message":"993","line":1,"column":17,"nodeType":"950","messageId":"951","endLine":1,"endColumn":25},{"ruleId":"948","severity":1,"message":"994","line":3,"column":8,"nodeType":"950","messageId":"951","endLine":3,"endColumn":31},{"ruleId":"948","severity":1,"message":"995","line":4,"column":24,"nodeType":"950","messageId":"951","endLine":4,"endColumn":46},{"ruleId":"944","severity":1,"message":"996","line":29,"column":6,"nodeType":"946","endLine":29,"endColumn":12,"suggestions":"997"},{"ruleId":"998","severity":1,"message":"999","line":105,"column":62,"nodeType":"1000","messageId":"1001","endLine":105,"endColumn":64},{"ruleId":"944","severity":1,"message":"1002","line":75,"column":6,"nodeType":"946","endLine":75,"endColumn":40,"suggestions":"1003"},{"ruleId":"948","severity":1,"message":"979","line":1,"column":17,"nodeType":"950","messageId":"951","endLine":1,"endColumn":26},{"ruleId":"948","severity":1,"message":"1004","line":23,"column":10,"nodeType":"950","messageId":"951","endLine":23,"endColumn":16},{"ruleId":"948","severity":1,"message":"1005","line":23,"column":18,"nodeType":"950","messageId":"951","endLine":23,"endColumn":27},{"ruleId":"948","severity":1,"message":"1006","line":24,"column":10,"nodeType":"950","messageId":"951","endLine":24,"endColumn":22},{"ruleId":"948","severity":1,"message":"1007","line":24,"column":24,"nodeType":"950","messageId":"951","endLine":24,"endColumn":39},{"ruleId":"948","severity":1,"message":"979","line":1,"column":17,"nodeType":"950","messageId":"951","endLine":1,"endColumn":26},{"ruleId":"948","severity":1,"message":"974","line":9,"column":8,"nodeType":"950","messageId":"951","endLine":9,"endColumn":9},{"ruleId":"948","severity":1,"message":"974","line":11,"column":8,"nodeType":"950","messageId":"951","endLine":11,"endColumn":9},{"ruleId":"948","severity":1,"message":"1008","line":26,"column":10,"nodeType":"950","messageId":"951","endLine":26,"endColumn":21},{"ruleId":"948","severity":1,"message":"1009","line":26,"column":23,"nodeType":"950","messageId":"951","endLine":26,"endColumn":37},{"ruleId":"948","severity":1,"message":"1010","line":27,"column":10,"nodeType":"950","messageId":"951","endLine":27,"endColumn":20},{"ruleId":"948","severity":1,"message":"1011","line":27,"column":22,"nodeType":"950","messageId":"951","endLine":27,"endColumn":35},{"ruleId":"948","severity":1,"message":"1012","line":29,"column":19,"nodeType":"950","messageId":"951","endLine":29,"endColumn":29},{"ruleId":"944","severity":1,"message":"1013","line":65,"column":6,"nodeType":"946","endLine":65,"endColumn":24,"suggestions":"1014"},{"ruleId":"948","severity":1,"message":"981","line":7,"column":9,"nodeType":"950","messageId":"951","endLine":7,"endColumn":13},{"ruleId":"948","severity":1,"message":"1015","line":1,"column":17,"nodeType":"950","messageId":"951","endLine":1,"endColumn":26},{"ruleId":"944","severity":1,"message":"1016","line":33,"column":6,"nodeType":"946","endLine":33,"endColumn":23,"suggestions":"1017"},{"ruleId":"948","severity":1,"message":"1018","line":29,"column":3,"nodeType":"950","messageId":"951","endLine":29,"endColumn":33},{"ruleId":"948","severity":1,"message":"1019","line":1,"column":8,"nodeType":"950","messageId":"951","endLine":1,"endColumn":13},{"ruleId":"948","severity":1,"message":"1020","line":3,"column":3,"nodeType":"950","messageId":"951","endLine":3,"endColumn":17},{"ruleId":"948","severity":1,"message":"1021","line":5,"column":3,"nodeType":"950","messageId":"951","endLine":5,"endColumn":13},{"ruleId":"948","severity":1,"message":"1022","line":6,"column":3,"nodeType":"950","messageId":"951","endLine":6,"endColumn":16},{"ruleId":"948","severity":1,"message":"1023","line":9,"column":17,"nodeType":"950","messageId":"951","endLine":9,"endColumn":23},{"ruleId":"948","severity":1,"message":"1024","line":9,"column":30,"nodeType":"950","messageId":"951","endLine":9,"endColumn":34},{"ruleId":"1025","severity":1,"message":"1026","line":228,"column":1,"nodeType":"1027","endLine":241,"endColumn":3},{"ruleId":"944","severity":1,"message":"1028","line":38,"column":6,"nodeType":"946","endLine":38,"endColumn":8,"suggestions":"1029"},{"ruleId":"944","severity":1,"message":"1030","line":55,"column":6,"nodeType":"946","endLine":55,"endColumn":70,"suggestions":"1031"},{"ruleId":"944","severity":1,"message":"968","line":55,"column":20,"nodeType":"1032","endLine":55,"endColumn":63},{"ruleId":"944","severity":1,"message":"1033","line":113,"column":6,"nodeType":"946","endLine":113,"endColumn":24,"suggestions":"1034"},{"ruleId":"955","severity":1,"message":"956","line":65,"column":18,"nodeType":"957","endLine":65,"endColumn":76},{"ruleId":"948","severity":1,"message":"1035","line":1,"column":17,"nodeType":"950","messageId":"951","endLine":1,"endColumn":28},{"ruleId":"948","severity":1,"message":"1036","line":21,"column":8,"nodeType":"950","messageId":"951","endLine":21,"endColumn":16},{"ruleId":"948","severity":1,"message":"1037","line":37,"column":11,"nodeType":"950","messageId":"951","endLine":37,"endColumn":23},{"ruleId":"944","severity":1,"message":"1038","line":119,"column":6,"nodeType":"946","endLine":119,"endColumn":52,"suggestions":"1039"},{"ruleId":"944","severity":1,"message":"1040","line":60,"column":6,"nodeType":"946","endLine":60,"endColumn":16,"suggestions":"1041"},{"ruleId":"948","severity":1,"message":"1042","line":8,"column":10,"nodeType":"950","messageId":"951","endLine":8,"endColumn":24},{"ruleId":"948","severity":1,"message":"1043","line":9,"column":10,"nodeType":"950","messageId":"951","endLine":9,"endColumn":32},{"ruleId":"948","severity":1,"message":"1044","line":3,"column":3,"nodeType":"950","messageId":"951","endLine":3,"endColumn":10},{"ruleId":"948","severity":1,"message":"1045","line":9,"column":3,"nodeType":"950","messageId":"951","endLine":9,"endColumn":10},{"ruleId":"948","severity":1,"message":"1046","line":36,"column":44,"nodeType":"950","messageId":"951","endLine":36,"endColumn":64},{"ruleId":"944","severity":1,"message":"1047","line":56,"column":6,"nodeType":"946","endLine":56,"endColumn":8,"suggestions":"1048"},{"ruleId":"944","severity":1,"message":"1049","line":80,"column":6,"nodeType":"946","endLine":80,"endColumn":19,"suggestions":"1050"},{"ruleId":"948","severity":1,"message":"1051","line":6,"column":3,"nodeType":"950","messageId":"951","endLine":6,"endColumn":27},{"ruleId":"948","severity":1,"message":"1052","line":15,"column":10,"nodeType":"950","messageId":"951","endLine":15,"endColumn":21},{"ruleId":"944","severity":1,"message":"1053","line":97,"column":6,"nodeType":"946","endLine":97,"endColumn":35,"suggestions":"1054"},{"ruleId":"948","severity":1,"message":"1055","line":246,"column":9,"nodeType":"950","messageId":"951","endLine":246,"endColumn":23},{"ruleId":"948","severity":1,"message":"981","line":24,"column":9,"nodeType":"950","messageId":"951","endLine":24,"endColumn":13},{"ruleId":"948","severity":1,"message":"1056","line":11,"column":10,"nodeType":"950","messageId":"951","endLine":11,"endColumn":18},{"ruleId":"944","severity":1,"message":"996","line":20,"column":6,"nodeType":"946","endLine":20,"endColumn":12,"suggestions":"1057"},{"ruleId":"948","severity":1,"message":"1058","line":2,"column":8,"nodeType":"950","messageId":"951","endLine":2,"endColumn":14},{"ruleId":"948","severity":1,"message":"1059","line":1,"column":18,"nodeType":"950","messageId":"951","endLine":1,"endColumn":21},{"ruleId":"948","severity":1,"message":"1042","line":18,"column":23,"nodeType":"950","messageId":"951","endLine":18,"endColumn":37},{"ruleId":"948","severity":1,"message":"1044","line":1,"column":27,"nodeType":"950","messageId":"951","endLine":1,"endColumn":34},{"ruleId":"948","severity":1,"message":"1045","line":6,"column":3,"nodeType":"950","messageId":"951","endLine":6,"endColumn":10},{"ruleId":"948","severity":1,"message":"1060","line":8,"column":3,"nodeType":"950","messageId":"951","endLine":8,"endColumn":14},{"ruleId":"944","severity":1,"message":"1061","line":32,"column":6,"nodeType":"946","endLine":32,"endColumn":8,"suggestions":"1062"},{"ruleId":"948","severity":1,"message":"1063","line":31,"column":25,"nodeType":"950","messageId":"951","endLine":31,"endColumn":33},{"ruleId":"948","severity":1,"message":"1064","line":2,"column":10,"nodeType":"950","messageId":"951","endLine":2,"endColumn":14},{"ruleId":"948","severity":1,"message":"1044","line":3,"column":3,"nodeType":"950","messageId":"951","endLine":3,"endColumn":10},{"ruleId":"948","severity":1,"message":"1046","line":26,"column":44,"nodeType":"950","messageId":"951","endLine":26,"endColumn":64},{"ruleId":"944","severity":1,"message":"1047","line":48,"column":6,"nodeType":"946","endLine":48,"endColumn":8,"suggestions":"1065"},{"ruleId":"998","severity":1,"message":"999","line":92,"column":64,"nodeType":"1000","messageId":"1001","endLine":92,"endColumn":66},{"ruleId":"944","severity":1,"message":"1066","line":82,"column":6,"nodeType":"946","endLine":82,"endColumn":14,"suggestions":"1067"},{"ruleId":"944","severity":1,"message":"1068","line":115,"column":5,"nodeType":"946","endLine":115,"endColumn":28,"suggestions":"1069"},{"ruleId":"948","severity":1,"message":"1070","line":4,"column":18,"nodeType":"950","messageId":"951","endLine":4,"endColumn":24},{"ruleId":"948","severity":1,"message":"979","line":1,"column":27,"nodeType":"950","messageId":"951","endLine":1,"endColumn":36},{"ruleId":"948","severity":1,"message":"979","line":1,"column":30,"nodeType":"950","messageId":"951","endLine":1,"endColumn":39},{"ruleId":"948","severity":1,"message":"1071","line":3,"column":23,"nodeType":"950","messageId":"951","endLine":3,"endColumn":31},{"ruleId":"944","severity":1,"message":"1072","line":18,"column":6,"nodeType":"946","endLine":18,"endColumn":8,"suggestions":"1073"},{"ruleId":"944","severity":1,"message":"1074","line":21,"column":6,"nodeType":"946","endLine":21,"endColumn":8,"suggestions":"1075"},{"ruleId":"944","severity":1,"message":"1076","line":23,"column":33,"nodeType":"950","endLine":23,"endColumn":44},{"ruleId":"948","severity":1,"message":"1044","line":3,"column":3,"nodeType":"950","messageId":"951","endLine":3,"endColumn":10},{"ruleId":"944","severity":1,"message":"1077","line":70,"column":6,"nodeType":"946","endLine":70,"endColumn":50,"suggestions":"1078"},{"ruleId":"944","severity":1,"message":"1047","line":96,"column":6,"nodeType":"946","endLine":96,"endColumn":8,"suggestions":"1079"},{"ruleId":"944","severity":1,"message":"1080","line":112,"column":6,"nodeType":"946","endLine":112,"endColumn":13,"suggestions":"1081"},{"ruleId":"998","severity":1,"message":"999","line":161,"column":64,"nodeType":"1000","messageId":"1001","endLine":161,"endColumn":66},{"ruleId":"948","severity":1,"message":"1064","line":2,"column":10,"nodeType":"950","messageId":"951","endLine":2,"endColumn":14},{"ruleId":"944","severity":1,"message":"1082","line":82,"column":6,"nodeType":"946","endLine":82,"endColumn":54,"suggestions":"1083"},{"ruleId":"944","severity":1,"message":"1076","line":84,"column":35,"nodeType":"950","endLine":84,"endColumn":46},{"ruleId":"944","severity":1,"message":"1084","line":151,"column":6,"nodeType":"946","endLine":151,"endColumn":66,"suggestions":"1085"},{"ruleId":"948","severity":1,"message":"993","line":1,"column":17,"nodeType":"950","messageId":"951","endLine":1,"endColumn":25},{"ruleId":"948","severity":1,"message":"1086","line":19,"column":11,"nodeType":"950","messageId":"951","endLine":19,"endColumn":18},{"ruleId":"944","severity":1,"message":"1087","line":84,"column":6,"nodeType":"946","endLine":88,"endColumn":4,"suggestions":"1088"},{"ruleId":"944","severity":1,"message":"1089","line":429,"column":6,"nodeType":"946","endLine":435,"endColumn":4,"suggestions":"1090"},{"ruleId":"948","severity":1,"message":"1091","line":6,"column":8,"nodeType":"950","messageId":"951","endLine":6,"endColumn":21},{"ruleId":"948","severity":1,"message":"1092","line":2,"column":8,"nodeType":"950","messageId":"951","endLine":2,"endColumn":22},{"ruleId":"948","severity":1,"message":"1058","line":3,"column":8,"nodeType":"950","messageId":"951","endLine":3,"endColumn":14},{"ruleId":"1025","severity":1,"message":"1026","line":1,"column":1,"nodeType":"1027","endLine":11,"endColumn":3},{"ruleId":"948","severity":1,"message":"979","line":1,"column":10,"nodeType":"950","messageId":"951","endLine":1,"endColumn":19},{"ruleId":"948","severity":1,"message":"980","line":29,"column":28,"nodeType":"950","messageId":"951","endLine":29,"endColumn":42},{"ruleId":"948","severity":1,"message":"981","line":33,"column":9,"nodeType":"950","messageId":"951","endLine":33,"endColumn":13},{"ruleId":"948","severity":1,"message":"1059","line":1,"column":18,"nodeType":"950","messageId":"951","endLine":1,"endColumn":21},{"ruleId":"948","severity":1,"message":"1064","line":2,"column":10,"nodeType":"950","messageId":"951","endLine":2,"endColumn":14},{"ruleId":"1093","severity":1,"message":"1094","line":24,"column":7,"nodeType":"1095","messageId":"990","endLine":24,"endColumn":13},{"ruleId":"1093","severity":1,"message":"1094","line":50,"column":7,"nodeType":"1095","messageId":"990","endLine":50,"endColumn":13},"no-native-reassign",["1096"],"no-negated-in-lhs",["1097"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsAuth'. Either include it or remove the dependency array. If 'setIsAuth' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["1098"],"no-unused-vars","'subcscribePosts' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["1099"],["1100"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchCurrentPersonalUser'. Either include it or remove the dependency array.",["1101"],"'loadingMore' is assigned a value but never used.","'setLoadingMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchListContact'. Either include it or remove the dependency array.",["1102"],"React Hook useEffect has a missing dependency: 'fetchReceivedRequestsToAddFriend'. Either include it or remove the dependency array.",["1103"],"React Hook useEffect has missing dependencies: 'fetchNotifications' and 'notifications.length'. Either include them or remove the dependency array.",["1104"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has missing dependencies: 'fetchChatConversations' and 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched'. Either include them or remove the dependency array.",["1105"],"React Hook useEffect has a missing dependency: 'updateSubscriptionOnChange'. Either include it or remove the dependency array.",["1106"],"'_' is defined but never used.","'AiOutlineConsoleSql' is defined but never used.","'userVar' is defined but never used.","'friendsVar' is defined but never used.","'contactVar' is defined but never used.","'useEffect' is defined but never used.","'subscribePosts' is assigned a value but never used.","'user' is assigned a value but never used.","'action' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updatePersonalReceiverWhenReceivedNewMessage'. Either include it or remove the dependency array.",["1107"],"'CustomButton' is defined but never used.","'FacebookLogin' is defined but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","Literal","unexpected","'FacebookAuth' is defined but never used.","'captcha_loaded' is assigned a value but never used.","'useState' is defined but never used.","'ButtonToggleFriendsList' is defined but never used.","'IoMdCloseCircleOutline' is defined but never used.","React Hook useEffect has a missing dependency: 'i18n.store.data'. Either include it or remove the dependency array.",["1108"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'fetchMorePostsData'. Either include it or remove the dependency array.",["1109"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'originalData' is assigned a value but never used.","'setOriginalData' is assigned a value but never used.","'contactData' is assigned a value but never used.","'setContactData' is assigned a value but never used.","'originData' is assigned a value but never used.","'setOriginData' is assigned a value but never used.","'setFetched' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchFriends'. Either include it or remove the dependency array.",["1110"],"'createRef' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'fetchMoreContacts'. Either include them or remove the dependency array.",["1111"],"'receivedRequestsToAddFriendVar' is defined but never used.","'React' is defined but never used.","'createMuiTheme' is defined but never used.","'makeStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'purple' is defined but never used.","'blue' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'shouldScrollIntoView'. Either include them or remove the dependency array.",["1112"],"React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'messagesStorage'. Either include them or remove the dependency array.",["1113"],"ChainExpression","React Hook useEffect has missing dependencies: 'currentChat._id', 'currentChat.scope', 'fetchMoreMessages', and 'messagesStorage'. Either include them or remove the dependency array.",["1114"],"'useCallback' is defined but never used.","'LazyLoad' is defined but never used.","'setShowPopup' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_messagesStorage.length', 'fetchMoreConversations', 'messagesStorage', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user._id'. Either include them or remove the dependency array.",["1115"],"React Hook useEffect has a missing dependency: 'post.rawText'. Either include it or remove the dependency array. If 'setEditedEditorState' needs the current value of 'post.rawText', you can also switch to useReducer instead of useState and read 'post.rawText' in the reducer.",["1116"],"'useReactiveVar' is defined but never used.","'currentPersonalUserVar' is defined but never used.","'useMemo' is defined but never used.","'Wrapper' is defined but never used.","'searchFriendsLoading' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'searchFriends'. Either include it or remove the dependency array.",["1117"],"React Hook useEffect has missing dependencies: 'isEdited' and 'postEdited'. Either include them or remove the dependency array.",["1118"],"'AiOutlineUsergroupDelete' is defined but never used.","'BiUserVoice' is defined but never used.","React Hook useEffect has missing dependencies: 'removeFriend' and 'updateMutationOnChange'. Either include them or remove the dependency array.",["1119"],"'onRemoveFriend' is assigned a value but never used.","'askLogin' is assigned a value but never used.",["1120"],"'styled' is defined but never used.","'css' is defined but never used.","'HashtagLink' is defined but never used.","React Hook useEffect has a missing dependency: 'post._id'. Either include it or remove the dependency array.",["1121"],"'dragging' is assigned a value but never used.","'Link' is defined but never used.",["1122"],"React Hook useEffect has missing dependencies: 'comment._id', 'comment.post', 'removeComment', and 'removeResponse'. Either include them or remove the dependency array.",["1123"],"React Hook useCallback has missing dependencies: 'comment.responses.length' and 'onLoadResponses'. Either include them or remove the dependency array.",["1124"],"'invert' is defined but never used.","'useQuery' is defined but never used.","React Hook useCallback has a missing dependency: 'likeResponse'. Either include it or remove the dependency array.",["1125"],"React Hook useCallback has a missing dependency: 'removeLikeResponse'. Either include it or remove the dependency array.",["1126"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'user._id' and 'user.name'. Either include them or remove the dependency array.",["1127"],["1128"],"React Hook useEffect has a missing dependency: 'removeFocus'. Either include it or remove the dependency array. If 'removeFocus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1129"],"React Hook useEffect has an unnecessary dependency: 'notificationRef.current'. Either exclude it or remove the dependency array. Mutable values like 'notificationRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1130"],"React Hook useEffect has a missing dependency: 'fetchNotifications'. Either include it or remove the dependency array.",["1131"],"'message' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'setCountNumberNotificationsUnseen'. Either exclude it or remove the dependency array. Outer scope values like 'setCountNumberNotificationsUnseen' aren't valid dependencies because mutating them doesn't re-render the component.",["1132"],"React Hook useEffect has missing dependencies: 'updatedAddNotification' and 'updatedRemoveNotification'. Either include them or remove the dependency array.",["1133"],"'Notifications' is defined but never used.","'InfiniteScroll' is defined but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"1134","fix":"1135"},{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1144","fix":"1145"},{"desc":"1146","fix":"1147"},{"desc":"1148","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1152","fix":"1153"},{"desc":"1154","fix":"1155"},{"desc":"1156","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1162","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1166","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1170","fix":"1171"},{"desc":"1172","fix":"1173"},{"desc":"1174","fix":"1175"},{"desc":"1176","fix":"1177"},{"desc":"1154","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1172","fix":"1181"},{"desc":"1182","fix":"1183"},{"desc":"1184","fix":"1185"},{"desc":"1186","fix":"1187"},{"desc":"1188","fix":"1189"},{"desc":"1190","fix":"1191"},{"desc":"1172","fix":"1192"},{"desc":"1193","fix":"1194"},{"desc":"1195","fix":"1196"},{"desc":"1197","fix":"1198"},{"desc":"1199","fix":"1200"},{"desc":"1201","fix":"1202"},"Update the dependencies array to be: [user, history, location.state, setIsAuth]",{"range":"1203","text":"1204"},"Update the dependencies array to be: [user, posts, fetched, fetchPosts]",{"range":"1205","text":"1206"},"Update the dependencies array to be: [user, posts, fetchMore, setFetchMore, fetchPosts]",{"range":"1207","text":"1208"},"Update the dependencies array to be: [fetchCurrentPersonalUser, slug]",{"range":"1209","text":"1210"},"Update the dependencies array to be: [user, fetched, setFetched, fetchListContact]",{"range":"1211","text":"1212"},"Update the dependencies array to be: [fetched, contact, user, fetchSentRequestToAddFriend, fetchReceivedRequestsToAddFriend]",{"range":"1213","text":"1214"},"Update the dependencies array to be: [fetchNotifications, fetchedNotifications, notifications.length, user]",{"range":"1215","text":"1216"},"Update the dependencies array to be: [user, messagesStorage, fetched, fetchChatConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched]",{"range":"1217","text":"1218"},"Update the dependencies array to be: [subscribeUser, user, receivedRequestsToAddFriend, updateSubscriptionOnChange]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [subscribeChatMessage, user, currentChat, updatePersonalReceiverWhenReceivedNewMessage]",{"range":"1221","text":"1222"},"Update the dependencies array to be: [i18n.store.data, lang]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [loadingMore, currentPersonalUser, fetchMorePostsData]",{"range":"1225","text":"1226"},"Update the dependencies array to be: [contact, fetchFriends, fetched]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [data, fetchMoreContacts, loadContactMore]",{"range":"1229","text":"1230"},"Update the dependencies array to be: [chatBoardBodyRef, shouldScrollIntoView]",{"range":"1231","text":"1232"},"Update the dependencies array to be: [chatBoardBodyRef, currentChat, messagesStorage, user]",{"range":"1233","text":"1234"},"Update the dependencies array to be: [currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage]",{"range":"1235","text":"1236"},"Update the dependencies array to be: [_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",{"range":"1237","text":"1238"},"Update the dependencies array to be: [isEdited, post.rawText]",{"range":"1239","text":"1240"},"Update the dependencies array to be: [searchFriends]",{"range":"1241","text":"1242"},"Update the dependencies array to be: [editorState, isEdited, postEdited]",{"range":"1243","text":"1244"},"Update the dependencies array to be: [dialog, currentPersonalUser, removeFriend, updateMutationOnChange]",{"range":"1245","text":"1246"},{"range":"1247","text":"1224"},"Update the dependencies array to be: [post._id]",{"range":"1248","text":"1249"},{"range":"1250","text":"1242"},"Update the dependencies array to be: [comment._id, comment.post, dialog, removeComment, removeResponse]",{"range":"1251","text":"1252"},"Update the dependencies array to be: [comment.responses.length, comment.responsesData?.length, onLoadResponses]",{"range":"1253","text":"1254"},"Update the dependencies array to be: [likeResponse]",{"range":"1255","text":"1256"},"Update the dependencies array to be: [removeLikeResponse]",{"range":"1257","text":"1258"},"Update the dependencies array to be: [focus, editorState, response, dataResponse, user.name, user._id]",{"range":"1259","text":"1260"},{"range":"1261","text":"1242"},"Update the dependencies array to be: [focus, removeFocus]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [openNotificationBoard]",{"range":"1264","text":"1265"},"Update the dependencies array to be: [fetchedNotifications, openNotificationBoard, notifications, fetchNotifications]",{"range":"1266","text":"1267"},"Update the dependencies array to be: [countNumberNotificationsUnseen, fetchCountNumberNotificationsUnseen]",{"range":"1268","text":"1269"},"Update the dependencies array to be: [countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification]",{"range":"1270","text":"1271"},[688,719],"[user, history, location.state, setIsAuth]",[1920,1942],"[user, posts, fetched, fetchPosts]",[2842,2880],"[user, posts, fetchMore, setFetchMore, fetchPosts]",[1178,1184],"[fetchCurrentPersonalUser, slug]",[2271,2298],"[user, fetched, setFetched, fetchListContact]",[3426,3479],"[fetched, contact, user, fetchSentRequestToAddFriend, fetchReceivedRequestsToAddFriend]",[1903,1994],"[fetchNotifications, fetchedNotifications, notifications.length, user]",[3173,3205],"[user, messagesStorage, fetched, fetchChatConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched]",[2974,3024],"[subscribeUser, user, receivedRequestsToAddFriend, updateSubscriptionOnChange]",[4193,4234],"[subscribeChatMessage, user, currentChat, updatePersonalReceiverWhenReceivedNewMessage]",[1047,1053],"[i18n.store.data, lang]",[2412,2446],"[loadingMore, currentPersonalUser, fetchMorePostsData]",[2135,2153],"[contact, fetchFriends, fetched]",[1285,1302],"[data, fetchMoreContacts, loadContactMore]",[1356,1358],"[chatBoardBodyRef, shouldScrollIntoView]",[1738,1802],"[chatBoardBodyRef, currentChat, messagesStorage, user]",[3423,3441],"[currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage]",[4271,4317],"[_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",[2030,2040],"[isEdited, post.rawText]",[1717,1719],"[searchFriends]",[2294,2307],"[editorState, isEdited, postEdited]",[3396,3425],"[dialog, currentPersonalUser, removeFriend, updateMutationOnChange]",[870,876],[967,969],"[post._id]",[1854,1856],[3040,3048],"[comment._id, comment.post, dialog, removeComment, removeResponse]",[4206,4229],"[comment.responses.length, comment.responsesData?.length, onLoadResponses]",[774,776],"[likeResponse]",[912,914],"[removeLikeResponse]",[2322,2366],"[focus, editorState, response, dataResponse, user.name, user._id]",[3324,3326],[3693,3700],"[focus, removeFocus]",[2848,2896],"[openNotificationBoard]",[4957,5017],"[fetchedNotifications, openNotificationBoard, notifications, fetchNotifications]",[2947,3068],"[countNumberNotificationsUnseen, fetchCountNumberNotificationsUnseen]",[15288,15425],"[countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification]"]