[{"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js":"1","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js":"2","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js":"3","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js":"4","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js":"5","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js":"6","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js":"7","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js":"8","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js":"9","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js":"10","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js":"11","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js":"12","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js":"13","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js":"14","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx":"15","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx":"16","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js":"17","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/index.js":"18","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js":"19","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx":"20","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx":"21","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx":"22","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx":"23","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx":"24","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx":"25","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx":"26","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx":"27","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx":"28","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx":"29","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx":"30","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx":"31","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx":"32","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx":"33","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx":"34","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx":"35","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx":"36","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js":"37","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js":"38","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js":"39","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js":"40","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/index.js":"41","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/index.js":"42","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx":"43","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx":"44","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx":"45","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx":"46","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js":"47","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx":"48","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx":"49","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx":"50","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx":"51","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchCountNumberNotificationsUnseen.js":"52","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchNotifications.js":"53","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchPosts.js":"54","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js":"55","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js":"56","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx":"57","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx":"58","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js":"59","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js":"60","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx":"61","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx":"62","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx":"63","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx":"64","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx":"65","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx":"66","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx":"67","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx":"68","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx":"69","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx":"70","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/index.js":"71","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/signup.js":"72","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/acceptRequestToAddFriend.js":"73","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/removeFriend.js":"74","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/unFollowUser.js":"75","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/followUser.js":"76","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/cancelRequestToAddFriend.js":"77","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/rejectRequestToAddFriend.js":"78","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/sendRequestToAddFriend.js":"79","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx":"80","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx":"81","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx":"82","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx":"83","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx":"84","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx":"85","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/ToggleButtonMenu.js":"86","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js":"87","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js":"88","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js":"89","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js":"90","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js":"91","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js":"92","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/ReceivedRequestsToAddFriend.js":"93","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/SentRequestsToAddFriend.js":"94","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/Friends.js":"95","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js":"96","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js":"97","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js":"98","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx":"99","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx":"100","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx":"101","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx":"102","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx":"103","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx":"104","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx":"105","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx":"106","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx":"107","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/index.js":"108","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/index.js":"109","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx":"110","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx":"111","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx":"112","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx":"113","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx":"114","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx":"115","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx":"116","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx":"117","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx":"118","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersReceivedRequestToAddFriend.js":"119","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersSentRequestToAddFriend.js":"120","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchListContact.js":"121","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchPersonalUser.js":"122","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchFriends.js":"123","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchCurrentUser.js":"124","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/login.js":"125","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/removeFriendSubscription.js":"126","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/cancelRequestToAddFriendSubscription.js":"127","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/rejectRequestToAddFriendSubscription.js":"128","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/postCreated.js":"129","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx":"130","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx":"131","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js":"132","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx":"133","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/index.js":"134","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/index.js":"135","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx":"136","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx":"137","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx":"138","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx":"139","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx":"140","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx":"141","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/updateUserHasSeenNotification.js":"142","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createPost.js":"143","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx":"144","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx":"145","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx":"146","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js":"147","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/index.js":"148","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx":"149","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx":"150","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js":"151","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js":"152","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js":"153","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js":"154","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js":"155","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js":"156","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js":"157","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatFile.js":"158","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js":"159","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js":"160","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/updateHaveSeenAllMessages.js":"161","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatText.js":"162","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched.js":"163","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverWhenReceivedNewMessage.js":"164","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx":"165","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx":"166","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx":"167","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx":"168","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx":"169","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx":"170","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js":"171","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js":"172","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js":"173","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx":"174","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx":"175","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySendersThatReceiverOnlineHasReceivedMessagesChat.js":"176","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchSingleChatConversation.js":"177","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setMessagesStorage.js":"178","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/clearMessageStorage.js":"179","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateHasSeenLatestMessage.js":"180","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorage.js":"181","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageToReceivedWhenUserOnline.js":"182","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageWhenReceiverSeenAllMessages.js":"183","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/addNewConversationToMessagesStorage.js":"184","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/clearCurrentChat.js":"185","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentPersonalUser.js":"186","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setCountNumberNotificationsUnseen.js":"187","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setCurrentChat.js":"188","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentUser.js":"189","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setFriends.js":"190","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setMoreFriends.js":"191","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setInitialMessagesStorage.js":"192","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNewNotifications.js":"193","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNotifications.js":"194","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setNumberOfConversations.js":"195","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setOpenFriendsList.js":"196","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPosts.js":"197","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPersonalPosts.js":"198","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPostStatus.js":"199","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setSentRequestsToAddFriend.js":"200","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setReceivedRequestsToAddFriend.js":"201","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMoreMessages.js":"202","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOffline.js":"203","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOfflineMessagesStorage.js":"204","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/toggleButtonMenu.js":"205","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getNumberOfConversations.js":"206","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getCurrentChat.js":"207","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/messagesStorage/getMessagesStorage.js":"208","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getReceivedRequestsToAddFriend.js":"209","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getSentRequestsToAddFriend.js":"210","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getFriends.js":"211","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getOpenFriendsList.js":"212","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPersonalPosts.js":"213","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentPersonalUser.js":"214","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNewNotifications.js":"215","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getCountNumberNotificationsUnseen.js":"216","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNotifications.js":"217","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentUser.js":"218","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPostStatus.js":"219","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPosts.js":"220","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/controls/getToggleButtonMenu.js":"221","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/contact/getContact.js":"222","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getHome.js":"223","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditor.jsx":"224","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorHeader.jsx":"225","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditor.styles.jsx":"226","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorHeader.styles.jsx":"227","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorBody.jsx":"228","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorBody.styles.jsx":"229","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ImagesCarousel.jsx":"230","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ImagesCarousel.styles.jsx":"231","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/searchFriends.js":"232","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setNewPost.js":"233","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardHeader.jsx":"234","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCard.styles.jsx":"235","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardHeader.styles.jsx":"236","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardBody.jsx":"237","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardBody.styles.jsx":"238","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardFooter.jsx":"239","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardFooter.styles.jsx":"240","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getNotifications.js":"241","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getHeader.js":"242","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/styles/Header.styles.jsx":"243","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/FlashPopUpNotification.jsx":"244","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/FlashPopUpNotification.styles.jsx":"245","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LatestNotification.js":"246","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setLatestNotification.js":"247","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getLatestNotification.js":"248","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentEditor.jsx":"249","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentEditor.styles.jsx":"250","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/likePost.js":"251","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateLikePost.js":"252","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateUnlikePost.js":"253","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getUsePostsSubscription.js":"254","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/increaseCountNumberNotificationsUnseen.js":"255","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/decreaseCountNumberNotificationsUnseen.js":"256","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createComment.js":"257","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Comments.jsx":"258","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/Comments.styles.jsx":"259","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentItem.jsx":"260","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentItem.styles.jsx":"261","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentToOwnerPost.js":"262","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/ResponseEditor.jsx":"263","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addNewResponseToComment.js":"264","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchComments.js":"265","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentsToPost.js":"266","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createResponse.js":"267","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentToPost.js":"268","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeComment.js":"269","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/AlertDialogSlide.jsx":"270","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/Dialog.js":"271","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/controls/getDialog.js":"272","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/setDialog.js":"273","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/clearDialog.js":"274","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/removeComment.js":"275","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/likeComment.js":"276","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addLikeComment.js":"277","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/removeLikeComment.js":"278","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeLikeComment.js":"279","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Responses.jsx":"280","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchResponses.js":"281","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addResponsesToComment.js":"282","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentCard.jsx":"283","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentCard.styles.jsx":"284","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/likeResponse.js":"285","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addLikeResponse.js":"286","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeLikeResponse.js":"287","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/removeLikeResponse.js":"288","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeResponse.js":"289","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/removeResponse.js":"290","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeLikePost.js":"291","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/likePostSubscription.js":"292","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/removeLikePostSubscription.js":"293","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/removeNewNotification.js":"294","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/addNotificationItemToNotificationsList.js":"295","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/removeNotificationItemFromNotificationsList.js":"296","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyUserCommentPostSubscription.js":"297","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/updateNotificationItemInNotificationsList.js":"298","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/updateNotificationHasSeen.js":"299","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/likeCommentSubscription.js":"300","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/removeLikeCommentSubscription.js":"301","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useChatSubscriptions.jsx":"302","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useUserStatusSubscriptions.jsx":"303","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useContactSubscription.jsx":"304","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionedUsersInPost.js":"305","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useHomePostsSubscription.jsx":"306","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/post/index.js":"307","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/post/createCommentSubscription.js":"308","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/checkCommentExistedInPosts.js":"309","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateCommentLikes.js":"310","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyUserResponseCommentSubscription.js":"311","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/post/createResponseSubscription.js":"312","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionedUsersInResponse.js":"313","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionedUsersInComment.js":"314","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/likeResponseSubscription.js":"315","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/removeLikeResponseSubscription.js":"316","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useNotificationsPostSubscription.jsx":"317","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/IntroductionBox.styles.jsx":"318","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeading.styles.jsx":"319","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeadingContact.styles.jsx":"320","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalPosts.styles.jsx":"321","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getPersonalUser.js":"322","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/sentRequestToAddFriendSubscription.js":"323","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/cancelRequestToAddFriend.js":"324","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/NotificationItem.styles.jsx":"325","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomMaterialButton.jsx":"326","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyAcceptRequestToAddFriend.js":"327","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/acceptRequestToAddFriendSubscription.js":"328","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/addPostsToCurrentPersonalUser.js":"329","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/addPostItemToCurrentPersonalUser.js":"330"},{"size":841,"mtime":1617679989539,"results":"331","hashOfConfig":"332"},{"size":362,"mtime":1616455707525,"results":"333","hashOfConfig":"332"},{"size":293,"mtime":1616455707525,"results":"334","hashOfConfig":"332"},{"size":3474,"mtime":1618066091659,"results":"335","hashOfConfig":"332"},{"size":1704,"mtime":1617722828155,"results":"336","hashOfConfig":"332"},{"size":341,"mtime":1616455707525,"results":"337","hashOfConfig":"332"},{"size":3819,"mtime":1617932518748,"results":"338","hashOfConfig":"332"},{"size":4839,"mtime":1617003484910,"results":"339","hashOfConfig":"332"},{"size":3749,"mtime":1618188135421,"results":"340","hashOfConfig":"332"},{"size":3617,"mtime":1616455707525,"results":"341","hashOfConfig":"332"},{"size":1143,"mtime":1616455707525,"results":"342","hashOfConfig":"332"},{"size":1018,"mtime":1618189624495,"results":"343","hashOfConfig":"332"},{"size":3707,"mtime":1616455707525,"results":"344","hashOfConfig":"332"},{"size":3946,"mtime":1617680501627,"results":"345","hashOfConfig":"332"},{"size":13546,"mtime":1618066017194,"results":"346","hashOfConfig":"332"},{"size":485,"mtime":1616455707525,"results":"347","hashOfConfig":"332"},{"size":573,"mtime":1616455707525,"results":"348","hashOfConfig":"332"},{"size":1005,"mtime":1616602263962,"results":"349","hashOfConfig":"332"},{"size":218,"mtime":1616455707517,"results":"350","hashOfConfig":"332"},{"size":1918,"mtime":1618068378507,"results":"351","hashOfConfig":"332"},{"size":395,"mtime":1617558622430,"results":"352","hashOfConfig":"332"},{"size":463,"mtime":1617156204773,"results":"353","hashOfConfig":"332"},{"size":1056,"mtime":1617893857356,"results":"354","hashOfConfig":"332"},{"size":1046,"mtime":1616455707521,"results":"355","hashOfConfig":"332"},{"size":1255,"mtime":1616455707521,"results":"356","hashOfConfig":"332"},{"size":5269,"mtime":1616455707521,"results":"357","hashOfConfig":"332"},{"size":1475,"mtime":1616455707521,"results":"358","hashOfConfig":"332"},{"size":8406,"mtime":1616455707521,"results":"359","hashOfConfig":"332"},{"size":2552,"mtime":1618153677324,"results":"360","hashOfConfig":"332"},{"size":3079,"mtime":1618189883849,"results":"361","hashOfConfig":"332"},{"size":2552,"mtime":1616455707521,"results":"362","hashOfConfig":"332"},{"size":2883,"mtime":1616456460876,"results":"363","hashOfConfig":"332"},{"size":258,"mtime":1616455707521,"results":"364","hashOfConfig":"332"},{"size":1011,"mtime":1616455707521,"results":"365","hashOfConfig":"332"},{"size":422,"mtime":1616455707521,"results":"366","hashOfConfig":"332"},{"size":3420,"mtime":1616455707521,"results":"367","hashOfConfig":"332"},{"size":1191,"mtime":1617290742073,"results":"368","hashOfConfig":"332"},{"size":8918,"mtime":1618028747191,"results":"369","hashOfConfig":"332"},{"size":8413,"mtime":1618028741795,"results":"370","hashOfConfig":"332"},{"size":3200,"mtime":1617932554240,"results":"371","hashOfConfig":"332"},{"size":290,"mtime":1617415181754,"results":"372","hashOfConfig":"332"},{"size":342,"mtime":1616455707517,"results":"373","hashOfConfig":"332"},{"size":1041,"mtime":1616455707521,"results":"374","hashOfConfig":"332"},{"size":2413,"mtime":1616455707521,"results":"375","hashOfConfig":"332"},{"size":2083,"mtime":1616455707521,"results":"376","hashOfConfig":"332"},{"size":6301,"mtime":1616455707521,"results":"377","hashOfConfig":"332"},{"size":1010,"mtime":1615348219838,"results":"378","hashOfConfig":"332"},{"size":570,"mtime":1616455707521,"results":"379","hashOfConfig":"332"},{"size":421,"mtime":1616455707521,"results":"380","hashOfConfig":"332"},{"size":2361,"mtime":1617902120516,"results":"381","hashOfConfig":"332"},{"size":12427,"mtime":1618162370454,"results":"382","hashOfConfig":"332"},{"size":140,"mtime":1616455707517,"results":"383","hashOfConfig":"332"},{"size":551,"mtime":1617952634052,"results":"384","hashOfConfig":"332"},{"size":587,"mtime":1618074657579,"results":"385","hashOfConfig":"332"},{"size":38,"mtime":1616455707513,"results":"386","hashOfConfig":"332"},{"size":45,"mtime":1616455707513,"results":"387","hashOfConfig":"332"},{"size":1553,"mtime":1616455707521,"results":"388","hashOfConfig":"332"},{"size":324,"mtime":1616455707521,"results":"389","hashOfConfig":"332"},{"size":252,"mtime":1616455707517,"results":"390","hashOfConfig":"332"},{"size":9431,"mtime":1618189303181,"results":"391","hashOfConfig":"332"},{"size":10306,"mtime":1617728947032,"results":"392","hashOfConfig":"332"},{"size":1166,"mtime":1616455707521,"results":"393","hashOfConfig":"332"},{"size":446,"mtime":1616455707521,"results":"394","hashOfConfig":"332"},{"size":1397,"mtime":1616455707521,"results":"395","hashOfConfig":"332"},{"size":4571,"mtime":1616859261791,"results":"396","hashOfConfig":"332"},{"size":344,"mtime":1616455707521,"results":"397","hashOfConfig":"332"},{"size":865,"mtime":1616455707521,"results":"398","hashOfConfig":"332"},{"size":2675,"mtime":1616455707521,"results":"399","hashOfConfig":"332"},{"size":210,"mtime":1616455707521,"results":"400","hashOfConfig":"332"},{"size":2791,"mtime":1616455707521,"results":"401","hashOfConfig":"332"},{"size":921,"mtime":1616455707517,"results":"402","hashOfConfig":"332"},{"size":336,"mtime":1616455707517,"results":"403","hashOfConfig":"332"},{"size":594,"mtime":1618063158617,"results":"404","hashOfConfig":"332"},{"size":524,"mtime":1618059156139,"results":"405","hashOfConfig":"332"},{"size":477,"mtime":1618064083519,"results":"406","hashOfConfig":"332"},{"size":474,"mtime":1616455707517,"results":"407","hashOfConfig":"332"},{"size":583,"mtime":1618064138207,"results":"408","hashOfConfig":"332"},{"size":550,"mtime":1618018580369,"results":"409","hashOfConfig":"332"},{"size":622,"mtime":1618064111931,"results":"410","hashOfConfig":"332"},{"size":282,"mtime":1616455707521,"results":"411","hashOfConfig":"332"},{"size":1144,"mtime":1616455707521,"results":"412","hashOfConfig":"332"},{"size":3913,"mtime":1616455707521,"results":"413","hashOfConfig":"332"},{"size":1508,"mtime":1616455707521,"results":"414","hashOfConfig":"332"},{"size":255,"mtime":1616455707525,"results":"415","hashOfConfig":"332"},{"size":15320,"mtime":1616859605270,"results":"416","hashOfConfig":"332"},{"size":38,"mtime":1616455707513,"results":"417","hashOfConfig":"332"},{"size":42,"mtime":1616455707513,"results":"418","hashOfConfig":"332"},{"size":50,"mtime":1616455707513,"results":"419","hashOfConfig":"332"},{"size":170,"mtime":1616455707513,"results":"420","hashOfConfig":"332"},{"size":31,"mtime":1616455707513,"results":"421","hashOfConfig":"332"},{"size":48,"mtime":1616455707513,"results":"422","hashOfConfig":"332"},{"size":32,"mtime":1616455707513,"results":"423","hashOfConfig":"332"},{"size":46,"mtime":1616455707513,"results":"424","hashOfConfig":"332"},{"size":43,"mtime":1616455707513,"results":"425","hashOfConfig":"332"},{"size":26,"mtime":1616455707513,"results":"426","hashOfConfig":"332"},{"size":24,"mtime":1616455707513,"results":"427","hashOfConfig":"332"},{"size":39,"mtime":1617904282015,"results":"428","hashOfConfig":"332"},{"size":1472,"mtime":1617724278054,"results":"429","hashOfConfig":"332"},{"size":3257,"mtime":1616455707521,"results":"430","hashOfConfig":"332"},{"size":1632,"mtime":1616455707521,"results":"431","hashOfConfig":"332"},{"size":1160,"mtime":1616455707521,"results":"432","hashOfConfig":"332"},{"size":482,"mtime":1616455707521,"results":"433","hashOfConfig":"332"},{"size":645,"mtime":1616455707521,"results":"434","hashOfConfig":"332"},{"size":1161,"mtime":1616455707521,"results":"435","hashOfConfig":"332"},{"size":1645,"mtime":1616455707521,"results":"436","hashOfConfig":"332"},{"size":1178,"mtime":1616455707525,"results":"437","hashOfConfig":"332"},{"size":794,"mtime":1616455707521,"results":"438","hashOfConfig":"332"},{"size":419,"mtime":1616455707517,"results":"439","hashOfConfig":"332"},{"size":2030,"mtime":1618027011923,"results":"440","hashOfConfig":"332"},{"size":795,"mtime":1616455707521,"results":"441","hashOfConfig":"332"},{"size":2975,"mtime":1616455707525,"results":"442","hashOfConfig":"332"},{"size":758,"mtime":1616455707521,"results":"443","hashOfConfig":"332"},{"size":2081,"mtime":1616455707525,"results":"444","hashOfConfig":"332"},{"size":5925,"mtime":1618063851689,"results":"445","hashOfConfig":"332"},{"size":1560,"mtime":1616455707521,"results":"446","hashOfConfig":"332"},{"size":2697,"mtime":1617815227993,"results":"447","hashOfConfig":"332"},{"size":2006,"mtime":1617723168072,"results":"448","hashOfConfig":"332"},{"size":5262,"mtime":1616455707521,"results":"449","hashOfConfig":"332"},{"size":265,"mtime":1616455707517,"results":"450","hashOfConfig":"332"},{"size":258,"mtime":1616455707517,"results":"451","hashOfConfig":"332"},{"size":399,"mtime":1616455707517,"results":"452","hashOfConfig":"332"},{"size":391,"mtime":1618073546614,"results":"453","hashOfConfig":"332"},{"size":290,"mtime":1616455707517,"results":"454","hashOfConfig":"332"},{"size":333,"mtime":1617611431974,"results":"455","hashOfConfig":"332"},{"size":471,"mtime":1617611390765,"results":"456","hashOfConfig":"332"},{"size":541,"mtime":1618155614335,"results":"457","hashOfConfig":"332"},{"size":537,"mtime":1616455707517,"results":"458","hashOfConfig":"332"},{"size":603,"mtime":1618064342941,"results":"459","hashOfConfig":"332"},{"size":569,"mtime":1617634698754,"results":"460","hashOfConfig":"332"},{"size":1361,"mtime":1616455707521,"results":"461","hashOfConfig":"332"},{"size":3349,"mtime":1616455707521,"results":"462","hashOfConfig":"332"},{"size":2595,"mtime":1618028768911,"results":"463","hashOfConfig":"332"},{"size":550,"mtime":1616455707525,"results":"464","hashOfConfig":"332"},{"size":210,"mtime":1616455707517,"results":"465","hashOfConfig":"332"},{"size":1026,"mtime":1617620681274,"results":"466","hashOfConfig":"332"},{"size":939,"mtime":1616455707521,"results":"467","hashOfConfig":"332"},{"size":6350,"mtime":1616455707521,"results":"468","hashOfConfig":"332"},{"size":4109,"mtime":1617957542080,"results":"469","hashOfConfig":"332"},{"size":1823,"mtime":1616455707521,"results":"470","hashOfConfig":"332"},{"size":505,"mtime":1616455707521,"results":"471","hashOfConfig":"332"},{"size":2370,"mtime":1616455707521,"results":"472","hashOfConfig":"332"},{"size":231,"mtime":1617644565386,"results":"473","hashOfConfig":"332"},{"size":976,"mtime":1618190768054,"results":"474","hashOfConfig":"332"},{"size":1324,"mtime":1617731394387,"results":"475","hashOfConfig":"332"},{"size":1158,"mtime":1617957438843,"results":"476","hashOfConfig":"332"},{"size":1279,"mtime":1616455707521,"results":"477","hashOfConfig":"332"},{"size":35,"mtime":1616455707513,"results":"478","hashOfConfig":"332"},{"size":1006,"mtime":1616455707517,"results":"479","hashOfConfig":"332"},{"size":1071,"mtime":1615141119088,"results":"480","hashOfConfig":"332"},{"size":702,"mtime":1615140573136,"results":"481","hashOfConfig":"332"},{"size":47,"mtime":1616455707513,"results":"482","hashOfConfig":"332"},{"size":402,"mtime":1616455707517,"results":"483","hashOfConfig":"332"},{"size":1213,"mtime":1616455707525,"results":"484","hashOfConfig":"332"},{"size":1029,"mtime":1616455707525,"results":"485","hashOfConfig":"332"},{"size":726,"mtime":1616455707517,"results":"486","hashOfConfig":"332"},{"size":752,"mtime":1616455707517,"results":"487","hashOfConfig":"332"},{"size":793,"mtime":1616455707517,"results":"488","hashOfConfig":"332"},{"size":998,"mtime":1616455707517,"results":"489","hashOfConfig":"332"},{"size":434,"mtime":1616455707525,"results":"490","hashOfConfig":"332"},{"size":267,"mtime":1616455707517,"results":"491","hashOfConfig":"332"},{"size":221,"mtime":1616455707517,"results":"492","hashOfConfig":"332"},{"size":746,"mtime":1616455707517,"results":"493","hashOfConfig":"332"},{"size":265,"mtime":1616455707517,"results":"494","hashOfConfig":"332"},{"size":272,"mtime":1616455707517,"results":"495","hashOfConfig":"332"},{"size":2680,"mtime":1616455707521,"results":"496","hashOfConfig":"332"},{"size":1637,"mtime":1616455707521,"results":"497","hashOfConfig":"332"},{"size":5350,"mtime":1616455707521,"results":"498","hashOfConfig":"332"},{"size":138,"mtime":1616455707521,"results":"499","hashOfConfig":"332"},{"size":3098,"mtime":1616455707521,"results":"500","hashOfConfig":"332"},{"size":2108,"mtime":1616455707521,"results":"501","hashOfConfig":"332"},{"size":1371,"mtime":1616455707517,"results":"502","hashOfConfig":"332"},{"size":41,"mtime":1616455707513,"results":"503","hashOfConfig":"332"},{"size":692,"mtime":1616455707517,"results":"504","hashOfConfig":"332"},{"size":849,"mtime":1617156217929,"results":"505","hashOfConfig":"332"},{"size":1014,"mtime":1616455707525,"results":"506","hashOfConfig":"332"},{"size":255,"mtime":1616455707517,"results":"507","hashOfConfig":"332"},{"size":1072,"mtime":1616455707517,"results":"508","hashOfConfig":"332"},{"size":561,"mtime":1616455707513,"results":"509","hashOfConfig":"332"},{"size":120,"mtime":1616455707513,"results":"510","hashOfConfig":"332"},{"size":309,"mtime":1616455707513,"results":"511","hashOfConfig":"332"},{"size":621,"mtime":1616455707513,"results":"512","hashOfConfig":"332"},{"size":637,"mtime":1616455707513,"results":"513","hashOfConfig":"332"},{"size":630,"mtime":1616455707513,"results":"514","hashOfConfig":"332"},{"size":270,"mtime":1616455707513,"results":"515","hashOfConfig":"332"},{"size":110,"mtime":1616455707517,"results":"516","hashOfConfig":"332"},{"size":147,"mtime":1616455707517,"results":"517","hashOfConfig":"332"},{"size":191,"mtime":1616455707513,"results":"518","hashOfConfig":"332"},{"size":171,"mtime":1616455707513,"results":"519","hashOfConfig":"332"},{"size":107,"mtime":1616455707517,"results":"520","hashOfConfig":"332"},{"size":109,"mtime":1616455707513,"results":"521","hashOfConfig":"332"},{"size":183,"mtime":1616455707513,"results":"522","hashOfConfig":"332"},{"size":180,"mtime":1616455707513,"results":"523","hashOfConfig":"332"},{"size":185,"mtime":1616455707513,"results":"524","hashOfConfig":"332"},{"size":133,"mtime":1616455707513,"results":"525","hashOfConfig":"332"},{"size":151,"mtime":1616455707513,"results":"526","hashOfConfig":"332"},{"size":147,"mtime":1616455707513,"results":"527","hashOfConfig":"332"},{"size":84,"mtime":1616455707517,"results":"528","hashOfConfig":"332"},{"size":125,"mtime":1616455707513,"results":"529","hashOfConfig":"332"},{"size":188,"mtime":1616455707517,"results":"530","hashOfConfig":"332"},{"size":194,"mtime":1616455707513,"results":"531","hashOfConfig":"332"},{"size":204,"mtime":1616455707513,"results":"532","hashOfConfig":"332"},{"size":390,"mtime":1616455707513,"results":"533","hashOfConfig":"332"},{"size":1028,"mtime":1616455707513,"results":"534","hashOfConfig":"332"},{"size":550,"mtime":1616455707513,"results":"535","hashOfConfig":"332"},{"size":137,"mtime":1616455707513,"results":"536","hashOfConfig":"332"},{"size":134,"mtime":1616455707517,"results":"537","hashOfConfig":"332"},{"size":112,"mtime":1616455707517,"results":"538","hashOfConfig":"332"},{"size":120,"mtime":1616455707517,"results":"539","hashOfConfig":"332"},{"size":147,"mtime":1616455707517,"results":"540","hashOfConfig":"332"},{"size":140,"mtime":1616455707517,"results":"541","hashOfConfig":"332"},{"size":104,"mtime":1616455707517,"results":"542","hashOfConfig":"332"},{"size":122,"mtime":1616455707517,"results":"543","hashOfConfig":"332"},{"size":116,"mtime":1616455707517,"results":"544","hashOfConfig":"332"},{"size":129,"mtime":1616455707517,"results":"545","hashOfConfig":"332"},{"size":123,"mtime":1616455707517,"results":"546","hashOfConfig":"332"},{"size":153,"mtime":1616455707517,"results":"547","hashOfConfig":"332"},{"size":131,"mtime":1616455707517,"results":"548","hashOfConfig":"332"},{"size":114,"mtime":1616455707517,"results":"549","hashOfConfig":"332"},{"size":125,"mtime":1616455707517,"results":"550","hashOfConfig":"332"},{"size":107,"mtime":1616455707517,"results":"551","hashOfConfig":"332"},{"size":143,"mtime":1616455707517,"results":"552","hashOfConfig":"332"},{"size":259,"mtime":1618060529789,"results":"553","hashOfConfig":"332"},{"size":154,"mtime":1616460918587,"results":"554","hashOfConfig":"332"},{"size":4814,"mtime":1618190690565,"results":"555","hashOfConfig":"332"},{"size":2550,"mtime":1616645805431,"results":"556","hashOfConfig":"332"},{"size":357,"mtime":1616500293962,"results":"557","hashOfConfig":"332"},{"size":2679,"mtime":1616483759159,"results":"558","hashOfConfig":"332"},{"size":5883,"mtime":1617198666756,"results":"559","hashOfConfig":"332"},{"size":1289,"mtime":1617111052716,"results":"560","hashOfConfig":"332"},{"size":1507,"mtime":1616510383576,"results":"561","hashOfConfig":"332"},{"size":421,"mtime":1616602263966,"results":"562","hashOfConfig":"332"},{"size":197,"mtime":1616645805431,"results":"563","hashOfConfig":"332"},{"size":382,"mtime":1616645805431,"results":"564","hashOfConfig":"332"},{"size":1521,"mtime":1617731469860,"results":"565","hashOfConfig":"332"},{"size":558,"mtime":1617582804695,"results":"566","hashOfConfig":"332"},{"size":996,"mtime":1616645805435,"results":"567","hashOfConfig":"332"},{"size":1585,"mtime":1617770683981,"results":"568","hashOfConfig":"332"},{"size":881,"mtime":1617290742097,"results":"569","hashOfConfig":"332"},{"size":3688,"mtime":1617770680477,"results":"570","hashOfConfig":"332"},{"size":2419,"mtime":1617583221799,"results":"571","hashOfConfig":"332"},{"size":320,"mtime":1617622845549,"results":"572","hashOfConfig":"332"},{"size":184,"mtime":1616783505743,"results":"573","hashOfConfig":"332"},{"size":897,"mtime":1617957542100,"results":"574","hashOfConfig":"332"},{"size":1974,"mtime":1617752881236,"results":"575","hashOfConfig":"332"},{"size":1449,"mtime":1616950094622,"results":"576","hashOfConfig":"332"},{"size":40,"mtime":1616800966227,"results":"577","hashOfConfig":"332"},{"size":279,"mtime":1616802010090,"results":"578","hashOfConfig":"332"},{"size":126,"mtime":1616801487243,"results":"579","hashOfConfig":"332"},{"size":7704,"mtime":1617728719407,"results":"580","hashOfConfig":"332"},{"size":968,"mtime":1616989242544,"results":"581","hashOfConfig":"332"},{"size":132,"mtime":1616952545750,"results":"582","hashOfConfig":"332"},{"size":370,"mtime":1616953483650,"results":"583","hashOfConfig":"332"},{"size":392,"mtime":1616954255116,"results":"584","hashOfConfig":"332"},{"size":152,"mtime":1616957978529,"results":"585","hashOfConfig":"332"},{"size":282,"mtime":1616978486473,"results":"586","hashOfConfig":"332"},{"size":282,"mtime":1616977628368,"results":"587","hashOfConfig":"332"},{"size":570,"mtime":1617716189377,"results":"588","hashOfConfig":"332"},{"size":572,"mtime":1617558629590,"results":"589","hashOfConfig":"332"},{"size":99,"mtime":1617020243878,"results":"590","hashOfConfig":"332"},{"size":7272,"mtime":1617890293375,"results":"591","hashOfConfig":"332"},{"size":897,"mtime":1617582965193,"results":"592","hashOfConfig":"332"},{"size":552,"mtime":1617075911551,"results":"593","hashOfConfig":"332"},{"size":9249,"mtime":1617891834913,"results":"594","hashOfConfig":"332"},{"size":1065,"mtime":1617821035502,"results":"595","hashOfConfig":"332"},{"size":474,"mtime":1617261083489,"results":"596","hashOfConfig":"332"},{"size":528,"mtime":1617846799619,"results":"597","hashOfConfig":"332"},{"size":594,"mtime":1617716165521,"results":"598","hashOfConfig":"332"},{"size":482,"mtime":1617846843407,"results":"599","hashOfConfig":"332"},{"size":162,"mtime":1617290742089,"results":"600","hashOfConfig":"332"},{"size":1711,"mtime":1618159540049,"results":"601","hashOfConfig":"332"},{"size":90,"mtime":1617290742073,"results":"602","hashOfConfig":"332"},{"size":111,"mtime":1617290742089,"results":"603","hashOfConfig":"332"},{"size":97,"mtime":1617290742073,"results":"604","hashOfConfig":"332"},{"size":152,"mtime":1617290742073,"results":"605","hashOfConfig":"332"},{"size":676,"mtime":1617461504334,"results":"606","hashOfConfig":"332"},{"size":157,"mtime":1617384547841,"results":"607","hashOfConfig":"332"},{"size":597,"mtime":1617763581313,"results":"608","hashOfConfig":"332"},{"size":604,"mtime":1617673732892,"results":"609","hashOfConfig":"332"},{"size":176,"mtime":1617384547841,"results":"610","hashOfConfig":"332"},{"size":2138,"mtime":1617578770185,"results":"611","hashOfConfig":"332"},{"size":378,"mtime":1617459124730,"results":"612","hashOfConfig":"332"},{"size":782,"mtime":1617578826191,"results":"613","hashOfConfig":"332"},{"size":2417,"mtime":1617889047997,"results":"614","hashOfConfig":"332"},{"size":1883,"mtime":1617550915657,"results":"615","hashOfConfig":"332"},{"size":163,"mtime":1617552212339,"results":"616","hashOfConfig":"332"},{"size":1378,"mtime":1617867539913,"results":"617","hashOfConfig":"332"},{"size":182,"mtime":1617555093902,"results":"618","hashOfConfig":"332"},{"size":1428,"mtime":1617870005141,"results":"619","hashOfConfig":"332"},{"size":168,"mtime":1617559061121,"results":"620","hashOfConfig":"332"},{"size":853,"mtime":1617559457172,"results":"621","hashOfConfig":"332"},{"size":143,"mtime":1617620668098,"results":"622","hashOfConfig":"332"},{"size":429,"mtime":1617753330831,"results":"623","hashOfConfig":"332"},{"size":481,"mtime":1617673365226,"results":"624","hashOfConfig":"332"},{"size":344,"mtime":1617624041276,"results":"625","hashOfConfig":"332"},{"size":285,"mtime":1617624135887,"results":"626","hashOfConfig":"332"},{"size":381,"mtime":1617624265960,"results":"627","hashOfConfig":"332"},{"size":516,"mtime":1617846542565,"results":"628","hashOfConfig":"332"},{"size":573,"mtime":1617847666254,"results":"629","hashOfConfig":"332"},{"size":457,"mtime":1617645303972,"results":"630","hashOfConfig":"332"},{"size":685,"mtime":1617761172195,"results":"631","hashOfConfig":"332"},{"size":685,"mtime":1617764234391,"results":"632","hashOfConfig":"332"},{"size":4702,"mtime":1617680425391,"results":"633","hashOfConfig":"332"},{"size":1541,"mtime":1617680887150,"results":"634","hashOfConfig":"332"},{"size":4974,"mtime":1618064468874,"results":"635","hashOfConfig":"332"},{"size":430,"mtime":1617719310386,"results":"636","hashOfConfig":"332"},{"size":2091,"mtime":1617846952756,"results":"637","hashOfConfig":"332"},{"size":149,"mtime":1617814179217,"results":"638","hashOfConfig":"332"},{"size":400,"mtime":1617846926828,"results":"639","hashOfConfig":"332"},{"size":420,"mtime":1617761830098,"results":"640","hashOfConfig":"332"},{"size":959,"mtime":1617763500936,"results":"641","hashOfConfig":"332"},{"size":548,"mtime":1617859177183,"results":"642","hashOfConfig":"332"},{"size":349,"mtime":1617820188010,"results":"643","hashOfConfig":"332"},{"size":529,"mtime":1617813647017,"results":"644","hashOfConfig":"332"},{"size":474,"mtime":1617846447892,"results":"645","hashOfConfig":"332"},{"size":540,"mtime":1617867974193,"results":"646","hashOfConfig":"332"},{"size":553,"mtime":1617869065426,"results":"647","hashOfConfig":"332"},{"size":16435,"mtime":1618028483093,"results":"648","hashOfConfig":"332"},{"size":1063,"mtime":1617902115753,"results":"649","hashOfConfig":"332"},{"size":2431,"mtime":1617902123320,"results":"650","hashOfConfig":"332"},{"size":2045,"mtime":1618159080226,"results":"651","hashOfConfig":"332"},{"size":619,"mtime":1617902135988,"results":"652","hashOfConfig":"332"},{"size":172,"mtime":1617932529964,"results":"653","hashOfConfig":"332"},{"size":780,"mtime":1618155544410,"results":"654","hashOfConfig":"332"},{"size":694,"mtime":1618155558658,"results":"655","hashOfConfig":"332"},{"size":1604,"mtime":1617957841899,"results":"656","hashOfConfig":"332"},{"size":732,"mtime":1618021664904,"results":"657","hashOfConfig":"332"},{"size":826,"mtime":1618026458185,"results":"658","hashOfConfig":"332"},{"size":801,"mtime":1618155554358,"results":"659","hashOfConfig":"332"},{"size":377,"mtime":1618189257802,"results":"660","hashOfConfig":"332"},{"size":382,"mtime":1618189256946,"results":"661","hashOfConfig":"332"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},"1akjpqo",{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"664"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"664"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"683","messages":"684","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"664"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"664"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"691","messages":"692","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"693","usedDeprecatedRules":"664"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"664"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"664"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"664"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"664"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"732","messages":"733","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"664"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"664"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"664"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"664"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"768","usedDeprecatedRules":"664"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"771"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"664"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"664"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"664"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"801","messages":"802","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"664"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"664"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"664"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"664"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"664"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"882","usedDeprecatedRules":"664"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"664"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"664"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"917","usedDeprecatedRules":"664"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"664"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"664"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"664"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"664"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"992"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"992"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1025","usedDeprecatedRules":"664"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"664"},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1031","usedDeprecatedRules":"664"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1046","usedDeprecatedRules":"664"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1155","usedDeprecatedRules":"664"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1158","usedDeprecatedRules":"664"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1161","usedDeprecatedRules":"664"},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1168","usedDeprecatedRules":"664"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1171","usedDeprecatedRules":"664"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1178","usedDeprecatedRules":"664"},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193","usedDeprecatedRules":"664"},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1202","messages":"1203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1204","usedDeprecatedRules":"664"},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"664"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1230","usedDeprecatedRules":"664"},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235","usedDeprecatedRules":"664"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1242","messages":"1243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1248","messages":"1249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1252","messages":"1253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1260","messages":"1261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270","usedDeprecatedRules":"664"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1275","messages":"1276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283","usedDeprecatedRules":"664"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"664"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1299","messages":"1300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1301","messages":"1302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1317","usedDeprecatedRules":"664"},{"filePath":"1318","messages":"1319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1320","usedDeprecatedRules":"664"},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1323","usedDeprecatedRules":"664"},{"filePath":"1324","messages":"1325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1326","messages":"1327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1328","usedDeprecatedRules":"664"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1333","messages":"1334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1335","messages":"1336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1337","messages":"1338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1339","messages":"1340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1341","messages":"1342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1347","messages":"1348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1349","messages":"1350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1351","usedDeprecatedRules":"664"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1360","messages":"1361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1366","messages":"1367","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1368","usedDeprecatedRules":"664"},{"filePath":"1369","messages":"1370","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1371","usedDeprecatedRules":"664"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1374","messages":"1375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1376","messages":"1377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js",[],["1380","1381"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js",["1382"],"import React, { useEffect, useState, lazy, Suspense } from \"react\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport { FETCH_CURRENT_USER, FETCH_FRIENDS } from \"../apollo/operations/queries/user\";\nimport { FETCH_NOTIFICATIONS } from \"../apollo/operations/queries/notification\";\nimport { useQuery } from \"@apollo/client\";\nimport ErrorBoundary from \"../containers/ErrorBoundary\";\nimport Explores from \"../pages/explores\";\nimport HomePage from \"../pages/home\"\nimport useUserStatusSubscriptions from \"../hooks/useUserStatusSubscriptions\"\nimport useContactSubscription from \"../hooks/useContactSubscription\"\nconst AuthPage = lazy(() => import(\"../pages/auth\"));\nconst NotificationsPage = lazy(() => import(\"../pages/notifications\"));\nconst PersonalPage = lazy(() => import(\"../pages/personal\"));\nconst ContactsPage = lazy(() => import(\"../pages/contacts\"));\nconst ChatsPage = lazy(() => import(\"../pages/chats\"));\n\nfunction App() { \n  const { colorMode } = useThemeUI();\n  const [fetched, setFetched] = useState(false);\n  const [isAuth, setIsAuth] = useState(null)\n  const { setFriends, setNotifications, setCurrentUser } = cacheMutations;  \n  const {refetch : fetchCurrentUser} = useQuery(FETCH_CURRENT_USER, {fetchPolicy : \"cache-and-network\"});\n  const {refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const {refetch: fetchFriends } = useQuery(FETCH_FRIENDS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  useEffect(() => {\n    let _isMounted = true ; \n    fetchCurrentUser().then(async ({data}) => {\n      const {fetchCurrentUser} = data ; \n      \n      if(_isMounted){\n        setCurrentUser({...fetchCurrentUser});  \n        //after fetching current user, fetch notification and friends  \n        const skip = 0;               \n        const limitNotifications = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n        const {data : notificationsData} = await fetchNotifications({skip, limit : limitNotifications})                \n        setNotifications([...notificationsData.fetchNotifications]);\n        \n        const limitFriends = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n        const {data : friendsData} = await fetchFriends({skip, limit : limitFriends});                \n        setFriends([...friendsData.fetchFriends])\n      \n      }      \n      setFetched(true)\n    }).catch(err => {\n      setFetched(true)\n    })\n    \n  },[isAuth])\n \n  useUserStatusSubscriptions()\n  useContactSubscription()     \n  if (!fetched) return null;\n  return (\n    <Router>\n      <GlobalStyles theme={colorMode} />\n      <ErrorBoundary>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/explores\" component={Explores} />\n            <Route path=\"/auth\" render={(props) => <AuthPage setIsAuth={(value) => setIsAuth(value)} {...props}/>} />\n            <Route path=\"/contacts\" component={ContactsPage} />\n            <Route path=\"/chats\" component={ChatsPage} />\n            <Route path=\"/notifications\" component={NotificationsPage} />\n            <Route path=\"/:slug\" component={PersonalPage} />\n          </Switch>\n        </Suspense>\n      </ErrorBoundary>\n    </Router>\n  );\n}\n\nexport default (App);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js",["1383"],"import React, { useState } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nconst emojiPlugin = createEmojiPlugin();\nconst { EmojiSelect, EmojiSuggestions } = emojiPlugin;\nconst linkifyPlugin = createLinkifyPlugin({\n  component(props) {\n    return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n  },\n});\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [linkifyPlugin, mentionPlugin, emojiPlugin];\n\nconst Linkify = () => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n\n  const onOpenChange = React.useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = React.useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n  return (\n    <div className=\"wrapper\">\n      <h2 style={{ color: \"#43a047\" }}>Draftjs Linkify</h2>\n      <Editor\n        editorState={editorState}\n        onChange={setEditorState}\n        plugins={plugins}\n      />\n      <MentionSuggestions\n        open={open}\n        suggestions={suggestions}\n        onOpenChange={onOpenChange}\n        onSearchChange={onSearchChange}\n      />\n      <EmojiSuggestions />\n      <EmojiSelect />\n    </div>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 36812,\n    name: \"Maxewqeq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 789327,\n    name: \"Nikewqewqad Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 32131,\n    name: \"Pascalsadwq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 121312,\n    name: \"Matthewewqe Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 125134,\n    name: \"Julianewq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 3213214,\n    name: \"Jyotiasd Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 65361,\n    name: \"Maxewq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 5321,\n    name: \"Nikewq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 43,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n];\n\nexport default Linkify;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js",["1384","1385","1386","1387","1388"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js",["1389"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport styled from \"styled-components\";\nimport Notifications from \"../components/Notification/Notifications\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_NOTIFICATIONS,\n} from \"../apollo/operations/queries/cache\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport MainBody from \"../components/Body/MainBody\";\nimport { FETCH_NOTIFICATIONS } from \"../apollo/operations/queries/notification\";\n\nconst NotificationsPage = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const {\n    data: { notifications },\n  } = useQuery(GET_NOTIFICATIONS, { fetchPolicy: \"cache-first\" });\n  const { setNotifications } = cacheMutations;\n  const [fetchNotificationsMore, setFetchNotificationsMore] = useState(false);\n  useEffect(() => {\n    let _mounted = true;\n    if(user && fetchNotifications){\n      if (!notifications.length) {\n        fetchNotifications({\n          variables: {\n            skip: 0,\n            limit: +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE,\n          },\n        }).then(({ data }) => {\n          if (data && data.fetchNotifications && _mounted) {\n            setNotifications([...data.fetchNotifications]);\n          }\n        });\n      }\n      else if(fetchNotificationsMore){\n        const skip = notifications.length;\n        const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n        fetchNotifications({ skip, limit }).then(\n          ({ data: { fetchNotifications } }) => {\n            if (_mounted) {\n              setNotifications([...notifications, ...fetchNotifications]);\n              setFetchNotificationsMore(false);\n            }\n          }\n        );\n      }\n    }\n   \n    return () => (_mounted = false);\n  }, [user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore]);\n\n  useEffect(() => {\n    function setLoadmoreOnScroll() {\n      const {\n        scrollHeight,\n        scrollTop,\n        clientHeight,\n      } = document.documentElement;\n      if (clientHeight + scrollTop > scrollHeight * 0.75) {\n        setFetchNotificationsMore(true);\n      }\n    }\n    window.addEventListener(\"scroll\", (e) => {\n      setLoadmoreOnScroll();\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", () => {\n        setLoadmoreOnScroll();\n      });\n  }, []);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <div className=\"notifications\">\n            {user ? <Notifications /> : <CardRequestAuth />}\n          </div>\n          <div className=\"sidebar\"></div>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nconst MainContent = styled.div`\n  display: flex;\n  margin: auto;\n  padding: 1.5rem 0;\n  .notifications {\n    width: 100%;\n  }\n  .sidebar {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    .notifications {\n      width: calc(100% - 320px);\n      padding: 0 1rem;\n    }\n    .sidebar {\n      display: block;\n      width: 320px;\n      padding: 0 1rem;\n    }\n  }\n  @media screen and (min-width: 992px) {\n    padding: 0;\n    .notifications {\n      width: 50%;\n    }\n    .sidebar {\n      width: 50%;\n    }\n  }\n  @media screen and (min-width: 1920px) {\n    .notifications {\n      width: 55%;\n    }\n    .sidebar {\n      width: 45%;\n    }\n  }\n`;\nexport default NotificationsPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js",["1390"],"import React, { lazy, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { GET_CURRENT_USER } from \"../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nconst SignIn = lazy(() => import(\"../components/Auth/SignIn\"));\nconst SignUp = lazy(() => import(\"../components/Auth/SignUp\"));\n\nconst AuthPage = ({setIsAuth, ...props}) => {\n  const { match, location, history } = props;\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-only\",\n  }); \n  useEffect(() => {\n    if (user && location.state && location.state.from) {\n      history.replace(location.state.from);\n      setIsAuth(true);\n    } else if (user) {\n      history.replace(\"/\");\n      setIsAuth(Date.now());\n    }\n  }, [user, history, location.state]);\n  return (\n    <Switch>\n      <Route\n        exact\n        path={match.path}\n        render={(props) => <SignIn authPath={match.path} {...props} />}\n      />\n      <Route\n        path={`${match.path}/signup`}\n        render={(props) => <SignUp authPath={match.path} {...props} />}\n      />\n    </Switch>\n  );\n};\n\nexport default AuthPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js",["1391","1392"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js",["1393","1394"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../apollo/operations/queries/cache\";\nimport {\n  FETCH_LIST_CONTACT,\n  FETCH_FRIENDS,  \n} from \"../apollo/operations/queries/user\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport MainBody from \"../components/Body/MainBody\";\nimport { MainContent, MainContentFullSize, ContactTitle } from \"./styles/pages.styles\";\nimport SentRequestsToAddFriend from \"../components/Contact/SentRequestsToAddFriend\";\nimport ReceivedRequestsToAddFriend from \"../components/Contact/ReceivedRequestsToAddFriend\";\nimport FriendsList from \"../components/Contact/FriendsList\";\nimport useLanguage from \"../components/Global/useLanguage\";\n\n\nconst FriendsPage = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [fetched, setFetched] = useState(false);\n  const { i18n, lang } = useLanguage();\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-first\",\n  });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, {\n    fetchPolicy: \"cache-first\",\n  });\n \n  const { refetch: fetchFriends } = useQuery(FETCH_FRIENDS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  \n  const {\n    setFriends,\n    setSentRequestsToAddFriend,\n    setReceivedRequestsToAddFriend,\n  } = cacheMutations;\n\n  const { refetch: fetchListContact } = useQuery(FETCH_LIST_CONTACT, {\n    skip: true,\n  });\n\n  useEffect(() => {\n    if (!fetched) {\n      if (\n        user?.sentRequestToAddFriend.length ||\n        user?.receivedRequestToAddFriend.length ||\n        user?.friends.length\n      ) {\n        fetchListContact().then(({ data }) => {\n          setFetched(true); \n          console.log(\"fetched\")         \n          const {\n            sentRequests,\n            receivedRequests,\n            friends: friendsList,\n          } = data.fetchListContact;\n          if (sentRequests.length) {\n            setSentRequestsToAddFriend([...sentRequests]);\n          }\n          if (receivedRequests.length) {\n            setReceivedRequestsToAddFriend([...receivedRequests]);\n          }\n          if (!friends.length) {\n            setFriends([...friendsList]);\n          }\n        });\n      }\n    }\n  }, [user, fetched, setFetched]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", async (e) => {\n      const docEl = document.documentElement;\n      if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n        setLoadingMore(true);\n      }\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", async (e) => {\n        const docEl = document.documentElement;\n        if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n          setLoadingMore(true);\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (loadingMore) {\n      const skip = friends.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchFriends({ skip, limit }).then(({ data }) => {\n        if (data?.fetchFriends?.length) {\n          setFriends([...friends, ...data.fetchFriends]);\n          setLoadingMore(false);\n        }\n      });\n    }\n  }, [loadingMore]);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentFullSize>\n            <ContactTitle>\n              {i18n.store.data[lang].translation.contacts.title}\n            </ContactTitle>\n            <SentRequestsToAddFriend />\n            <ReceivedRequestsToAddFriend />\n            <FriendsList />\n          </MainContentFullSize>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default FriendsPage;","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js",["1395","1396"],"import React, { lazy, useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport {\n  GET_CURRENT_USER,\n  GET_MESSAGES_STORAGE,\n} from \"../apollo/operations/queries/cache\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport {\n  RequestAuthScreen,\n  ChatsWrapper,\n  SidebarNav,\n  MainTab,\n} from \"./styles/chats.styles\";\nimport MenuChat from \"../components/Chat/MenuChat\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../apollo/operations/queries/chat\";\nimport { UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED } from \"../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport useChatSubscriptions from \"../hooks/useChatSubscriptions\";\n\nconst ChatConversations = lazy(() =>\n  import(\"../components/Chat/Conversations\")\n);\nconst ChatContacts = lazy(() => import(\"../components/Chat/Contact\"));\n\nconst ChatsPage = ({ match }) => {\n  //use Query\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-first\" });\n  const { refetch: fetchChatConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n  const [\n    updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched,\n  ] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n  );\n  const { setInitialMessagesStorage, setNumberOfConversations } = cacheMutations;\n  //useState\n  \n  useChatSubscriptions();\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (!Object.keys(messagesStorage).length && user) {  \n      //fetch conversations \n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchChatConversations().then(({ data }) => {\n        if (_isMounted) {          \n          const { conversations, numberOfConversations } = data.fetchChatConversations;\n          let storage = {};          \n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });          \n          \n          setInitialMessagesStorage({ ...storage });\n          //update those conversations to received when user online if he/she has offlined before       \n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setNumberOfConversations(numberOfConversations);\n        }\n      });\n    }\n    return () => _isMounted = false ;\n  }, []);  \n  if (!user)\n    return (\n      <Layout>\n        <RequestAuthScreen>\n          <CardRequestAuth />\n        </RequestAuthScreen>\n      </Layout>\n    );\n  return (\n    <Layout>\n      <ChatsWrapper>\n        <SidebarNav>\n          <MenuChat />\n        </SidebarNav>\n        <MainTab>\n          <Switch>\n            <Route exact path={match.path} component={ChatConversations} />\n            <Route\n              exact\n              path={`${match.path}/contacts`}\n              component={ChatContacts}\n            />\n          </Switch>\n        </MainTab>\n      </ChatsWrapper>\n    </Layout>\n  );\n};\n\nexport default ChatsPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx",["1397","1398","1399"],"import React, { useState, useCallback, createContext } from \"react\";\nimport Header from \"../components/Header/Header\";\nimport MenuList from \"../components/Menu/MenuList\";\nimport styled from \"styled-components\";\nimport classNames from \"classnames\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_TOGGLE_BUTTON_MENU } from \"../apollo/operations/queries/cache\";\nimport useMenuList from \"../components/Menu/useMenuList\";\nimport { useThemeUI } from \"theme-ui\";\nimport AlertDialogSlide from \"../components/UI/AlertDialogSlide\";\nimport LazyLoad from \"react-lazyload\"\n\nconst Layout = ({ children, className, ...props }) => {\n  const getToggleButtonMenu = useQuery(GET_TOGGLE_BUTTON_MENU);\n  const { toggleButtonMenu } = getToggleButtonMenu.data;\n  const { menu, explores } = useMenuList();\n  const { colorMode } = useThemeUI();\n  return (\n    <div className={className} theme={colorMode} {...props}>\n      <AlertDialogSlide />\n      <Header />\n      <div\n        className={classNames(\"small-viewport-menu-list\", {\n          \"hide-small-viewport-list\": toggleButtonMenu,\n        })}\n      >\n        <MenuList list={menu} title=\"Menu\" />\n        <MenuList list={explores} title=\"Explores\" />\n      </div>\n      \n      <div className=\"body\"><LazyLoad>{children}</LazyLoad></div>\n      \n     \n    </div>\n  );\n};\n\nexport default styled(Layout)`\n  .small-viewport-menu-list {\n    width: 100vw;\n    position: fixed;\n    height: calc(100vh - 60px);\n    background-color: ${({ theme }) =>\n      theme === \"dark\"\n        ? \"var(--color-background-dark)\"\n        : \"var(--color-background-default)\"};\n    transition: var(--mainTransition);\n    opacity: 1;\n    overflow-x: hidden;\n    z-index: 1000;\n  }\n  .hide-small-viewport-list {\n    height: 0 !important;\n    visibility: hidden;\n    opacity: 0;\n    z-index: -1;\n  }\n  @media screen and (min-width: 992px) {\n    .small-viewport-menu-list {\n      display: none;\n    }\n  }\n`;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx",["1400"],"import React from \"react\";\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  Title,\n  SubTitle,\n  ErrorMessage,\n} from \"./AuthForm\";\nimport CustomInput from \"../Custom/CustomInput\";\nimport CustomButton from \"../Custom/CustomButton\";\nimport { withRouter } from \"react-router-dom\";\nimport GoogleRecaptcha from \"./GoogleRecapcha\";\nimport FacebookLogin from \"./GoogleAuth\";\nimport GoogleLogin from \"./FacebookAuth\";\nimport { useMutation } from \"@apollo/client\";\nimport { SIGNUP } from \"../../apollo/operations/mutations/user\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport {login} from \"./Auth.utility\"\nconst INITIAL_STATE = {\n  controls: {\n    name: {\n      type: \"text\",\n      name: \"name\",\n      valid: false,\n      label: \"Name\",\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 50,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    email: {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      valid: false,\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    password: {\n      type: \"password\",\n      name: \"password\",\n      valid: false,\n      label: \"Password\",\n      validation: {\n        required: true,\n        minLength: 6,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    confirmPassword: {\n      type: \"password\",\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      valid: false,\n      validation: {\n        required: true,\n        minLength: 6,\n        match: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n  },\n  formIsValid: false,\n  loaded: false,\n  disabled: true,\n  title: \"\",\n};\n\nfunction withSignUpMutation(WrappedComponent) {\n  return function MutationWrapper(props) {\n    const [createUser, { data, loading, error }] = useMutation(SIGNUP, {errorPolicy : \"all\"});      \n    return (\n      <WrappedComponent\n        createUser={createUser}        \n        data={data}        \n        loading={loading}        \n        error={error}        \n        {...props}\n      />\n    );\n  };\n}\n\nconst SignUp = withSignUpMutation(\n  class extends React.Component {\n    state = { ...INITIAL_STATE };\n    timer = null ;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    componentWillUnmount(){\n      clearTimeout(this.timer)\n      if(this.unsubcribeLogin){\n        this.unsubcribeLogin();\n      }\n    }\n    unsubcribeLogin; \n    async componentDidUpdate(prevProps){\n      if(prevProps.error !== this.props.error){\n        this.clearForm();        \n      }\n      if(prevProps.data !== this.props.data && this.props.data )  {\n        const { user, token, tokenExpire} = this.props.data.createUser;                    \n        this.unsubcribeLogin = await login(user, token, tokenExpire)\n        this.clearForm() ;\n      }\n    }\n\n    clearForm = () => {\n      this.setState({...INITIAL_STATE});      \n      setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    \n    checkValidity = (value, rules) => {\n      let isValid = true;\n      let errorsMessage = [];\n      if (rules.required) {\n        isValid = value.trim().length && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"This field is required\");\n        }\n      }\n      if (rules.isEmail) {\n        const pattern = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        isValid = pattern.test(value) && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Email is invalid\");\n        }\n      }\n      if (rules.minLength) {\n        isValid = value.trim().length >= rules.minLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at least ${rules.minLength} characters`);\n        }\n      }\n      if (rules.maxLength) {\n        isValid = value.trim().length <= rules.maxLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at most ${rules.maxLength} characters`);\n        }\n      }\n      if (rules.match) {\n        isValid =\n          value.trim() === this.state.controls.password.value && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Password and confirm Password do not match\");\n        }\n      }\n      return errorsMessage;\n    };\n\n    handleChange = (e, name) => {\n      let updatedControls = { ...this.state.controls };\n      let updatedControlElement = { ...updatedControls[name] };\n      updatedControlElement.value = e.target.value;\n      const checkValid = this.checkValidity(\n        e.target.value,\n        updatedControlElement.validation\n      );\n      updatedControlElement.valid = checkValid.length === 0;\n      updatedControlElement.touched = true;\n      updatedControlElement.validationErrors = checkValid;\n      updatedControls[name] = updatedControlElement;\n      let { email, password, confirmPassword } = updatedControls;\n      const formIsValid =\n        email.valid &&\n        updatedControlElement.valid &&\n        password.valid &&\n        confirmPassword.valid;\n      this.setState({ controls: updatedControls, formIsValid });\n    };\n\n    handleSubmitSignUpForm = (e) => {\n      e.preventDefault();\n      if (!this.state.formIsValid) {\n        this.setState({ ...INITIAL_STATE });\n        return;\n      }\n      const { name, email, password } = this.state.controls;\n\n      this.props.createUser({\n        variables: {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        },\n      });\n    };\n\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {      \n      const { formIsValid, loaded, disabled } = this.state;\n      let formInputArray = [];\n      Object.keys(this.state.controls).forEach((controlItem) => {\n        formInputArray.push(this.state.controls[controlItem]);\n      });\n      const { error, loading } = this.props;   \n         \n      if(!loaded) return <div>Loading...</div>\n      return (\n        <CustomFormContainer onSubmit={this.handleSubmitSignUpForm}>\n          <FormHeader>\n            <Title>Sign Up</Title>\n            <SubTitle>Sign up your account via email and password.</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}\n          {loading && <h2>Loading...</h2>}\n          <FlashForm>\n            <FacebookLogin />\n            <GoogleLogin />\n          </FlashForm>\n          <FormGroups>\n            {formInputArray.map(\n              ({\n                label,\n                name,\n                touched,\n                type,\n                valid,\n                validation,\n                validationErrors,\n                value,\n              }) => (\n                <CustomInput\n                  key={name}\n                  type={type}\n                  name={name}\n                  value={value}\n                  label={label}\n                  onChange={(e) => this.handleChange(e, name)}\n                  require={validation.required}\n                  touched={touched}\n                  valid={valid}\n                  validationErrors={validationErrors}\n                />\n              )\n            )}\n            {loaded && (\n              <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n            )}\n            <CustomButton\n              variant=\"outlined\"\n              size=\"small\"\n              color=\"#0d47a1\"\n              bgColor=\"blue\"\n              disabled={!formIsValid || disabled}\n            >\n              Submit\n            </CustomButton>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              <StyledLink to=\"/auth\">Signin account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{\" \"}\n              <StyledLink to=\"/auth/restore-account\">\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignUp);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx",["1401"],"import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport {GET_PERSONAL_USER_CACHE_DATA\n} from \"../../apollo/operations/queries/cache\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport {\n  Container,\n  UserName,\n  PersonalHeadingBackground,\n  BackgroundImageContainer,\n  PersonalMenus,\n  ProfileMenuItemLink,\n  Footer\n} from \"./styles/PersonalHeading.styles\";\nimport BackgroundImage from \"../../assets/images/background-wallpaper.jpg\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport PersonalHeadingContact from \"./PersonalHeadingContact\"\n\nconst PersonalHeading = () => {\n  const {data : {user,currentPersonalUser}} =useQuery(GET_PERSONAL_USER_CACHE_DATA, {fetchPolicy : \"cache-first\"})\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const [menus, setMenus] = useState([]);\n  const [activeLink, setActiveLink] = useState(null);\n  \n  useEffect(() => {\n    setMenus(i18n.store.data[lang].translation.personalMenus);\n  }, [lang]);\n  \n  useEffect(() => {\n    if (currentPersonalUser) {\n      setActiveLink(`/${currentPersonalUser.slug}/posts`);\n    }\n  }, [currentPersonalUser]);\n\n  if (!currentPersonalUser) return null;\n  return (\n    <Container theme={colorMode}>\n      <PersonalHeadingBackground theme={colorMode} background={BackgroundImage}>\n        <BackgroundImageContainer theme={colorMode}>\n          <LazyLoadImage\n            src={currentPersonalUser.avatar}\n            alt={currentPersonalUser.avatar}\n          />\n          <UserName>\n            <h4>{currentPersonalUser.name}</h4>\n            <span>@{currentPersonalUser.slug}</span>\n          </UserName>\n        </BackgroundImageContainer>\n      </PersonalHeadingBackground>\n      <Footer>\n        <PersonalMenus>\n          {menus.length\n            ? menus.map((menu) => (\n                <ProfileMenuItemLink\n                  to={menu.path(currentPersonalUser.slug)}\n                  theme={colorMode}\n                  active={(\n                    activeLink === menu.path(currentPersonalUser.slug)\n                  ).toString()}\n                  onClick={() =>\n                    setActiveLink(menu.path(currentPersonalUser.slug))\n                  }\n                >\n                  {menu.name}\n                </ProfileMenuItemLink>\n              ))\n            : null}\n        </PersonalMenus>\n        {user && <PersonalHeadingContact/>}\n      </Footer>\n    </Container>\n  );\n};\n\nexport default React.memo(PersonalHeading);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx",["1402","1403","1404"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx",["1405"],"import React , {useEffect} from \"react\";\nimport {\n  GET_CURRENT_USER,\n  GET_SENT_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_USERS_SENT_REQUEST_TO_ADD_FRIEND } from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nconst SentRequestsToAddFriend = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { sentRequestsToAddFriend },\n  } = useQuery(GET_SENT_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const {\n    refetch: fetchUsersSentRequestsToAddFriend,\n  } = useQuery(FETCH_USERS_SENT_REQUEST_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const { setSentRequestsToAddFriend } = cacheMutations;\n  const getMoreUsersSentRequestToAddFriend = () => {\n    const skip = sentRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_CONTACT_USER_PER_PAGE;\n    if (fetchUsersSentRequestsToAddFriend) {\n      fetchUsersSentRequestsToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchUsersSentRequestToAddFriend?.length) {         \n          setSentRequestsToAddFriend([\n            ...sentRequestsToAddFriend,\n            ...data.fetchUsersSentRequestToAddFriend,\n          ]);\n        }\n      });\n    }\n  };\n \n  if (!user || !user?.sentRequestToAddFriend.length || !sentRequestsToAddFriend.length) return null;\n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userSentRequest}\n      </Title>\n      {sentRequestsToAddFriend.map((item) => (\n        <ContactItem key={item._id} userContact={item} type=\"sent\" />\n      ))}\n      {sentRequestsToAddFriend.length < user.sentRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreUsersSentRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(SentRequestsToAddFriend);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx",["1406","1407","1408"],"import React, { useEffect } from \"react\";\nimport {\n  GET_CURRENT_USER,\n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport {\n  FETCH_USERS_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n  FETCH_CURRENT_USER,\n} from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nimport subscriptions from \"../../apollo/operations/subscriptions\";\nimport _ from \"lodash\"\nconst SentRequestsToAddFriend = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-first\",\n  });\n  const { refetch: fetchUsersReceivedRequestToAddFriend } = useQuery(\n    FETCH_USERS_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n\n  const { setReceivedRequestsToAddFriend } = cacheMutations;\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n\n  const getMoreUsersReceivedRequestToAddFriend = () => {\n    const skip = receivedRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_CONTACT_USER_PER_PAGE;\n    if (fetchUsersReceivedRequestToAddFriend) {\n      fetchUsersReceivedRequestToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchUsersReceivedRequestToAddFriend?.length) {\n          const resultData = [...receivedRequestsToAddFriend, ...data.fetchUsersReceivedRequestToAddFriend]\n          const uniqueResultData = _.uniqBy(resultData, \"_id\")\n          \n          setReceivedRequestsToAddFriend([...uniqueResultData]);\n        }\n      });\n    }\n  };\n\n  if (\n    !user ||\n    !user?.receivedRequestToAddFriend.length ||\n    !receivedRequestsToAddFriend.length\n  )\n    return null;\n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userReceivedRequest}\n      </Title>\n      {receivedRequestsToAddFriend.map((item) => (\n        <ContactItem key={item._id} userContact={item} type=\"received\" />\n      ))}\n      {receivedRequestsToAddFriend.length <\n      user.receivedRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreUsersReceivedRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(SentRequestsToAddFriend);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx",["1409","1410","1411"],"import React, { useEffect, useState, useRef, createContext } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_FRIENDS } from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport ListContacts from \"./ListContacts\";\nimport ChatBoard from \"./ChatBoard\";\nexport const ContactContext = createContext({});\n\nconst Contact = () => {\n  //useQuery\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const { setCurrentChat } = cacheMutations;\n\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-only\" });\n  \n  //useState\n  const [search, setSearch] = useState(\"\");\n  const [contactData, setContactData] = useState([]);\n  const [originData, setOriginData] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const popupRef = useRef(null);\n\n  useEffect(() => {\n    if (friends.length) {\n      if (!search) {\n        setContactData([...originData]);\n      } else {\n        const searchRegex = new RegExp(search, \"i\");\n        const searchResults = originData.filter(\n          ({ name }) => !!name.match(searchRegex)\n        );\n        setContactData([...searchResults]);\n      }\n    }\n  }, [search, friends]);\n\n  useEffect(() => {    \n    setContactData([...friends]);\n    setOriginData([...friends]);    \n  }, [friends]);\n\n  useEffect(() => {\n    setCurrentChat(null);\n  },[])\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-contact-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n  const { colorMode } = useThemeUI();\n\n  const onChangeSearch = React.useCallback((e) => {\n    setSearch(e.target.value);\n  },[])\n  if (!user) return null;\n  return (\n    <ContactContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top+50}\n      >\n        <span>Mark as favorite</span>\n        <hr />\n        <span>Label</span>\n        <span>Set alias</span>\n        <hr />\n        <span>Block</span>\n        <span>Delete</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search search={search} onChange={onChangeSearch} />\n          <hr />\n          <ListContacts data={contactData.length ? contactData : friends} />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </ContactContext.Provider>\n  );\n};\n\nexport default Contact;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx",["1412"],"import {useState, useEffect} from 'react'\nimport useLanguage from \"../Global/useLanguage\"\nimport {useLocation} from \"react-router-dom\"\nimport {useQuery} from \"@apollo/client\"\nimport {GET_CURRENT_USER} from \"../../apollo/operations/queries/cache\"\nconst useMenuList = () => {\n  const {data : {user}} = useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"});\n\n  const location = useLocation();  \n  const { lang, i18n } = useLanguage();\n  const [namePage, setNamePage] = useState(\"\");\n  const [menu, setMenu] = useState([]);  \n  const [explores, setExplores] = useState([]);\n  \n  useEffect(() => {\n    const menuName =  i18n.store.data[lang].translation.menuList.find(\n      (item) => item.path === location.pathname\n    )        \n    setNamePage(\n      menuName ? menuName.name : \"\"\n    );\n    setMenu(i18n.store.data[lang].translation.menuList);\n    setExplores(i18n.store.data[lang].translation.explores);\n  }, [lang, i18n.store.data, location.pathname]);\n  return {\n    namePage,\n    menu, \n    explores\n  }\n}\n\nexport default useMenuList\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx",["1413","1414"],"import React, {useEffect} from \"react\";\nimport {\n  ContactItemWrapper,\n  ContactInfo,\n  ContactActions,\n  FriendActions,\n} from \"./Contact.styles\";\nimport { Link } from \"react-router-dom\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport Button from \"../Controls/ButtonDefault\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BsChatDots, BsCameraVideo, BsThreeDotsVertical } from \"react-icons/bs\";\nimport { MdStarBorder } from \"react-icons/md\";\nimport { IoMdCall } from \"react-icons/io\";\n\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_PERSONAL_USER,\n  GET_SENT_REQUESTS_TO_ADD_FRIEND,\n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n  GET_FRIENDS\n} from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { userMutations } from \"../../apollo/operations/mutations/user\";\nimport { useQuery, useMutation } from \"@apollo/client\";\n\n\nconst ContactItem = ({ userContact, type }) => {\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });  \n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { sentRequestsToAddFriend },\n  } = useQuery(GET_SENT_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const [cancelRequestToAddFriend] = useMutation(\n    userMutations.CANCEL_REQUEST_TO_ADD_FRIEND\n  );\n  const [rejectRequestToAddFriend] = useMutation(userMutations.REJECT_REQUEST_TO_ADD_FRIEND);\n  const [acceptRequestToAddFriend] = useMutation(userMutations.ACCEPT_REQUEST_TO_ADD_FRIEND);\n  const {\n    setCurrentUser,\n    setCurrentPersonalUser,\n    setReceivedRequestsToAddFriend,\n    setSentRequestsToAddFriend,\n    setFriends\n  } = cacheMutations;\n\n\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...sender.friends],\n      following: [...sender.following],\n      followed: [...sender.followed],\n      sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n    });\n    if (currentPersonalUser && currentPersonalUser._id === userContact._id) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        following: [...receiver.following],\n        followed: [...receiver.followed],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    }\n  };\n\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    const filterUsersReceivedRequest = sentRequestsToAddFriend.filter(\n      (userReceivedRequest) => userReceivedRequest._id !== userContact._id\n    );   \n    cancelRequestToAddFriend({\n      variables: { receiverId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;     \n      setSentRequestsToAddFriend(filterUsersReceivedRequest);\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n   //Handle accept request to add friend\n   const onAcceptRequestToAddFriend = () => {\n     const filterUsersSentRequest = receivedRequestsToAddFriend.filter(userSentRequest => userSentRequest._id !== userContact._id);\n    acceptRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.acceptRequestToAddFriend;\n      //remove user at recived requests to head of friends list\n      setReceivedRequestsToAddFriend(filterUsersSentRequest);\n      setFriends([{...userContact}, ...friends])\n      updateMutationOnChange(sender, receiver);    \n    });\n  };\n\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    const filterUsersSentRequest = receivedRequestsToAddFriend.filter(userSentRequest => userSentRequest._id !== userContact._id);    \n    \n    rejectRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.rejectRequestToAddFriend;\n        setReceivedRequestsToAddFriend(filterUsersSentRequest)\n        updateMutationOnChange(sender, receiver);        \n      })\n      .catch((err) => console.log(err));\n  };\n\n  const sentActions = (\n    <Button cancel onClick={onCancelRequestToAddFriend}>\n      {i18n.store.data[lang].translation.contacts.cancelRequest}\n    </Button>\n  );\n  const receivedActions = (\n    <>\n      <Button acceptBtn variant=\"outlined\" onClick={onAcceptRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.acceptRequest}\n      </Button>\n      <Button reject onClick={onRejectRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.rejectRequest}\n      </Button>\n    </>\n  );\n\n  const friendsActions = (\n    <FriendActions>\n      <Button favorite>\n        <MdStarBorder />\n      </Button>\n      <Button chat>\n        <BsChatDots />\n      </Button>\n      <Button call>\n        <IoMdCall />\n      </Button>\n      <Button videocall>\n        <BsCameraVideo />\n      </Button>\n      {/* <Button setting>\n        <BsThreeDotsVertical />\n      </Button>      */}\n    </FriendActions>\n  );\n  return (\n    <ContactItemWrapper theme={colorMode}>\n      <ContactInfo>\n        <Link to={userContact.slug}>\n          <LazyLoadImage src={userContact.avatar} alt={userContact.avatar} />\n        </Link>\n        <Link to={userContact.slug}>\n          <h6>{userContact.name}</h6>\n          <span>@{userContact.slug}</span>\n        </Link>\n      </ContactInfo>\n      <ContactActions>\n        {type === \"sent\"\n          ? sentActions\n          : type === \"received\"\n          ? receivedActions\n          : type === \"friends\"\n          ? friendsActions\n          : null}\n      </ContactActions>\n    </ContactItemWrapper>\n  );\n};\n\nexport default ContactItem;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js",[],["1415","1416"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx",["1417"],"import React, {createRef} from \"react\";\nimport {\n  Wrapper\n} from \"./styles/ChatBoard.styles\";\n\nimport ChatBoardHeading from \"./ChatBoardHeading\"\nimport ChatBoardBody from \"./ChatBoardBody\"\nimport ChatBoardFooter from \"./ChatBoardFooter\"\n\nconst ChatCenter = () => {  \n  \n  return (\n    <Wrapper>\n      <ChatBoardHeading/>\n      <ChatBoardBody/>\n      <ChatBoardFooter/>\n    </Wrapper>\n  );\n};\n\nexport default ChatCenter;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx",["1418","1419"],"import React from 'react'\nimport {BoxWrapper, WorkList, Introduce, Website} from \"./styles/IntroductionBox.styles\"\nimport {useQuery} from \"@apollo/client\"\nimport {GET_CURRENT_PERSONAL_USER, GET_CURRENT_USER} from \"../../apollo/operations/queries/cache\"\nimport {useThemeUI} from \"theme-ui\"\nimport {Link} from \"react-router-dom\"\nimport {FaGlobe} from \"react-icons/fa\"\nimport {MdWork} from \"react-icons/md\"\nconst works = [\n  {job_name : \"Data Engineer\", company_name : \"iTech Corp\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", },\n  {job_name : \"Data Scientist\", company_name : \"Samsung\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", },\n  {job_name : \"Junior Developer\", company_name : \"Freelance\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", }\n]\n\n\n\nconst IntroductionBox = () => {\n  const {data : {user}} = useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"})\n  const {data : {currentPersonalUser}} = useQuery(GET_CURRENT_PERSONAL_USER, {fetchPolicy : \"cache-first\"})\n  const {colorMode} = useThemeUI();\n  return (\n    <BoxWrapper theme={colorMode}>\n      <h4>Introduction</h4>\n      {/* Introduce */}\n      <Introduce>Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem possimus harum aliquam nobis qui! Temporibus, commodi facilis ex nihil veniam in quia eius dicta quos.</Introduce>\n      {/* works list */}\n      <WorkList>\n        {works.map(work => (\n          <li>\n           <Website><span><MdWork/></span><Link to={`/tags/${work.job_name}`}>{work.job_name}</Link>at<Link to={work.company_href}>{work.company_name}</Link></Website> \n          </li>\n        ))}\n      </WorkList>\n      {/* Live in */}\n      <p>Live in <Link to=\"https://google.com\">Can Tho</Link></p>\n      {/* Followers */}\n      <p>Current Have <strong>200</strong> followers</p>      \n      {/* Contact */}\n      <p>Contact me via : 0123 456 789</p>\n      <Website> <span><FaGlobe/></span> <Link href=\"https://github.com/mthang1801\">https://github.com/mthang1801</Link></Website>\n    </BoxWrapper>\n  )\n}\n\nexport default IntroductionBox\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx",["1420","1421","1422","1423"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { HiOutlinePencilAlt } from \"react-icons/hi\";\nimport { AiOutlineMenuUnfold } from \"react-icons/ai\";\nimport {\n  FcCheckmark,\n  FcCancel,\n  FcAddressBook,\n  FcVoicePresentation,\n  FcInfo,\n  FcInvite,\n  FcConferenceCall,\n  FcPortraitMode,\n  FcApprove,\n  FcNeutralDecision,\n  FcHighPriority,\n  FcLeave,\n  FcDisapprove,\n} from \"react-icons/fc\";\nimport { userMutations } from \"../../apollo/operations/mutations\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  GET_PERSONAL_USER_CACHE_DATA,\n  GET_DIALOG,\n} from \"../../apollo/operations/queries/cache\";\nimport { GET_NOTIFICATIONS_CACHE_DATA } from \"../../apollo/operations/queries/cache/components/getNotifications\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  PersonalContactContainer,\n  ResponseRequests,\n  DropdownResponseRequest,\n  SettingWrapper,\n  SettingsDropdown,\n  SettingItem,\n} from \"./styles/PersonalHeadingContact.styles\";\nconst PersonalContact = () => {\n  const [relationship, setRelationship] = useState(\"stranger\");\n  const [openResponse, setOpenResponse] = useState(false);\n  const [openSettings, setOpenSettings] = useState(false);\n  const {\n    data: { notifications, latestNotification },\n  } = useQuery(GET_NOTIFICATIONS_CACHE_DATA, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { dialog },\n  } = useQuery(GET_DIALOG, { fetchPolicy: \"cache-first\" });\n  //Mutations\n  const [sendRequestToAddFriend] = useMutation(\n    userMutations.SEND_REQUEST_TO_ADD_FRIEND\n  );\n  const [rejectRequestToAddFriend] = useMutation(\n    userMutations.REJECT_REQUEST_TO_ADD_FRIEND\n  );\n  const [cancelRequestToAddFriend] = useMutation(\n    userMutations.CANCEL_REQUEST_TO_ADD_FRIEND\n  );\n  const [followUser] = useMutation(userMutations.FOLLOW_USER);\n  const [unFollowUser] = useMutation(userMutations.UNFOLLOW_USER);\n  const [acceptRequestToAddFriend] = useMutation(\n    userMutations.ACCEPT_REQUEST_TO_ADD_FRIEND\n  );\n  const [removeFriend] = useMutation(userMutations.REMOVE_FRIEND);\n  const {\n    setCurrentUser,\n    setCurrentPersonalUser,\n    setLatestNotification,\n    removeNewNotification,\n    decreaseNumberNotificationsUnseen,\n    removeNotificationItemFromNotificationsList,\n    setDialog,\n  } = cacheMutations;\n  //user Query\n  const {\n    data: { user, currentPersonalUser },\n  } = useQuery(GET_PERSONAL_USER_CACHE_DATA);\n\n  //color theme\n  const { colorMode } = useThemeUI();\n  //useRef\n  const responseRef = useRef(false);\n  const settingRef = useRef(false);\n\n  //track dialog\n  useEffect(() => {\n    if (\n      dialog &&\n      dialog?.data?.type === \"remove contact\" &&\n      dialog?.data?.userId === currentPersonalUser._id &&\n      dialog?.agree\n    ) {\n      removeFriend({ variables: { friendId: currentPersonalUser._id } }).then(\n        ({ data }) => {\n          const { sender, receiver, notification } = data.removeFriend;\n          updateMutationOnChange(sender, receiver, notification);\n        }\n      ).then(() => {\n        setDialog({ agree : false , \n          title : \"\", \n          content : \"\", \n          data : null})\n      });\n    }\n  }, [dialog, currentPersonalUser]);\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver, removedNotification) => {\n    if (\n      removedNotification &&\n      user.notifications.includes(removedNotification._id)\n    ) {\n      if (latestNotification?._id === removedNotification._id) {\n        setLatestNotification(null);\n      }\n      removeNewNotification(removedNotification._id);\n      decreaseNumberNotificationsUnseen();\n      removeNotificationItemFromNotificationsList(removedNotification);\n      setCurrentUser({\n        ...user,\n        notifications: [\n          ...notifications.filter((_id) => _id !== removedNotification._id),\n        ],\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    } else {\n      setCurrentUser({\n        ...user,\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    }\n    if (currentPersonalUser && currentPersonalUser._id === receiver._id) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        followed: [...receiver.followed],\n        following: [...receiver.following],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n      });\n    }\n  };\n  //track user click event\n  useEffect(() => {\n    function trackUserClickEvent(e) {\n      if (\n        responseRef.current &&\n        !responseRef.current.contains(e.target) &&\n        openResponse\n      ) {\n        setOpenResponse(false);\n      }\n      if (\n        settingRef.current &&\n        !settingRef.current.contains(e.target) &&\n        openSettings\n      ) {\n        setOpenSettings(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickEvent);\n    return () => window.removeEventListener(\"click\", trackUserClickEvent);\n  });\n\n  useEffect(() => {\n    if (currentPersonalUser) {\n      if (user && currentPersonalUser._id === user._id) {\n        setRelationship(\"me\");\n      } else if (\n        user &&\n        currentPersonalUser.friends.includes(user._id.toString())\n      ) {\n        setRelationship(\"friend\");\n      } else {\n        setRelationship(\"stranger\");\n      }\n    }\n  }, [user, currentPersonalUser]);\n\n  // Handle add friend\n  const onSendRequestToAddFriend = (e) => {\n    sendRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.sendRequestToAddFriend;\n        updateMutationOnChange(sender, receiver);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    rejectRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const {\n          sender,\n          receiver,\n          notification,\n        } = data.rejectRequestToAddFriend;\n        updateMutationOnChange(receiver, sender, notification);\n        setOpenResponse(false);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    cancelRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n  //Handle Follow User\n  const onHandleFollowUser = () => {\n    followUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.followUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle Unfollow user\n  const onHandleUnfollowUser = () => {\n    unFollowUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.unFollowUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle accept request to add friend\n  const onAcceptRequestToAddFriend = () => {\n    acceptRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver, notification } = data.acceptRequestToAddFriend;\n      updateMutationOnChange(receiver, sender, notification);\n      setOpenResponse(false);\n    });\n  };\n  //handle remove friend\n  const onRemoveFriend = () => {\n    removeFriend({ variables: { friendId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver, notification } = data.removeFriend;\n        updateMutationOnChange(sender, receiver, notification);\n      }\n    );\n  };\n\n  const MyActionsContact = (\n    <>\n      <Button size=\"large\" theme={colorMode} title=\"update personal\">\n        <HiOutlinePencilAlt />\n      </Button>\n      <Button size=\"large\" theme={colorMode} title=\"history actions\">\n        <AiOutlineMenuUnfold />\n      </Button>\n    </>\n  );\n  const FriendActionsContact = (\n    <>\n      <Button size=\"large\" theme={colorMode} title=\"chat\">\n        <FcVoicePresentation />\n      </Button>\n      <Button size=\"large\" theme={colorMode} title=\"friend\">\n        <FcApprove />\n      </Button>\n    </>\n  );\n  const StrangerActionsContact = (\n    <>\n      {user &&\n      currentPersonalUser &&\n      user?.sentRequestToAddFriend?.includes(\n        currentPersonalUser._id.toString()\n      ) ? (\n        <Button\n          size=\"large\"\n          theme={colorMode}\n          title=\"Cancel request\"\n          onClick={onCancelRequestToAddFriend}\n        >\n          <FcCancel />\n        </Button>\n      ) : user &&\n        currentPersonalUser &&\n        user?.receivedRequestToAddFriend?.includes(\n          currentPersonalUser._id.toString()\n        ) ? (\n        <ResponseRequests ref={responseRef}>\n          <Button size=\"large\" theme={colorMode} title=\"Response the request\">\n            <FcInfo\n              onClick={() => setOpenResponse((prevState) => !prevState)}\n            />\n          </Button>\n          <DropdownResponseRequest theme={colorMode} open={openResponse}>\n            <div onClick={onAcceptRequestToAddFriend}>\n              <FcCheckmark /> Accept\n            </div>\n            <div onClick={onRejectRequestToAddFriend}>\n              <FcCancel /> Reject\n            </div>\n          </DropdownResponseRequest>\n        </ResponseRequests>\n      ) : (\n        <Button\n          theme={colorMode}\n          title=\"add friend\"\n          onClick={onSendRequestToAddFriend}\n          size=\"large\"\n        >\n          <FcInvite />\n        </Button>\n      )}\n\n      <Button size=\"large\" theme={colorMode} title=\"Chat\">\n        <FcVoicePresentation />\n      </Button>\n      {user?.following?.includes(currentPersonalUser._id) ? (\n        <Button\n          size=\"large\"\n          theme={colorMode}\n          title=\"UnFollow\"\n          onClick={onHandleUnfollowUser}\n        >\n          <FcApprove />\n        </Button>\n      ) : (\n        <Button\n          size=\"large\"\n          theme={colorMode}\n          title=\"Follow\"\n          onClick={onHandleFollowUser}\n        >\n          <FcConferenceCall />\n        </Button>\n      )}\n    </>\n  );\n\n  const onClickRemoveFriend = () => {\n    setDialog({\n      title: `Remove friend`,\n      content: `Are you sure to remove ${currentPersonalUser?.name}`,\n      data: { type: \"remove contact\", userId: currentPersonalUser._id },\n    });\n  };\n\n  return (\n    <PersonalContactContainer>\n      {relationship === \"me\"\n        ? MyActionsContact\n        : relationship === \"friend\"\n        ? FriendActionsContact\n        : StrangerActionsContact}\n      <SettingWrapper ref={settingRef}>\n        <Button\n          size=\"large\"\n          theme={colorMode}\n          title=\"Setting\"\n          onClick={() => setOpenSettings((prevState) => !prevState)}\n        >\n          <FcPortraitMode />\n        </Button>\n        {openSettings ? (\n          <SettingsDropdown theme={colorMode}>\n            {user.friends.includes(currentPersonalUser?._id) && (\n              <SettingItem theme={colorMode} onClick={onClickRemoveFriend}>\n                <span>\n                  <FcHighPriority />\n                </span>\n                <span>Remove Friend</span>\n              </SettingItem>\n            )}\n            <SettingItem theme={colorMode}>\n              <span>\n                <FcLeave />\n              </span>\n              <span>Find Report</span>\n            </SettingItem>\n            <SettingItem theme={colorMode}>\n              <span>\n                <FcDisapprove />\n              </span>\n              <span>Block</span>\n            </SettingItem>\n          </SettingsDropdown>\n        ) : null}\n      </SettingWrapper>\n    </PersonalContactContainer>\n  );\n};\n\nexport default PersonalContact;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx",["1424"],"import React, {\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n  useMemo,\n} from \"react\";\nimport {\n  Wrapper,\n  ChatInput,\n  ChatActions,\n  Label,\n  SendMessage,\n} from \"./styles/ChatBoardFooter.styles\";\nimport { FiSend } from \"react-icons/fi\";\nimport { IoMdAttach } from \"react-icons/io\";\nimport { HiOutlinePhotograph } from \"react-icons/hi\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  SEND_MESSAGE_CHAT_TEXT,\n  SEND_MESSAGE_CHAT_FILE,\n} from \"../../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/\";\nimport {\n  GET_CURRENT_CHAT,\n  GET_CURRENT_USER,\n} from \"../../apollo/operations/queries/cache\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport generateBase64Image from \"../../utils/generateBase64Image\";\nimport useLanguage from \"../Global/useLanguage\"\nconst ChatBoardFooter = () => {\n  //useState\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );  \n  const { colorMode } = useThemeUI();\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n  const {i18n, lang} = useLanguage();\n  const {chatInputPlaceholder} = i18n.store.data[lang].translation.chat;\n  //useQuery\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-and-network\" });\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-and-network\" });\n  //useMutation\n  const [sendMessageChatText] = useMutation(SEND_MESSAGE_CHAT_TEXT);\n  const [sendMessageChatFile] = useMutation(SEND_MESSAGE_CHAT_FILE);\n  const { setMessagesStorage } = cacheMutations;\n  const editorRef = useRef(null);\n\n  const {\n    plugins,\n    EmojiSelect,\n    EmojiSuggestions,\n    MentionSuggestions,\n  } = useMemo(() => {\n    const emojiPlugin = createEmojiPlugin({\n      selectButtonContent: \"😀\",\n    });\n    const { EmojiSelect, EmojiSuggestions } = emojiPlugin;\n    const linkifyPlugin = createLinkifyPlugin({\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      component(props) {\n        return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n      },\n    });\n    const mentionPlugin = createMentionPlugin({\n      positionSuggestions: (settings) => {\n        return {\n          left: `${settings.decoratorRect.left - 360 + 30}px`,\n          top: `${-settings.decoratorRect.height * 5 - 100}px`,\n          display: \"block\",\n          transform: \"scale(1)\", // transition popover on the value of its height\n          transformOrigin: \"1em 0% 0px\",\n          transition: \"all 0.25s cubic-bezier(0.3, 1.2, 0.2, 1)\",\n        };\n      },\n      mentionComponent(mentionProps) {\n        return (\n          <span\n            className={mentionProps.className}\n            onClick={() => alert(\"CLick mentions\")}\n          >\n            {mentionProps.children}\n          </span>\n        );\n      },\n    });\n    const { MentionSuggestions } = mentionPlugin;\n    const plugins = [mentionPlugin, emojiPlugin, linkifyPlugin];\n    return { plugins, EmojiSelect, EmojiSuggestions, MentionSuggestions };\n  }, []);\n\n  const onOpenChange = useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n\n\n  useEffect(() => {\n    function focusEditorWhenTypingTabButton(e) {\n      if (e.which === 9) {\n        if (editorRef.current) {\n          editorRef.current.focus();\n        }\n      }\n    }\n    window.addEventListener(\"keyup\", (e) => {\n      focusEditorWhenTypingTabButton(e);\n    });\n    return () =>\n      window.removeEventListener(\"keyup\", (e) => {\n        focusEditorWhenTypingTabButton(e);\n      });\n  }, [editorRef]);\n  const onSendMessage = (e) => {    \n    if (editorState.getCurrentContent().hasText() && currentChat) {\n      const rawData = JSON.stringify(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      sendMessageChatText({\n        variables: {\n          receiverId: currentChat._id,\n          text: rawData,\n          scope: currentChat.scope || \"PERSONAL\",\n        },\n      })\n        .then(({ data }) => {\n          const { message, scope } = data.sendMessageChatText;\n          const { receiver } = message;\n          console.log(receiver)\n          //always set hasSeenLatestMessage is true  because  this user is sender\n          setMessagesStorage(receiver, message, scope, true);\n          setEditorState(EditorState.createEmpty());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const onChangeInputChatImage = async (e) => {\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024;\n    if (fileData && fileData.size > maxSize) {\n      return false;\n    }\n    const validFiles = [\"image/jpeg\", \"image/png\", \"image/jpg\", \"image/gif\"];\n    if (!validFiles.includes(fileData.type)) {\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData);\n\n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"IMAGE\",\n        },\n      });\n      const { message, scope } = data.sendMessageChatFile;\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n      document.getElementById(\"chat-image\").value =  \"\";\n    }\n  };\n\n  const onChangeInputChatAttachment = async (e) => {    \n    e.preventDefault();\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024 * 5;\n    if (fileData && fileData.size > maxSize) {\n      console.log(\"oversize\");\n      return false;\n    }\n    const validExtensions = new RegExp(\"(.*?).(docx|doc|pdf|xml|bmp|ppt|xls|txt)$\");\n    if (!validExtensions.test(e.target.value.toLowerCase())) {\n      console.log(\"invalid file\")\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData); \n         \n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"ATTACHMENT\",\n        },\n      });\n      const { message, scope, error } = data.sendMessageChatFile;\n      if(error){\n        console.log(error)\n        return ;\n      }\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n    }\n    document.getElementById(\"chat-attachment\").value =  \"\";\n  };\n  return (\n    <Wrapper style={{ display: !user || !currentChat || !Object.entries(currentChat).length ? \"none\" : \"block\" }}>\n      <ChatActions theme={colorMode}>\n        <Label htmlFor=\"chat-image\" style={{ color: \"#fb8c00\" }}>\n          <HiOutlinePhotograph />\n          <input\n            type=\"file\"\n            id=\"chat-image\"\n            name=\"chat-image\"\n            onChange={onChangeInputChatImage}\n          />\n        </Label>\n        <Label htmlFor=\"chat-attachment\" style={{ color: \"#4527a0 \" }}>\n          <IoMdAttach />\n          <input\n            type=\"file\"\n            id=\"chat-attachment\"\n            name=\"chat-attachment\"\n            onChange={onChangeInputChatAttachment}            \n          />\n        </Label>\n      </ChatActions>\n      <ChatInput onClick={() => editorRef.current?.focus()}>\n        <EmojiSuggestions />\n        <EmojiSelect />\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          ref={editorRef}\n          tabIndex=\"0\"          \n          placeholder={`${chatInputPlaceholder} ${currentChat?.name}`}\n        />\n        <MentionSuggestions\n          open={open}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />       \n        <SendMessage onClick={onSendMessage}>\n          <FiSend />\n        </SendMessage>\n      </ChatInput>\n    </Wrapper>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    slug: \"matthew\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    slug: \"juliansadaw\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    slug: \"jyoti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    slug: \"stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    slug: \"graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    slug: \"brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    slug: \"russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    slug: \"julianewqeq\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    slug: \"puti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n];\n\nexport default ChatBoardFooter;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx",["1425","1426","1427","1428","1429"],"import React, { useState, useEffect, createRef, useCallback } from \"react\";\nimport { Wrapper } from \"./styles/ChatBoardBody.styles\";\nimport Bubble from \"./Bubble\";\nimport { useThemeUI } from \"theme-ui\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_CHAT,\n  GET_MESSAGES_STORAGE,\n  GET_CURRENT_USER,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_MESSAGES } from \"../../apollo/operations/queries/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\n\nconst ChatBoardBody = () => {\n  //useState\n  const [loadMoreMessages, setLoadMoreMessages] = useState(false);\n  //useQuery\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-first\" });\n  const { refetch: fetchMoreMessages } = useQuery(FETCH_MESSAGES, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const chatBoardBodyRef = createRef(null);\n  const { updateMoreMessages } = cacheMutations;\n  const [shouldScrollIntoView, setShouldScrollIntoView] = useState(true);\n  const { colorMode } = useThemeUI();\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      if (chatBoardBodyRef.current && shouldScrollIntoView) {\n        chatBoardBodyRef.current.scrollIntoView({\n          behavior: \"auto\",\n        });\n      }\n    }, 50);\n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if(messagesStorage[currentChat?._id]?.latestMessage.sender._id === user._id ){\n      timer = setTimeout(() => {\n        if (chatBoardBodyRef.current) {\n          chatBoardBodyRef.current.scrollIntoView({\n            behavior: \"auto\",\n          });\n        }\n      }, 10);\n    }\n    \n    return () => clearTimeout(timer);\n  }, [currentChat,messagesStorage[currentChat?._id]?.messages, user]);\n  \n  useEffect(() => {\n    let isScrolling;\n    function onScrollBodyBoard(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollHeight, scrollTop, clientHeight } = e.target;\n        if (scrollTop + clientHeight === scrollHeight) {\n          setShouldScrollIntoView(true);\n        } else {\n          setShouldScrollIntoView(false);\n        }\n        if (\n          scrollTop + clientHeight <\n          (scrollHeight - scrollTop) / 2 + scrollHeight * 0.15\n        ) {\n          setLoadMoreMessages(true);\n        }\n      }, 66);\n    }\n    document.getElementById(\"body-board\").addEventListener(\n      \"scroll\",\n      function (e) {\n        onScrollBodyBoard(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById(\"body-board\").removeEventListener(\n        \"scroll\",\n        function (e) {\n          onScrollBodyBoard(e);\n        },\n        false\n      );\n    };\n  });\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (loadMoreMessages) {\n      const skip = messagesStorage[currentChat._id].messages.length;\n      const limit = +process.env.REACT_APP_NUMBER_MESSAGES_PER_LOAD;\n      const conversationId = currentChat._id;\n      const scope = currentChat.scope;\n      fetchMoreMessages({ conversationId, scope, skip, limit }).then(\n        ({ data }) => {\n          if (_isMounted) {\n            const { messages } = data.fetchMessages;\n            updateMoreMessages(conversationId, messages);\n            setLoadMoreMessages(false);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [loadMoreMessages]);\n\n  return (\n    <Wrapper\n      theme={colorMode}\n      id=\"body-board\"\n      // onScrollCapture={onScrollBoardBody}\n    >\n      {currentChat &&\n      messagesStorage[currentChat._id] &&\n      messagesStorage[currentChat._id].messages.length &&\n      user\n        ? messagesStorage[currentChat._id].messages.map((message, idx) => {\n            return (\n              <Bubble\n                key={`bubble-${message._id}`}\n                message={message}\n                user={user}\n                me={message.sender && message.sender._id === user._id}\n                senderAvatar={\n                  message.sender && message.sender._id === user._id\n                    ? user.avatar\n                    : currentChat.avatar\n                }\n                index={idx}\n              />\n            );\n          })\n        : null}\n      <div ref={chatBoardBodyRef}></div>\n    </Wrapper>\n  );\n};\n\nexport default ChatBoardBody;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx",["1430","1431"],"import React, { useState, useContext, useRef } from \"react\";\nimport {\n  ContactItemWrapper,\n  Avatar,\n  UserContactOverview,\n  ContactControls,\n} from \"./styles/ContactItem.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useThemeUI } from \"theme-ui\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport ThreeDotsSetting from \"../UI/ThreeDotsSetting\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport { GET_MESSAGES_STORAGE } from \"../../apollo/operations/queries/cache\";\nimport { FETCH_SINGLE_CHAT_CONVERSATION } from \"../../apollo/operations/queries/chat/fetchSingleChatConversation\";\nimport { useQuery } from \"@apollo/client\";\n\nconst ContactItem = ({ friend }) => {\n  const [showSetting, setShowSettings] = useState(false);\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-only\" });\n  const { setPopupPosition, setShowPopup } = usePopupContactActions();\n  const { colorMode } = useThemeUI();\n  const {\n    setCurrentChat,\n    addNewConversationToMessagesStorage,\n  } = cacheMutations;\n  const { refetch: fetchSingleChatConversation } = useQuery(\n    FETCH_SINGLE_CHAT_CONVERSATION,\n    {\n      fetchPolicy: \"network-only\",\n      skip: true,\n    }\n  );\n  const onClickThreeDots = (e) => {\n    e.stopPropagation();\n    setShowPopup(true);\n    const positionY =\n      e.pageY > window.innerHeight * 0.75\n        ? e.pageY - 0.25 * window.innerHeight\n        : e.pageY;\n    setPopupPosition({ left: e.pageX, top: positionY });\n  };\n\n  const onSetCurrentChat = async (e) => {\n    if (!messagesStorage[friend._id]) {\n      const { data } = await fetchSingleChatConversation({\n        conversationId: friend._id,\n        scope: \"PERSONAL\",\n      });\n      if (data) {\n        const { fetchSingleChatConversation } = data;\n        addNewConversationToMessagesStorage(\n          friend._id,\n          fetchSingleChatConversation\n        );\n      }\n    }\n    setCurrentChat({...friend, scope: \"PERSONAL\"});\n  };  \n  return (\n    <ContactItemWrapper\n      theme={colorMode}\n      onMouseEnter={() => setShowSettings(true)}\n      onMouseLeave={() => setShowSettings(false)}\n      onClick={onSetCurrentChat}\n    >\n      <Avatar active={friend.isOnline}>\n        <LazyLoadImage src={friend.avatar} />\n      </Avatar>\n      <UserContactOverview>{friend.name}</UserContactOverview>\n      <ContactControls\n        show={showSetting}\n        onClick={(e) => onClickThreeDots(e)}\n        aria-label=\"chat-contact-settings\"\n      >\n        <ThreeDotsSetting />\n      </ContactControls>\n    </ContactItemWrapper>\n  );\n};\n\nexport default React.memo(ContactItem);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/signup.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/acceptRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/removeFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/unFollowUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/followUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/cancelRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/rejectRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/sendRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx",["1432"],"import styled, {css} from \"styled-components\"\n\n\nexport const Wrapper = styled.header`\nheight: 65px;\nwidth : 100%; \nbackground-color : #e8f5e9;\ndisplay : flex;\npadding: 1rem 2rem;  \njustify-content: space-between;\nalign-items : center;\n`\n\nexport const User = styled.div`\ndisplay : flex;\nalign-items : center;  \n`\n\nexport const Avatar = styled.div`\nwidth : 2.5rem;\nheight : 2.5rem;\n& > img{\n  width : 100%; \n  height: 100%;\n  border-radius : 50%;\n}\n`\n\nexport const UserInfo  = styled.div`\nmargin-left : 0.4rem;\nh4{\n  font-size : 1rem;\n}\nflex: 1;\n`\n\nexport const Controls = styled.div`\n  display : flex;\n  align-items: center;\n`\n\nexport const LinkItem = styled.span`\n  display : inline-block;\n  cursor : pointer;\n  font-size : 1.4rem;\n  margin :  0  0.5rem;\n  ${({phone}) => phone && `\n    color : #039be5 ;\n    &:hover{\n      color : #0277bd ; \n    }\n  `} \n  ${({video}) => video && `\n    color : #e53935; \n    &:hover{\n      color : #c62828;\n    }\n  `}\n  ${({photo}) => photo &&`\n    color : #00897b;\n    &:hover{\n      color : #00695c;\n    }\n  `}\n\n  ${({file}) => file && `\n    color : #3949ab;\n    &:hover{\n      color: #283593;\n    }\n  `}\n \n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx",["1433","1434"],"import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  BubbleContainer,\n  Message,\n  MentionWrapper,\n  MentionInfo,\n  MentionLinkInfo,\n  MentionAvatar,\n  BubbleTimeline,\n  ImageContainer,\n  AttachmentContainer,\n} from \"./styles/Bubble.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { convertFromRaw, EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport Moment from \"react-moment\";\nimport LazyLoad from \"react-lazyload\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nconst linkifyPlugin = createLinkifyPlugin({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n});\nconst mentionPlugin = createMentionPlugin({\n  mentionComponent({ mention }) {\n    return (\n      <MentionWrapper to={`/${mention.slug}`}>\n        <MentionLinkInfo to={`/${mention.slug}`}>\n          <MentionAvatar src={mention.avatar} />\n          <MentionInfo>\n            <span>{mention.name}</span>\n            <span>@{mention.slug}</span>\n          </MentionInfo>\n        </MentionLinkInfo>\n        <span>@{mention.name}</span>\n      </MentionWrapper>\n    );\n  },\n});\nconst Bubble = ({ message, me, user, senderAvatar, index }) => {\n  const [editorState, setEditorState] = useState(() =>\n    message.messageType === \"TEXT\"\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(message.text)))\n      : null\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [bubbleDimensions, setBubbleDimensions] = useState({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const bubbleRef = useRef(null);\n  useEffect(() => {\n    if (bubbleRef.current) {\n      setBubbleDimensions(bubbleRef.current.getBoundingClientRect());\n    }\n  }, [bubbleRef]);  \n  \n  if (!user) return null;  \n  return (\n    \n      <Wrapper index={index}>\n        <BubbleContainer me={me}>\n          <Avatar>\n            <LazyLoadImage src={senderAvatar} />\n          </Avatar>\n          <Message me={me} ref={bubbleRef} messageType={message.messageType}>\n            {message.messageType === \"TEXT\" ? (\n              <Editor\n                editorState={editorState}\n                setEditorState={setEditorState}\n                plugins={[linkifyPlugin, mentionPlugin]}\n                onChange={setEditorState}\n                readOnly\n              />\n            ) : message.messageType === \"IMAGE\" ? (\n              <ImageContainer>\n                <img\n                  src={message.file.data}\n                  alt={message.file.filename}\n                  onClick={() => setIsOpen(true)}\n                />\n                {isOpen && (\n                  <Lightbox\n                    mainSrc={message.file.data}\n                    onCloseRequest={() => setIsOpen(false)}\n                  />\n                )}\n              </ImageContainer>\n            ) : message.messageType === \"ATTACHMENT\" ? (\n              <AttachmentContainer>\n                <a\n                  href={message.file.data}\n                  download={message.file.filename}\n                  title={message.file.filename}\n                >\n                  {message.file.filename}\n                </a>\n              </AttachmentContainer>\n            ) : null}\n          </Message>\n        </BubbleContainer>\n        <BubbleTimeline width={bubbleDimensions.width} me={me}>\n          <div>\n            <span>\n              <Moment fromNow>{+message.createdAt}</Moment>\n            </span>\n            {user._id === message.sender._id ? (\n              <span style={{ textTransform: \"capitalize\" }}>\n                {message.receiverStatus.toLowerCase()}\n              </span>\n            ) : null}\n          </div>\n        </BubbleTimeline>\n      </Wrapper>\n    \n  );\n};\n\nexport default Bubble;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/ToggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/ReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/SentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/Friends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js",["1435","1436"],"import {\n  client,\n  restartWebsocketConnection,\n  closeWebsocketConnection,\n} from \"../../apollo/client\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport {\n  User,\n  Posts,\n  Notifications,\n  NewNotifications,\n  CountNumberNotificationsUnseen,\n  CurrentChat,\n  Friends,\n  MessagesStorage,\n} from \"../../apollo/models\";\nconst clearCache = () => {\n  const {\n    setCurrentUser,\n    setCountNumberNotificationsUnseen,\n    setNotifications,\n    setNewNotifications,\n    setPosts,\n    clearCurrentChat,\n    setFriends,\n    clearMessageStorage,\n  } = cacheMutations;\n  setCurrentUser(User);\n  setCountNumberNotificationsUnseen(CountNumberNotificationsUnseen);\n  setPosts(Posts);\n  setNotifications(Notifications);\n  setNewNotifications(NewNotifications);\n  clearCurrentChat();\n  setFriends(Friends);\n  clearMessageStorage();\n};\n\nconst logout = async () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"tokenExpire\");\n  clearCache();\n  await client.resetStore();\n  if (typeof window !== \"undefined\") {\n    closeWebsocketConnection();\n  }\n};\n\nconst login = async (user, token, tokenExpire) => {\n  // await logout();\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\n    \"tokenExpire\",\n    new Date(Date.now() + tokenExpire * 1000)\n  );\n  const { setCurrentUser } = cacheMutations;\n  setCurrentUser({ ...user });\n  if (typeof window !== \"undefined\") {\n    restartWebsocketConnection();\n  }\n};\n\nexport { logout, login };\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx",["1437"],"import styled, {css} from 'styled-components'\nimport {Link} from \"react-router-dom\"\n\nexport const FriendsBoardWrapper = styled.div`\n  position : fixed; \n  top : 60px;\n  right: 0 ;\n  height: calc(100% - 60px);    \n  width : 300px;  \n  overflow: auto;\n  transition : var(--mainTransition);\n  z-index : ${({show}) => show ? 2 : -1};\n`\n\nexport const FriendsListWrapper = styled.div`\n  height: auto;\n  min-height: 95vh;\n  width :100%;  \n  border-radius : 6px;\n  box-shadow : var(--mediumShadow);\n  transition : var(--mainTransition);\n  border-left: 1px solid ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};\n  background-color: ${({theme}) => theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  position : relative;\n  ${({show}) => show ? css`\n    transform: translateX(0);\n  ` : css`\n    transform : translateX(100%);\n  `}  \n`\n\nexport const TitleContacts = styled.div`\n  display : flex;\n  justify-content : space-between;\n  align-items : center;\n  padding : 1rem;  \n`\n\nexport const FriendsListSearch = styled.div`\n  flex: ${({show}) => show ? 1 : \"unset\"};\n  display : flex;\n  justify-content : space-between;\n  position : relative;\n  transition : var(--secondTransition);\n  background-color : ${({theme, show}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n  border-radius : 3rem;  \n  overflow : hidden;  \n  width : ${({show}) => show ? \"90%\" : \"2rem\"};\n  transition-delay : width 0.15s;\n  input{\n    flex:  1;\n    display : ${({show}) => show ? \"block\" : \"none\"};\n    width : ${({show}) => show ? \"calc(100% - 2rem)\" : 0};    \n    padding : 0 0.7rem;  \n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n    outline : none ; \n    border: ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};    \n    font-size : 1rem;\n    color :  ${({theme}) => theme === \"dark\" ? \"var(--color-text-dark)\" : \"var(--color-text-default)\"};\n  }\n  \n  button{      \n    outline : none ; \n    border: none ;\n    text-align : center;\n    width : 2rem;\n    height:  2rem;\n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray-dark)\" : \"var(--gray-light)\"}; \n    border-radius : 50%;\n    display : flex;\n    align-items: center;\n    justify-content : center;\n    cursor : pointer;\n    &:hover{\n      background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-deep)\"}; \n    }\n  }\n  \n`\n\nexport const FriendsListTitle = styled.h4`\n  font-size : 1.1rem;\n  width : ${({hide})  => hide ? \"0\" : \"auto\"};   \n  visibility : ${({hide}) => hide ? \"hidden\" : \"visible\"};\n  transform : ${({hide}) => hide ?  \"translateX(-200%)\" : \"translateX(0)\"};  \n  transition : 0.12s all; \n  transition-delay: 0.05;\n`\n\nexport const ButtonClose = styled.button`\n  position : absolute;\n  top : 50vh;\n  right:  0;\n`\n\nexport const ImageContainer = styled.div`\n\n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx",["1438"],"import React, {useState, useRef, useEffect} from \"react\";\nimport { FriendsListWrapper, TitleContacts, FriendsListSearch, FriendsListTitle } from \"./Sidebar.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport FriendItem from \"./FriendItem\";\nimport {Scrollbars} from \"react-custom-scrollbars\"\nimport useLanguage from \"../Global/useLanguage\" \nimport {FaSearch} from \"react-icons/fa\"\n\nconst FriendsList = ({ show }) => {\n  const { colorMode } = useThemeUI();\n  const [openSearch, setOpenSearch] = useState(false)\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-and-network\" });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-and-network\" });\n  const inputRef = useRef(null)\n  const {i18n, lang} = useLanguage()\n\n  useEffect(() => {\n          \n    if(openSearch){\n      inputRef.current.focus();\n    }\n  },[openSearch])\n  const onClickSearchButton = () => {\n    inputRef.current.focus();\n    setOpenSearch(true);\n   \n  }\n  if (!friends.length) return null;\n  return (\n    <Scrollbars\n      autoHide\n      autoHideTimeout={1000}\n      autoHideDuration={200}\n      autoHeightMin={0}\n      autoHeightMax={200}            \n    >          \n      <FriendsListWrapper show={show} theme={colorMode}>\n        <TitleContacts>\n          <FriendsListTitle hide={openSearch}>{i18n.store.data[lang].translation.contacts.contactsList}</FriendsListTitle>\n          <FriendsListSearch show={openSearch} theme={colorMode}>\n            <input ref={inputRef} type=\"text\" placeholder={i18n.store.data[lang].translation.controls.search} onBlur={() => setOpenSearch(false)} />\n            <button onClick={onClickSearchButton}><FaSearch/></button>\n          </FriendsListSearch>\n        </TitleContacts>\n        {friends.map((friend) => (\n          <FriendItem key={friend._id} data={friend} />\n        ))}        \n      </FriendsListWrapper>\n    </Scrollbars>\n  );\n};\n\nexport default FriendsList;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx",["1439","1440"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  notificationMutations,\n  userMutations,\n  cacheMutations,\n} from \"../../apollo/operations/mutations\";\nimport { AcceptButton, DenyButton } from \"../Custom/CustomMaterialButton\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport useLanguage from \"../Global/useLanguage\";\nimport Moment from \"react-moment\";\nimport \"moment/locale/vi\";\nimport {\n  Wrapper,\n  LinkWrapper,\n  AvatarContainer,\n  NotificationContent,\n  Controls,\n} from \"./styles/NotificationItem.styles\";\nimport { notificationContent } from \"../../utils/notificationContent\";\nimport { GET_NOTIFICATIONS_CACHE_DATA } from \"../../apollo/operations/queries/cache/components/getNotifications\";\nimport { useThemeUI } from \"theme-ui\";\n\nconst NotificationItem = ({ notification }) => {\n  //Query\n  const {\n    data: {\n      user,\n      newNotifications,\n      currentPersonalUser,\n      latestNotification,\n      notifications,\n    },\n  } = useQuery(GET_NOTIFICATIONS_CACHE_DATA, { fetchPolicy: \"cache-first\" });\n  //Mutations\n  const {\n    updateNotificationHasSeen,\n    decreaseNumberNotificationsUnseen,\n    setCurrentUser,\n    setCurrentPersonalUser,\n    removeNotificationItemFromNotificationsList,\n    setLatestNotification,\n    removeNewNotification,\n    updateHasSeenLatestMessage,\n  } = cacheMutations;\n  const [updateToHasSeen] = useMutation(\n    notificationMutations.UPDATE_USER_HAS_SEEN_NOTIFICATION\n  );\n  const [acceptRequestToAddFriend] = useMutation(\n    userMutations.ACCEPT_REQUEST_TO_ADD_FRIEND\n  );\n  const [rejectRequestToAddFriend] = useMutation(\n    userMutations.REJECT_REQUEST_TO_ADD_FRIEND\n  );\n  const { lang } = useLanguage();\n  const handleUserClickHasSeen = (notification) => {\n    updateToHasSeen({ variables: { notificationId: notification._id } }).then(\n      ({ data }) => {\n        if (data.updateUserHasSeenNotification) {\n          decreaseNumberNotificationsUnseen();\n          updateNotificationHasSeen(notification._id);\n        }\n      }\n    );\n  };\n\n  const updateMutationOnChange = (sender, receiver, removedNotification) => {\n    if (\n      removedNotification &&\n      user.notifications.includes(removedNotification._id)\n    ) {\n      if (latestNotification?._id === removedNotification._id) {\n        setLatestNotification(null);\n      }\n      removeNewNotification(removedNotification._id);\n      decreaseNumberNotificationsUnseen();\n      removeNotificationItemFromNotificationsList(removedNotification);\n      setCurrentUser({\n        ...user,\n        notifications: [\n          ...notifications.filter((_id) => _id !== removedNotification._id),\n        ],\n        friends: [...receiver.friends],\n        followed: [...receiver.followed],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    } else {\n      setCurrentUser({\n        ...user,\n        friends: [...receiver.friends],\n        followed: [...receiver.followed],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    }\n\n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id === notification.creator._id\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...sender.friends],\n        following: [...sender.following],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      });\n    }\n  };\n\n  const onAcceptRequestToAddFriend = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    acceptRequestToAddFriend({\n      variables: { senderId: notification.creator._id },\n    }).then(({ data }) => {\n      const { sender, receiver, notification } = data.acceptRequestToAddFriend;\n      updateMutationOnChange(sender, receiver, notification);\n    });\n  };\n\n  const onRejectRequestToAddFriend = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    rejectRequestToAddFriend({\n      variables: { senderId: notification.creator._id },\n    }).then(({ data }) => {\n      const { sender, receiver, notification } = data.rejectRequestToAddFriend;\n      // when reject, receiver is current User, sender is creator\n      updateMutationOnChange(sender, receiver, notification);\n    });\n  };\n  const { colorMode } = useThemeUI();\n  if (!user) return null;\n  return (\n    <Wrapper theme={colorMode} hasSeen={notification.hasSeen}>\n      <LinkWrapper\n        to={notification.url}\n        key={notification._id}\n        onClick={() => handleUserClickHasSeen(notification)}\n      >\n        <AvatarContainer>\n          <LazyLoadImage\n            src={`${notification.creator.avatar}`}\n            alt={notification.url}\n            effect=\"blur\"\n            width=\"40px\"\n            height=\"40px\"\n          />\n        </AvatarContainer>\n        <NotificationContent>\n          <span\n            dangerouslySetInnerHTML={{\n              __html: notificationContent(notification, lang),\n            }}\n          />\n          <small>\n            <Moment\n              fromNow\n              className={newNotifications?.has(notification._id) ? \"new\" : \"\"}\n              locale={lang}\n            >\n              {new Date(+notification.updatedAt)}\n            </Moment>\n          </small>\n        </NotificationContent>\n      </LinkWrapper>\n      {notification.isQuestion && notification.questionType?.yesNoQuestion ? (\n        <Controls>\n          <AcceptButton\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            onClick={onAcceptRequestToAddFriend}\n          >\n            Accept\n          </AcceptButton>\n          <DenyButton\n            variant=\"contained\"\n            size=\"small\"\n            color=\"secondary\"\n            onClick={onRejectRequestToAddFriend}\n          >\n            Reject\n          </DenyButton>\n        </Controls>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(NotificationItem);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx",["1441","1442"],"import React, { useState, useEffect } from \"react\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport styled from \"styled-components\";\nimport ButtonLogin from \"../Controls/ButtonLogin\"\nimport ButtonSignUp from \"../Controls/ButtonSignUp\"\nimport {useLocation} from \"react-router-dom\"\nconst CardUtility = () => {\n  const [welcome, setWelcome] = useState(\"\");\n  const [introduce, setIntroduce] = useState(\"\");\n  const [askLogin, setAskLogin] = useState(\"\");\n  const { colorMode } = useThemeUI();\n  const { lang, i18n } = useLanguage();\n  const {pathname} = useLocation()\n \n  useEffect(() => {\n    setWelcome(i18n.store.data[lang].translation.greeting.welcome);\n    setIntroduce(i18n.store.data[lang].translation.greeting.introduce);\n    setAskLogin(i18n.store.data[lang].translation.greeting.askLogin);\n  }, [lang]);\n\n  return <CardWrapper theme={colorMode}>\n    <Welcome>{welcome}</Welcome>\n    <div>{introduce}</div>   \n    <div className=\"auth\">\n      <ButtonLogin to=\"/auth\" from={pathname}>Login</ButtonLogin>\n      <ButtonSignUp to=\"/auth/signup\" from={pathname}>SignUp</ButtonSignUp>\n    </div>\n  </CardWrapper>;\n};\n\nconst CardWrapper = styled.aside`\n  background-color: ${({ theme }) =>\n    theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  text-align: center;\n  border-radius: 0.7rem;\n  overflow: hidden;\n  padding: 1.5rem;\n  .auth{\n    &> *{\n      margin : 1rem 0;\n    }\n  }\n`;\n\nconst Welcome = styled.h4`\n  font-size : 1.1em;\n  font-weight : 600;\n`\n\n\n\nexport default CardUtility;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx",["1443"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Brand from \"./Brand\";\nimport Search from \"./Search\";\nimport Navigation from \"./Navigation\";\nimport MessengerAndNotification from \"./MessengerAndNotification\";\nimport SettingAccount from \"./SettingAccount\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport ButtonMenu from \"../Controls/ButtonMenu\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport classNames from \"classnames\";\nimport { GET_CURRENT_USER } from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport { useLocation } from \"react-router-dom\";\nimport { useThemeUI } from \"theme-ui\";\nimport ButtonLogin from \"../Controls/ButtonLogin\";\nimport ButtonSignUp from \"../Controls/ButtonSignUp\";\nconst Header = () => {\n  const [openSearch, setOpenSearch] = useState(false);\n  const {\n    data: { user },\n    loading,\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-only\",\n  });  \n  const { colorMode } = useThemeUI();\n  const { pathname } = useLocation();\n\n  const { toggleButtonMenu } = cacheMutations;\n  \n  const NavControls = user ? (\n    <div className=\"nav-controls\">\n      <div className=\"center\">\n        <div className=\"nav-toggle\">\n          <ButtonMenu onClick={toggleButtonMenu} />\n        </div>\n        <div className=\"nav-bar\">\n          <Navigation />\n        </div>\n\n        <div className=\"control\">\n          <MessengerAndNotification />\n        </div>\n      </div>\n      <div className=\"setting-account\">\n        <SettingAccount />\n      </div>\n    </div>\n  ) : (\n    <div className=\"nav-controls\">\n      <div className=\"nav-auth\">\n        <ButtonLogin to=\"/auth\" from={pathname}>\n          Login\n        </ButtonLogin>\n        <ButtonSignUp to=\"/auth/signup\" from={pathname}>\n          Sign up\n        </ButtonSignUp>\n        <div className=\"setting-account\">\n          <SettingAccount />\n        </div>\n      </div>\n    </div>\n  );\n  if (loading) return <div>Loading...</div>;\n  return (\n    <Wrapper theme={colorMode}>\n      <div className={classNames(\"nav-header\", { shorten: !openSearch })}>\n        <div className={classNames(\"nav-brand\", { hide: openSearch })}>\n          <Brand />\n        </div>\n        <div\n          className={classNames(\n            \"close-search\",\n            { \"on-search-open\": !openSearch },\n            { hide: !openSearch }\n          )}\n        >\n          <Button onClick={() => setOpenSearch(false)} variant=\"outlined\">\n            <FaArrowLeft />\n          </Button>\n        </div>\n        <div className={classNames(\"search-bar\")}>\n          <Search\n            openSearch={openSearch}\n            setOpenSearch={() => setOpenSearch(true)}\n          />\n        </div>\n      </div>\n      {NavControls}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.header`\n  width: 100vw;\n  height: 60px;\n  background-color: ${({ theme }) =>\n    theme === \"dark\"\n      ? \"var(--color-background-dark)\"\n      : \"var(--color-background-default)\"};\n  border-bottom: 1px solid\n    ${({ theme }) => (theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-light)\")};\n  position: fixed;\n  top: 0;\n  padding: 0 0.4rem;\n  display: flex;\n  align-items: center;\n  flex-wrap: no-wrap;\n  z-index: 100;\n  .nav-header {\n    display: flex;\n    align-items: center;\n    transition: var(--mainTransition);\n    flex-wrap: nowrap;\n    .nav-brand,\n    .on-search-open {\n      width: 60px;\n      transition: var(--mainTransition);\n    }\n    .search-bar {\n      width: calc(100% - 60px);\n      transition: var(--mainTransition);\n    }\n    .nav-brand {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .nav-controls {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: var(--mainTransition);\n    height: 100%;\n    padding: 0 1.5rem;\n    .nav-bar {\n      display: none;\n    }\n    .center {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: space-between;\n      flex: 1;\n      padding: 0 0.5rem;\n    }\n    .nav-toggle {\n      margin-right: 0.75rem;\n    }\n    .nav-auth {\n      width: 100%;\n      display: flex;\n      justify-content: flex-end;\n      & > * {\n        font-size: 0.8em;\n        margin-right: 0.25rem;\n      }\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .hide {\n      width: 0 !important;\n      opacity: 0;\n      visibility: hidden;\n      transition: var(--mainTransition);\n      transition-delay: 0.5s;\n    }\n    .shorten {\n      width: auto !important;\n      transition: var(--mainTransition);\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding: 0 2rem;\n    .close-search {\n      display: none;\n    }\n    .nav-header {\n      width: 30%;\n    }\n    .nav-controls {\n      width: 70%;\n      .nav-bar {\n        display: block;\n        height: 100%;\n      }\n      .center {\n        justify-content: flex-end;\n      }\n      .control {\n        padding: 0 0.5rem;\n      }\n    }\n  }\n  @media screen and (min-width: 992px) {\n    .nav-header {\n      width: 35%;\n    }\n    .nav-controls {\n      width: 65%;\n      .nav-toggle {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport default React.memo(Header);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersReceivedRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersSentRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchListContact.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/login.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/removeFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/cancelRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/rejectRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/postCreated.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js",["1444","1445","1446","1447","1448","1449","1450","1451","1452"],"import i18n from \"../i18n\"\n\nconst notificationContent = (notification, lang) => {\n  const {notifications : {post : postNotification, comment : commentNotification, response : responseNotification,  contact : contactNotification}} = i18n.store.data[lang].translation;\n  let { field, content} = notification;\n  field = field.toUpperCase();\n  content = content.toUpperCase();    \n  \n  switch(field){\n    case \"POST\" : \n      switch(content){        \n        case \"MENTIONED\" : {          \n          return postNotification.postMentioned(notification.creator?.name, notification.fieldIdentity?.post?.shortenText); \n        };\n        case \"LIKED\" :           \n          return postNotification.likePost(notification.creator?.name, notification.fieldIdentity?.post?.shortenText);\n        \n      }\n    case \"COMMENT\" : \n      switch(content){\n        case \"MENTIONED\" : return commentNotification.commentMentioned(notification.creator?.name, notification.fieldIdentity?.post?.shortenText); \n        case \"CREATED\" : return commentNotification.commentCreated(notification.creator?.name, notification.fieldIdentity?.post?.shortenText);\n        case \"LIKED\" : return commentNotification.commentLiked(notification.creator?.name, notification.fieldIdentity?.comment?.shortenText);\n      }\n    case \"RESPONSE\" : \n      switch(content){\n        case \"CREATED\" : return responseNotification.responseCreated(notification.creator?.name, notification.fieldIdentity?.post?.shortenText, notification.fieldIdentity?.comment?.shortenText);\n        case \"MENTIONED\" : return responseNotification.responseMentioned(notification.creator?.name, notification.fieldIdentity?.post?.shortenText, notification.fieldIdentity?.comment?.shortenText);\n        case \"LIKED\" : return responseNotification.responseLiked(notification.creator?.name, notification.fieldIdentity?.post?.shortenText, notification.fieldIdentity?.comment?.shortenText);\n      }\n    case \"CONTACT\" : \n      switch(content){\n        case \"SENT_REQUEST_TO_ADD_FRIEND\" : return contactNotification.sentRequestToAddFriend(notification.creator?.name);\n        case \"ACCEPT_REQUEST_TO_ADD_FRIEND\" : return contactNotification.acceptRequestToAddFriend(notification.creator?.name);\n      }\n  }\n}\n\nconst showResponseButtons = (notification, user) => {\n  const field = notification.field.toLowerCase();\n  const content = notification.content.toUpperCase();\n  if(field === \"user\" && content === \"ADDED\" && user.receivedRequestToAddFriend.includes(notification.creator._id)){\n    return true ; \n  }\n  return false ;\n}\n\nexport {notificationContent , showResponseButtons}","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx",["1453","1454","1455","1456","1457"],"import React, { useEffect, useState, useRef, useCallback } from \"react\";\n\nimport {\n  Wrapper,\n  Notification,\n  UnseenNotification,\n  NotificationBoard,\n} from \"./styles/Header.styles\";\nimport { IoMdNotifications } from \"react-icons/io\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport NotificationsBoard from \"./NotificationsBoard\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { GET_HEADER_CACHE_DATA } from \"../../apollo/operations/queries/cache\";\nimport { FETCH_NOTIFICATIONS } from \"../../apollo/operations/queries/notification\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport FlashPopUpNotification from \"../Notification/FlashPopUpNotification\";\n\nconst Control = () => {\n  const [openNotificationBoard, setOpenNotificationBoard] = useState(false);\n  const [loadingNotificationsMore, setLoadingNotificationsMore] = useState(\n    false\n  );  \n  const [boardHeight, setBoardHeight] = useState(0);\n  const notificationRef = useRef(false);\n  const notificationBoardRef = useRef(0);\n  const { setLatestNotification, setNotifications } = cacheMutations;\n\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const {\n    data: { user, notifications, countNumberNotificationsUnseen },\n  } = useQuery(GET_HEADER_CACHE_DATA, { fetchPolicy: \"cache-and-network\" });\n  useEffect(() => {\n    function handleClickOutsideNotificationBoard(e) {\n      if (\n        openNotificationBoard\n      ) {\n        setOpenNotificationBoard(false);\n      }\n    }\n    window.addEventListener(\"click\", handleClickOutsideNotificationBoard);\n    return () =>\n      window.removeEventListener(\"click\", handleClickOutsideNotificationBoard);\n  }, [notificationRef.current , openNotificationBoard]);\n\n\n  const handleClickNotification = useCallback(async () => { \n    setLoadingNotificationsMore(false);\n    setOpenNotificationBoard((prevStatus) => !prevStatus);\n    setLatestNotification(null);\n  });\n\n\n  const getMoreNotifications = (e) => {\n    const { target } = e;\n    if (target.clientHeight + target.scrollTop > target.scrollHeight * 0.75) {\n      setLoadingNotificationsMore(true);\n    }\n  };\n  useEffect(() => {\n    let _isMounted = true;\n    if (loadingNotificationsMore && fetchNotifications) {\n      const skip = notifications.length;\n      const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n      fetchNotifications({ skip, limit }).then(\n        ({ data: { fetchNotifications } }) => {\n          if (_isMounted) {\n            setNotifications([...notifications, ...fetchNotifications]);\n            setLoadingNotificationsMore(false);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [loadingNotificationsMore]);  \n\n  useEffect(() => {\n    if(notificationBoardRef.current){      \n      console.log(notificationBoardRef.current.offsetHeight)\n      setBoardHeight(notificationBoardRef.current.offsetHeight)\n    }    \n  },[notificationBoardRef.current, openNotificationBoard])\n  const onOpenNotificationBoard = useCallback(() => {\n    setOpenNotificationBoard(true);    \n  },[]);\n\n  return (\n    <Wrapper>     \n      <Notification ref={notificationRef}>\n        <FlashPopUpNotification onClick={onOpenNotificationBoard} />\n        <Button onClick={handleClickNotification}>\n          <IoMdNotifications />\n          {countNumberNotificationsUnseen ? (\n            <UnseenNotification>\n              {countNumberNotificationsUnseen}\n            </UnseenNotification>\n          ) : null}\n        </Button>\n        {user && (\n          <NotificationBoard  open={openNotificationBoard}>\n            <Scrollbars\n              autoHide\n              autoHideTimeout={1000}\n              autoHideDuration={200}\n              autoHeightMin={0}\n              autoHeightMax={200}\n              onScroll={getMoreNotifications}\n            >\n              <NotificationsBoard />\n            </Scrollbars>\n          </NotificationBoard>\n        )}\n      </Notification>\n    </Wrapper>\n  );\n};\n\nexport default Control;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/updateUserHasSeenNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx",[],["1458","1459"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatFile.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/updateHaveSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatText.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverWhenReceivedNewMessage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx",["1460","1461","1462","1463","1464"],"import React, { useState, useEffect, createContext, useRef } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport { GET_CURRENT_USER } from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport ListConversations from \"./ListConversations\";\nimport { useThemeUI } from \"theme-ui\";\nimport ChatBoard from \"./ChatBoard\";\n\nexport const MessagesContext = createContext({});\nconst Conversations = () => {\n  //query\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n\n  //state\n  const [showPopup, setShowPopup] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [originalData, setOriginalData] = useState([]);  \n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const {setCurrentChat} = cacheMutations\n  const { colorMode } = useThemeUI();\n  const popupRef = useRef(null);\n\n  //empty current chat when change page\n  useEffect(()=>{\n    setCurrentChat(null);\n  },[])\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-messages-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n\n  if (!user) return null;\n  return (\n    <MessagesContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top}\n      >\n        <span>Pin this conversation</span>\n        <hr />\n        <span>Label</span>\n        <hr />\n        <span>Add to group</span>\n        <span>Turn notification off</span>\n        <hr />\n        <span>Delete conversation</span>\n        <hr />\n        <span>Report</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search />\n          <hr />\n          <ListConversations />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </MessagesContext.Provider>\n  );\n};\n\nexport default Conversations;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx",["1465"],"import React, { useState, useEffect } from \"react\";\nimport { Wrapper } from \"./styles/ListContacts.styles\";\nimport ContactItem from \"./ContactItem\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport { useQuery } from \"@apollo/client\";\nimport { FETCH_FRIENDS } from \"../../apollo/operations/queries/user/fetchFriends\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nconst ListContacts = ({ data }) => {\n  const { setShowPopup } = usePopupContactActions();\n  const [loadContactMore, setLoadContactMore] = useState(false);\n  const { refetch: fetchMoreContacts } = useQuery(FETCH_FRIENDS, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const { setFriends } = cacheMutations;\n  const onScrollListContacts = (e) => {\n    e.preventDefault();\n    const { clientHeight, scrollHeight, scrollTop } = e.target;\n    if (clientHeight + scrollTop > scrollHeight * 0.75) {\n      setLoadContactMore(true);\n    }\n  };\n\n  useEffect(() => {\n    if (loadContactMore) {\n      const skip = data.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchMoreContacts({ skip, limit }).then(({ data: { fetchFriends } }) => {\n        setFriends([...data, ...fetchFriends]);\n        setLoadContactMore(false);\n      });\n    }\n  }, [loadContactMore]);\n  if (!data.length) return null;\n  return (\n    <Wrapper\n      onScroll={() => setShowPopup(false)}\n      onScrollCapture={onScrollListContacts}\n    >\n      {data.map((friend) => (\n        <ContactItem key={`contact-${friend._id}`} friend={friend} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(ListContacts);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx",["1466","1467"],"import React, { useEffect, useState } from \"react\";\nimport { ListConversationsWrapper } from \"./styles/ListConversations.styles\";\nimport {\n  GET_MESSAGES_STORAGE,\n  GET_CURRENT_CHAT,\n  GET_CURRENT_USER,\n  GET_NUMBER_OF_CONVERSATIONS,\n} from \"../../apollo/operations/queries/cache\";\nimport ConversationItem from \"./ConversationItem\";\nimport _ from \"lodash\";\nimport { usePopupMessagesActions } from \"./hook/usePopupActions\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../../apollo/operations/queries/chat/fetchChatConversations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED } from \"../../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nconst ListConversations = () => {\n  //use Query\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { numberOfConversations },\n  } = useQuery(GET_NUMBER_OF_CONVERSATIONS, { fetchPolicy: \"cache-only\" });\n  const { refetch: fetchMoreConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    { fetchPolicy: \"cache-and-network\", skip: true }\n  );\n  //use State\n  const [_messagesStorage, _setMessagesStorage] = useState([]);\n  const [loadMoreConversations, setLoadMoreConversations] = useState(false);\n  const [\n    updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched,\n  ] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n  );\n  const { setInitialMessagesStorage } = cacheMutations;\n  const { setShowPopup } = usePopupMessagesActions();\n  useEffect(() => {\n    const _convertStorageToArray = Object.values(messagesStorage);\n    const _sortedByLatestMessages = _.sortBy(_convertStorageToArray, [\n      function (o) {\n        return -o.latestMessage.createdAt;\n      },\n    ]);\n    _setMessagesStorage([..._sortedByLatestMessages]);\n  }, [messagesStorage]);\n \n  useEffect(() => {\n    let isScrolling;\n    function onScrollListConversations(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollTop, clientHeight, scrollHeight } = e.target;\n        console.log(scrollTop, clientHeight, scrollHeight)\n        if (scrollTop + clientHeight > 0.8 * scrollHeight) {         \n          setLoadMoreConversations(true);\n        }\n      }, 66);\n    }\n    document.getElementById(\"list-conversations\").addEventListener(\n      \"scroll\",\n      (e) => {\n        onScrollListConversations(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById(\"list-conversations\").removeEventListener(\n        \"scroll\",\n        (e) => {\n          onScrollListConversations(e);\n        },\n        false\n      );\n    };\n  });\n  useEffect(() => {\n    let _isMounted = true;\n\n    if (\n      loadMoreConversations &&\n      numberOfConversations > _messagesStorage.length\n    ) {\n      console.log(\"load more\");\n      const skip = _messagesStorage.length;\n      const limit = +process.env.REACT_APP_NUMBER_CONVERSATIONS_LIMITATION;\n      const except = Object.keys(messagesStorage);\n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchMoreConversations({ except, skip, limit }).then(({ data }) => {\n        if (_isMounted) {\n          const { conversations } = data.fetchChatConversations;\n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n          setInitialMessagesStorage({ ...messagesStorage, ...storage });\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setLoadMoreConversations(false);\n        }\n      });\n    }\n  }, [loadMoreConversations, numberOfConversations]);\n\n  return (\n    <ListConversationsWrapper id=\"list-conversations\">\n      {_messagesStorage.length\n        ? _messagesStorage.map(\n            ({ profile, scope, latestMessage, hasSeenLatestMessage }) => (\n              <ConversationItem\n                key={`conversation-${profile._id}`}\n                conversation={profile}\n                scope={scope}\n                hasSeenLatestMessage={hasSeenLatestMessage}\n                latestMessage={latestMessage}\n                active={currentChat && currentChat._id === profile._id}\n              />\n            )\n          )\n        : null}\n    </ListConversationsWrapper>\n  );\n};\n\nexport default React.memo(ListConversations);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx",["1468","1469","1470","1471","1472"],"import React, {useState} from 'react'\nimport FriendsList from \"./FriendsList\"\nimport ButtonToggleFriendsList from \"../Controls/ButtonToggleFriendsList\"\nimport {FriendsBoardWrapper} from \"./Sidebar.styles\"\nimport {cacheMutations} from \"../../apollo/operations/mutations/cache\"\nimport {GET_OPEN_FRIENDS_LIST,GET_FRIENDS} from \"../../apollo/operations/queries/cache\"\nimport {FETCH_FRIENDS} from \"../../apollo/operations/queries/user\"\nimport {useQuery} from \"@apollo/client\"\nimport {useThemeUI} from \"theme-ui\"\nconst FriendsBoard = () => {\n  const {data : {openFriendsList}} = useQuery(GET_OPEN_FRIENDS_LIST, {fetchPolicy : \"cache-first\"})\n  return (\n    <FriendsBoardWrapper show={openFriendsList}>\n      <FriendsList show={openFriendsList} />\n      <ButtonToggleFriendsList />\n    </FriendsBoardWrapper>\n  )\n}\n\nexport default React.memo(FriendsBoard)\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySendersThatReceiverOnlineHasReceivedMessagesChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchSingleChatConversation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/clearMessageStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateHasSeenLatestMessage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageToReceivedWhenUserOnline.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageWhenReceiverSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/addNewConversationToMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/clearCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setMoreFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setInitialMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setNumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMoreMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOffline.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOfflineMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/toggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getNumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/messagesStorage/getMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/controls/getToggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/contact/getContact.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getHome.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditor.jsx",["1473"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorHeader.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditor.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorHeader.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorBody.jsx",["1474","1475","1476","1477"],"import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport {\n  Wrapper,\n  DraftEditor,\n  Toolbar,\n  Label,\n  CardPreview,\n  HashtagLink,\n  LinkAnchor,\n} from \"./styles/PostEditorBody.styles\";\nimport { ReactTinyLink } from \"react-tiny-link\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createHashTagPlugin from \"@draft-js-plugins/hashtag\";\nimport { IoIosImage } from \"react-icons/io\";\nimport generateBase64Image from \"../../../utils/generateBase64Image\";\nimport ImagesCarousel from \"../../UI/ImagesCarousel\";\nimport { useQuery } from \"@apollo/client\";\nimport { SEARCH_FRIENDS } from \"../../../apollo/operations/queries/user\";\nimport { useHistory } from \"react-router-dom\";\nimport useLanguage from \"../../Global/useLanguage\";\nconst PostEditorBody = ({ editorState, setEditorState, images, setImages }) => {\n  const [urlPreview, setUrlPreview] = useState(null);\n  const editorRef = useRef(null);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openMention, setOpenMention] = useState(true);\n  const {\n    refetch: searchFriends,\n    loading: searchFriendsLoading,\n  } = useQuery(SEARCH_FRIENDS, { fetchPolicy: \"network-only\", skip: true });\n  const { push } = useHistory();\n  const { i18n, lang } = useLanguage();\n  const { postPlaceholder } = i18n.store.data[lang].translation.post;\n  // useMemo plugins\n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,\n  } = useMemo(() => {\n    // Emoji\n    const emojiPlugin = createEmojiPlugin({\n      selectButtonContent: \"😀\",\n    });\n    const { EmojiSelect, EmojiSuggestions } = emojiPlugin;\n    // Linkify\n    const linkifyPlugin = createLinkifyPlugin({\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      component(props) {\n        return (\n          <LinkAnchor {...props} aria-label=\"link\" />\n        );\n      },\n    });\n    // Mention\n    const mentionPlugin = createMentionPlugin({\n      mentionComponent(mentionProps) {\n        return (\n          <a\n            className={mentionProps.className}\n            href={`${window.location.href}${mentionProps.mention.slug}`}\n            aria-label=\"mention\"\n          >\n            {mentionProps.children}\n          </a>\n        );\n      },\n    });\n    const hashTagPlugin = createHashTagPlugin({\n      hashtagComponent(props) {\n        return (\n          <HashtagLink\n            href={`${\n              window.location.href\n            }search?q=${props.decoratedText.replace(/#/g, \"\")}`}\n            aria-label=\"hashtag\"\n          >\n            {props.children}\n          </HashtagLink>\n        );\n      },\n    });\n    const { MentionSuggestions } = mentionPlugin;\n    // hashTag\n\n    const plugins = [mentionPlugin, hashTagPlugin, emojiPlugin, linkifyPlugin];\n\n    return { plugins, EmojiSelect, EmojiSuggestions, MentionSuggestions };\n  }, []);\n\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n\n  useEffect(() => {\n    const urlLength = document\n      .getElementById(\"post-editor\")\n      .querySelectorAll(\"[aria-label=link]\").length;\n    \n    if (urlLength) {\n      const url = document\n        .getElementById(\"post-editor\")\n        .querySelectorAll(\"[aria-label=link]\")\n        [urlLength - 1].getAttribute(\"href\");\n      setUrlPreview(url);\n    } else {\n      setUrlPreview(null);\n    }\n  }, [editorState]);\n\n  const onChangeImages = async (e) => {\n    const length = e.target.files.length;\n    const fileData = e.target.files;\n    const matches = [\"image/png\", \"image/gif\", \"image/jpg\", \"image/jpeg\"];\n    let listImages = [];\n    for (let i = 0; i < length; i++) {\n      if (!matches.includes(fileData[i].type)) {\n        alert(\"invalid image\");\n        return;\n      }\n      listImages.push(fileData[i]);\n    }\n\n    let base64Images = [];\n    for (let image of listImages) {\n      const base64ImageItem = await generateBase64Image(image);\n      base64Images = [...base64Images, { ...base64ImageItem }];\n    }\n    if (base64Images.length) {\n      setImages([...base64Images]);\n    }\n  };\n\n  return (\n    <>\n      <DraftEditor\n        onClick={() => editorRef.current?.focus()}\n        id=\"post-editor\"\n        style={{ alignItems: \"flex-start\" }}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          ref={editorRef}\n          tabIndex={0}\n          placeholder={postPlaceholder}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </DraftEditor>\n      {urlPreview && (\n        <CardPreview>\n          <ReactTinyLink\n            cardSize=\"large\"\n            showGraphic={true}\n            maxLine={3}\n            minLine={1}\n            url={urlPreview}\n            proxyUrl=\"https://cors-anywhere.herokuapp.com\"\n          />\n        </CardPreview>\n      )}\n      {images.length ? <ImagesCarousel images={images} /> : null}\n      <Toolbar>\n        <EmojiSelect />\n        <Label htmlFor=\"post-images\" name=\"post-images\">\n          <IoIosImage />\n          <input\n            type=\"file\"\n            multiple={true}\n            name=\"post-images\"\n            id=\"post-images\"\n            onChange={onChangeImages}\n          />\n        </Label>\n      </Toolbar>\n    </>\n  );\n};\n\nexport default React.memo(PostEditorBody);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorBody.styles.jsx",["1478"],"import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nexport const Wrapper = styled.div`\n\n`;\n\nexport const DraftEditor = styled.div`\n  cursor: text !important;\n  .DraftEditor-root {\n    width: 100% !important;\n    max-height: 8rem;\n    min-height: 4rem;\n    padding: 0.5rem 1rem;\n    overflow : auto;\n    -ms-overflow-style: none;  /* IE and Edge */\n    scrollbar-width: none;\n    &::-webkit-scrollbar{\n      display : none;\n    }\n  }\n`;\n\nexport const Toolbar = styled.div`\n  display: flex;\n  padding: 0.5rem 0.75rem;\n`;\n\nexport const Label = styled.label`\n  font-size: 1.4rem;\n  display: flex;\n  align-items: center;\n  color: ${({ name }) => (name === \"post-images\" ? \"var(--cyan-1)\" : \"orange\")};\n  &:hover {\n    color: ${({ name }) =>\n      name === \"post-images\" ? \"var(--cyan-2)\" : \"orange\"};\n  }\n  input {\n    display: none;\n  }\n  margin: 0 0.5rem;\n  cursor: pointer;\n`;\n\nexport const CardPreview = styled.div`\n  margin: 1rem auto;\n`;\n\nexport const HashtagLink = styled.a`\n  color: #575f67;\n  cursor: pointer;\n  display: inline-block;\n  background: #e6f3ff;\n  padding-left: 2px;\n  padding-right: 2px;\n  border-radius: 2px;\n  text-decoration: none;\n`;\n\nexport const LinkAnchor = styled.a`\n  color : var(--blue-1);\n  &:hover{\n    color : var(--blue-3);\n  }\n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ImagesCarousel.jsx",["1479"],"import React, {useState} from \"react\";\nimport Slider from \"react-slick\";\nimport LightBox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport {ImageContainer, NextArrow, PrevArrow} from \"./styles/ImagesCarousel.styles\"\n\nfunction CustomNextArrow(props) {  \n  return (\n    <NextArrow {...props}/>\n  );\n}\n\nfunction CustomPrevArrow(props) {\n  \n  return (\n    <PrevArrow {...props}/>  \n  );\n}\n\nconst ImagesCarousel = ({ images }) => {\n  const [openLightBox, setOpenLightBox] = useState(-1);\n  let dragging = false;\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: images.length > 2 ? 2 : images.length,\n    slidesToScroll: images.length > 2 ? 2 : images.length,\n    swipeToSlide: true,\n    lazyLoad: true,\n    beforeChange: () => (dragging = true),\n    afterChange: () => (dragging = false),\n    nextArrow : <CustomNextArrow/>,\n    prevArrow : <CustomPrevArrow/>\n  };\n  if(!images.length) return null\n  return (\n    <>\n      {openLightBox !== -1 && (\n        <LightBox\n          mainSrc={images[openLightBox].src}\n          onCloseRequest={() => setOpenLightBox(-1)}\n        />\n      )}\n      <Slider {...settings}>\n        {images.map((image, idx) => (\n          <ImageContainer key={image.name}>\n            <img\n              src={image.src}\n              alt={image.src}\n              onClick={() => setOpenLightBox(idx)}\n            />\n          </ImageContainer>\n        ))}\n      </Slider>\n    </>\n  );\n};\n\nexport default ImagesCarousel;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ImagesCarousel.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/searchFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setNewPost.js",["1480"],"import { setPostsVar } from \"../../../../cache\";\n\nconst setNewPost = setPostsVar => newPost => {\n  const posts = {...setPostsVar()}\n  const postAuthorId = newPost.author._id ; \n  if(!postAuthorId || (postAuthorId && !posts[postAuthorId])){\n    return false; \n  }\n  return setPostsVar({...posts, [postAuthorId] : [{...newPost}, ...posts[postAuthorId]]})\n}\n\nexport default setNewPost ","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardHeader.jsx",["1481","1482","1483"],"import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Wrapper,\n  Information,\n  Controls,\n  Timeline,\n  Small\n} from \"./styles/PostCardHeader.styles\";\nimport { Link } from \"react-router-dom\";\nimport {LazyLoadImage} from \"react-lazy-load-image-component\";\nimport { useThemeUI } from \"theme-ui\";\nimport Moment from \"react-moment\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport useLanguage from \"../Global/useLanguage\"\n\nconst PostCardHeader = ({ post }) => {\n  const {i18n, lang} = useLanguage();\n  const { colorMode } = useThemeUI();  \n  const {status} = i18n.store.data[lang].translation.post;\n  const postIcon = status.find(status => status.name === post.status.toLowerCase()).icon;\n  return (\n    <Wrapper theme={colorMode}>\n      <Information>\n        <Link to={`/${post.author.slug}`}>          \n            <LazyLoadImage effect=\"blur\" src={post.author.avatar} alt={post.author.avatar} />          \n        </Link>\n        <Timeline>\n          <Link\n            to={`/${post.author.slug}`}\n            style={{ textTransform: \"capitalize\" }}\n          >\n            {post.author.name.toLowerCase()}\n          </Link>\n          <Small>\n            <span>{postIcon()}</span>\n            <Moment fromNow>{+post.createdAt}</Moment>\n          </Small>\n        </Timeline>\n      </Information>\n      <Controls>\n        <Button>\n          <BsThreeDots />\n        </Button>\n      </Controls>\n    </Wrapper>\n  );\n};\n\nexport default PostCardHeader;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardHeader.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardBody.jsx",["1484","1485","1486","1487"],"import React, { useState, useMemo, useEffect } from \"react\";\nimport { ReactTinyLink } from \"react-tiny-link\";\nimport ImagesCarousel from \"../UI/ImagesCarousel\";\nimport LazyLoad from \"react-lazyload\";\nimport {\n  Wrapper,\n  DraftEditor,\n  HashtagLink,\n  CardPreview,\n} from \"./styles/PostCardBody.styles\";\nconst PostCardBody = ({ post }) => {  \n  const [urlPreview, setUrlPreview] = useState(null);\n  const images = post.files.length\n    ? post.files.map((file) => ({\n        src: file.data,\n        name: file.filename,\n      }))\n    : [];\n  useEffect(() => {\n    const DOMTarget = document.querySelector(`[data-target=post-${post._id}]`);   \n    //find Preview URL\n    const urlLength = DOMTarget.querySelectorAll(\"[aria-label=link]\").length;    \n    if (urlLength) {\n      const url = DOMTarget.querySelectorAll(\"[aria-label=link]\")[urlLength - 1].getAttribute(\"href\");\n      setUrlPreview(url);\n    } else {\n      setUrlPreview(null);\n    }\n  }, [])\n  \n  return (\n    <>\n      <DraftEditor data-target={`post-${post._id}`} dangerouslySetInnerHTML={{__html : post.text}}>\n        \n      </DraftEditor>\n      {urlPreview && (\n        <CardPreview>\n          <ReactTinyLink\n            cardSize=\"large\"\n            showGraphic={true}\n            maxLine={3}\n            minLine={1}\n            url={urlPreview}\n            proxyUrl=\"https://cors-anywhere.herokuapp.com\"\n          />\n        </CardPreview>\n      )}\n      {images.length ? (\n        <LazyLoad>\n          <ImagesCarousel images={images} />\n        </LazyLoad>\n      ) : null}\n    </>\n  );\n};\n\nexport default PostCardBody;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardBody.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardFooter.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardFooter.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getHeader.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/styles/Header.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/FlashPopUpNotification.jsx",["1488","1489","1490","1491"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Wrapper,\n  SenderAvatar,\n  NotificationContent,\n  SenderName,\n} from \"./styles/FlashPopUpNotification.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { GET_LATEST_NOTIFICATION } from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n\nimport { notificationContent } from \"../../utils/notificationContent\";\nconst FlashPopUpNotification = ({ onClick }) => {\n  const { setLatestNotification } = cacheMutations;\n  const {\n    data: { latestNotification },\n  } = useQuery(GET_LATEST_NOTIFICATION, { fetchPolicy: \"cache-only\" });\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n\n  const { message } = i18n.store.data[lang].translation.notifications;\n  useEffect(() => {\n    let timer;\n    if (latestNotification) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        setLatestNotification(null);\n      }, 6000);\n    }\n    return () => clearTimeout(timer);\n  }, [latestNotification]);\n\n  const onClickPopup = () => {\n    onClick();\n    setLatestNotification(null);\n  };\n  \n  return (\n    <Wrapper show={latestNotification} theme={colorMode} onClick={onClickPopup}>\n      {latestNotification ? (\n        <>\n          <SenderAvatar>\n            <LazyLoadImage\n              src={latestNotification.creator.avatar}\n              effect=\"blur\"\n            ></LazyLoadImage>\n          </SenderAvatar>\n          <NotificationContent>            \n            <span\n              dangerouslySetInnerHTML={{\n                __html: notificationContent(latestNotification, lang),\n              }}\n            ></span>\n          </NotificationContent>\n        </>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(FlashPopUpNotification);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/FlashPopUpNotification.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LatestNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setLatestNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getLatestNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentEditor.jsx",["1492","1493","1494","1495","1496","1497"],"import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createHashTagPlugin from \"@draft-js-plugins/hashtag\";\nimport draftToHtml from \"draftjs-to-html\";\nimport _ from \"lodash\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { SEARCH_FRIENDS } from \"../../apollo/operations/queries/user\";\nimport {\n  HashtagLink,\n  Wrapper,\n  LinkAnchor,\n} from \"./PostEditor/styles/PostEditorBody.styles\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  CommentInput,\n  CommentControls,\n  InputImage,\n} from \"./styles/CommentEditor.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { CREATE_COMMENT } from \"../../apollo/operations/mutations/post/createComment\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { Link } from \"react-router-dom\";\nconst CommentEditor = ({ post }) => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [openMention, setOpenMention] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const {\n    refetch: searchFriends,\n    loading: searchFriendsLoading,\n  } = useQuery(SEARCH_FRIENDS, { fetchPolicy: \"network-only\", skip: true });\n  const [createComment] = useMutation(CREATE_COMMENT);\n  const { addCommentToPost } = cacheMutations;\n  const { push } = useHistory();\n  const { colorMode } = useThemeUI();\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const [showControls, setShowControls] = useState(false);\n  const controlsRef = useRef(null);\n  const commentRef = useRef(null);\n  const editorRef = useRef(null);\n  const { i18n, lang } = useLanguage();\n  const { commentInputPlaceholder } = i18n.store.data[lang].translation.comment;\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n  // useMemo plugins\n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,\n  } = useMemo(() => {\n    // Emoji\n    const emojiPlugin = createEmojiPlugin({\n      selectButtonContent: \"☺\",\n    });\n    const { EmojiSelect, EmojiSuggestions } = emojiPlugin;\n    // Linkify\n    const linkifyPlugin = createLinkifyPlugin({\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      component(props) {\n        return <LinkAnchor {...props} aria-label=\"link\" />;\n      },\n    });\n    // Mention\n    const mentionPlugin = createMentionPlugin({\n      mentionComponent(mentionProps) {\n        return (\n          <a\n            className={mentionProps.className}\n            href={`${window.location.href}${mentionProps.mention.slug}`}\n            aria-label=\"mention\"\n          >\n            {mentionProps.children}\n          </a>\n        );\n      },\n    });\n    const hashTagPlugin = createHashTagPlugin({\n      hashtagComponent(props) {\n        return (\n          <HashtagLink\n            to={`${window.location.href}search?q=${props.decoratedText.replace(\n              /#/g,\n              \"\"\n            )}`}\n            aria-label=\"hashtag\"\n          >\n            {props.children}\n          </HashtagLink>\n        );\n      },\n    });\n    const { MentionSuggestions } = mentionPlugin;\n    // hashTag\n\n    const plugins = [mentionPlugin, hashTagPlugin, emojiPlugin, linkifyPlugin];\n\n    return { plugins, EmojiSelect, EmojiSuggestions, MentionSuggestions };\n  }, []);\n\n  useEffect(() => {\n    function trackUserClickCommentControls(e) {\n      if (\n        commentRef.current &&\n        !commentRef.current.contains(e.target) &&\n        showControls\n      ) {\n        setShowControls(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickCommentControls);\n\n    return () =>\n      window.removeEventListener(\"click\", trackUserClickCommentControls);\n  }, [commentRef, showControls]);\n\n  const onSubmitComment = (e) => {\n    if (\n      e.which === 13 &&\n      editorState.getCurrentContent().hasText() &&\n      !openMention && \n      !document.querySelector(`[data-target=comment-input-${post._id}]`).querySelector(\"[role=listbox]\")\n      \n    ) {\n      const rawEditorState = convertToRaw(editorState.getCurrentContent());\n      const rawText = JSON.stringify(rawEditorState);\n      const shortenText = draftToHtml(rawEditorState)\n        .split(\"</p>\")[0]\n        .replace(/<p>|&nbsp;/g, \"\");\n      document\n        .querySelector(`[data-target=comment-input-${post._id}]`)\n        .querySelector(\"[contenteditable=true]\")\n        ?.setAttribute(\"contenteditable\", false);\n      const textData = document.querySelector(\n        `[data-target=comment-input-${post._id}]`\n      ).innerHTML;\n      let mentions = [];\n      if (rawEditorState.entityMap) {\n        Object.values(rawEditorState.entityMap).map(({ data }) => {\n          if (data.mention) {\n            mentions.push({ ...data.mention });\n          }\n        });\n      }\n      mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n        mention._id.toString()\n      );\n      if (textData) {\n        setEditorState(EditorState.createEmpty());\n        createComment({\n          variables: {\n            postId: post._id,\n            text: textData,\n            shortenText,\n            rawText,\n            mentions: mentions,\n          },\n        })\n          .then(({ data }) => {\n            document\n              .querySelector(`[data-target=comment-input-${post._id}]`)\n              .querySelector(\"[contenteditable=false]\")\n              ?.setAttribute(\"contenteditable\", true);\n\n            const { createComment } = data;\n            addCommentToPost(post._id, createComment);\n          })\n          .catch((err) => {\n            document\n              .querySelector(`[data-target=comment-input-${post._id}]`)\n              .querySelector(\"[contenteditable=true]\")\n              ?.setAttribute(\"contenteditable\", true);\n          });\n      }\n    }\n  };\n\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      editorRef.current?.focus();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n  return (\n    <Wrapper ref={commentRef}>\n      <CommentInput\n        theme={colorMode}\n        onClick={() => {\n          editorRef.current?.focus();\n          setShowControls(true);\n        }}\n        onKeyDown={onSubmitComment}\n        data-target={`comment-input-${post._id}`}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          placeholder={commentInputPlaceholder}\n          ref={editorRef}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </CommentInput>\n      <CommentControls\n        ref={controlsRef}\n        theme={colorMode}\n        show={showControls}\n        onClick={() => setShowControls(true)}\n      >\n        <EmojiSelect />\n        {/* <InputImage htmlFor={`comment-image-${post._id}`}>\n          <input type=\"file\" name=\"comment-image\" id={`comment-image-${post._id}`}/>  \n          <BiImageAlt/>\n        </InputImage>         */}\n      </CommentControls>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(CommentEditor);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentEditor.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/likePost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateLikePost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateUnlikePost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getUsePostsSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/increaseCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/decreaseCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Comments.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/Comments.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentItem.jsx",["1498","1499","1500"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { Wrapper } from \"./PostEditor/styles/PostEditorBody.styles\";\nimport {\n  UserAvatar,\n  ResponseInput,\n  ResponsesComponent,\n  LoadMoreResponse,\n  CommentResponse,\n} from \"./styles/CommentItem.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BsArrowReturnRight } from \"react-icons/bs\";\nimport { Response } from \"./styles/CommentItem.styles\";\nimport ResponseEditor from \"./ResponseEditor\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { GET_DIALOG } from \"../../apollo/operations/queries/cache\";\nimport {\n  REMOVE_COMMENT,\n  LIKE_COMMENT,\n  REMOVE_LIKE_COMMENT,\n  REMOVE_RESPONSE\n} from \"../../apollo/operations/mutations/post\";\n\nimport { FETCH_RESPONSES } from \"../../apollo/operations/queries/post/fetchResponses\";\nimport Responses from \"./Responses\";\nimport shortid from \"shortid\";\nimport CommentCard from \"./CommentCard\";\nconst CommentItem = ({ comment, user }) => {\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const [showResponse, setShowResponse] = useState(false);\n  const [dataResponse, setDataResponse] = useState(\"\");\n  const { controls } = i18n.store.data[lang].translation.comment;\n  const { dialog: dialogAlert } = i18n.store.data[lang].translation;\n  const [focusResponseEditor, setFocusResponseEditor] = useState(false);\n  const {\n    setDialog,\n    removeComment: removeCommentFromPostCache,\n    addLikeComment,\n    removeLikeComment,\n    addResponsesToComment,\n    removeResponse : removeResponseInCache\n  } = cacheMutations;\n  const {\n    data: { dialog },\n  } = useQuery(GET_DIALOG);\n  const [likeComment] = useMutation(LIKE_COMMENT);\n  const [RemoveLikeComment] = useMutation(REMOVE_LIKE_COMMENT);\n  const [removeResponse] = useMutation(REMOVE_RESPONSE)\n  const { refetch: fetchResponses } = useQuery(FETCH_RESPONSES, { skip: true });\n  const [response, setResponse] = useState(comment);\n  const onClickRemoveComment = () => {\n    setDialog({\n      agree: false,\n      title: dialogAlert.removeComment.title,\n      content: dialogAlert.removeComment.content,\n      data: { commentId: comment._id, role : \"comment\" },\n    });\n  };\n  const [removeComment] = useMutation(REMOVE_COMMENT);\n\n  useEffect(() => {\n    if (dialog.data?.commentId === comment._id && dialog.agree && dialog.data?.role === \"comment\") {\n      removeComment({ variables: { commentId: comment._id } }).then(\n        ({ data }) => {\n          removeCommentFromPostCache(comment.post, comment._id);\n        }\n      );\n    }\n    else if(dialog.data?.role === \"response\" && dialog.data?.response && dialog.agree){\n      removeResponse({variables : {responseId : dialog.data.response._id}}).then(({data})=> {\n        if(data.removeResponse){\n          const {post, comment, _id} = dialog.data.response\n          removeResponseInCache(post, comment, _id);\n        }\n      })\n    }\n  }, [dialog]);\n  const onLikeComent = () => {\n    likeComment({ variables: { commentId: comment._id } })\n      .then(({ data }) => {\n        if (data.likeComment) {\n          addLikeComment(comment.post, comment._id, user._id);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  const onRemoveLikeComment = () => {\n    RemoveLikeComment({ variables: { commentId: comment._id } })\n      .then(({ data }) => {\n        if (data.removeLikeComment) {\n          removeLikeComment(comment.post, comment._id, user._id);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  const onClickResponseComment = useCallback(async (data) => {    \n    if(data){\n      setDataResponse(\n        `{\"blocks\":[{\"key\":\"${shortid.generate()}\",\"text\":\"${\n          data.author.name\n        } \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":${\n          data.author.name.length\n        },\"key\":0}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"mention\",\"mutability\":\"SEGMENTED\",\"data\":{\"mention\":{\"__typename\":\"User\",\"_id\":\"${\n          data.author._id\n        }\",\"name\":\"${data.author.name}\",\"avatar\":\"${\n          data.author.avatar\n        }\",\"slug\":\"${data.author.slug}\"}}}}}`\n      );\n      setResponse(data);\n    }\n    \n    if (comment.responses.length && !comment.responsesData?.length) {\n      await onLoadResponses();\n    } else {\n      setShowResponse(true);\n      setFocusResponseEditor(true);\n    }\n  }, [comment.responsesData]);\n\n  const onLoadResponses = () => {\n    fetchResponses({ commentId: comment._id, skip: 0, limit: 3 }).then(\n      ({ data }) => {\n        if (data.fetchResponses) {          \n          addResponsesToComment(comment.post, comment._id, data.fetchResponses);\n          if (!showResponse) {            \n            setShowResponse(true);\n            setFocusResponseEditor(true);\n          }\n        }\n      }\n    );\n  };  \n\n  const onLoadMoreResponses = () => {\n    const skip = comment.responsesData?.length || 0;\n    fetchResponses({ commentId: comment._id, skip }).then(({ data }) => {\n      if (data.fetchResponses) {\n        addResponsesToComment(comment.post, comment._id, data.fetchResponses);\n        if (!showResponse) {          \n          setShowResponse(true);\n          setFocusResponseEditor(true);\n        }\n      }\n    });\n  };\n  return (\n    <Wrapper>\n      <CommentCard\n        comment={comment}\n        user={user}\n        onLike={onLikeComent}\n        onRemoveLike={onRemoveLikeComment}\n        onClickRemoveComment={onClickRemoveComment}\n        onClickResponse={onClickResponseComment}\n      />\n      <CommentResponse>\n        {comment.responsesData && (\n          <ResponsesComponent>\n            <Responses\n              responses={comment.responsesData}              \n              user={user}\n              onClickResponse={onClickResponseComment}\n            />\n          </ResponsesComponent>\n        )}\n\n        {showResponse && (\n          <ResponseInput>\n            <UserAvatar>\n              <LazyLoadImage\n                effect=\"blur\"\n                src={comment.author.avatar}\n                alt={comment.author.avatar}\n              />\n            </UserAvatar>\n            <Response>\n              <ResponseEditor\n                comment={comment}\n                response={response}\n                user={user}\n                dataResponse={dataResponse}\n                focus={focusResponseEditor}\n                removeFocus={() => setFocusResponseEditor(false)}\n              />\n            </Response>\n          </ResponseInput>\n        )}\n        {comment.responsesData &&\n        comment.responsesData.length < comment.responses.length ? (\n          <LoadMoreResponse onClick={onLoadMoreResponses}>\n            {\" \"}\n            <BsArrowReturnRight /> <span>{controls.loadMoreResponses}</span>\n          </LoadMoreResponse>\n        ) : !comment.responsesData && comment.responses.length ? (\n          <LoadMoreResponse onClick={onLoadResponses}>\n            {\" \"}\n            <BsArrowReturnRight /> <span>{controls.loadMoreResponses}</span>\n          </LoadMoreResponse>\n        ) : null}\n      </CommentResponse>\n    </Wrapper>\n  );\n};\n\nexport default CommentItem;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentItem.styles.jsx",["1501"],"import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\nexport const ResponseInput = styled.div`\n  width : 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display :flex;\n`\nexport const ResponsesComponent= styled.div`\n  width : 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display :block;\n`\n\nexport const Response = styled.div`\n  flex : 1 ;\n  margin-left : 0.5rem;\n`\n\nexport const LoadMoreResponse = styled.span`\n  color : inherit; \n  font-size : 0.88rem;\n  padding: 0.5rem 0.4rem;  \n  cursor : pointer;\n  &:hover{\n    text-decoration : underline; \n  }\n  display : flex;\n  align-items : center;\n  & span{\n    margin-left : 0.1rem;\n  }\n`\nexport const UserAvatar = styled.div`\n  width : 2rem;\n  height : 2rem;\n  img {\n    width : 100%; \n    border-radius : 50%;\n  }\n`\n\nexport const CommentResponse = styled.div`\n  width: 90% ; \n  margin-left:auto;\n  margin-right: 1rem;\n  padding : 0 1rem;\n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentToOwnerPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/ResponseEditor.jsx",["1502","1503","1504","1505"],"import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport draftToHtml from \"draftjs-to-html\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createHashTagPlugin from \"@draft-js-plugins/hashtag\";\nimport _ from \"lodash\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { SEARCH_FRIENDS } from \"../../apollo/operations/queries/user\";\nimport {\n  HashtagLink,\n  Wrapper,\n  LinkAnchor,\n} from \"./PostEditor/styles/PostEditorBody.styles\";\nimport {\n  CommentInput,\n  CommentControls,  \n} from \"./styles/CommentEditor.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { CREATE_RESPONSE } from \"../../apollo/operations/mutations/post/createResponse\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nconst CommentEditor = ({ comment, response, user, dataResponse, focus, removeFocus }) => {\n  const [editorState, setEditorState] = useState(() =>\n    comment.author._id === user._id || !dataResponse\n      ? EditorState.createEmpty()\n      : EditorState.createWithContent(convertFromRaw(JSON.parse(dataResponse)))\n  );\n\n  useEffect(() => {\n    let timer;\n    if (focus) {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        const rawData = convertToRaw(editorState.getCurrentContent());\n        if(!dataResponse) return ;\n        const parseDataResponse = JSON.parse(dataResponse);        \n        if (\n          rawData.blocks[0].text.indexOf(parseDataResponse.blocks[0].text) ===\n            -1 &&\n          rawData.blocks[0].text\n            .toLowerCase()\n            .indexOf(user.name.toLowerCase()) === -1 && \n            response.author._id !== user._id\n        ) {\n          parseDataResponse.blocks[0] = {\n            ...parseDataResponse.blocks[0],\n            text: `${parseDataResponse.blocks[0].text} ${rawData.blocks[0].text}`,\n          };\n          rawData.blocks = [\n            { ...parseDataResponse.blocks[0] },\n            ...rawData.blocks.filter((_, idx) => idx !== 0),\n          ];\n          let entityIndex = Object.keys(rawData.entityMap).length;\n          rawData.entityMap[entityIndex] = {\n            ...parseDataResponse.entityMap[0],\n          };\n          setEditorState(\n            EditorState.createWithContent(convertFromRaw(rawData))\n          );\n        }\n      }, 66);\n    }\n  }, [focus, editorState, response,dataResponse]);\n\n  const [openMention, setOpenMention] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const { refetch: searchFriends } = useQuery(SEARCH_FRIENDS, {\n    fetchPolicy: \"network-only\",\n    skip: true,\n  });\n  const [createResponse] = useMutation(CREATE_RESPONSE);\n  const { addNewResponseToComment } = cacheMutations;\n  const { colorMode } = useThemeUI();\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const [showControls, setShowControls] = useState(false);\n  const controlsRef = useRef(null);\n  const responseRef = useRef(null);\n  const editorRef = useRef(null);\n  const { i18n, lang } = useLanguage();\n  const { commentInputPlaceholder } = i18n.store.data[lang].translation.comment;\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n  // useMemo plugins\n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,\n  } = useMemo(() => {\n    // Emoji\n    const emojiPlugin = createEmojiPlugin({\n      selectButtonContent: \"☺\",\n    });\n    const { EmojiSelect, EmojiSuggestions } = emojiPlugin;\n    // Linkify\n    const linkifyPlugin = createLinkifyPlugin({\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      component(props) {\n        return <LinkAnchor {...props} aria-label=\"link\" />;\n      },\n    });\n    // Mention\n    const mentionPlugin = createMentionPlugin({\n      mentionComponent(mentionProps) {\n        return (\n          <a\n            className={mentionProps.className}\n            href={`${window.location.href}${mentionProps.mention.slug}`}\n            aria-label=\"mention\"\n          >\n            {mentionProps.children}\n          </a>\n        );\n      },\n    });\n    const hashTagPlugin = createHashTagPlugin({\n      hashtagComponent(props) {\n        return (\n          <HashtagLink\n            to={`${window.location.href}search?q=${props.decoratedText.replace(\n              /#/g,\n              \"\"\n            )}`}\n            aria-label=\"hashtag\"\n          >\n            {props.children}\n          </HashtagLink>\n        );\n      },\n    });\n    const { MentionSuggestions } = mentionPlugin;\n    // hashTag\n\n    const plugins = [mentionPlugin, hashTagPlugin, emojiPlugin, linkifyPlugin];\n\n    return { plugins, EmojiSelect, EmojiSuggestions, MentionSuggestions };\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (focus) {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        editorRef.current.focus();\n        removeFocus();\n      }, 66);\n    }\n    return () => clearTimeout(timer);\n  }, [focus]);\n\n  useEffect(() => {\n    function trackUserClickCommentControls(e) {\n      if (\n        responseRef.current &&\n        !responseRef.current.contains(e.target) &&\n        showControls\n      ) {\n        setShowControls(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickCommentControls);\n\n    return () =>\n      window.removeEventListener(\"click\", trackUserClickCommentControls);\n  }, [responseRef, showControls]);\n\n  const onSubmitComment = (e) => {\n    \n    if (\n      e.which === 13 &&     \n      !openMention &&\n      !document\n        .querySelector(`[data-target=response-input-${comment._id}]`)\n        ?.getElementsByClassName(`esyutjr`)?.length\n    ) {\n      if(e.shiftKey){\n        return; \n      }\n      let rawEditorState = convertToRaw(editorState.getCurrentContent());\n      const filterBlockEmpty = rawEditorState.blocks.filter(block => block.text)\n      rawEditorState = {...rawEditorState, blocks : [...filterBlockEmpty]};\n      \n      const rawText = JSON.stringify(rawEditorState);\n      const shortenText = draftToHtml(rawEditorState)\n        .split(\"</p>\")[0]\n        .replace(/<p>|&nbsp;/g, \"\");\n      document\n        .querySelector(`[data-target=response-input-${comment._id}]`)\n        .querySelector(\"[contenteditable=true]\")\n        ?.setAttribute(\"contenteditable\", false);\n      const textData = document.querySelector(\n        `[data-target=response-input-${comment._id}]`\n      ).innerHTML;\n      \n      \n      let mentions = [];\n      if (rawEditorState.entityMap) {\n        Object.values(rawEditorState.entityMap).map(({ data }) => {\n          if (data.mention) {\n            mentions.push({ ...data.mention });\n          }\n        });\n      }\n      mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n        mention._id.toString()\n      );\n     \n      if (rawEditorState.blocks?.length) {\n        setEditorState(EditorState.createEmpty());\n        createResponse({\n          variables: {\n            commentId: comment._id,\n            text: textData,\n            shortenText,\n            rawText,\n            mentions,\n          },\n        })\n          .then(({ data }) => {\n            document\n              .querySelector(`[data-target=response-input-${comment._id}]`)\n              .querySelector(\"[contenteditable=false]\")\n              ?.setAttribute(\"contenteditable\", true);\n            \n            const { createResponse } = data;\n            addNewResponseToComment(comment.post, comment._id, createResponse);\n          })\n          .catch((err) => {\n            document\n              .querySelector(`[data-target=response-input-${comment._id}]`)\n              .querySelector(\"[contenteditable=true]\")\n              ?.setAttribute(\"contenteditable\", true);\n          });\n      }\n    }\n  };\n\n\n  return (\n    <Wrapper ref={responseRef}>\n      <CommentInput\n        theme={colorMode}\n        onClick={() => {\n          editorRef.current?.focus();\n          setShowControls(true);\n        }}\n        onKeyDown={onSubmitComment}\n        data-target={`response-input-${comment._id}`}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          placeholder={commentInputPlaceholder}\n          ref={editorRef}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </CommentInput>\n      <CommentControls\n        ref={controlsRef}\n        theme={colorMode}\n        show={showControls}\n        onClick={() => setShowControls(true)}\n      >\n        <EmojiSelect />\n      </CommentControls>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(CommentEditor);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addNewResponseToComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchComments.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentsToPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createResponse.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentToPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/AlertDialogSlide.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/Dialog.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/controls/getDialog.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/setDialog.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/clearDialog.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/removeComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/likeComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addLikeComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/removeLikeComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeLikeComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Responses.jsx",["1506","1507","1508","1509","1510"],"import React, { useCallback, useEffect } from \"react\";\nimport CommentCard from \"./CommentCard\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  LIKE_RESPONSE,\n  REMOVE_LIKE_RESPONSE,\n} from \"../../apollo/operations/mutations/post\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport useLanguage from \"../Global/useLanguage\";\nconst Responses = ({ responses, user, onClickResponse }) => {\n  const [likeResponse] = useMutation(LIKE_RESPONSE);\n  const [removeLikeResponse] = useMutation(REMOVE_LIKE_RESPONSE);\n  const { i18n, lang } = useLanguage();\n  const { dialog: dialogAlert } = i18n.store.data[lang].translation;\n  const {\n    addLikeResponse,\n    removeLikeResponse: removeLikeResponseInCache,\n    setDialog,\n  } = cacheMutations;\n\n  const onLikeResponse = useCallback((response) => {\n    likeResponse({ variables: { responseId: response._id } }).then(\n      ({ data }) => {\n        if (data.likeResponse) {\n          addLikeResponse(\n            response.post,\n            response.comment,\n            response._id,\n            user._id\n          );\n        }\n      }\n    );\n  }, []);\n  const onRemoveLikeResponse = useCallback((response) => {\n    removeLikeResponse({ variables: { responseId: response._id } }).then(\n      ({ data }) => {\n        console.log(data);\n        if (data.removeLikeResponse) {\n          removeLikeResponseInCache(\n            response.post,\n            response.comment,\n            response._id,\n            user._id\n          );\n        }\n      }\n    );\n  }, []);\n\n  const onClickRemoveResponse = useCallback((response) => {\n    setDialog({\n      agree: false,\n      title: dialogAlert.removeComment.title,\n      content: dialogAlert.removeComment.content,\n      data: { response, role: \"response\" },\n    });\n  });\n  return responses.map((response) => (\n    <CommentCard\n      key={`response-${response._id}`}\n      comment={response}\n      user={user}\n      onLike={onLikeResponse}\n      onRemoveLike={onRemoveLikeResponse}\n      onClickResponse={onClickResponse}\n      onClickRemoveComment={onClickRemoveResponse}\n    />\n  ));\n};\n\nexport default Responses;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchResponses.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addResponsesToComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentCard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentCard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/likeResponse.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addLikeResponse.js",["1511","1512","1513","1514"],"const addLikeResponse = setPostsVar => (postId, commentId, responseId, userId) => {\n  const posts = [...setPostsVar()];\n  const findPostByPostId = posts.find(post => post._id === postId); \n  if(!findPostByPostId || findPostByPostId && !findPostByPostId.commentsData) return; \n  const findCommentsDataByCommentId = findPostByPostId.commentsData.find(comment => comment._id === commentId);\n  if(!findCommentsDataByCommentId || findCommentsDataByCommentId && !findCommentsDataByCommentId.responsesData) return ; \n  const findResponsesByResponseId = findCommentsDataByCommentId.responsesData.find(response => response._id === responseId);\n  if(!findResponsesByResponseId) return ; \n  \n  const updatedPost = posts.map(post => {\n    let _post = {...post};\n    if(_post._id === postId ){      \n      _post.commentsData = _post.commentsData.map(comment => {\n        let _comment = {...comment};\n        if(_comment._id === commentId){         \n          _comment.responsesData = _comment.responsesData.map(response => {\n            let _response = {...response};\n            if(_response._id === responseId){\n              _response.likes = [userId, ..._response.likes];\n            }\n            return {..._response};\n          })\n        }\n        return {..._comment};\n      })\n    }\n    return {..._post};\n  })\n\n  return setPostsVar(updatedPost);\n}\n\nexport default addLikeResponse;","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeLikeResponse.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/removeLikeResponse.js",["1515","1516","1517","1518"],"const removeLikeResponse = setPostsVar => (postId, commentId, responseId, userId) => {\n  const posts = [...setPostsVar()];\n  \n  const findPostByPostId = posts.find(post => post._id === postId); \n  if(!findPostByPostId || findPostByPostId && !findPostByPostId.commentsData) return; \n  const findCommentsDataByCommentId = findPostByPostId.commentsData.find(comment => comment._id === commentId);\n  if(!findCommentsDataByCommentId || findCommentsDataByCommentId && !findCommentsDataByCommentId.responsesData) return ; \n  const findResponsesByResponseId = findCommentsDataByCommentId.responsesData.find(response => response._id === responseId);\n  if(!findResponsesByResponseId) return ; \n\n  const updatedPost = posts.map(post => {\n    let _post = {...post};\n    if(_post._id === postId ){      \n      _post.commentsData = _post.commentsData.map(comment => {\n        let _comment = {...comment};\n        if(_comment._id === commentId){         \n          _comment.responsesData = _comment.responsesData.map(response => {\n            let _response = {...response};            \n            if(_response._id === responseId){              \n              _response.likes = _response.likes.filter(_id => _id !== userId);\n            }\n            return {..._response};\n          })\n        }\n        return {..._comment};\n      })\n    }\n    return {..._post};\n  })\n\n  return setPostsVar(updatedPost);\n}\n\nexport default removeLikeResponse;","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeResponse.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/removeResponse.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/removeLikePost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/likePostSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/removeLikePostSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/removeNewNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/addNotificationItemToNotificationsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/removeNotificationItemFromNotificationsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyUserCommentPostSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/updateNotificationItemInNotificationsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/updateNotificationHasSeen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/likeCommentSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/removeLikeCommentSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useChatSubscriptions.jsx",["1519","1520"],"import { useEffect } from \"react\";\nimport chatSubscriptions from \"../apollo/operations/subscriptions/chat\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../apollo/operations/queries/chat/fetchChatConversations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_CHAT,\n} from \"../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../apollo/operations/mutations/cache\";\nimport { UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE } from \"../apollo/operations/mutations/chat\";\n\nconst useChatSubscriptions = () => {\n  const { subscribeToMore: subscribeChatMessage } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const {\n    SENT_MESSAGE_CHAT_SUBSCRIPTION,\n    NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n    SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n    NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n  } = chatSubscriptions;\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-only\" });\n  const {\n    setMessagesStorage,\n    updateMessagesStorage,\n    updateMessagesStorageWhenReceiverSeenAllMessages,\n    updateMessagesStorageToReceivedWhenUserOnline,\n  } = cacheMutations;\n  const [updatePersonalReceiverWhenReceivedNewMessage] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE\n  );\n  useEffect(() => {\n    let unsubscribeChatMessage;\n    let unsubscribeNotifySenderThatReceiverHasReceivedMessage;\n    let unsubscribeSubscribeReceiverHasSeenAllMessages;\n    let unsubscribeNotifySendersReceiverOnlineHasReceivedMessages;\n    if (subscribeChatMessage && user) {\n      unsubscribeChatMessage = subscribeChatMessage({\n        document: SENT_MESSAGE_CHAT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            action,\n            scope,\n            message,\n          } = subscriptionData.data.sentMessageChatSubscription;\n          const { sender } = message;\n        \n          setMessagesStorage(sender, message, scope, false);\n          //update Delivered status\n          const messageStatus =\n            currentChat?._id === sender._id ? \"SEEN\" : \"DELIVERED\";\n          updatePersonalReceiverWhenReceivedNewMessage({\n            variables: { messageId: message._id, messageStatus },\n          });\n        },\n      });\n      unsubscribeNotifySenderThatReceiverHasReceivedMessage = subscribeChatMessage(\n        {\n          document: NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const {\n              action,\n              scope,\n              message,\n            } = subscriptionData.data.notifySenderThatReceiverHasReceivedMessageChat;\n            const { receiver } = message;\n            updateMessagesStorage(receiver, message, scope, action === \"SEEN\");\n          },\n        }\n      );\n      unsubscribeSubscribeReceiverHasSeenAllMessages = subscribeChatMessage({\n        document: SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            receiverId,\n          } = subscriptionData.data.senderSubscribeWhenReceiverHasSeenAllMessages;\n          updateMessagesStorageWhenReceiverSeenAllMessages(receiverId);\n        },\n      });\n      unsubscribeNotifySendersReceiverOnlineHasReceivedMessages = subscribeChatMessage(\n        {\n          document: NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const {\n              receiver,\n            } = subscriptionData.data.notifySendersThatReceiverOnlineHasReceivedMessagesChat;\n            updateMessagesStorageToReceivedWhenUserOnline(receiver);\n          },\n        }\n      );\n    }\n    return () => {\n      if (unsubscribeChatMessage) {\n        unsubscribeChatMessage();\n      }\n      if (unsubscribeNotifySenderThatReceiverHasReceivedMessage) {\n        unsubscribeNotifySenderThatReceiverHasReceivedMessage();\n      }\n      if (unsubscribeSubscribeReceiverHasSeenAllMessages) {\n        unsubscribeSubscribeReceiverHasSeenAllMessages();\n      }\n      if(unsubscribeNotifySendersReceiverOnlineHasReceivedMessages){\n        unsubscribeNotifySendersReceiverOnlineHasReceivedMessages()\n      }\n    };\n  }, [subscribeChatMessage, user, currentChat]);\n};\n\nexport default useChatSubscriptions;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useUserStatusSubscriptions.jsx",["1521","1522","1523"],"import { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CURRENT_USER, GET_FRIENDS } from \"../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../apollo/operations/mutations/cache\";\nimport io from \"socket.io-client\";\nimport _ from \"lodash\"\nconst useUserStatusSubscriptions = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-only\" });\n  const {  updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage } = cacheMutations;\n  useEffect(() => {\n    const socket = io(\"http://localhost:5000\") ; \n    \n    if (user) {\n      console.log(\"render\")\n      //pass socket to backend to update status online \n      socket.open();     \n      const { _id, name, slug, avatar } = user;     \n      socket.emit(\"client-send-user-info\", {\n        _id,\n        name,\n        slug,\n        avatar,\n        isOnline: true,\n      });\n      socket.on(\"server-send-user-online\", (data) => {\n        updateUserOnlineOffline(data);\n        updateUserOnlineOfflineMessagesStorage(data._id);\n      });\n      socket.on(\"server-send-user-is-offline\", userId => {\n        updateUserOnlineOffline({_id : userId},false)\n        updateUserOnlineOfflineMessagesStorage(userId, false);\n      })\n    }else{\n      socket.disconnect();\n    }\n    return () => {\n      if(socket){\n        socket.close()        \n      }\n    }\n  }, [user]);\n};\n\nexport default useUserStatusSubscriptions;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useContactSubscription.jsx",["1524","1525","1526"],"import {useEffect} from \"react\";\nimport { FETCH_CURRENT_USER } from \"../apollo/operations/queries/user\";\nimport { cacheMutations } from \"../apollo/operations/mutations/cache\";\nimport {useQuery} from \"@apollo/client\"\nimport subscriptions from \"../apollo/operations/subscriptions\";\nimport {GET_CONTACT_CACHE_DATA} from \"../apollo/operations/queries/cache\"\nconst useContactSubscription = () => {\n  const {data : {user,receivedRequestsToAddFriend,currentPersonalUser,friends, latestNotification, notifications}} = useQuery(GET_CONTACT_CACHE_DATA)\n  const {setReceivedRequestsToAddFriend, setCurrentUser, setCurrentPersonalUser, setFriends, setLatestNotification, removeNewNotification, decreaseNumberNotificationsUnseen,removeNotificationItemFromNotificationsList} = cacheMutations\n  const {    \n    subscribeToMore: subscribeUser,\n  } = useQuery(FETCH_CURRENT_USER, { skip: true });\n  \n  //function to handle when subscription called \n  const updateSubscriptionOnChange = (sender, receiver, removedNotification) => {  \n    if (removedNotification && user.notifications.includes(removedNotification._id)) {      \n      if (latestNotification?._id === removedNotification._id) {\n        setLatestNotification(null);\n      }\n      removeNewNotification(removedNotification._id);\n      decreaseNumberNotificationsUnseen();\n      removeNotificationItemFromNotificationsList(removedNotification);\n      setCurrentUser({\n        ...user,\n        notifications: [\n          ...user.notifications.filter((_id) => _id !== removedNotification._id)],\n          friends: [...receiver.friends],     \n          following: [...receiver.following], \n          followed : [...receiver.followed]     ,\n          sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n          receivedRequestsToAddFriend : [...receiver.receivedRequestToAddFriend]\n      });\n    }else{\n      setCurrentUser({\n        ...user,\n        friends: [...receiver.friends],     \n        following: [...receiver.following], \n        followed : [...receiver.followed]     ,\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestsToAddFriend : [...receiver.receivedRequestToAddFriend]\n      });\n    }\n   \n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id.toString() === sender._id.toString()\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...sender.friends],\n        following : [...sender.following],\n        followed: [...sender.followed],        \n        receivedRequestsToAddFriend: [...sender.receivedRequestToAddFriend],        \n        sentRequestToAddFriend : [...sender.sentRequestToAddFriend]\n      });\n    }\n  };\n  useEffect(() => {\n    let unsubscribeRejectRquestToAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeRemoveFriend;\n    if (subscribeUser && user) {\n      unsubscribeRejectRquestToAddFriend = subscribeUser({\n        document:\n          subscriptions.userSubscription\n            .REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.rejectRequestToAddFriendSubscription;        \n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      unsubscribeCancelRequestToAddFriend = subscribeUser({\n        document:\n          subscriptions.userSubscription\n            .CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.cancelRequestToAddFriendSubscription;\n\n          // remove sender from received requests\n          setReceivedRequestsToAddFriend(\n            receivedRequestsToAddFriend.filter(\n              (senderRequest) => senderRequest._id !== sender._id\n            )\n          );\n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      unsubscribeRemoveFriend = subscribeUser({\n        document: subscriptions.userSubscription.REMOVE_FRIEND,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n            notification\n          } = subscriptionData.data.removeFriendSubscription;\n          console.log(subscriptionData)\n          updateSubscriptionOnChange(sender, receiver, notification);          \n        },\n      });\n    }\n\n    return () => {\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeRejectRquestToAddFriend) {\n        unsubscribeRejectRquestToAddFriend();\n      }\n      if (unsubscribeRemoveFriend) {\n        unsubscribeRemoveFriend();\n      }\n    };\n  }, [subscribeUser, user,receivedRequestsToAddFriend, friends]);\n\n};\n\nexport default useContactSubscription;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionedUsersInPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useHomePostsSubscription.jsx",["1527","1528"],"import React, {useEffect} from 'react'\nimport {useQuery} from \"@apollo/client\"\nimport {FETCH_POSTS} from \"../apollo/operations/queries/post/fetchPosts\"\nimport {CREATE_COMMENT_SUBSCIPTION, CREATE_RESPONSE_SUBSCRIPTION} from \"../apollo/operations/subscriptions/post\"\nimport {GET_CURRENT_USER} from \"../apollo/operations/queries/cache\"\nimport {cacheMutations} from \"../apollo/operations/mutations/cache\"\nconst useHomePostsSubscription = () => {\n  const {subscribeToMore : subscribePosts} = useQuery(FETCH_POSTS, {fetchPolicy : \"cache-and-network\", skip : true})\n  const {data : {user}} = useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"});\n  const {addCommentToPost, addNewResponseToComment} = cacheMutations\n  useEffect(()=>{\n    let unsubscribeCreateComment, unsubscribeCreateResponse ;\n    if(user && subscribePosts){\n      unsubscribeCreateComment = subscribePosts({\n        document : CREATE_COMMENT_SUBSCIPTION,\n        variables : {userId : user._id}, \n        updateQuery : (_, {subscriptionData})=>{\n          if(subscriptionData){\n            const {createCommentSubscription : comment} = subscriptionData.data;            \n            if(comment.author._id !== user._id){\n              addCommentToPost(comment.post, comment);\n            }            \n          }\n        } \n      });\n      unsubscribeCreateResponse = subscribePosts({\n        document : CREATE_RESPONSE_SUBSCRIPTION, \n        variables : {userId : user._id}, \n        updateQuery : (_ , {subscriptionData}) => {\n          console.log(subscriptionData)\n          if(subscriptionData){\n            const {createResponseSubscription : response} = subscriptionData.data;\n            if(response.author._id !== user._id){\n              addNewResponseToComment(response.post, response.comment, response);\n            }\n          }\n        }\n      })\n    }\n    return () => {\n      if(unsubscribeCreateComment){\n        unsubscribeCreateComment();\n      }\n      if(unsubscribeCreateResponse){\n        unsubscribeCreateResponse();\n      }\n    }\n  },[user,subscribePosts])\n}\n\nexport default useHomePostsSubscription\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/post/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/post/createCommentSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/checkCommentExistedInPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateCommentLikes.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyUserResponseCommentSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/post/createResponseSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionedUsersInResponse.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionedUsersInComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/likeResponseSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/removeLikeResponseSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/hooks/useNotificationsPostSubscription.jsx",["1529","1530"],"import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_NOTIFICATIONS_CACHE_DATA } from \"../apollo/operations/queries/cache\";\nimport {\n  FETCH_NOTIFICATIONS,\n  FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n} from \"../apollo/operations/queries/notification\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport subscriptions from \"../apollo/operations/subscriptions\";\nconst useNotificationsPostSubscription = () => {\n  const { subscribeToMore: subscribeToMoreNotifications } = useQuery(\n    FETCH_NOTIFICATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const { refetch: fetchCountNumberNotificationsUnseen } = useQuery(\n    FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const {\n    data: {\n      countNumberNotificationsUnseen,\n      user,\n      notifications,\n      currentPersonalUser,\n      receivedRequestsToAddFriend,\n      personalPosts,\n      latestNotification,\n    },\n  } = useQuery(GET_NOTIFICATIONS_CACHE_DATA, {\n    fetchPolicy: \"cache-first\",\n  });\n  //mutations\n  const {\n    setCountNumberNotificationsUnseen,\n    increaseNumberNotificationsUnseen,\n    decreaseNumberNotificationsUnseen,\n    setNewNotifications,\n    setLatestNotification,\n    setCurrentUser,\n    setCurrentPersonalUser,    \n    setPersonalPosts,\n    addLikeResponse,\n    removeLikeResponse,\n    updateCommentLikes,\n    removeNewNotification,\n    addNotificationItemToNotificationsList,\n    removeNotificationItemFromNotificationsList,\n    updateNotificationItemInNotificationsList,\n  } = cacheMutations;\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (countNumberNotificationsUnseen === null) {\n      fetchCountNumberNotificationsUnseen().then(\n        ({ data: { countNotificationsUnseen } }) => {\n          if (_isMounted) {\n            setCountNumberNotificationsUnseen(countNotificationsUnseen);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [\n    countNumberNotificationsUnseen,\n    fetchCountNumberNotificationsUnseen,\n    setCountNumberNotificationsUnseen,\n  ]);\n\n  //sender and receiver only use in field 'user'\n  const updatedAddNotification = (\n    newNotification,\n    sender = null,\n    receiver = null\n  ) => {\n    setLatestNotification(newNotification);\n    setNewNotifications(newNotification._id);\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n    }\n    if (\n      notifications.find(\n        (notification) => notification._id === newNotification._id\n      )\n    ) {\n      updateNotificationItemInNotificationsList(newNotification);\n    } else {\n      increaseNumberNotificationsUnseen();\n      addNotificationItemToNotificationsList(newNotification);\n    }\n  };\n\n  const updatedRemoveNotification = (removedNotification, sender, receiver) => {\n    if (latestNotification?._id === removedNotification._id) {\n      setLatestNotification(null);\n    }\n    removeNewNotification(removedNotification._id);\n    decreaseNumberNotificationsUnseen();\n    removeNotificationItemFromNotificationsList(removedNotification);\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n      return;\n    }\n    setCurrentUser({\n      ...user,\n      notifications: [\n        ...notifications.filter((_id) => _id !== removedNotification._id),\n      ],\n    });\n  };\n\n  useEffect(() => {\n    let unsubscribeRequestAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeAcceptRequestToAddFriend,\n      unsubscribeMentionUsersInPost,\n      unsubscribeAcceptRequestAddFriend,\n      unsubscribeUserLikePost,\n      unsubscribeUserRemoveLikePost,\n      unsubscribeOwnerPostReceivedUserComment,\n      unsubscribeMentionedUsersInComment,\n      unsubscribeLikeComment,\n      unsubscribeRemoveLikeComment,\n      unsubscribeUserResponseComment,\n      unsubscribeMentionedUsersInResponse,\n      unsubscribeUserLikeResponse,\n      unsubscribeUserRemoveLikeResponse;\n    if (subscribeToMoreNotifications && user) {\n      //#region Contact\n      unsubscribeRequestAddFriend = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .SENT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              sentRequestToAddFriendSubscription: notification,\n            } = subscriptionData.data;\n            const { receiver, sender } = notification?.fieldIdentity;\n            if (sender && receiver) {\n              updatedAddNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeCancelRequestToAddFriend = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              cancelRequestToAddFriendSubscription: notification,\n            } = subscriptionData.data;\n            console.log(subscriptionData)\n            const { sender, receiver } = notification.fieldIdentity;\n            if (sender && receiver) {\n              updatedRemoveNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeAcceptRequestToAddFriend = subscribeToMoreNotifications({\n        document : subscriptions.notificationSubscription.ACCEPT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION, \n        variables : {userId : user._id } , \n        updateQuery : (_, {subscriptionData}) => {\n          if(subscriptionData){\n            const {acceptRequestToAddFriendSubscription : notification} = subscriptionData.data;\n            const {sender, receiver} = notification.fieldIdentity;\n            updatedAddNotification(notification, sender, receiver);\n          }\n        }\n      })\n\n      //#endregion\n\n      //#region Post\n      unsubscribeMentionUsersInPost = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription.NOTIFY_MENTIONED_USERS_IN_POST,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionUsersInPost } = subscriptionData.data;\n            updatedAddNotification(notifyMentionUsersInPost);\n          }\n        },\n      });\n      unsubscribeUserLikePost = subscribeToMoreNotifications({\n        document: subscriptions.notificationSubscription.LIKE_POST_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likePostSubscription } = subscriptionData.data;\n            if (likePostSubscription) {\n              updatedAddNotification(likePostSubscription);\n\n              if (personalPosts[user._id]) {\n                const personalPostsByUserId = personalPosts[user._id].map(\n                  (_post) => {\n                    if (_post._id === likePostSubscription.post._id) {\n                      let _p = { ..._post };\n                      _p.likes = [\n                        ..._p.likes,\n                        likePostSubscription.creator._id,\n                      ];\n                      return _p;\n                    }\n                    return { ..._post };\n                  }\n                );\n                setPersonalPosts(personalPostsByUserId);\n              }\n            }\n          }\n        },\n      });\n      unsubscribeUserRemoveLikePost = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription.REMOVE_LIKE_POST_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikePostSubscription } = subscriptionData.data;\n            updatedRemoveNotification(removeLikePostSubscription);\n          }\n        },\n      });\n\n      unsubscribeAcceptRequestAddFriend = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .NOTIFY_ACCEPT_REQUEST_TO_ADD_FRIEND,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData) return prev;\n          const {\n            notification: newNotification,\n            sender,\n            receiver,\n          } = subscriptionData.data.notifyAcceptRequestToAddFriend;\n          updatedAddNotification(newNotification, sender, receiver);\n        },\n      });\n      unsubscribeOwnerPostReceivedUserComment = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .NOTIFFY_USER_COMMENT_POST_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyUserCommentPostSubscription } = subscriptionData.data;\n            updatedAddNotification(notifyUserCommentPostSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInComment = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .NOTIFY_MENTIONED_USERS_IN_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionUsersInComment } = subscriptionData.data;\n            updatedAddNotification(notifyMentionUsersInComment);\n          }\n        },\n      });\n      unsubscribeLikeComment = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription.LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          console.log(subscriptionData);\n          if (subscriptionData) {\n            const {\n              comment,\n              notification,\n            } = subscriptionData.data.likeCommentSubscription;\n            //create notification to receiver\n            if (notification && notification.receiver === user._id) {\n              updatedAddNotification(notification);\n            }\n            if (\n              !notification ||\n              (notification && notification.creator._id !== user._id)\n            ) {\n              updateCommentLikes(comment);\n            }\n          }\n        },\n      });\n      unsubscribeRemoveLikeComment = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              comment,\n              notification,\n            } = subscriptionData.data.removeLikeCommentSubscription;\n            if (notification && notification.receiver === user._id) {\n              updatedRemoveNotification(notification);\n            }\n            if (\n              !notification ||\n              (notification && notification.creator._id !== user._id)\n            ) {\n              updateCommentLikes(comment);\n            }\n          }\n        },\n      });\n      unsubscribeUserResponseComment = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .NOTIFY_USER_RESPONSE_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              notifyUserResponseCommentSubscription,\n            } = subscriptionData.data;\n            updatedAddNotification(notifyUserResponseCommentSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInResponse = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .NOTIFY_MENTIONED_USERS_IN_RESPONSE,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionedUsersInResponse } = subscriptionData.data;\n            updatedAddNotification(notifyMentionedUsersInResponse);\n          }\n        },\n      });\n      unsubscribeUserLikeResponse = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription.LIKE_RESPONSE_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likeResponseSubscription } = subscriptionData.data;\n            if (likeResponseSubscription.receiver.toString() === user._id) {\n              updatedAddNotification(likeResponseSubscription);\n            }\n            const {\n              post,\n              comment,\n              response,\n            } = likeResponseSubscription.fieldIdentity;\n            if (likeResponseSubscription.creator._id.toString() !== user._id) {\n              addLikeResponse(\n                post._id,\n                comment._id,\n                response._id,\n                likeResponseSubscription.creator._id\n              );\n            }\n          }\n        },\n      });\n      unsubscribeUserRemoveLikeResponse = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikeResponseSubscription } = subscriptionData.data;\n            if (\n              removeLikeResponseSubscription.receiver.toString() === user._id\n            ) {\n              updatedRemoveNotification(removeLikeResponseSubscription);\n            }\n            const {\n              post,\n              comment,\n              response,\n            } = removeLikeResponseSubscription.fieldIdentity;\n            if (\n              removeLikeResponseSubscription.creator._id.toString() !== user._id\n            ) {\n              removeLikeResponse(\n                post._id,\n                comment._id,\n                response._id,\n                removeLikeResponseSubscription.creator._id\n              );\n            }\n          }\n        },\n      });\n      //#endregion\n    }\n\n    return () => {\n      if (unsubscribeRequestAddFriend) {\n        unsubscribeRequestAddFriend();\n      }\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if(unsubscribeAcceptRequestToAddFriend){\n        unsubscribeAcceptRequestToAddFriend();\n      }\n      if (unsubscribeMentionUsersInPost) {\n        unsubscribeMentionUsersInPost();\n      }\n      if (unsubscribeUserLikePost) {\n        unsubscribeUserLikePost();\n      }\n      if (unsubscribeUserRemoveLikePost) {\n        unsubscribeUserRemoveLikePost();\n      }\n      if (unsubscribeAcceptRequestAddFriend) {\n        unsubscribeAcceptRequestAddFriend();\n      }\n      if (unsubscribeOwnerPostReceivedUserComment) {\n        unsubscribeOwnerPostReceivedUserComment();\n      }\n      if (unsubscribeMentionedUsersInComment) {\n        unsubscribeMentionedUsersInComment();\n      }\n      if (unsubscribeLikeComment) {\n        unsubscribeLikeComment();\n      }\n      if (unsubscribeRemoveLikeComment) {\n        unsubscribeRemoveLikeComment();\n      }\n      if (unsubscribeUserResponseComment) {\n        unsubscribeUserResponseComment();\n      }\n      if (unsubscribeMentionedUsersInResponse) {\n        unsubscribeMentionedUsersInResponse();\n      }\n      if (unsubscribeUserLikeResponse) {\n        unsubscribeUserLikeResponse();\n      }\n      if (unsubscribeUserRemoveLikeResponse) {\n        unsubscribeUserRemoveLikeResponse();\n      }\n    };\n  }, [\n    countNumberNotificationsUnseen,\n    subscribeToMoreNotifications,\n    receivedRequestsToAddFriend,\n    notifications,\n    user,\n  ]);\n};\n\nexport default useNotificationsPostSubscription;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/IntroductionBox.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeading.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeadingContact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalPosts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/sentRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/cancelRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/NotificationItem.styles.jsx",["1531","1532","1533"],"\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\"\nexport const Wrapper = styled.section`\n  background-color : ${({hasSeen, theme}) => theme ===\"dark\" ? hasSeen ? \"var(--color-card-dark)\" : \"var(--color-card-dark-secondary)\" : hasSeen ? \"var(--color-card-default)\" :\"var(--color-card-default-secondary)\"};\n  &:hover{\n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--color-hover-dark)\" : \"var(--color-hover-default)\"} ;\n  }\n`;\n\nexport const LinkWrapper = styled(Link)`\n  display : flex;\n  padding :0.4rem 0.8rem;\n  font-size : 0.9rem;\n`\n\nexport const AvatarContainer = styled.div`\n  width : 2.5rem;\n  height : 2.5rem;\n  & img{\n    width : 100%; \n    height :100%; \n    border-radius : 50%;\n  }  \n` \n\nexport const NotificationContent =styled.article`\n  margin-left : 0.5rem;\n  flex : 1 ; \n  display : flex; \n  flex-direction : column;\n`\n\nexport const Controls = styled.div`\n  padding : 0.75rem 1.25rem;\n`\n\nconst ButtonsGroup = styled.div`\n  display: flex;\n  padding: 1rem;\n`;\n\nconst ButtonAccept = styled.button`\n  padding: 0.5rem 1rem;\n  outline: none;\n  border: none;\n  background-color: #16c172e3;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: var(--white);\n  &:hover {\n    background-color: #009651e3;\n  }\n`;\nconst ButtonDecline = styled.button`\n  padding: 0.5rem 1rem;\n  outline: none;\n  border: none;\n  background-color: #ec1b1be3;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: var(--white);\n  &:hover {\n    background-color: #c70000e3;\n  }\n`;","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomMaterialButton.jsx",["1534","1535","1536","1537","1538","1539"],"import React from 'react';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { green, purple, red, blue } from '@material-ui/core/colors';\n\nexport const AcceptButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[600]),\n    fontWeight : 600,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n}))(Button);\n\nexport const DenyButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(red[600]),\n    fontWeight: 600,\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[700],\n    },\n  },\n}))(Button);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyAcceptRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/acceptRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/addPostsToCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/addPostItemToCurrentPersonalUser.js",[],{"ruleId":"1540","replacedBy":"1541"},{"ruleId":"1542","replacedBy":"1543"},{"ruleId":"1544","severity":1,"message":"1545","line":57,"column":5,"nodeType":"1546","endLine":57,"endColumn":13,"suggestions":"1547"},{"ruleId":"1548","severity":1,"message":"1549","line":13,"column":12,"nodeType":"1550","endLine":13,"endColumn":70},{"ruleId":"1551","severity":1,"message":"1552","line":1,"column":51,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":55},{"ruleId":"1551","severity":1,"message":"1555","line":1,"column":57,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":65},{"ruleId":"1551","severity":1,"message":"1556","line":33,"column":41,"nodeType":"1553","messageId":"1554","endLine":33,"endColumn":51},{"ruleId":"1544","severity":1,"message":"1557","line":46,"column":6,"nodeType":"1546","endLine":46,"endColumn":28,"suggestions":"1558"},{"ruleId":"1544","severity":1,"message":"1559","line":89,"column":6,"nodeType":"1546","endLine":89,"endColumn":8,"suggestions":"1560"},{"ruleId":"1544","severity":1,"message":"1561","line":58,"column":6,"nodeType":"1546","endLine":58,"endColumn":98,"suggestions":"1562"},{"ruleId":"1544","severity":1,"message":"1563","line":23,"column":6,"nodeType":"1546","endLine":23,"endColumn":37,"suggestions":"1564"},{"ruleId":"1551","severity":1,"message":"1565","line":1,"column":17,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":26},{"ruleId":"1551","severity":1,"message":"1566","line":5,"column":3,"nodeType":"1553","messageId":"1554","endLine":5,"endColumn":28},{"ruleId":"1544","severity":1,"message":"1567","line":78,"column":6,"nodeType":"1546","endLine":78,"endColumn":33,"suggestions":"1568"},{"ruleId":"1544","severity":1,"message":"1569","line":107,"column":6,"nodeType":"1546","endLine":107,"endColumn":19,"suggestions":"1570"},{"ruleId":"1551","severity":1,"message":"1571","line":1,"column":34,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":42},{"ruleId":"1544","severity":1,"message":"1572","line":90,"column":6,"nodeType":"1546","endLine":90,"endColumn":8,"suggestions":"1573"},{"ruleId":"1551","severity":1,"message":"1571","line":1,"column":17,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":25},{"ruleId":"1551","severity":1,"message":"1574","line":1,"column":27,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":38},{"ruleId":"1551","severity":1,"message":"1575","line":1,"column":40,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":53},{"ruleId":"1551","severity":1,"message":"1576","line":22,"column":9,"nodeType":"1553","messageId":"1554","endLine":22,"endColumn":23},{"ruleId":"1544","severity":1,"message":"1577","line":29,"column":6,"nodeType":"1546","endLine":29,"endColumn":12,"suggestions":"1578"},{"ruleId":"1551","severity":1,"message":"1579","line":13,"column":21,"nodeType":"1553","messageId":"1554","endLine":13,"endColumn":33},{"ruleId":"1551","severity":1,"message":"1580","line":17,"column":41,"nodeType":"1553","messageId":"1554","endLine":17,"endColumn":73},{"ruleId":"1544","severity":1,"message":"1581","line":81,"column":6,"nodeType":"1546","endLine":81,"endColumn":40,"suggestions":"1582"},{"ruleId":"1551","severity":1,"message":"1565","line":1,"column":17,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":26},{"ruleId":"1551","severity":1,"message":"1565","line":1,"column":17,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":26},{"ruleId":"1551","severity":1,"message":"1583","line":8,"column":3,"nodeType":"1553","messageId":"1554","endLine":8,"endColumn":21},{"ruleId":"1551","severity":1,"message":"1584","line":16,"column":8,"nodeType":"1553","messageId":"1554","endLine":16,"endColumn":21},{"ruleId":"1551","severity":1,"message":"1585","line":12,"column":10,"nodeType":"1553","messageId":"1554","endLine":12,"endColumn":23},{"ruleId":"1544","severity":1,"message":"1586","line":55,"column":6,"nodeType":"1546","endLine":55,"endColumn":23,"suggestions":"1587"},{"ruleId":"1544","severity":1,"message":"1588","line":64,"column":5,"nodeType":"1546","endLine":64,"endColumn":7,"suggestions":"1589"},{"ruleId":"1551","severity":1,"message":"1590","line":7,"column":18,"nodeType":"1553","messageId":"1554","endLine":7,"endColumn":22},{"ruleId":"1551","severity":1,"message":"1565","line":1,"column":16,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":25},{"ruleId":"1551","severity":1,"message":"1591","line":13,"column":37,"nodeType":"1553","messageId":"1554","endLine":13,"endColumn":56},{"ruleId":"1540","replacedBy":"1592"},{"ruleId":"1542","replacedBy":"1593"},{"ruleId":"1551","severity":1,"message":"1594","line":1,"column":16,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":25},{"ruleId":"1551","severity":1,"message":"1590","line":18,"column":18,"nodeType":"1553","messageId":"1554","endLine":18,"endColumn":22},{"ruleId":"1551","severity":1,"message":"1595","line":19,"column":18,"nodeType":"1553","messageId":"1554","endLine":19,"endColumn":37},{"ruleId":"1551","severity":1,"message":"1596","line":7,"column":3,"nodeType":"1553","messageId":"1554","endLine":7,"endColumn":16},{"ruleId":"1551","severity":1,"message":"1597","line":14,"column":3,"nodeType":"1553","messageId":"1554","endLine":14,"endColumn":20},{"ruleId":"1544","severity":1,"message":"1598","line":104,"column":6,"nodeType":"1546","endLine":104,"endColumn":35,"suggestions":"1599"},{"ruleId":"1551","severity":1,"message":"1600","line":251,"column":9,"nodeType":"1553","messageId":"1554","endLine":251,"endColumn":23},{"ruleId":"1548","severity":1,"message":"1549","line":75,"column":16,"nodeType":"1550","endLine":75,"endColumn":74},{"ruleId":"1551","severity":1,"message":"1574","line":1,"column":49,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":60},{"ruleId":"1544","severity":1,"message":"1601","line":45,"column":6,"nodeType":"1546","endLine":45,"endColumn":8,"suggestions":"1602"},{"ruleId":"1544","severity":1,"message":"1603","line":60,"column":6,"nodeType":"1546","endLine":60,"endColumn":69,"suggestions":"1604"},{"ruleId":"1544","severity":1,"message":"1605","line":60,"column":19,"nodeType":"1606","endLine":60,"endColumn":62},{"ruleId":"1544","severity":1,"message":"1607","line":118,"column":6,"nodeType":"1546","endLine":118,"endColumn":24,"suggestions":"1608"},{"ruleId":"1551","severity":1,"message":"1609","line":1,"column":27,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":37},{"ruleId":"1551","severity":1,"message":"1610","line":1,"column":39,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":45},{"ruleId":"1551","severity":1,"message":"1611","line":1,"column":17,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":20},{"ruleId":"1551","severity":1,"message":"1574","line":1,"column":17,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":28},{"ruleId":"1551","severity":1,"message":"1612","line":21,"column":8,"nodeType":"1553","messageId":"1554","endLine":21,"endColumn":16},{"ruleId":"1551","severity":1,"message":"1613","line":13,"column":3,"nodeType":"1553","messageId":"1554","endLine":13,"endColumn":14},{"ruleId":"1551","severity":1,"message":"1614","line":15,"column":3,"nodeType":"1553","messageId":"1554","endLine":15,"endColumn":18},{"ruleId":"1551","severity":1,"message":"1615","line":2,"column":9,"nodeType":"1553","messageId":"1554","endLine":2,"endColumn":13},{"ruleId":"1551","severity":1,"message":"1590","line":18,"column":13,"nodeType":"1553","messageId":"1554","endLine":18,"endColumn":17},{"ruleId":"1551","severity":1,"message":"1615","line":2,"column":10,"nodeType":"1553","messageId":"1554","endLine":2,"endColumn":14},{"ruleId":"1551","severity":1,"message":"1616","line":45,"column":5,"nodeType":"1553","messageId":"1554","endLine":45,"endColumn":31},{"ruleId":"1551","severity":1,"message":"1617","line":11,"column":10,"nodeType":"1553","messageId":"1554","endLine":11,"endColumn":18},{"ruleId":"1544","severity":1,"message":"1577","line":20,"column":6,"nodeType":"1546","endLine":20,"endColumn":12,"suggestions":"1618"},{"ruleId":"1551","severity":1,"message":"1565","line":1,"column":27,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":36},{"ruleId":"1619","severity":1,"message":"1620","line":9,"column":3,"nodeType":"1621","messageId":"1622","endLine":36,"endColumn":4},{"ruleId":"1619","severity":1,"message":"1620","line":11,"column":7,"nodeType":"1621","messageId":"1622","endLine":18,"endColumn":8},{"ruleId":"1623","severity":1,"message":"1624","line":12,"column":28,"nodeType":"1625","messageId":"1626","endLine":14,"endColumn":10},{"ruleId":"1627","severity":1,"message":"1628","line":19,"column":5,"nodeType":"1629","messageId":"1630","endLine":24,"endColumn":8},{"ruleId":"1619","severity":1,"message":"1620","line":20,"column":7,"nodeType":"1621","messageId":"1622","endLine":24,"endColumn":8},{"ruleId":"1627","severity":1,"message":"1628","line":25,"column":5,"nodeType":"1629","messageId":"1630","endLine":30,"endColumn":8},{"ruleId":"1619","severity":1,"message":"1620","line":26,"column":7,"nodeType":"1621","messageId":"1622","endLine":30,"endColumn":8},{"ruleId":"1627","severity":1,"message":"1628","line":31,"column":5,"nodeType":"1629","messageId":"1630","endLine":35,"endColumn":8},{"ruleId":"1619","severity":1,"message":"1620","line":32,"column":7,"nodeType":"1621","messageId":"1622","endLine":35,"endColumn":8},{"ruleId":"1551","severity":1,"message":"1631","line":25,"column":10,"nodeType":"1553","messageId":"1554","endLine":25,"endColumn":21},{"ruleId":"1544","severity":1,"message":"1632","line":48,"column":6,"nodeType":"1546","endLine":48,"endColumn":55,"suggestions":"1633"},{"ruleId":"1544","severity":1,"message":"1634","line":51,"column":35,"nodeType":"1553","endLine":51,"endColumn":46},{"ruleId":"1544","severity":1,"message":"1635","line":79,"column":6,"nodeType":"1546","endLine":79,"endColumn":32,"suggestions":"1636"},{"ruleId":"1544","severity":1,"message":"1637","line":86,"column":5,"nodeType":"1546","endLine":86,"endColumn":58,"suggestions":"1638"},{"ruleId":"1540","replacedBy":"1639"},{"ruleId":"1542","replacedBy":"1640"},{"ruleId":"1551","severity":1,"message":"1641","line":25,"column":10,"nodeType":"1553","messageId":"1554","endLine":25,"endColumn":16},{"ruleId":"1551","severity":1,"message":"1642","line":25,"column":18,"nodeType":"1553","messageId":"1554","endLine":25,"endColumn":27},{"ruleId":"1551","severity":1,"message":"1643","line":26,"column":10,"nodeType":"1553","messageId":"1554","endLine":26,"endColumn":22},{"ruleId":"1551","severity":1,"message":"1644","line":26,"column":24,"nodeType":"1553","messageId":"1554","endLine":26,"endColumn":39},{"ruleId":"1544","severity":1,"message":"1588","line":38,"column":5,"nodeType":"1546","endLine":38,"endColumn":7,"suggestions":"1645"},{"ruleId":"1544","severity":1,"message":"1646","line":33,"column":6,"nodeType":"1546","endLine":33,"endColumn":23,"suggestions":"1647"},{"ruleId":"1551","severity":1,"message":"1648","line":43,"column":11,"nodeType":"1553","messageId":"1554","endLine":43,"endColumn":23},{"ruleId":"1544","severity":1,"message":"1649","line":126,"column":6,"nodeType":"1546","endLine":126,"endColumn":52,"suggestions":"1650"},{"ruleId":"1551","severity":1,"message":"1571","line":1,"column":16,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":24},{"ruleId":"1551","severity":1,"message":"1576","line":5,"column":9,"nodeType":"1553","messageId":"1554","endLine":5,"endColumn":23},{"ruleId":"1551","severity":1,"message":"1651","line":6,"column":31,"nodeType":"1553","messageId":"1554","endLine":6,"endColumn":42},{"ruleId":"1551","severity":1,"message":"1585","line":7,"column":9,"nodeType":"1553","messageId":"1554","endLine":7,"endColumn":22},{"ruleId":"1551","severity":1,"message":"1652","line":9,"column":9,"nodeType":"1553","messageId":"1554","endLine":9,"endColumn":19},{"ruleId":"1653","severity":1,"message":"1654","line":65,"column":62,"nodeType":"1655","messageId":"1656","endLine":65,"endColumn":64},{"ruleId":"1551","severity":1,"message":"1657","line":9,"column":3,"nodeType":"1553","messageId":"1554","endLine":9,"endColumn":10},{"ruleId":"1551","severity":1,"message":"1658","line":37,"column":14,"nodeType":"1553","messageId":"1554","endLine":37,"endColumn":34},{"ruleId":"1551","severity":1,"message":"1659","line":39,"column":11,"nodeType":"1553","messageId":"1554","endLine":39,"endColumn":15},{"ruleId":"1544","severity":1,"message":"1660","line":110,"column":6,"nodeType":"1546","endLine":110,"endColumn":8,"suggestions":"1661"},{"ruleId":"1551","severity":1,"message":"1615","line":2,"column":10,"nodeType":"1553","messageId":"1554","endLine":2,"endColumn":14},{"ruleId":"1551","severity":1,"message":"1662","line":32,"column":25,"nodeType":"1553","messageId":"1554","endLine":32,"endColumn":33},{"ruleId":"1551","severity":1,"message":"1663","line":1,"column":10,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":21},{"ruleId":"1551","severity":1,"message":"1571","line":1,"column":17,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":25},{"ruleId":"1551","severity":1,"message":"1565","line":1,"column":27,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":36},{"ruleId":"1551","severity":1,"message":"1610","line":1,"column":38,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":44},{"ruleId":"1551","severity":1,"message":"1664","line":1,"column":27,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":34},{"ruleId":"1551","severity":1,"message":"1657","line":6,"column":3,"nodeType":"1553","messageId":"1554","endLine":6,"endColumn":10},{"ruleId":"1551","severity":1,"message":"1665","line":8,"column":3,"nodeType":"1553","messageId":"1554","endLine":8,"endColumn":14},{"ruleId":"1544","severity":1,"message":"1666","line":29,"column":6,"nodeType":"1546","endLine":29,"endColumn":8,"suggestions":"1667"},{"ruleId":"1551","severity":1,"message":"1571","line":1,"column":17,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":25},{"ruleId":"1551","severity":1,"message":"1668","line":6,"column":3,"nodeType":"1553","messageId":"1554","endLine":6,"endColumn":13},{"ruleId":"1551","severity":1,"message":"1669","line":24,"column":11,"nodeType":"1553","messageId":"1554","endLine":24,"endColumn":18},{"ruleId":"1544","severity":1,"message":"1670","line":34,"column":6,"nodeType":"1546","endLine":34,"endColumn":26,"suggestions":"1671"},{"ruleId":"1551","severity":1,"message":"1672","line":27,"column":3,"nodeType":"1553","messageId":"1554","endLine":27,"endColumn":13},{"ruleId":"1551","severity":1,"message":"1615","line":33,"column":10,"nodeType":"1553","messageId":"1554","endLine":33,"endColumn":14},{"ruleId":"1551","severity":1,"message":"1658","line":42,"column":14,"nodeType":"1553","messageId":"1554","endLine":42,"endColumn":34},{"ruleId":"1551","severity":1,"message":"1659","line":46,"column":11,"nodeType":"1553","messageId":"1554","endLine":46,"endColumn":15},{"ruleId":"1544","severity":1,"message":"1660","line":64,"column":6,"nodeType":"1546","endLine":64,"endColumn":8,"suggestions":"1673"},{"ruleId":"1653","severity":1,"message":"1654","line":160,"column":64,"nodeType":"1655","messageId":"1656","endLine":160,"endColumn":66},{"ruleId":"1551","severity":1,"message":"1674","line":31,"column":11,"nodeType":"1553","messageId":"1554","endLine":31,"endColumn":20},{"ruleId":"1544","severity":1,"message":"1675","line":80,"column":6,"nodeType":"1546","endLine":80,"endColumn":14,"suggestions":"1676"},{"ruleId":"1544","severity":1,"message":"1677","line":121,"column":6,"nodeType":"1546","endLine":121,"endColumn":29,"suggestions":"1678"},{"ruleId":"1551","severity":1,"message":"1615","line":2,"column":9,"nodeType":"1553","messageId":"1554","endLine":2,"endColumn":13},{"ruleId":"1544","severity":1,"message":"1679","line":74,"column":6,"nodeType":"1546","endLine":74,"endColumn":49,"suggestions":"1680"},{"ruleId":"1544","severity":1,"message":"1660","line":101,"column":6,"nodeType":"1546","endLine":101,"endColumn":8,"suggestions":"1681"},{"ruleId":"1544","severity":1,"message":"1682","line":171,"column":6,"nodeType":"1546","endLine":171,"endColumn":13,"suggestions":"1683"},{"ruleId":"1653","severity":1,"message":"1654","line":220,"column":64,"nodeType":"1655","messageId":"1656","endLine":220,"endColumn":66},{"ruleId":"1551","severity":1,"message":"1565","line":1,"column":30,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":39},{"ruleId":"1551","severity":1,"message":"1684","line":3,"column":23,"nodeType":"1553","messageId":"1554","endLine":3,"endColumn":31},{"ruleId":"1544","severity":1,"message":"1685","line":34,"column":6,"nodeType":"1546","endLine":34,"endColumn":8,"suggestions":"1686"},{"ruleId":"1544","severity":1,"message":"1687","line":49,"column":6,"nodeType":"1546","endLine":49,"endColumn":8,"suggestions":"1688"},{"ruleId":"1544","severity":1,"message":"1634","line":51,"column":33,"nodeType":"1553","endLine":51,"endColumn":44},{"ruleId":"1689","severity":1,"message":"1690","line":4,"column":24,"nodeType":"1691","messageId":"1692","endLine":4,"endColumn":26},{"ruleId":"1689","severity":1,"message":"1690","line":4,"column":44,"nodeType":"1691","messageId":"1692","endLine":4,"endColumn":46},{"ruleId":"1689","severity":1,"message":"1690","line":6,"column":35,"nodeType":"1691","messageId":"1692","endLine":6,"endColumn":37},{"ruleId":"1689","severity":1,"message":"1690","line":6,"column":66,"nodeType":"1691","messageId":"1692","endLine":6,"endColumn":68},{"ruleId":"1689","severity":1,"message":"1690","line":5,"column":24,"nodeType":"1691","messageId":"1692","endLine":5,"endColumn":26},{"ruleId":"1689","severity":1,"message":"1690","line":5,"column":44,"nodeType":"1691","messageId":"1692","endLine":5,"endColumn":46},{"ruleId":"1689","severity":1,"message":"1690","line":7,"column":35,"nodeType":"1691","messageId":"1692","endLine":7,"endColumn":37},{"ruleId":"1689","severity":1,"message":"1690","line":7,"column":66,"nodeType":"1691","messageId":"1692","endLine":7,"endColumn":68},{"ruleId":"1551","severity":1,"message":"1693","line":52,"column":13,"nodeType":"1553","messageId":"1554","endLine":52,"endColumn":19},{"ruleId":"1544","severity":1,"message":"1694","line":119,"column":6,"nodeType":"1546","endLine":119,"endColumn":47,"suggestions":"1695"},{"ruleId":"1551","severity":1,"message":"1696","line":6,"column":8,"nodeType":"1553","messageId":"1554","endLine":6,"endColumn":9},{"ruleId":"1551","severity":1,"message":"1697","line":12,"column":13,"nodeType":"1553","messageId":"1554","endLine":12,"endColumn":20},{"ruleId":"1544","severity":1,"message":"1698","line":46,"column":6,"nodeType":"1546","endLine":46,"endColumn":12,"suggestions":"1699"},{"ruleId":"1551","severity":1,"message":"1700","line":8,"column":100,"nodeType":"1553","messageId":"1554","endLine":8,"endColumn":113},{"ruleId":"1551","severity":1,"message":"1701","line":9,"column":82,"nodeType":"1553","messageId":"1554","endLine":9,"endColumn":92},{"ruleId":"1544","severity":1,"message":"1702","line":124,"column":6,"nodeType":"1546","endLine":124,"endColumn":64,"suggestions":"1703"},{"ruleId":"1551","severity":1,"message":"1704","line":1,"column":8,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":13},{"ruleId":"1544","severity":1,"message":"1705","line":48,"column":5,"nodeType":"1546","endLine":48,"endColumn":26,"suggestions":"1706"},{"ruleId":"1551","severity":1,"message":"1704","line":1,"column":8,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":13},{"ruleId":"1544","severity":1,"message":"1707","line":473,"column":6,"nodeType":"1546","endLine":479,"endColumn":4,"suggestions":"1708"},{"ruleId":"1551","severity":1,"message":"1709","line":38,"column":7,"nodeType":"1553","messageId":"1554","endLine":38,"endColumn":19},{"ruleId":"1551","severity":1,"message":"1710","line":43,"column":7,"nodeType":"1553","messageId":"1554","endLine":43,"endColumn":19},{"ruleId":"1551","severity":1,"message":"1711","line":57,"column":7,"nodeType":"1553","messageId":"1554","endLine":57,"endColumn":20},{"ruleId":"1551","severity":1,"message":"1704","line":1,"column":8,"nodeType":"1553","messageId":"1554","endLine":1,"endColumn":13},{"ruleId":"1551","severity":1,"message":"1712","line":2,"column":10,"nodeType":"1553","messageId":"1554","endLine":2,"endColumn":24},{"ruleId":"1551","severity":1,"message":"1713","line":2,"column":38,"nodeType":"1553","messageId":"1554","endLine":2,"endColumn":48},{"ruleId":"1551","severity":1,"message":"1714","line":2,"column":50,"nodeType":"1553","messageId":"1554","endLine":2,"endColumn":63},{"ruleId":"1551","severity":1,"message":"1715","line":4,"column":17,"nodeType":"1553","messageId":"1554","endLine":4,"endColumn":23},{"ruleId":"1551","severity":1,"message":"1716","line":4,"column":30,"nodeType":"1553","messageId":"1554","endLine":4,"endColumn":34},"no-native-reassign",["1717"],"no-negated-in-lhs",["1718"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCurrentUser', 'fetchFriends', 'fetchNotifications', 'setCurrentUser', 'setFriends', and 'setNotifications'. Either include them or remove the dependency array.","ArrayExpression",["1719"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'setNewPost' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchPosts' and 'setPosts'. Either include them or remove the dependency array.",["1720"],"React Hook useCallback has a missing dependency: 'setOpenFriendsList'. Either include it or remove the dependency array.",["1721"],"React Hook useEffect has a missing dependency: 'setNotifications'. Either include it or remove the dependency array.",["1722"],"React Hook useEffect has a missing dependency: 'setIsAuth'. Either include it or remove the dependency array. If 'setIsAuth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1723"],"'useEffect' is defined but never used.","'GET_CURRENT_PERSONAL_USER' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchListContact', 'friends.length', 'setFriends', 'setReceivedRequestsToAddFriend', and 'setSentRequestsToAddFriend'. Either include them or remove the dependency array.",["1724"],"React Hook useEffect has missing dependencies: 'fetchFriends', 'friends', and 'setFriends'. Either include them or remove the dependency array.",["1725"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchChatConversations', 'messagesStorage', 'setInitialMessagesStorage', 'setNumberOfConversations', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user'. Either include them or remove the dependency array.",["1726"],"'useCallback' is defined but never used.","'createContext' is defined but never used.","'cacheMutations' is defined but never used.","React Hook useEffect has a missing dependency: 'i18n.store.data'. Either include it or remove the dependency array.",["1727"],"'setPostsData' is assigned a value but never used.","'addPostItemToCurrentPersonalUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addPostsToCurrentPersonalUser' and 'fetchMorePostsData'. Either include them or remove the dependency array.",["1728"],"'FETCH_CURRENT_USER' is defined but never used.","'subscriptions' is defined but never used.","'FETCH_FRIENDS' is defined but never used.","React Hook useEffect has a missing dependency: 'originData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setContactData' needs the current value of 'originData'.",["1729"],"React Hook useEffect has a missing dependency: 'setCurrentChat'. Either include it or remove the dependency array.",["1730"],"'user' is assigned a value but never used.","'BsThreeDotsVertical' is defined but never used.",["1717"],["1718"],"'createRef' is defined but never used.","'currentPersonalUser' is assigned a value but never used.","'FcAddressBook' is defined but never used.","'FcNeutralDecision' is defined but never used.","React Hook useEffect has missing dependencies: 'removeFriend', 'setDialog', and 'updateMutationOnChange'. Either include them or remove the dependency array.",["1731"],"'onRemoveFriend' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'shouldScrollIntoView'. Either include them or remove the dependency array.",["1732"],"React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'messagesStorage'. Either include them or remove the dependency array.",["1733"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ChainExpression","React Hook useEffect has missing dependencies: 'currentChat._id', 'currentChat.scope', 'fetchMoreMessages', 'messagesStorage', and 'updateMoreMessages'. Either include them or remove the dependency array.",["1734"],"'useContext' is defined but never used.","'useRef' is defined but never used.","'css' is defined but never used.","'LazyLoad' is defined but never used.","'CurrentChat' is defined but never used.","'MessagesStorage' is defined but never used.","'Link' is defined but never used.","'updateHasSeenLatestMessage' is assigned a value but never used.","'askLogin' is assigned a value but never used.",["1735"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'boardHeight' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'notificationRef.current'. Either exclude it or remove the dependency array. Mutable values like 'notificationRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1736"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'fetchNotifications', 'notifications', and 'setNotifications'. Either include them or remove the dependency array.",["1737"],"React Hook useEffect has an unnecessary dependency: 'notificationBoardRef.current'. Either exclude it or remove the dependency array. Mutable values like 'notificationBoardRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1738"],["1717"],["1718"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'originalData' is assigned a value but never used.","'setOriginalData' is assigned a value but never used.",["1739"],"React Hook useEffect has missing dependencies: 'data', 'fetchMoreContacts', and 'setFriends'. Either include them or remove the dependency array.",["1740"],"'setShowPopup' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_messagesStorage.length', 'fetchMoreConversations', 'messagesStorage', 'setInitialMessagesStorage', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user._id'. Either include them or remove the dependency array.",["1741"],"'GET_FRIENDS' is defined but never used.","'useThemeUI' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Wrapper' is defined but never used.","'searchFriendsLoading' is assigned a value but never used.","'push' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'searchFriends'. Either include it or remove the dependency array.",["1742"],"'dragging' is assigned a value but never used.","'setPostsVar' is defined but never used.","'useMemo' is defined but never used.","'HashtagLink' is defined but never used.","React Hook useEffect has a missing dependency: 'post._id'. Either include it or remove the dependency array.",["1743"],"'SenderName' is defined but never used.","'message' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setLatestNotification'. Either include it or remove the dependency array.",["1744"],"'InputImage' is defined but never used.",["1745"],"'colorMode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'comment._id', 'comment.post', 'removeComment', 'removeCommentFromPostCache', 'removeResponse', and 'removeResponseInCache'. Either include them or remove the dependency array.",["1746"],"React Hook useCallback has missing dependencies: 'comment.responses.length' and 'onLoadResponses'. Either include them or remove the dependency array.",["1747"],"React Hook useEffect has missing dependencies: 'user._id' and 'user.name'. Either include them or remove the dependency array.",["1748"],["1749"],"React Hook useEffect has a missing dependency: 'removeFocus'. Either include it or remove the dependency array. If 'removeFocus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1750"],"'useQuery' is defined but never used.","React Hook useCallback has missing dependencies: 'addLikeResponse', 'likeResponse', and 'user._id'. Either include them or remove the dependency array.",["1751"],"React Hook useCallback has missing dependencies: 'removeLikeResponse', 'removeLikeResponseInCache', and 'user._id'. Either include them or remove the dependency array.",["1752"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'action' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES', 'NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT', 'SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES', 'SENT_MESSAGE_CHAT_SUBSCRIPTION', 'setMessagesStorage', 'updateMessagesStorage', 'updateMessagesStorageToReceivedWhenUserOnline', 'updateMessagesStorageWhenReceiverSeenAllMessages', and 'updatePersonalReceiverWhenReceivedNewMessage'. Either include them or remove the dependency array.",["1753"],"'_' is defined but never used.","'friends' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'updateUserOnlineOffline' and 'updateUserOnlineOfflineMessagesStorage'. Either include them or remove the dependency array.",["1754"],"'notifications' is assigned a value but never used.","'setFriends' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setReceivedRequestsToAddFriend' and 'updateSubscriptionOnChange'. Either include them or remove the dependency array.",["1755"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'addCommentToPost' and 'addNewResponseToComment'. Either include them or remove the dependency array.",["1756"],"React Hook useEffect has missing dependencies: 'addLikeResponse', 'personalPosts', 'removeLikeResponse', 'setPersonalPosts', 'updateCommentLikes', 'updatedAddNotification', and 'updatedRemoveNotification'. Either include them or remove the dependency array.",["1757"],"'ButtonsGroup' is assigned a value but never used.","'ButtonAccept' is assigned a value but never used.","'ButtonDecline' is assigned a value but never used.","'createMuiTheme' is defined but never used.","'makeStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'purple' is defined but never used.","'blue' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1758","fix":"1759"},{"desc":"1760","fix":"1761"},{"desc":"1762","fix":"1763"},{"desc":"1764","fix":"1765"},{"desc":"1766","fix":"1767"},{"desc":"1768","fix":"1769"},{"desc":"1770","fix":"1771"},{"desc":"1772","fix":"1773"},{"desc":"1774","fix":"1775"},{"desc":"1776","fix":"1777"},{"desc":"1778","fix":"1779"},{"desc":"1780","fix":"1781"},{"desc":"1782","fix":"1783"},{"desc":"1784","fix":"1785"},{"desc":"1786","fix":"1787"},{"desc":"1788","fix":"1789"},{"desc":"1774","fix":"1790"},{"desc":"1791","fix":"1792"},{"desc":"1793","fix":"1794"},{"desc":"1791","fix":"1795"},{"desc":"1780","fix":"1796"},{"desc":"1797","fix":"1798"},{"desc":"1799","fix":"1800"},{"desc":"1801","fix":"1802"},{"desc":"1803","fix":"1804"},{"desc":"1805","fix":"1806"},{"desc":"1801","fix":"1807"},{"desc":"1808","fix":"1809"},{"desc":"1810","fix":"1811"},{"desc":"1812","fix":"1813"},{"desc":"1801","fix":"1814"},{"desc":"1815","fix":"1816"},{"desc":"1817","fix":"1818"},{"desc":"1819","fix":"1820"},{"desc":"1821","fix":"1822"},{"desc":"1823","fix":"1824"},{"desc":"1825","fix":"1826"},{"desc":"1827","fix":"1828"},{"desc":"1829","fix":"1830"},"Update the dependencies array to be: [fetchCurrentUser, fetchFriends, fetchNotifications, isAuth, setCurrentUser, setFriends, setNotifications]",{"range":"1831","text":"1832"},"Update the dependencies array to be: [user, posts, fetched, fetchPosts, setPosts]",{"range":"1833","text":"1834"},"Update the dependencies array to be: [setOpenFriendsList]",{"range":"1835","text":"1836"},"Update the dependencies array to be: [user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore, setNotifications]",{"range":"1837","text":"1838"},"Update the dependencies array to be: [user, history, location.state, setIsAuth]",{"range":"1839","text":"1840"},"Update the dependencies array to be: [user, fetched, setFetched, fetchListContact, friends.length, setSentRequestsToAddFriend, setReceivedRequestsToAddFriend, setFriends]",{"range":"1841","text":"1842"},"Update the dependencies array to be: [fetchFriends, friends, loadingMore, setFriends]",{"range":"1843","text":"1844"},"Update the dependencies array to be: [fetchChatConversations, messagesStorage, setInitialMessagesStorage, setNumberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",{"range":"1845","text":"1846"},"Update the dependencies array to be: [i18n.store.data, lang]",{"range":"1847","text":"1848"},"Update the dependencies array to be: [loadingMore, currentPersonalUser, fetchMorePostsData, addPostsToCurrentPersonalUser]",{"range":"1849","text":"1850"},"Update the dependencies array to be: [search, friends, originData]",{"range":"1851","text":"1852"},"Update the dependencies array to be: [setCurrentChat]",{"range":"1853","text":"1854"},"Update the dependencies array to be: [dialog, currentPersonalUser, removeFriend, updateMutationOnChange, setDialog]",{"range":"1855","text":"1856"},"Update the dependencies array to be: [chatBoardBodyRef, shouldScrollIntoView]",{"range":"1857","text":"1858"},"Update the dependencies array to be: [chatBoardBodyRef, currentChat, messagesStorage, user]",{"range":"1859","text":"1860"},"Update the dependencies array to be: [currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, updateMoreMessages]",{"range":"1861","text":"1862"},{"range":"1863","text":"1848"},"Update the dependencies array to be: [openNotificationBoard]",{"range":"1864","text":"1865"},"Update the dependencies array to be: [fetchNotifications, loadingNotificationsMore, notifications, setNotifications]",{"range":"1866","text":"1867"},{"range":"1868","text":"1865"},{"range":"1869","text":"1854"},"Update the dependencies array to be: [data, fetchMoreContacts, loadContactMore, setFriends]",{"range":"1870","text":"1871"},"Update the dependencies array to be: [_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",{"range":"1872","text":"1873"},"Update the dependencies array to be: [searchFriends]",{"range":"1874","text":"1875"},"Update the dependencies array to be: [post._id]",{"range":"1876","text":"1877"},"Update the dependencies array to be: [latestNotification, setLatestNotification]",{"range":"1878","text":"1879"},{"range":"1880","text":"1875"},"Update the dependencies array to be: [comment._id, comment.post, dialog, removeComment, removeCommentFromPostCache, removeResponse, removeResponseInCache]",{"range":"1881","text":"1882"},"Update the dependencies array to be: [comment.responses.length, comment.responsesData?.length, onLoadResponses]",{"range":"1883","text":"1884"},"Update the dependencies array to be: [focus, editorState, response, dataResponse, user.name, user._id]",{"range":"1885","text":"1886"},{"range":"1887","text":"1875"},"Update the dependencies array to be: [focus, removeFocus]",{"range":"1888","text":"1889"},"Update the dependencies array to be: [addLikeResponse, likeResponse, user._id]",{"range":"1890","text":"1891"},"Update the dependencies array to be: [removeLikeResponse, removeLikeResponseInCache, user._id]",{"range":"1892","text":"1893"},"Update the dependencies array to be: [subscribeChatMessage, user, currentChat, SENT_MESSAGE_CHAT_SUBSCRIPTION, NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT, SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES, NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages, updateMessagesStorageToReceivedWhenUserOnline]",{"range":"1894","text":"1895"},"Update the dependencies array to be: [updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage, user]",{"range":"1896","text":"1897"},"Update the dependencies array to be: [subscribeUser, user, receivedRequestsToAddFriend, friends, updateSubscriptionOnChange, setReceivedRequestsToAddFriend]",{"range":"1898","text":"1899"},"Update the dependencies array to be: [user, subscribePosts, addCommentToPost, addNewResponseToComment]",{"range":"1900","text":"1901"},"Update the dependencies array to be: [countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification, personalPosts, setPersonalPosts, updateCommentLikes, addLikeResponse, removeLikeResponse]",{"range":"1902","text":"1903"},[2612,2620],"[fetchCurrentUser, fetchFriends, fetchNotifications, isAuth, setCurrentUser, setFriends, setNotifications]",[1793,1815],"[user, posts, fetched, fetchPosts, setPosts]",[3041,3043],"[setOpenFriendsList]",[2055,2147],"[user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore, setNotifications]",[771,802],"[user, history, location.state, setIsAuth]",[2341,2368],"[user, fetched, setFetched, fetchListContact, friends.length, setSentRequestsToAddFriend, setReceivedRequestsToAddFriend, setFriends]",[3239,3252],"[fetchFriends, friends, loadingMore, setFriends]",[3315,3317],"[fetchChatConversations, messagesStorage, setInitialMessagesStorage, setNumberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",[1066,1072],"[i18n.store.data, lang]",[2571,2605],"[loadingMore, currentPersonalUser, fetchMorePostsData, addPostsToCurrentPersonalUser]",[1611,1628],"[search, friends, originData]",[1795,1797],"[setCurrentChat]",[3234,3263],"[dialog, currentPersonalUser, removeFriend, updateMutationOnChange, setDialog]",[1560,1562],"[chatBoardBodyRef, shouldScrollIntoView]",[1931,1994],"[chatBoardBodyRef, currentChat, messagesStorage, user]",[3621,3639],"[currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, updateMoreMessages]",[849,855],[1800,1849],"[openNotificationBoard]",[2791,2817],"[fetchNotifications, loadingNotificationsMore, notifications, setNotifications]",[3026,3079],[1170,1172],[1291,1308],"[data, fetchMoreContacts, loadContactMore, setFriends]",[4619,4665],"[_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",[3384,3386],"[searchFriends]",[948,950],"[post._id]",[1192,1212],"[latestNotification, setLatestNotification]",[2360,2362],[3088,3096],"[comment._id, comment.post, dialog, removeComment, removeCommentFromPostCache, removeResponse, removeResponseInCache]",[4537,4560],"[comment.responses.length, comment.responsesData?.length, onLoadResponses]",[2646,2689],"[focus, editorState, response, dataResponse, user.name, user._id]",[3707,3709],[5472,5479],"[focus, removeFocus]",[1128,1130],"[addLikeResponse, likeResponse, user._id]",[1538,1540],"[removeLikeResponse, removeLikeResponseInCache, user._id]",[4617,4658],"[subscribeChatMessage, user, currentChat, SENT_MESSAGE_CHAT_SUBSCRIPTION, NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT, SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES, NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages, updateMessagesStorageToReceivedWhenUserOnline]",[1485,1491],"[updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage, user]",[4869,4927],"[subscribeUser, user, receivedRequestsToAddFriend, friends, updateSubscriptionOnChange, setReceivedRequestsToAddFriend]",[2025,2046],"[user, subscribePosts, addCommentToPost, addNewResponseToComment]",[16242,16379],"[countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification, personalPosts, setPersonalPosts, updateCommentLikes, addLikeResponse, removeLikeResponse]"]