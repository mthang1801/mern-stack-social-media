[{"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js":"1","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js":"2","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js":"3","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js":"4","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js":"5","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js":"6","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js":"7","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js":"8","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js":"9","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js":"10","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js":"11","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js":"12","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js":"13","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js":"14","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx":"15","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx":"16","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js":"17","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/index.js":"18","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js":"19","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx":"20","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx":"21","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx":"22","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx":"23","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx":"24","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx":"25","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx":"26","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx":"27","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx":"28","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx":"29","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx":"30","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx":"31","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx":"32","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx":"33","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx":"34","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx":"35","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx":"36","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js":"37","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js":"38","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js":"39","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js":"40","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/index.js":"41","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/index.js":"42","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx":"43","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx":"44","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx":"45","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx":"46","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js":"47","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx":"48","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx":"49","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx":"50","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.styles.jsx":"51","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx":"52","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchCountNumberNotificationsUnseen.js":"53","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchNotifications.js":"54","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchPosts.js":"55","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js":"56","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js":"57","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx":"58","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx":"59","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getReceivedRequestsToAddFriend.js":"60","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getSentRequestsToAddFriend.js":"61","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.styles.jsx":"62","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getFriends.js":"63","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getOpenFriendsList.js":"64","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getPersonalPosts.js":"65","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getCurrentPersonalUser.js":"66","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getOpenPopupNotification.js":"67","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getNewNotifications.js":"68","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getCountNumberNotificationsUnseen.js":"69","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getNotifications.js":"70","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getPosts.js":"71","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getCurrentUser.js":"72","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getPostStatus.js":"73","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getToggleButtonMenu.js":"74","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js":"75","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js":"76","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx":"77","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.styles.jsx":"78","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx":"79","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx":"80","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.styles.jsx":"81","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx":"82","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx":"83","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx":"84","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx":"85","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx":"86","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx":"87","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx":"88","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setSentRequestsToAddFriend.js":"89","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setReceivedRequestsToAddFriend.js":"90","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setFriends.js":"91","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/index.js":"92","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/signup.js":"93","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/acceptRequestToAddFriend.js":"94","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/removeFriend.js":"95","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/unFollowUser.js":"96","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/followUser.js":"97","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/cancelRequestToAddFriend.js":"98","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/rejectRequestToAddFriend.js":"99","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/sendRequestToAddFriend.js":"100","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx":"101","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx":"102","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx":"103","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx":"104","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx":"105","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx":"106","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setOpenFriendsList.js":"107","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setPersonalPosts.js":"108","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setCurrentPersonalUser.js":"109","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setOpenPopupNotification.js":"110","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setNewNotifications.js":"111","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setCountNumberNotificationsUnseen.js":"112","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setNotifications.js":"113","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setPosts.js":"114","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setCurrentUser.js":"115","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setPostStatus.js":"116","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/toggleButtonMenu.js":"117","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenPopupNotification.js":"118","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/ToggleButtonMenu.js":"119","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js":"120","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js":"121","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js":"122","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js":"123","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js":"124","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js":"125","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/ReceivedRequestsToAddFriend.js":"126","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/SentRequestsToAddFriend.js":"127","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/Friends.js":"128","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js":"129","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js":"130","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js":"131","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx":"132","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx":"133","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx":"134","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx":"135","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx":"136","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx":"137","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx":"138","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx":"139","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx":"140","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/index.js":"141","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/index.js":"142","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx":"143","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx":"144","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx":"145","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx":"146","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx":"147","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx":"148","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx":"149","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx":"150","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx":"151","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersReceivedRequestToAddFriend.js":"152","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersSentRequestToAddFriend.js":"153","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchListContact.js":"154","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchPersonalUser.js":"155","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchFriends.js":"156","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchCurrentUser.js":"157","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/login.js":"158","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/removeFriendSubscription.js":"159","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/cancelRequestToAddFriendSubscription.js":"160","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/rejectRequestToAddFriendSubscription.js":"161","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/postCreated.js":"162","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/updateCountNotificationsWhenSeen.js":"163","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyReceivedRequestToAddFriend.js":"164","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyAcceptRequestToAddFriend.js":"165","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx":"166","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx":"167","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js":"168","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx":"169","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/index.js":"170","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/index.js":"171","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx":"172","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx":"173","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx":"174","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx":"175","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx":"176","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx":"177","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/updateUserHasSeenNotification.js":"178","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createPost.js":"179","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx":"180","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/FlashPopUpNotification.jsx":"181","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx":"182","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx":"183","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js":"184","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getMessagesStorage.js":"185","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setMessagesStorage.js":"186","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/index.js":"187","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx":"188","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx":"189","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js":"190","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setCurrentChat.js":"191","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getCurrentChat.js":"192","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js":"193","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setInitialMessagesStorage.js":"194","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js":"195","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js":"196","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js":"197","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js":"198","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useChatSubscriptions.jsx":"199","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js":"200","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/updateMessagesStorage.js":"201","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatFile.js":"202","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js":"203","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js":"204","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/updateMessagesStorageWhenReceiverSeenAllMessages.js":"205","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/updateHaveSeenAllMessages.js":"206","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatText.js":"207","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched.js":"208","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverWhenReceivedNewMessage.js":"209","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx":"210","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx":"211","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx":"212","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx":"213","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx":"214","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx":"215","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js":"216","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/clearMessageStorage.js":"217","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/clearCurrentChat.js":"218","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/updateHasSeenLatestMessage.js":"219","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js":"220","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getNumberOfConversations.js":"221","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setNumberOfConversations.js":"222","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js":"223","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/updateMoreMessages.js":"224","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx":"225"},{"size":798,"mtime":1615899448456,"results":"226","hashOfConfig":"227"},{"size":362,"mtime":1615348219838,"results":"228","hashOfConfig":"227"},{"size":293,"mtime":1615348219838,"results":"229","hashOfConfig":"227"},{"size":3956,"mtime":1615998365867,"results":"230","hashOfConfig":"227"},{"size":1676,"mtime":1615870385222,"results":"231","hashOfConfig":"227"},{"size":341,"mtime":1615348219838,"results":"232","hashOfConfig":"227"},{"size":3628,"mtime":1615853437085,"results":"233","hashOfConfig":"227"},{"size":4942,"mtime":1615348219838,"results":"234","hashOfConfig":"227"},{"size":3897,"mtime":1615998667399,"results":"235","hashOfConfig":"227"},{"size":3617,"mtime":1615348219838,"results":"236","hashOfConfig":"227"},{"size":1094,"mtime":1615348219838,"results":"237","hashOfConfig":"227"},{"size":2109,"mtime":1615348219838,"results":"238","hashOfConfig":"227"},{"size":3707,"mtime":1615520910976,"results":"239","hashOfConfig":"227"},{"size":3849,"mtime":1615830683597,"results":"240","hashOfConfig":"227"},{"size":20832,"mtime":1615348219826,"results":"241","hashOfConfig":"227"},{"size":485,"mtime":1615348219838,"results":"242","hashOfConfig":"227"},{"size":573,"mtime":1615348219838,"results":"243","hashOfConfig":"227"},{"size":910,"mtime":1615348219830,"results":"244","hashOfConfig":"227"},{"size":218,"mtime":1615348219830,"results":"245","hashOfConfig":"227"},{"size":1672,"mtime":1615520910976,"results":"246","hashOfConfig":"227"},{"size":248,"mtime":1615348219838,"results":"247","hashOfConfig":"227"},{"size":451,"mtime":1615348219838,"results":"248","hashOfConfig":"227"},{"size":6831,"mtime":1615810711635,"results":"249","hashOfConfig":"227"},{"size":1046,"mtime":1615348219834,"results":"250","hashOfConfig":"227"},{"size":1255,"mtime":1615348219834,"results":"251","hashOfConfig":"227"},{"size":5414,"mtime":1615810711595,"results":"252","hashOfConfig":"227"},{"size":1475,"mtime":1615991805190,"results":"253","hashOfConfig":"227"},{"size":8406,"mtime":1615995464192,"results":"254","hashOfConfig":"227"},{"size":2640,"mtime":1615348219838,"results":"255","hashOfConfig":"227"},{"size":2899,"mtime":1615348219838,"results":"256","hashOfConfig":"227"},{"size":2552,"mtime":1615519173286,"results":"257","hashOfConfig":"227"},{"size":4070,"mtime":1615520910976,"results":"258","hashOfConfig":"227"},{"size":258,"mtime":1615348219834,"results":"259","hashOfConfig":"227"},{"size":1011,"mtime":1615520910976,"results":"260","hashOfConfig":"227"},{"size":422,"mtime":1615348219834,"results":"261","hashOfConfig":"227"},{"size":4230,"mtime":1615520910976,"results":"262","hashOfConfig":"227"},{"size":1156,"mtime":1615830683593,"results":"263","hashOfConfig":"227"},{"size":4863,"mtime":1615348219838,"results":"264","hashOfConfig":"227"},{"size":4662,"mtime":1615348219838,"results":"265","hashOfConfig":"227"},{"size":2144,"mtime":1615830683593,"results":"266","hashOfConfig":"227"},{"size":108,"mtime":1615348219830,"results":"267","hashOfConfig":"227"},{"size":342,"mtime":1615348219830,"results":"268","hashOfConfig":"227"},{"size":1041,"mtime":1615348219838,"results":"269","hashOfConfig":"227"},{"size":2413,"mtime":1615348219838,"results":"270","hashOfConfig":"227"},{"size":2083,"mtime":1615348219834,"results":"271","hashOfConfig":"227"},{"size":6366,"mtime":1615348219834,"results":"272","hashOfConfig":"227"},{"size":1010,"mtime":1615348219838,"results":"273","hashOfConfig":"227"},{"size":570,"mtime":1615348219834,"results":"274","hashOfConfig":"227"},{"size":421,"mtime":1615830683597,"results":"275","hashOfConfig":"227"},{"size":2354,"mtime":1615348219838,"results":"276","hashOfConfig":"227"},{"size":619,"mtime":1615348219838,"results":"277","hashOfConfig":"227"},{"size":12657,"mtime":1615348219838,"results":"278","hashOfConfig":"227"},{"size":140,"mtime":1615348219830,"results":"279","hashOfConfig":"227"},{"size":378,"mtime":1615348219830,"results":"280","hashOfConfig":"227"},{"size":467,"mtime":1615348219830,"results":"281","hashOfConfig":"227"},{"size":38,"mtime":1615348219826,"results":"282","hashOfConfig":"227"},{"size":45,"mtime":1615348219826,"results":"283","hashOfConfig":"227"},{"size":1553,"mtime":1615348219834,"results":"284","hashOfConfig":"227"},{"size":324,"mtime":1615348219834,"results":"285","hashOfConfig":"227"},{"size":147,"mtime":1615348219830,"results":"286","hashOfConfig":"227"},{"size":140,"mtime":1615348219830,"results":"287","hashOfConfig":"227"},{"size":2431,"mtime":1615348219838,"results":"288","hashOfConfig":"227"},{"size":104,"mtime":1615348219830,"results":"289","hashOfConfig":"227"},{"size":122,"mtime":1615348219830,"results":"290","hashOfConfig":"227"},{"size":116,"mtime":1615348219830,"results":"291","hashOfConfig":"227"},{"size":129,"mtime":1615348219830,"results":"292","hashOfConfig":"227"},{"size":133,"mtime":1615348219830,"results":"293","hashOfConfig":"227"},{"size":123,"mtime":1615348219830,"results":"294","hashOfConfig":"227"},{"size":153,"mtime":1615348219830,"results":"295","hashOfConfig":"227"},{"size":131,"mtime":1615348219830,"results":"296","hashOfConfig":"227"},{"size":107,"mtime":1615348219830,"results":"297","hashOfConfig":"227"},{"size":114,"mtime":1615348219830,"results":"298","hashOfConfig":"227"},{"size":125,"mtime":1615348219830,"results":"299","hashOfConfig":"227"},{"size":143,"mtime":1615348219830,"results":"300","hashOfConfig":"227"},{"size":252,"mtime":1615348219830,"results":"301","hashOfConfig":"227"},{"size":4009,"mtime":1615830683593,"results":"302","hashOfConfig":"227"},{"size":10379,"mtime":1615830683597,"results":"303","hashOfConfig":"227"},{"size":1078,"mtime":1615348219838,"results":"304","hashOfConfig":"227"},{"size":1166,"mtime":1615348219834,"results":"305","hashOfConfig":"227"},{"size":446,"mtime":1615481230831,"results":"306","hashOfConfig":"227"},{"size":1063,"mtime":1615348219838,"results":"307","hashOfConfig":"227"},{"size":1203,"mtime":1615348219834,"results":"308","hashOfConfig":"227"},{"size":3636,"mtime":1615852398676,"results":"309","hashOfConfig":"227"},{"size":344,"mtime":1615348219834,"results":"310","hashOfConfig":"227"},{"size":865,"mtime":1615348219834,"results":"311","hashOfConfig":"227"},{"size":1595,"mtime":1615348219834,"results":"312","hashOfConfig":"227"},{"size":210,"mtime":1615348219834,"results":"313","hashOfConfig":"227"},{"size":2791,"mtime":1615348219834,"results":"314","hashOfConfig":"227"},{"size":194,"mtime":1615348219830,"results":"315","hashOfConfig":"227"},{"size":204,"mtime":1615348219830,"results":"316","hashOfConfig":"227"},{"size":109,"mtime":1615520910976,"results":"317","hashOfConfig":"227"},{"size":921,"mtime":1615348219830,"results":"318","hashOfConfig":"227"},{"size":336,"mtime":1615348219830,"results":"319","hashOfConfig":"227"},{"size":514,"mtime":1615348219830,"results":"320","hashOfConfig":"227"},{"size":484,"mtime":1615348219830,"results":"321","hashOfConfig":"227"},{"size":477,"mtime":1615348219830,"results":"322","hashOfConfig":"227"},{"size":474,"mtime":1615348219830,"results":"323","hashOfConfig":"227"},{"size":516,"mtime":1615348219830,"results":"324","hashOfConfig":"227"},{"size":510,"mtime":1615348219830,"results":"325","hashOfConfig":"227"},{"size":504,"mtime":1615348219830,"results":"326","hashOfConfig":"227"},{"size":282,"mtime":1615384617941,"results":"327","hashOfConfig":"227"},{"size":1144,"mtime":1615348219834,"results":"328","hashOfConfig":"227"},{"size":3866,"mtime":1615830683597,"results":"329","hashOfConfig":"227"},{"size":1158,"mtime":1615348219834,"results":"330","hashOfConfig":"227"},{"size":255,"mtime":1615348219838,"results":"331","hashOfConfig":"227"},{"size":1502,"mtime":1615348219834,"results":"332","hashOfConfig":"227"},{"size":147,"mtime":1615348219830,"results":"333","hashOfConfig":"227"},{"size":125,"mtime":1615348219830,"results":"334","hashOfConfig":"227"},{"size":147,"mtime":1615348219826,"results":"335","hashOfConfig":"227"},{"size":149,"mtime":1615348219830,"results":"336","hashOfConfig":"227"},{"size":185,"mtime":1615348219830,"results":"337","hashOfConfig":"227"},{"size":191,"mtime":1615348219826,"results":"338","hashOfConfig":"227"},{"size":133,"mtime":1615348219830,"results":"339","hashOfConfig":"227"},{"size":84,"mtime":1615348219830,"results":"340","hashOfConfig":"227"},{"size":107,"mtime":1615348219826,"results":"341","hashOfConfig":"227"},{"size":188,"mtime":1615348219830,"results":"342","hashOfConfig":"227"},{"size":137,"mtime":1615348219830,"results":"343","hashOfConfig":"227"},{"size":44,"mtime":1615348219826,"results":"344","hashOfConfig":"227"},{"size":38,"mtime":1615348219826,"results":"345","hashOfConfig":"227"},{"size":42,"mtime":1615348219826,"results":"346","hashOfConfig":"227"},{"size":50,"mtime":1615348219826,"results":"347","hashOfConfig":"227"},{"size":170,"mtime":1615348219826,"results":"348","hashOfConfig":"227"},{"size":31,"mtime":1615348219826,"results":"349","hashOfConfig":"227"},{"size":48,"mtime":1615348219826,"results":"350","hashOfConfig":"227"},{"size":32,"mtime":1615348219826,"results":"351","hashOfConfig":"227"},{"size":46,"mtime":1615348219826,"results":"352","hashOfConfig":"227"},{"size":43,"mtime":1615348219826,"results":"353","hashOfConfig":"227"},{"size":26,"mtime":1615348219826,"results":"354","hashOfConfig":"227"},{"size":24,"mtime":1615348219826,"results":"355","hashOfConfig":"227"},{"size":39,"mtime":1615348219826,"results":"356","hashOfConfig":"227"},{"size":1386,"mtime":1615893441858,"results":"357","hashOfConfig":"227"},{"size":3257,"mtime":1615391721869,"results":"358","hashOfConfig":"227"},{"size":1632,"mtime":1615348219834,"results":"359","hashOfConfig":"227"},{"size":1160,"mtime":1615348219834,"results":"360","hashOfConfig":"227"},{"size":482,"mtime":1615348219834,"results":"361","hashOfConfig":"227"},{"size":645,"mtime":1615348219834,"results":"362","hashOfConfig":"227"},{"size":1161,"mtime":1615348219834,"results":"363","hashOfConfig":"227"},{"size":1645,"mtime":1615348219834,"results":"364","hashOfConfig":"227"},{"size":1178,"mtime":1615348219838,"results":"365","hashOfConfig":"227"},{"size":794,"mtime":1615348219834,"results":"366","hashOfConfig":"227"},{"size":419,"mtime":1615348219830,"results":"367","hashOfConfig":"227"},{"size":586,"mtime":1615348219830,"results":"368","hashOfConfig":"227"},{"size":795,"mtime":1615348219834,"results":"369","hashOfConfig":"227"},{"size":3416,"mtime":1615992006007,"results":"370","hashOfConfig":"227"},{"size":758,"mtime":1615348219834,"results":"371","hashOfConfig":"227"},{"size":2081,"mtime":1615992121737,"results":"372","hashOfConfig":"227"},{"size":7510,"mtime":1615348219838,"results":"373","hashOfConfig":"227"},{"size":1560,"mtime":1615348219834,"results":"374","hashOfConfig":"227"},{"size":2694,"mtime":1615348219834,"results":"375","hashOfConfig":"227"},{"size":6164,"mtime":1615348219838,"results":"376","hashOfConfig":"227"},{"size":5262,"mtime":1615348219834,"results":"377","hashOfConfig":"227"},{"size":265,"mtime":1615348219830,"results":"378","hashOfConfig":"227"},{"size":258,"mtime":1615348219830,"results":"379","hashOfConfig":"227"},{"size":399,"mtime":1615999010095,"results":"380","hashOfConfig":"227"},{"size":548,"mtime":1615348219830,"results":"381","hashOfConfig":"227"},{"size":274,"mtime":1615862708384,"results":"382","hashOfConfig":"227"},{"size":537,"mtime":1615348219830,"results":"383","hashOfConfig":"227"},{"size":664,"mtime":1615810711583,"results":"384","hashOfConfig":"227"},{"size":493,"mtime":1615348219830,"results":"385","hashOfConfig":"227"},{"size":537,"mtime":1615348219830,"results":"386","hashOfConfig":"227"},{"size":551,"mtime":1615348219830,"results":"387","hashOfConfig":"227"},{"size":590,"mtime":1615348219830,"results":"388","hashOfConfig":"227"},{"size":234,"mtime":1615348219830,"results":"389","hashOfConfig":"227"},{"size":781,"mtime":1615348219830,"results":"390","hashOfConfig":"227"},{"size":820,"mtime":1615348219830,"results":"391","hashOfConfig":"227"},{"size":1361,"mtime":1615348219834,"results":"392","hashOfConfig":"227"},{"size":3349,"mtime":1615348219834,"results":"393","hashOfConfig":"227"},{"size":891,"mtime":1615348219838,"results":"394","hashOfConfig":"227"},{"size":433,"mtime":1615348219838,"results":"395","hashOfConfig":"227"},{"size":210,"mtime":1615348219830,"results":"396","hashOfConfig":"227"},{"size":109,"mtime":1615348219830,"results":"397","hashOfConfig":"227"},{"size":939,"mtime":1615348219834,"results":"398","hashOfConfig":"227"},{"size":6350,"mtime":1615810711635,"results":"399","hashOfConfig":"227"},{"size":5966,"mtime":1615998635421,"results":"400","hashOfConfig":"227"},{"size":1823,"mtime":1615348219838,"results":"401","hashOfConfig":"227"},{"size":505,"mtime":1615348219834,"results":"402","hashOfConfig":"227"},{"size":2370,"mtime":1615348219838,"results":"403","hashOfConfig":"227"},{"size":397,"mtime":1615348219830,"results":"404","hashOfConfig":"227"},{"size":598,"mtime":1615348219830,"results":"405","hashOfConfig":"227"},{"size":1243,"mtime":1615348219834,"results":"406","hashOfConfig":"227"},{"size":847,"mtime":1615348219834,"results":"407","hashOfConfig":"227"},{"size":1141,"mtime":1615348219838,"results":"408","hashOfConfig":"227"},{"size":1279,"mtime":1615348219838,"results":"409","hashOfConfig":"227"},{"size":35,"mtime":1615348219826,"results":"410","hashOfConfig":"227"},{"size":120,"mtime":1615348219830,"results":"411","hashOfConfig":"227"},{"size":560,"mtime":1615810711583,"results":"412","hashOfConfig":"227"},{"size":1006,"mtime":1615481230827,"results":"413","hashOfConfig":"227"},{"size":1071,"mtime":1615141119088,"results":"414","hashOfConfig":"227"},{"size":702,"mtime":1615140573136,"results":"415","hashOfConfig":"227"},{"size":47,"mtime":1615348219826,"results":"416","hashOfConfig":"227"},{"size":171,"mtime":1615348219826,"results":"417","hashOfConfig":"227"},{"size":112,"mtime":1615348219830,"results":"418","hashOfConfig":"227"},{"size":250,"mtime":1615830683593,"results":"419","hashOfConfig":"227"},{"size":180,"mtime":1615348219826,"results":"420","hashOfConfig":"227"},{"size":1213,"mtime":1615348219838,"results":"421","hashOfConfig":"227"},{"size":1029,"mtime":1615348219838,"results":"422","hashOfConfig":"227"},{"size":533,"mtime":1615458079539,"results":"423","hashOfConfig":"227"},{"size":672,"mtime":1615475770938,"results":"424","hashOfConfig":"227"},{"size":3891,"mtime":1615810711603,"results":"425","hashOfConfig":"227"},{"size":713,"mtime":1615475770922,"results":"426","hashOfConfig":"227"},{"size":621,"mtime":1615475770922,"results":"427","hashOfConfig":"227"},{"size":918,"mtime":1615475770922,"results":"428","hashOfConfig":"227"},{"size":434,"mtime":1615348219838,"results":"429","hashOfConfig":"227"},{"size":267,"mtime":1615475770922,"results":"430","hashOfConfig":"227"},{"size":630,"mtime":1615459552169,"results":"431","hashOfConfig":"227"},{"size":221,"mtime":1615475770922,"results":"432","hashOfConfig":"227"},{"size":666,"mtime":1615475770922,"results":"433","hashOfConfig":"227"},{"size":265,"mtime":1615481230827,"results":"434","hashOfConfig":"227"},{"size":272,"mtime":1615481230827,"results":"435","hashOfConfig":"227"},{"size":2469,"mtime":1615481230831,"results":"436","hashOfConfig":"227"},{"size":1656,"mtime":1615520910976,"results":"437","hashOfConfig":"227"},{"size":4654,"mtime":1615852269480,"results":"438","hashOfConfig":"227"},{"size":138,"mtime":1615481230831,"results":"439","hashOfConfig":"227"},{"size":3065,"mtime":1615830683597,"results":"440","hashOfConfig":"227"},{"size":1780,"mtime":1615481230831,"results":"441","hashOfConfig":"227"},{"size":1278,"mtime":1615830683593,"results":"442","hashOfConfig":"227"},{"size":120,"mtime":1615810711579,"results":"443","hashOfConfig":"227"},{"size":110,"mtime":1615810711579,"results":"444","hashOfConfig":"227"},{"size":309,"mtime":1615830683593,"results":"445","hashOfConfig":"227"},{"size":41,"mtime":1615830683593,"results":"446","hashOfConfig":"227"},{"size":134,"mtime":1615830683593,"results":"447","hashOfConfig":"227"},{"size":151,"mtime":1615830683593,"results":"448","hashOfConfig":"227"},{"size":692,"mtime":1615830683593,"results":"449","hashOfConfig":"227"},{"size":390,"mtime":1615830683593,"results":"450","hashOfConfig":"227"},{"size":837,"mtime":1615992202713,"results":"451","hashOfConfig":"227"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},"1akjpqo",{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"454"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"454"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"454"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"454"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"454"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"454"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"454"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"454"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"454"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"454"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"454"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"454"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"454"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"454"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"561"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"454"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"454"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"454"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"454"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"454"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"454"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"454"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"454"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"738","usedDeprecatedRules":"454"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"454"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"454"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"454"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"454"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"857"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"857"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"454"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"454"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"454"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"454"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"454"},"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js",[],["937","938"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js",["939","940"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js",["941"],"import React, { useState } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport \"@draft-js-plugins/mention/lib/plugin.css\";\n// import \"@draft-js-plugins/emoji/lib/plugin.css\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nconst emojiPlugin = createEmojiPlugin();\nconst { EmojiSelect, EmojiSuggestions } = emojiPlugin;\nconst linkifyPlugin = createLinkifyPlugin({\n  component(props) {\n    return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n  },\n});\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [linkifyPlugin, mentionPlugin, emojiPlugin];\n\nconst Linkify = () => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n\n  const onOpenChange = React.useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = React.useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n  return (\n    <div className=\"wrapper\">\n      <h2 style={{ color: \"#43a047\" }}>Draftjs Linkify</h2>\n      <Editor\n        editorState={editorState}\n        onChange={setEditorState}\n        plugins={plugins}\n      />\n      <MentionSuggestions\n        open={open}\n        suggestions={suggestions}\n        onOpenChange={onOpenChange}\n        onSearchChange={onSearchChange}\n      />\n      <EmojiSuggestions />\n      <EmojiSelect />\n    </div>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 36812,\n    name: \"Maxewqeq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 789327,\n    name: \"Nikewqewqad Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 32131,\n    name: \"Pascalsadwq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 121312,\n    name: \"Matthewewqe Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 125134,\n    name: \"Julianewq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 3213214,\n    name: \"Jyotiasd Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 65361,\n    name: \"Maxewq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 5321,\n    name: \"Nikewq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 43,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n];\n\nexport default Linkify;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js",["942"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js",["943"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport styled from \"styled-components\";\nimport Notifications from \"../components/Notification/Notifications\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_NOTIFICATIONS,\n} from \"../apollo/operations/queries/cache\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport MainBody from \"../components/Body/MainBody\";\nimport { FETCH_NOTIFICATIONS } from \"../apollo/operations/queries/notification\";\n\nconst NotificationsPage = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const {\n    data: { notifications },\n  } = useQuery(GET_NOTIFICATIONS, { fetchPolicy: \"cache-first\" });\n  const { setNotifications } = cacheMutations;\n  const [fetchNotificationsMore, setFetchNotificationsMore] = useState(false);\n  useEffect(() => {\n    let _mounted = true;\n    if(user && fetchNotifications){\n      if (!notifications.length) {\n        fetchNotifications({\n          variables: {\n            skip: 0,\n            limit: +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE,\n          },\n        }).then(({ data }) => {\n          if (data && data.fetchNotifications && _mounted) {\n            setNotifications([...data.fetchNotifications]);\n          }\n        });\n      }\n      else if(fetchNotificationsMore){\n        const skip = notifications.length;\n        const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n        fetchNotifications({ skip, limit }).then(\n          ({ data: { fetchNotifications } }) => {\n            if (_mounted) {\n              setNotifications([...notifications, ...fetchNotifications]);\n              setFetchNotificationsMore(false);\n            }\n          }\n        );\n      }\n    }\n   \n    return () => (_mounted = false);\n  }, [user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore]);\n\n  useEffect(() => {\n    function setLoadmoreOnScroll() {\n      const {\n        scrollHeight,\n        scrollTop,\n        clientHeight,\n      } = document.documentElement;\n      if (clientHeight + scrollTop > scrollHeight * 0.75) {\n        setFetchNotificationsMore(true);\n      }\n    }\n    window.addEventListener(\"scroll\", (e) => {\n      setLoadmoreOnScroll();\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", () => {\n        setLoadmoreOnScroll();\n      });\n  }, []);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <div className=\"notifications\">\n            {user ? <Notifications /> : <CardRequestAuth />}\n          </div>\n          <div className=\"sidebar\"></div>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nconst MainContent = styled.div`\n  display: flex;\n  margin: auto;\n  padding: 1.5rem 0;\n  .notifications {\n    width: 100%;\n  }\n  .sidebar {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    .notifications {\n      width: calc(100% - 320px);\n      padding: 0 1rem;\n    }\n    .sidebar {\n      display: block;\n      width: 320px;\n      padding: 0 1rem;\n    }\n  }\n  @media screen and (min-width: 992px) {\n    padding: 0;\n    .notifications {\n      width: 50%;\n    }\n    .sidebar {\n      width: 50%;\n    }\n  }\n  @media screen and (min-width: 1920px) {\n    .notifications {\n      width: 55%;\n    }\n    .sidebar {\n      width: 45%;\n    }\n  }\n`;\nexport default NotificationsPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js",["944"],"import React, { useEffect } from \"react\";\nimport PersonalHeading from \"../components/Personal/PersonalHeading\";\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\nimport {  \n  GET_PERSONAL_POSTS,\n  GET_CURRENT_PERSONAL_USER,\n} from \"../apollo/operations/queries/cache\";\nimport { FETCH_PERSONAL_USER } from \"../apollo/operations/queries/user\";\nimport Layout from \"../containers/Layout\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport PersonalPosts from \"../components/Personal/PersonalPosts\"\n\nconst PersonalPage = (props) => {\n  const [\n    fetchPersonalUser,\n    { data: personalUserData },\n  ] = useLazyQuery(FETCH_PERSONAL_USER, { fetchPolicy: \"cache-and-network\" });  \n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { personalPosts },\n  } = useQuery(GET_PERSONAL_POSTS, { fetchPolicy: \"cache-first\" });\n  const {    \n    setCurrentPersonalUser,\n    setPersonalPosts,\n  } = cacheMutations;\n  const { slug } = props.match.params;\n  useEffect(() => {\n    let _mounted = true;\n    if (_mounted) {\n      //require fetch personal user because we need to set who is current personal user\n      fetchPersonalUser({ variables: { slug } });\n    }\n    return () => (_mounted = false);\n  }, [fetchPersonalUser, slug, currentPersonalUser]);\n  useEffect(() => {\n    if (personalUserData && personalUserData.fetchPersonalUser) {\n      let {\n        _id,\n        name,\n        email,\n        avatar,\n        posts,\n        slug,\n      } = personalUserData.fetchPersonalUser;    \n\n      setCurrentPersonalUser({ ...personalUserData.fetchPersonalUser });\n      posts = posts.map((post) => {\n        const author = {\n          _id,\n          name,\n          avatar,\n          email,\n          slug,\n        };\n        return { ...post, author: { ...author } };\n      });\n      setPersonalPosts({ ...personalPosts, [slug]: [...posts] });\n    }\n  }, [personalUserData]);\n\n  return (\n    <Layout>\n      <PersonalHeading />\n      <PersonalPosts/>      \n    </Layout>\n  );\n};\n\nexport default PersonalPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js",["945","946"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../apollo/operations/queries/cache\";\nimport {\n  FETCH_LIST_CONTACT,\n  FETCH_FRIENDS,  \n} from \"../apollo/operations/queries/user\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport MainBody from \"../components/Body/MainBody\";\nimport { MainContent, MainContentFullSize, ContactTitle } from \"./styles/pages.styles\";\nimport SentRequestsToAddFriend from \"../components/Contact/SentRequestsToAddFriend\";\nimport ReceivedRequestsToAddFriend from \"../components/Contact/ReceivedRequestsToAddFriend\";\nimport FriendsList from \"../components/Contact/FriendsList\";\nimport useLanguage from \"../components/Global/useLanguage\";\n\n\nconst FriendsPage = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [fetched, setFetched] = useState(false);\n  const { i18n, lang } = useLanguage();\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-first\",\n  });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, {\n    fetchPolicy: \"cache-first\",\n  });\n \n  const { refetch: fetchFriends } = useQuery(FETCH_FRIENDS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  \n  const {\n    setFriends,\n    setSentRequestsToAddFriend,\n    setReceivedRequestsToAddFriend,\n  } = cacheMutations;\n\n  const { refetch: fetchListContact } = useQuery(FETCH_LIST_CONTACT, {\n    skip: true,\n  });\n\n  useEffect(() => {\n    if (!fetched) {\n      if (\n        user?.sentRequestToAddFriend.length ||\n        user?.receivedRequestToAddFriend.length ||\n        user?.friends.length\n      ) {\n        fetchListContact().then(({ data }) => {\n          setFetched(true); \n          console.log(\"fetched\")         \n          const {\n            sentRequests,\n            receivedRequests,\n            friends: friendsList,\n          } = data.fetchListContact;\n          if (sentRequests.length) {\n            setSentRequestsToAddFriend([...sentRequests]);\n          }\n          if (receivedRequests.length) {\n            setReceivedRequestsToAddFriend([...receivedRequests]);\n          }\n          if (!friends.length) {\n            setFriends([...friendsList]);\n          }\n        });\n      }\n    }\n  }, [user, fetched, setFetched]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", async (e) => {\n      const docEl = document.documentElement;\n      if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n        setLoadingMore(true);\n      }\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", async (e) => {\n        const docEl = document.documentElement;\n        if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n          setLoadingMore(true);\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (loadingMore) {\n      const skip = friends.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchFriends({ skip, limit }).then(({ data }) => {\n        if (data?.fetchFriends?.length) {\n          setFriends([...friends, ...data.fetchFriends]);\n          setLoadingMore(false);\n        }\n      });\n    }\n  }, [loadingMore]);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentFullSize>\n            <ContactTitle>\n              {i18n.store.data[lang].translation.contacts.title}\n            </ContactTitle>\n            <SentRequestsToAddFriend />\n            <ReceivedRequestsToAddFriend />\n            <FriendsList />\n          </MainContentFullSize>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default FriendsPage;","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js",["947","948"],"import React, { lazy, useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport {\n  GET_CURRENT_USER,\n  GET_MESSAGES_STORAGE,\n} from \"../apollo/operations/queries/cache\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport {\n  RequestAuthScreen,\n  ChatsWrapper,\n  SidebarNav,\n  MainTab,\n} from \"./styles/chats.styles\";\nimport MenuChat from \"../components/Chat/MenuChat\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../apollo/operations/queries/chat\";\nimport { UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED } from \"../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport useChatSubscriptions from \"../components/Global/useChatSubscriptions\";\n\nconst ChatConversations = lazy(() =>\n  import(\"../components/Chat/Conversations\")\n);\nconst ChatContacts = lazy(() => import(\"../components/Chat/Contact\"));\n\nconst ChatsPage = ({ match }) => {\n  //use Query\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-first\" });\n  const { refetch: fetchChatConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n  const [\n    updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched,\n  ] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n  );\n  const { setInitialMessagesStorage, setNumberOfConversations } = cacheMutations;\n  //useState\n  \n  useChatSubscriptions();\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (!Object.keys(messagesStorage).length && user) {         \n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchChatConversations().then(({ data }) => {\n        if (_isMounted) {          \n          const { conversations, numberOfConversations } = data.fetchChatConversations;\n          let storage = {};          \n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });          \n          setInitialMessagesStorage({ ...storage });\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setNumberOfConversations(numberOfConversations);\n        }\n      });\n    }\n    return () => _isMounted = false ;\n  }, []);\n  console.log(messagesStorage)\n  if (!user)\n    return (\n      <Layout>\n        <RequestAuthScreen>\n          <CardRequestAuth />\n        </RequestAuthScreen>\n      </Layout>\n    );\n  return (\n    <Layout>\n      <ChatsWrapper>\n        <SidebarNav>\n          <MenuChat />\n        </SidebarNav>\n        <MainTab>\n          <Switch>\n            <Route exact path={match.path} component={ChatConversations} />\n            <Route\n              exact\n              path={`${match.path}/contacts`}\n              component={ChatContacts}\n            />\n          </Switch>\n        </MainTab>\n      </ChatsWrapper>\n    </Layout>\n  );\n};\n\nexport default ChatsPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx",["949","950"],"import React, { useEffect } from \"react\";\nimport NotificationItem from \"./NotificationItem\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n  GET_NOTIFICATIONS,\n  GET_CURRENT_USER,\n  GET_OPEN_POPUP_NOTIFICATION,\n  GET_CURRENT_PERSONAL_USER,\n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport {\n  FETCH_NOTIFICATIONS,\n  FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n} from \"../../apollo/operations/queries/notification\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport subscriptions from \"../../apollo/operations/subscriptions\";\nconst Notifications = () => {\n  //useQuery\n  const { refetch: fetchCountNumberNotificationsUnseen } = useQuery(\n    FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n    {\n      fetchPolicy: \"network-only\",\n      skip: true,\n    }\n  );\n  const {\n    data: { countNumberNotificationsUnseen },\n  } = useQuery(GET_COUNT_NUMBER_NOTIFICATIONS_UNSEEN, {\n    fetchPolicy: \"cache-first\",\n  });\n  const { subscribeToMore: subscribeToMoreNotifications } = useQuery(\n    FETCH_NOTIFICATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { notifications },\n  } = useQuery(GET_NOTIFICATIONS, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { openPopupNotification },\n  } = useQuery(GET_OPEN_POPUP_NOTIFICATION, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-first\",\n  });\n  //mutations\n  const {\n    setCountNumberNotificationsUnseen,\n    setNotifications,\n    setNewNotifications,\n    setOpenPopupNotification,\n    setCurrentUser,\n    setCurrentPersonalUser,\n    setReceivedRequestsToAddFriend,\n  } = cacheMutations;\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (countNumberNotificationsUnseen === null) {\n      fetchCountNumberNotificationsUnseen().then(\n        ({ data: { countNotificationsUnseen } }) => {\n          if (_isMounted) {\n            setCountNumberNotificationsUnseen(countNotificationsUnseen);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [\n    countNumberNotificationsUnseen,\n    fetchCountNumberNotificationsUnseen,\n    setCountNumberNotificationsUnseen,\n  ]);\n\n  const updatedNotifications = (\n    newNotification,\n    sender = null,\n    receiver = null\n  ) => {\n    setOpenPopupNotification(true);\n    setNewNotifications(newNotification._id);\n    setCountNumberNotificationsUnseen(countNumberNotificationsUnseen + 1);\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        friends: [...receiver.friends],\n        following: [...receiver.following],\n        followed: [...receiver.followed],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          friends: [...sender.friends],\n          following: [...sender.following],\n          followed: [...sender.followed],\n          sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n          receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n        });\n      }\n    }\n\n    setNotifications([{ ...newNotification, new: true }, ...notifications]);\n  };\n\n  useEffect(() => {\n    let unsubscribePostCreated,\n      unsubscribeRequestAddFriend,\n      unsubscribeAcceptRequestAddFriend;\n    if (subscribeToMoreNotifications && user) {\n      unsubscribePostCreated = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription.POST_CREATED_SUBSCRIPTIONS,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const {\n            notification: newNotification,\n          } = subscriptionData.data.notifyCreatedPost;\n          updatedNotifications(newNotification);\n        },\n      });\n      unsubscribeRequestAddFriend = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .NOTIFY_RECEIVED_REQUEST_TO_ADD_FRIEND,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData) return prev;\n          const {\n            notification: newNotification,\n            receiver,\n            sender,\n          } = subscriptionData.data.notifyReceivedRequestToAddFriend;\n\n          // push new sender to received requests to add friend cache\n          setReceivedRequestsToAddFriend([\n            { ...sender },\n            ...receivedRequestsToAddFriend,\n          ]);\n          updatedNotifications(newNotification, sender, receiver);\n        },\n      });\n      unsubscribeAcceptRequestAddFriend = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .NOTIFY_ACCEPT_REQUEST_TO_ADD_FRIEND,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData) return prev;\n          const {\n            notification: newNotification,\n            sender,\n            receiver,\n          } = subscriptionData.data.notifyAcceptRequestToAddFriend;\n          updatedNotifications(newNotification, sender, receiver);\n        },\n      });\n    }\n\n    return () => {\n      if (unsubscribePostCreated) {\n        unsubscribePostCreated();\n      }\n      if (unsubscribeRequestAddFriend) {\n        unsubscribeRequestAddFriend();\n      }\n      if (unsubscribeAcceptRequestAddFriend) {\n        unsubscribeAcceptRequestAddFriend();\n      }\n    };\n  }, [\n    countNumberNotificationsUnseen,\n    subscribeToMoreNotifications,\n    receivedRequestsToAddFriend,\n    notifications,\n    user,\n  ]);\n\n  useEffect(() => {\n    let timer = 0;\n    timer = setTimeout(() => {\n      setOpenPopupNotification(false);\n    }, 7000);\n    return () => clearTimeout(timer);\n  }, [openPopupNotification]);\n  if (!notifications.length)\n    return <NoNotifications>No notifications</NoNotifications>;\n  return notifications.map((notification) => (\n    <NotificationItem\n      key={`notification-${notification._id}`}\n      notifications={notifications}\n      notification={notification}\n    />\n  ));\n};\n\nconst NoNotifications = styled.div`\n  text-align: center;\n  padding: 3rem;\n  font-size: 1.1em;\n`;\n\nexport default React.memo(Notifications);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx",["951"],"import React from \"react\";\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  Title,\n  SubTitle,\n  ErrorMessage,\n} from \"./AuthForm\";\nimport CustomInput from \"../Custom/CustomInput\";\nimport CustomButton from \"../Custom/CustomButton\";\nimport { withRouter } from \"react-router-dom\";\nimport GoogleRecaptcha from \"./GoogleRecapcha\";\nimport FacebookLogin from \"./GoogleAuth\";\nimport GoogleLogin from \"./FacebookAuth\";\nimport { useMutation } from \"@apollo/client\";\nimport { SIGNUP } from \"../../apollo/operations/mutations/user\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport {login} from \"./Auth.utility\"\nconst INITIAL_STATE = {\n  controls: {\n    name: {\n      type: \"text\",\n      name: \"name\",\n      valid: false,\n      label: \"Name\",\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 50,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    email: {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      valid: false,\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    password: {\n      type: \"password\",\n      name: \"password\",\n      valid: false,\n      label: \"Password\",\n      validation: {\n        required: true,\n        minLength: 6,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    confirmPassword: {\n      type: \"password\",\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      valid: false,\n      validation: {\n        required: true,\n        minLength: 6,\n        match: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n  },\n  formIsValid: false,\n  loaded: false,\n  disabled: true,\n  title: \"\",\n};\n\nfunction withSignUpMutation(WrappedComponent) {\n  return function MutationWrapper(props) {\n    const [createUser, { data, loading, error }] = useMutation(SIGNUP, {errorPolicy : \"all\"});      \n    return (\n      <WrappedComponent\n        createUser={createUser}        \n        data={data}        \n        loading={loading}        \n        error={error}        \n        {...props}\n      />\n    );\n  };\n}\n\nconst SignUp = withSignUpMutation(\n  class extends React.Component {\n    state = { ...INITIAL_STATE };\n    timer = null ;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    componentWillUnmount(){\n      clearTimeout(this.timer)\n      if(this.unsubcribeLogin){\n        this.unsubcribeLogin();\n      }\n    }\n    unsubcribeLogin; \n    async componentDidUpdate(prevProps){\n      if(prevProps.error !== this.props.error){\n        this.clearForm();        \n      }\n      if(prevProps.data !== this.props.data && this.props.data )  {\n        const { user, token, tokenExpire} = this.props.data.createUser;                    \n        this.unsubcribeLogin = await login(user, token, tokenExpire)\n        this.clearForm() ;\n      }\n    }\n\n    clearForm = () => {\n      this.setState({...INITIAL_STATE});      \n      setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    \n    checkValidity = (value, rules) => {\n      let isValid = true;\n      let errorsMessage = [];\n      if (rules.required) {\n        isValid = value.trim().length && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"This field is required\");\n        }\n      }\n      if (rules.isEmail) {\n        const pattern = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        isValid = pattern.test(value) && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Email is invalid\");\n        }\n      }\n      if (rules.minLength) {\n        isValid = value.trim().length >= rules.minLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at least ${rules.minLength} characters`);\n        }\n      }\n      if (rules.maxLength) {\n        isValid = value.trim().length <= rules.maxLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at most ${rules.maxLength} characters`);\n        }\n      }\n      if (rules.match) {\n        isValid =\n          value.trim() === this.state.controls.password.value && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Password and confirm Password do not match\");\n        }\n      }\n      return errorsMessage;\n    };\n\n    handleChange = (e, name) => {\n      let updatedControls = { ...this.state.controls };\n      let updatedControlElement = { ...updatedControls[name] };\n      updatedControlElement.value = e.target.value;\n      const checkValid = this.checkValidity(\n        e.target.value,\n        updatedControlElement.validation\n      );\n      updatedControlElement.valid = checkValid.length === 0;\n      updatedControlElement.touched = true;\n      updatedControlElement.validationErrors = checkValid;\n      updatedControls[name] = updatedControlElement;\n      let { email, password, confirmPassword } = updatedControls;\n      const formIsValid =\n        email.valid &&\n        updatedControlElement.valid &&\n        password.valid &&\n        confirmPassword.valid;\n      this.setState({ controls: updatedControls, formIsValid });\n    };\n\n    handleSubmitSignUpForm = (e) => {\n      e.preventDefault();\n      if (!this.state.formIsValid) {\n        this.setState({ ...INITIAL_STATE });\n        return;\n      }\n      const { name, email, password } = this.state.controls;\n\n      this.props.createUser({\n        variables: {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        },\n      });\n    };\n\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {      \n      const { formIsValid, loaded, disabled } = this.state;\n      let formInputArray = [];\n      Object.keys(this.state.controls).forEach((controlItem) => {\n        formInputArray.push(this.state.controls[controlItem]);\n      });\n      const { error, loading } = this.props;   \n         \n      if(!loaded) return <div>Loading...</div>\n      return (\n        <CustomFormContainer onSubmit={this.handleSubmitSignUpForm}>\n          <FormHeader>\n            <Title>Sign Up</Title>\n            <SubTitle>Sign up your account via email and password.</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}\n          {loading && <h2>Loading...</h2>}\n          <FlashForm>\n            <FacebookLogin />\n            <GoogleLogin />\n          </FlashForm>\n          <FormGroups>\n            {formInputArray.map(\n              ({\n                label,\n                name,\n                touched,\n                type,\n                valid,\n                validation,\n                validationErrors,\n                value,\n              }) => (\n                <CustomInput\n                  key={name}\n                  type={type}\n                  name={name}\n                  value={value}\n                  label={label}\n                  onChange={(e) => this.handleChange(e, name)}\n                  require={validation.required}\n                  touched={touched}\n                  valid={valid}\n                  validationErrors={validationErrors}\n                />\n              )\n            )}\n            {loaded && (\n              <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n            )}\n            <CustomButton\n              variant=\"outlined\"\n              size=\"small\"\n              color=\"#0d47a1\"\n              bgColor=\"blue\"\n              disabled={!formIsValid || disabled}\n            >\n              Submit\n            </CustomButton>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              <StyledLink to=\"/auth\">Signin account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{\" \"}\n              <StyledLink to=\"/auth/restore-account\">\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignUp);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx",["952"],"import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_PERSONAL_USER,\n  GET_CURRENT_USER\n} from \"../../apollo/operations/queries/cache\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport {\n  Container,\n  UserName,\n  PersonalHeadingBackground,\n  BackgroundImageContainer,\n  PersonalMenus,\n  ProfileMenuItemLink,\n  Footer\n} from \"./PersonalHeading.styles\";\nimport BackgroundImage from \"../../assets/images/background-wallpaper.jpg\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport PersonalHeadingContact from \"./PersonalHeadingContact\"\n\nconst PersonalHeading = () => {\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER,{fetchPolicy : \"cache-first\"});\n  const {data : {user}} =useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"})\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const [menus, setMenus] = useState([]);\n  const [activeLink, setActiveLink] = useState(null);\n  \n  \n  useEffect(() => {\n    setMenus(i18n.store.data[lang].translation.personalMenus);\n  }, [lang]);\n\n  useEffect(() => {\n    if (currentPersonalUser) {\n      setActiveLink(`/${currentPersonalUser.slug}/posts`);\n    }\n  }, [currentPersonalUser]);\n\n  if (!currentPersonalUser) return null;\n  return (\n    <Container theme={colorMode}>\n      <PersonalHeadingBackground theme={colorMode} background={BackgroundImage}>\n        <BackgroundImageContainer theme={colorMode}>\n          <LazyLoadImage\n            src={currentPersonalUser.avatar}\n            alt={currentPersonalUser.avatar}\n          />\n          <UserName>\n            <h4>{currentPersonalUser.name}</h4>\n            <span>@{currentPersonalUser.slug}</span>\n          </UserName>\n        </BackgroundImageContainer>\n      </PersonalHeadingBackground>\n      <Footer>\n        <PersonalMenus>\n          {menus.length\n            ? menus.map((menu) => (\n                <ProfileMenuItemLink\n                  to={menu.path(currentPersonalUser.slug)}\n                  theme={colorMode}\n                  active={(\n                    activeLink === menu.path(currentPersonalUser.slug)\n                  ).toString()}\n                  onClick={() =>\n                    setActiveLink(menu.path(currentPersonalUser.slug))\n                  }\n                >\n                  {menu.name}\n                </ProfileMenuItemLink>\n              ))\n            : null}\n        </PersonalMenus>\n        {user && <PersonalHeadingContact/>}\n      </Footer>\n    </Container>\n  );\n};\n\nexport default PersonalHeading;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx",["953","954"],"import React, { useEffect, useState } from \"react\";\nimport { Wrapper, LeftSide, RightSide } from \"./PersonalPosts.styles\";\nimport Posts from \"../Post/Posts\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_PERSONAL_USER,\n  GET_PERSONAL_POSTS,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_POSTS } from \"../../apollo/operations/queries/post\";\nimport IntroductionBox from \"./IntroductionBox\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\n\nconst PersonalPosts = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { personalPosts },\n  } = useQuery(GET_PERSONAL_POSTS, { fetchPolicy: \"cache-first\" });\n\n  const { refetch: fetchMorePosts } = useQuery(FETCH_POSTS, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const { setPersonalPosts } = cacheMutations;\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      const docEl = document.documentElement;\n      if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.75) {\n        setLoadingMore(true);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", () => {\n        const docEl = document.documentElement;\n        if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.75) {\n          setLoadingMore(true);\n        }\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    let _mounted = true;\n    if (\n      loadingMore &&\n      currentPersonalUser &&\n      personalPosts[currentPersonalUser.slug] &&\n      fetchMorePosts\n    ) {\n      const skip = personalPosts[currentPersonalUser.slug].length;\n      const limit = +process.env.REACT_APP_POSTS_PER_PAGE;\n      const userId = currentPersonalUser._id;\n      fetchMorePosts({ skip, limit, userId }).then(\n        ({ data: { fetchPosts } }) => {\n          if (_mounted) {\n            setPersonalPosts({\n              ...personalPosts,\n              [currentPersonalUser.slug]: [\n                ...personalPosts[currentPersonalUser.slug],\n                ...fetchPosts,\n              ],\n            });\n            setLoadingMore(false);\n          }\n        }\n      );\n    }\n    return () => (_mounted = false);\n  }, [loadingMore, currentPersonalUser, personalPosts, fetchMorePosts]);\n  return (\n    <Wrapper>\n      <LeftSide>\n        <IntroductionBox />\n      </LeftSide>\n      <RightSide>        \n        {currentPersonalUser &&\n        personalPosts[currentPersonalUser.slug] &&\n        personalPosts[currentPersonalUser.slug].length ? (\n          <Posts posts={personalPosts[currentPersonalUser.slug]} />\n        ) : null}\n      </RightSide>\n    </Wrapper>\n  );\n};\n\nexport default PersonalPosts;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx",["955"],"import React , {useEffect} from \"react\";\nimport {\n  GET_CURRENT_USER,\n  GET_SENT_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_USERS_SENT_REQUEST_TO_ADD_FRIEND } from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nconst SentRequestsToAddFriend = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { sentRequestsToAddFriend },\n  } = useQuery(GET_SENT_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const {\n    refetch: fetchUsersSentRequestsToAddFriend,\n  } = useQuery(FETCH_USERS_SENT_REQUEST_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const { setSentRequestsToAddFriend } = cacheMutations;\n  const getMoreUsersSentRequestToAddFriend = () => {\n    const skip = sentRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_CONTACT_USER_PER_PAGE;\n    if (fetchUsersSentRequestsToAddFriend) {\n      fetchUsersSentRequestsToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchUsersSentRequestToAddFriend?.length) {         \n          setSentRequestsToAddFriend([\n            ...sentRequestsToAddFriend,\n            ...data.fetchUsersSentRequestToAddFriend,\n          ]);\n        }\n      });\n    }\n  };\n \n  if (!user || !user?.sentRequestToAddFriend.length || !sentRequestsToAddFriend.length) return null;\n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userSentRequest}\n      </Title>\n      {sentRequestsToAddFriend.map((item) => (\n        <ContactItem key={item._id} userContact={item} type=\"sent\" />\n      ))}\n      {sentRequestsToAddFriend.length < user.sentRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreUsersSentRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(SentRequestsToAddFriend);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx",["956","957"],"import React, { useEffect } from \"react\";\nimport {\n  GET_CURRENT_USER,\n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport {\n  FETCH_USERS_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n  FETCH_CURRENT_USER,\n} from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nimport subscriptions from \"../../apollo/operations/subscriptions\";\nimport _ from \"lodash\"\nconst SentRequestsToAddFriend = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-first\",\n  });\n  const { refetch: fetchUsersReceivedRequestToAddFriend } = useQuery(\n    FETCH_USERS_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n  const {\n    refetch: fetchCurrentUser,\n    subscribeToMore: subscribeUser,\n  } = useQuery(FETCH_CURRENT_USER, { skip: true });\n\n  useEffect(() => {\n    fetchCurrentUser();\n    return () => fetchCurrentUser();\n  }, [fetchCurrentUser]);\n  //subscribe user\n  useEffect(() => {\n    let unsubscribeUser;\n   \n    if (subscribeUser && user) {\n      console.log(\"ok\");\n      unsubscribeUser = subscribeUser({\n        document:\n          subscriptions.userSubscription\n            .CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.cancelRequestToAddFriendSubscription;\n          console.log(sender)          \n          const filterSenders = receivedRequestsToAddFriend.filter(\n            (senderRequest) => senderRequest._id !== sender._id\n          );          \n          setReceivedRequestsToAddFriend([...filterSenders]);\n        },\n      });\n      return () => {\n        if (unsubscribeUser) {\n          unsubscribeUser();\n        }\n      };\n    }\n  }, [subscribeUser, user, receivedRequestsToAddFriend]);\n\n  const { setReceivedRequestsToAddFriend } = cacheMutations;\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n\n  const getMoreUsersReceivedRequestToAddFriend = () => {\n    const skip = receivedRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_CONTACT_USER_PER_PAGE;\n    if (fetchUsersReceivedRequestToAddFriend) {\n      fetchUsersReceivedRequestToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchUsersReceivedRequestToAddFriend?.length) {\n          const resultData = [...receivedRequestsToAddFriend, ...data.fetchUsersReceivedRequestToAddFriend]\n          const uniqueResultData = _.uniqBy(resultData, \"_id\")\n          \n          setReceivedRequestsToAddFriend([...uniqueResultData]);\n        }\n      });\n    }\n  };\n\n  if (\n    !user ||\n    !user?.receivedRequestToAddFriend.length ||\n    !receivedRequestsToAddFriend.length\n  )\n    return null;\n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userReceivedRequest}\n      </Title>\n      {receivedRequestsToAddFriend.map((item) => (\n        <ContactItem key={item._id} userContact={item} type=\"received\" />\n      ))}\n      {receivedRequestsToAddFriend.length <\n      user.receivedRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreUsersReceivedRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(SentRequestsToAddFriend);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx",["958","959","960","961"],"import React, { useEffect, useState, useRef, createContext } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_FRIENDS } from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport ListContacts from \"./ListContacts\";\nimport ChatBoard from \"./ChatBoard\";\nexport const ContactContext = createContext({});\n\nconst Contact = () => {\n  //useQuery\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const { setFriends } = cacheMutations;\n\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-only\" });\n  const { refetch: fetchFriends, fetchMore: fetchMoreFriends } = useQuery(\n    FETCH_FRIENDS,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n  //useState\n  const [search, setSearch] = useState(\"\");\n  const [contactData, setContactData] = useState([]);\n  const [originData, setOriginData] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const popupRef = useRef(null);\n\n  useEffect(() => {\n    let _mounted = true;\n    if (!friends.length) {\n      fetchFriends({\n        skip: 0,\n        limit: +process.env.REACT_APP_FRIENDS_PER_LOAD,\n      }).then(({ data }) => {\n        if (_mounted) {\n          const { fetchFriends } = data;\n          //add status PERSONAL to each friends because  when click contact item, it will link to current\n          //chat which need status\n          const friends = fetchFriends.map((friend) => ({\n            ...friend,\n            scope: \"PERSONAL\",\n          }));\n          setFriends([...friends]);\n          setContactData([...friends]);\n          setOriginData([...friends]);\n        }\n      });\n    }\n    return () => (_mounted = false);\n  }, [friends]);\n\n  useEffect(() => {\n    if (friends.length) {\n      if (!search) {\n        setContactData([...originData]);\n      } else {\n        const searchRegex = new RegExp(search, \"i\");\n        const searchResults = originData.filter(\n          ({ name }) => !!name.match(searchRegex)\n        );\n        setContactData([...searchResults]);\n      }\n    }\n  }, [search, friends]);\n\n  useEffect(() => {    \n    if (friends.length !== originData.length) {\n      setContactData([...friends]);\n      setOriginData([...friends]);\n    }\n  }, [friends]);\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-contact-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n  const { colorMode } = useThemeUI();\n\n  if (!user) return null;\n  return (\n    <ContactContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top}\n      >\n        <span>Mark as favorite</span>\n        <hr />\n        <span>Label</span>\n        <span>Set alias</span>\n        <hr />\n        <span>Block</span>\n        <span>Delete</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search search={search} onChange={(e) => setSearch(e.target.value)} />\n          <hr />\n          <ListContacts data={contactData.length ? contactData : friends} />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </ContactContext.Provider>\n  );\n};\n\nexport default Contact;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx",["962"],"import {useState, useEffect} from 'react'\nimport useLanguage from \"../Global/useLanguage\"\nimport {useLocation} from \"react-router-dom\"\nimport {useQuery} from \"@apollo/client\"\nimport {GET_CURRENT_USER} from \"../../apollo/operations/queries/cache\"\nconst useMenuList = () => {\n  const {data : {user}} = useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"});\n\n  const location = useLocation();  \n  const { lang, i18n } = useLanguage();\n  const [namePage, setNamePage] = useState(\"\");\n  const [menu, setMenu] = useState([]);  \n  const [explores, setExplores] = useState([]);\n  \n  useEffect(() => {\n    const menuName =  i18n.store.data[lang].translation.menuList.find(\n      (item) => item.path === location.pathname\n    )        \n    setNamePage(\n      menuName ? menuName.name : \"\"\n    );\n    setMenu(i18n.store.data[lang].translation.menuList);\n    setExplores(i18n.store.data[lang].translation.explores);\n  }, [lang, i18n.store.data, location.pathname]);\n  return {\n    namePage,\n    menu, \n    explores\n  }\n}\n\nexport default useMenuList\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx",["963","964","965"],"import React, {useEffect} from \"react\";\nimport {\n  ContactItemWrapper,\n  ContactInfo,\n  ContactActions,\n  FriendActions,\n} from \"./Contact.styles\";\nimport { Link } from \"react-router-dom\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport Button from \"../Controls/ButtonDefault\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BsChatDots, BsCameraVideo, BsThreeDotsVertical } from \"react-icons/bs\";\nimport { MdStarBorder } from \"react-icons/md\";\nimport { IoMdCall } from \"react-icons/io\";\nimport subscriptions from \"../../apollo/operations/subscriptions\"\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_PERSONAL_USER,\n  GET_SENT_REQUESTS_TO_ADD_FRIEND,\n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n  GET_FRIENDS\n} from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { userMutations } from \"../../apollo/operations/mutations/user\";\nimport { useQuery, useMutation } from \"@apollo/client\";\n\n\nconst ContactItem = ({ userContact, type }) => {\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });  \n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { sentRequestsToAddFriend },\n  } = useQuery(GET_SENT_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const [cancelRequestToAddFriend] = useMutation(\n    userMutations.CANCEL_REQUEST_TO_ADD_FRIEND\n  );\n  const [rejectRequestToAddFriend] = useMutation(userMutations.REJECT_REQUEST_TO_ADD_FRIEND);\n  const [acceptRequestToAddFriend] = useMutation(userMutations.ACCEPT_REQUEST_TO_ADD_FRIEND);\n  const {\n    setCurrentUser,\n    setCurrentPersonalUser,\n    setReceivedRequestsToAddFriend,\n    setSentRequestsToAddFriend,\n    setFriends\n  } = cacheMutations;\n\n\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...sender.friends],\n      following: [...sender.following],\n      followed: [...sender.followed],\n      sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n    });\n    if (currentPersonalUser && currentPersonalUser._id === userContact._id) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        following: [...receiver.following],\n        followed: [...receiver.followed],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    }\n  };\n\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    const filterUsersReceivedRequest = sentRequestsToAddFriend.filter(\n      (userReceivedRequest) => userReceivedRequest._id !== userContact._id\n    );   \n    cancelRequestToAddFriend({\n      variables: { receiverId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;     \n      setSentRequestsToAddFriend(filterUsersReceivedRequest);\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n   //Handle accept request to add friend\n   const onAcceptRequestToAddFriend = () => {\n     const filterUsersSentRequest = receivedRequestsToAddFriend.filter(userSentRequest => userSentRequest._id !== userContact._id);\n    acceptRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.acceptRequestToAddFriend;\n      //remove user at recived requests to head of friends list\n      setReceivedRequestsToAddFriend(filterUsersSentRequest);\n      setFriends([{...userContact}, ...friends])\n      updateMutationOnChange(sender, receiver);    \n    });\n  };\n\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    const filterUsersSentRequest = receivedRequestsToAddFriend.filter(userSentRequest => userSentRequest._id !== userContact._id);    \n    \n    rejectRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.rejectRequestToAddFriend;\n        setReceivedRequestsToAddFriend(filterUsersSentRequest)\n        updateMutationOnChange(sender, receiver);        \n      })\n      .catch((err) => console.log(err));\n  };\n\n  const sentActions = (\n    <Button cancel onClick={onCancelRequestToAddFriend}>\n      {i18n.store.data[lang].translation.contacts.cancelRequest}\n    </Button>\n  );\n  const receivedActions = (\n    <>\n      <Button acceptBtn variant=\"outlined\" onClick={onAcceptRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.acceptRequest}\n      </Button>\n      <Button reject onClick={onRejectRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.rejectRequest}\n      </Button>\n    </>\n  );\n\n  const friendsActions = (\n    <FriendActions>\n      <Button favorite>\n        <MdStarBorder />\n      </Button>\n      <Button chat>\n        <BsChatDots />\n      </Button>\n      <Button call>\n        <IoMdCall />\n      </Button>\n      <Button videocall>\n        <BsCameraVideo />\n      </Button>\n      {/* <Button setting>\n        <BsThreeDotsVertical />\n      </Button>      */}\n    </FriendActions>\n  );\n  return (\n    <ContactItemWrapper theme={colorMode}>\n      <ContactInfo>\n        <Link to={userContact.slug}>\n          <LazyLoadImage src={userContact.avatar} alt={userContact.avatar} />\n        </Link>\n        <Link to={userContact.slug}>\n          <h6>{userContact.name}</h6>\n          <span>@{userContact.slug}</span>\n        </Link>\n      </ContactInfo>\n      <ContactActions>\n        {type === \"sent\"\n          ? sentActions\n          : type === \"received\"\n          ? receivedActions\n          : type === \"friends\"\n          ? friendsActions\n          : null}\n      </ContactActions>\n    </ContactItemWrapper>\n  );\n};\n\nexport default ContactItem;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js",[],["966","967"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx",["968"],"import React, {createRef} from \"react\";\nimport {\n  Wrapper\n} from \"./styles/ChatBoard.styles\";\n\nimport ChatBoardHeading from \"./ChatBoardHeading\"\nimport ChatBoardBody from \"./ChatBoardBody\"\nimport ChatBoardFooter from \"./ChatBoardFooter\"\n\nconst ChatCenter = () => {  \n  \n  return (\n    <Wrapper>\n      <ChatBoardHeading/>\n      <ChatBoardBody/>\n      <ChatBoardFooter/>\n    </Wrapper>\n  );\n};\n\nexport default ChatCenter;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx",["969","970"],"import React from 'react'\nimport {BoxWrapper, WorkList, Introduce, Website} from \"./IntroductionBox.styles\"\nimport {useQuery} from \"@apollo/client\"\nimport {GET_CURRENT_PERSONAL_USER, GET_CURRENT_USER} from \"../../apollo/operations/queries/cache\"\nimport {useThemeUI} from \"theme-ui\"\nimport {Link} from \"react-router-dom\"\nimport {FaGlobe} from \"react-icons/fa\"\nimport {MdWork} from \"react-icons/md\"\nconst works = [\n  {job_name : \"Data Engineer\", company_name : \"iTech Corp\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", },\n  {job_name : \"Data Scientist\", company_name : \"Samsung\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", },\n  {job_name : \"Junior Developer\", company_name : \"Freelance\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", }\n]\n\n\n\nconst IntroductionBox = () => {\n  const {data : {user}} = useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"})\n  const {data : {currentPersonalUser}} = useQuery(GET_CURRENT_PERSONAL_USER, {fetchPolicy : \"cache-first\"})\n  const {colorMode} = useThemeUI();\n  return (\n    <BoxWrapper theme={colorMode}>\n      <h4>Introduction</h4>\n      {/* Introduce */}\n      <Introduce>Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem possimus harum aliquam nobis qui! Temporibus, commodi facilis ex nihil veniam in quia eius dicta quos.</Introduce>\n      {/* works list */}\n      <WorkList>\n        {works.map(work => (\n          <li>\n           <Website><span><MdWork/></span><Link to={`/tags/${work.job_name}`}>{work.job_name}</Link>at<Link to={work.company_href}>{work.company_name}</Link></Website> \n          </li>\n        ))}\n      </WorkList>\n      {/* Live in */}\n      <p>Live in <Link to=\"https://google.com\">Can Tho</Link></p>\n      {/* Followers */}\n      <p>Current Have <strong>200</strong> followers</p>      \n      {/* Contact */}\n      <p>Contact me via : 0123 456 789</p>\n      <Website> <span><FaGlobe/></span> <Link href=\"https://github.com/mthang1801\">https://github.com/mthang1801</Link></Website>\n    </BoxWrapper>\n  )\n}\n\nexport default IntroductionBox\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx",["971","972","973"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { HiOutlinePencilAlt } from \"react-icons/hi\";\nimport { AiOutlineMenuUnfold } from \"react-icons/ai\";\nimport { TiMessages } from \"react-icons/ti\";\nimport { FaUserCheck, FaReply, FaRocket } from \"react-icons/fa\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { IoIosPersonAdd, IoIosRemove } from \"react-icons/io\";\nimport { FcCheckmark, FcCancel } from \"react-icons/fc\";\nimport { CgRemoveR } from \"react-icons/cg\";\n\nimport { RiUserFollowLine, RiUserUnfollowLine } from \"react-icons/ri\";\nimport { userMutations } from \"../../apollo/operations/mutations\";\nimport subscriptions from \"../../apollo/operations/subscriptions\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  GET_CURRENT_PERSONAL_USER,\n  GET_CURRENT_USER,  \n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_CURRENT_USER } from \"../../apollo/operations/queries/user\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  PersonalContactContainer,\n  ResponseRequests,\n  DropdownResponseRequest,\n} from \"./PersonalHeadingContact.styles\";\nconst PersonalContact = () => {\n  const [relationship, setRelationship] = useState(\"stranger\");\n  const [openResponse, setOpenResponse] = useState(false);\n  //Mutations\n  const [sendRequestToAddFriend] = useMutation(\n    userMutations.SEND_REQUEST_TO_ADD_FRIEND\n  );\n  const [rejectRequestToAddFriend] = useMutation(\n    userMutations.REJECT_REQUEST_TO_ADD_FRIEND\n  );\n  const [cancelRequestToAddFriend] = useMutation(\n    userMutations.CANCEL_REQUEST_TO_ADD_FRIEND\n  );\n  const [followUser] = useMutation(userMutations.FOLLOW_USER);\n  const [unFollowUser] = useMutation(userMutations.UNFOLLOW_USER);\n  const [acceptRequestToAddFriend] = useMutation(\n    userMutations.ACCEPT_REQUEST_TO_ADD_FRIEND\n  );\n  const [removeFriend] = useMutation(userMutations.REMOVE_FRIEND);\n  const {\n    setCurrentUser,    \n    setCurrentPersonalUser,\n    setReceivedRequestsToAddFriend,\n  } = cacheMutations;\n  //user Query\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER);\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER);\n\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-first\",\n  });\n  const {\n    refetch: fetchCurrentUser,\n    subscribeToMore: subscribeUser,\n  } = useQuery(FETCH_CURRENT_USER, { skip: true });\n\n  //color theme\n  const { colorMode } = useThemeUI();\n  //useRef\n  const responseRef = useRef(false);\n\n  //function to handle when subscription called\n  const updateSubscriptionOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...receiver.friends],\n      following: [...receiver.following],\n      followed: [...receiver.followed],\n      sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n    });    \n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id.toString() === receiver._id.toString()\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    }\n  };\n  useEffect(() => {\n    fetchCurrentUser();\n    return () => fetchCurrentUser();\n  }, [fetchCurrentUser]);\n  useEffect(() => {\n    let unsubscribeRejectRquestToAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeRemoveFriend;\n    if (subscribeUser && user) {\n      unsubscribeRejectRquestToAddFriend = subscribeUser({\n        document:\n          subscriptions.userSubscription\n            .REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.rejectRequestToAddFriendSubscription;\n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      unsubscribeCancelRequestToAddFriend = subscribeUser({\n        document:\n          subscriptions.userSubscription\n            .CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.cancelRequestToAddFriendSubscription;\n          \n          // remove sender from received requests\n          setReceivedRequestsToAddFriend(\n            receivedRequestsToAddFriend.filter(\n              (senderRequest) => senderRequest._id !== sender._id\n            )\n          );\n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      unsubscribeRemoveFriend = subscribeUser({\n        document: subscriptions.userSubscription.REMOVE_FRIEND,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.removeFriendSubscription;\n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n    }\n\n    return () => {\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeRejectRquestToAddFriend) {\n        unsubscribeRejectRquestToAddFriend();\n      }\n      if (unsubscribeRemoveFriend) {\n        unsubscribeRemoveFriend();\n      }\n    };\n  }, [subscribeUser, user]);\n\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...sender.friends],\n      following: [...sender.following],\n      followed: [...sender.followed],\n      sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n    });\n    \n    setCurrentPersonalUser({\n      ...currentPersonalUser,\n      friends: [...receiver.friends],\n      following: [...receiver.following],\n      followed: [...receiver.followed],\n      sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n    });\n  };\n\n  useEffect(() => {\n    if (!responseRef.current) {\n      setOpenResponse(false);\n    }\n    window.addEventListener(\"click\", (e) => {\n      if (responseRef.current && !responseRef.current.contains(e.target)) {\n        setOpenResponse(false);\n      }\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        if (responseRef.current && !responseRef.current.contains(e.target)) {\n          setOpenResponse(false);\n        }\n      });\n  }, [responseRef]);\n\n  useEffect(() => {\n    if (currentPersonalUser) {\n      if (user && currentPersonalUser._id === user._id) {\n        setRelationship(\"me\");\n      } else if (\n        user &&\n        currentPersonalUser.friends.includes(user._id.toString())\n      ) {\n        setRelationship(\"friend\");\n      } else {\n        setRelationship(\"stranger\");\n      }\n    }\n  }, [user, currentPersonalUser]);\n\n  // Handle add friend\n  const onSendRequestToAddFriend = (e) => {\n    sendRequestToAddFriend({ variables: { userId: currentPersonalUser._id } })\n      .then(({ data }) => {\n        const { sender, receiver } = data.sendRequestToAddFriend;\n        updateMutationOnChange(sender, receiver);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    rejectRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.rejectRequestToAddFriend;\n        updateMutationOnChange(sender, receiver);\n        setOpenResponse(false);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    cancelRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n  //Handle Follow User\n  const onHandleFollowUser = () => {\n    followUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.followUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle Unfollow user\n  const onHandleUnfollowUser = () => {\n    unFollowUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.unFollowUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle accept request to add friend\n  const onAcceptRequestToAddFriend = () => {\n    acceptRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.acceptRequestToAddFriend;\n      updateMutationOnChange(sender, receiver);\n      setOpenResponse(false);\n    });\n  };\n  //handle remove friend\n  const onRemoveFriend = () => {\n    removeFriend({ variables: { friendId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.removeFriend;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n\n  const MyActionsContact = (\n    <>\n      <Button theme={colorMode} title=\"update personal\">\n        <HiOutlinePencilAlt />\n      </Button>\n      <Button theme={colorMode} title=\"history actions\">\n        <AiOutlineMenuUnfold />\n      </Button>\n      <Button theme={colorMode} title=\"setting\">\n        <BsThreeDots />\n      </Button>\n    </>\n  );\n\n  const FriendActionsContact = (\n    <>\n      <Button theme={colorMode} title=\"remove friend\" onClick={onRemoveFriend}>\n        <IoIosRemove />\n      </Button>\n      <Button theme={colorMode} title=\"chat\">\n        <TiMessages />\n      </Button>\n      <Button theme={colorMode} title=\"friend\">\n        <FaUserCheck />\n      </Button>\n      <Button theme={colorMode} title=\"setting\">\n        <BsThreeDots />\n      </Button>\n    </>\n  );\n  const StrangerActionsContact = (\n    <>\n      {user &&\n      currentPersonalUser &&\n      user?.sentRequestToAddFriend?.includes(\n        currentPersonalUser._id.toString()\n      ) ? (\n        <Button\n          theme={colorMode}\n          title=\"Cancel request\"\n          onClick={onCancelRequestToAddFriend}\n        >\n          <CgRemoveR />\n        </Button>\n      ) : user &&\n        currentPersonalUser &&\n        user?.receivedRequestToAddFriend?.includes(\n          currentPersonalUser._id.toString()\n        ) ? (\n        <ResponseRequests ref={responseRef}>\n          <Button theme={colorMode} title=\"Response the request\">\n            <FaReply\n              onClick={() => setOpenResponse((prevState) => !prevState)}\n            />\n          </Button>\n          <DropdownResponseRequest theme={colorMode} open={openResponse}>\n            <div onClick={onAcceptRequestToAddFriend}>\n              <FcCheckmark /> Accept\n            </div>\n            <div onClick={onRejectRequestToAddFriend}>\n              <FcCancel /> Reject\n            </div>\n          </DropdownResponseRequest>\n        </ResponseRequests>\n      ) : (\n        <Button\n          theme={colorMode}\n          title=\"add friend\"\n          onClick={onSendRequestToAddFriend}\n        >\n          <IoIosPersonAdd />\n        </Button>\n      )}\n\n      <Button theme={colorMode} title=\"Chat\">\n        <TiMessages />\n      </Button>\n      {user?.following?.includes(currentPersonalUser._id) ? (\n        <Button\n          theme={colorMode}\n          title=\"UnFollow\"\n          onClick={onHandleUnfollowUser}\n        >\n          <RiUserUnfollowLine />\n        </Button>\n      ) : (\n        <Button theme={colorMode} title=\"Follow\" onClick={onHandleFollowUser}>\n          <RiUserFollowLine />\n        </Button>\n      )}\n      <Button theme={colorMode} title=\"Setting\">\n        <BsThreeDots />\n      </Button>\n    </>\n  );\n  return (\n    <PersonalContactContainer>\n      {relationship === \"me\"\n        ? MyActionsContact\n        : relationship === \"friend\"\n        ? FriendActionsContact\n        : StrangerActionsContact}\n    </PersonalContactContainer>\n  );\n};\n\nexport default PersonalContact;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getPersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getOpenPopupNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getNewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getPostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getToggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx",["974"],"import React, {\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n  useMemo,\n} from \"react\";\nimport {\n  Wrapper,\n  ChatInput,\n  ChatActions,\n  Label,\n  SendMessage,\n  PlaceHolder,\n} from \"./styles/ChatBoardFooter.styles\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { FiSend } from \"react-icons/fi\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { IoMdAttach } from \"react-icons/io\";\nimport { HiOutlinePhotograph } from \"react-icons/hi\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport \"./styles/editor.css\";\nimport \"@draft-js-plugins/mention/lib/plugin.css\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  SEND_MESSAGE_CHAT_TEXT,\n  SEND_MESSAGE_CHAT_FILE,\n} from \"../../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/\";\nimport {\n  GET_CURRENT_CHAT,\n  GET_CURRENT_USER,\n} from \"../../apollo/operations/queries/cache\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport generateBase64Image from \"../../utils/generateBase64Image\";\nconst ChatBoardFooter = () => {\n  //useState\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const { colorMode } = useThemeUI();\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n  //useQuery\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-and-network\" });\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-and-network\" });\n  //useMutation\n  const [sendMessageChatText] = useMutation(SEND_MESSAGE_CHAT_TEXT);\n  const [sendMessageChatFile] = useMutation(SEND_MESSAGE_CHAT_FILE);\n  const { setMessagesStorage } = cacheMutations;\n  const editorRef = useRef(null);\n\n  const {\n    plugins,\n    EmojiSelect,\n    EmojiSuggestions,\n    MentionSuggestions,\n  } = useMemo(() => {\n    const emojiPlugin = createEmojiPlugin({\n      selectButtonContent: \"😀\",\n    });\n    const { EmojiSelect, EmojiSuggestions } = emojiPlugin;\n    const linkifyPlugin = createLinkifyPlugin({\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      component(props) {\n        return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n      },\n    });\n    const mentionPlugin = createMentionPlugin({\n      positionSuggestions: (settings) => {\n        return {\n          left: `${settings.decoratorRect.left - 360 + 30}px`,\n          top: `${-settings.decoratorRect.height * 5 - 100}px`,\n          display: \"block\",\n          transform: \"scale(1)\", // transition popover on the value of its height\n          transformOrigin: \"1em 0% 0px\",\n          transition: \"all 0.25s cubic-bezier(0.3, 1.2, 0.2, 1)\",\n        };\n      },\n      mentionComponent(mentionProps) {\n        return (\n          <span\n            className={mentionProps.className}\n            onClick={() => alert(\"CLick mentions\")}\n          >\n            {mentionProps.children}\n          </span>\n        );\n      },\n    });\n    const { MentionSuggestions } = mentionPlugin;\n    const plugins = [mentionPlugin, emojiPlugin, linkifyPlugin];\n    return { plugins, EmojiSelect, EmojiSuggestions, MentionSuggestions };\n  }, []);\n\n  const onOpenChange = useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n\n  useEffect(() => {\n    setShowPlaceholder(!editorState.getCurrentContent().hasText());\n  }, [editorState]);\n\n  useEffect(() => {\n    function focusEditorWhenTypingTabButton(e) {\n      if (e.which === 9) {\n        if (editorRef.current) {\n          editorRef.current.focus();\n        }\n      }\n    }\n    window.addEventListener(\"keyup\", (e) => {\n      focusEditorWhenTypingTabButton(e);\n    });\n    return () =>\n      window.removeEventListener(\"keyup\", (e) => {\n        focusEditorWhenTypingTabButton(e);\n      });\n  }, [editorRef]);\n  const onSendMessage = (e) => {    \n    if (editorState.getCurrentContent().hasText() && currentChat) {\n      const rawData = JSON.stringify(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      sendMessageChatText({\n        variables: {\n          receiverId: currentChat._id,\n          text: rawData,\n          scope: currentChat.scope || \"PERSONAL\",\n        },\n      })\n        .then(({ data }) => {\n          const { message, scope } = data.sendMessageChatText;\n          const { receiver } = message;\n          //always set hasSeenLatestMessage is true  because  this user is sender\n          setMessagesStorage(receiver, message, scope, true);\n          setEditorState(EditorState.createEmpty());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const onChangeInputChatImage = async (e) => {\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024;\n    if (fileData && fileData.size > maxSize) {\n      return false;\n    }\n    const validFiles = [\"image/jpeg\", \"image/png\", \"image/jpg\", \"image/gif\"];\n    if (!validFiles.includes(fileData.type)) {\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData);\n\n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"IMAGE\",\n        },\n      });\n      const { message, scope } = data.sendMessageChatFile;\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n      document.getElementById(\"chat-image\").value =  \"\";\n    }\n  };\n\n  const onChangeInputChatAttachment = async (e) => {    \n    e.preventDefault();\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024 * 5;\n    if (fileData && fileData.size > maxSize) {\n      console.log(\"oversize\");\n      return false;\n    }\n    const validExtensions = new RegExp(\"(.*?).(docx|doc|pdf|xml|bmp|ppt|xls|txt)$\");\n    if (!validExtensions.test(e.target.value.toLowerCase())) {\n      console.log(\"invalid file\")\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData); \n         \n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"ATTACHMENT\",\n        },\n      });\n      const { message, scope, error } = data.sendMessageChatFile;\n      if(error){\n        console.log(error)\n        return ;\n      }\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n    }\n    document.getElementById(\"chat-attachment\").value =  \"\";\n  };\n  return (\n    <Wrapper style={{ display: !user || !currentChat ? \"none\" : \"block\" }}>\n      <ChatActions theme={colorMode}>\n        <Label htmlFor=\"chat-image\" style={{ color: \"#fb8c00\" }}>\n          <HiOutlinePhotograph />\n          <input\n            type=\"file\"\n            id=\"chat-image\"\n            name=\"chat-image\"\n            onChange={onChangeInputChatImage}\n          />\n        </Label>\n        <Label htmlFor=\"chat-attachment\" style={{ color: \"#4527a0 \" }}>\n          <IoMdAttach />\n          <input\n            type=\"file\"\n            id=\"chat-attachment\"\n            name=\"chat-attachment\"\n            onChange={onChangeInputChatAttachment}            \n          />\n        </Label>\n      </ChatActions>\n      <ChatInput onClick={() => editorRef.current?.focus()}>\n        <EmojiSuggestions />\n        <EmojiSelect />\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          ref={editorRef}\n          tabIndex=\"0\"          \n        />\n        <MentionSuggestions\n          open={open}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <PlaceHolder show={showPlaceholder}>Enter something</PlaceHolder>\n        <SendMessage onClick={onSendMessage}>\n          <FiSend />\n        </SendMessage>\n      </ChatInput>\n    </Wrapper>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    slug: \"matthew\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    slug: \"juliansadaw\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    slug: \"jyoti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    slug: \"stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    slug: \"graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    slug: \"brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    slug: \"russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    slug: \"julianewqeq\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    slug: \"puti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n];\n\nexport default ChatBoardFooter;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx",["975"],"import React, { useState, useEffect, createRef } from \"react\";\nimport { Wrapper } from \"./styles/ChatBoardBody.styles\";\nimport Bubble from \"./Bubble\";\nimport { useThemeUI } from \"theme-ui\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_CHAT,\n  GET_MESSAGES_STORAGE,\n  GET_CURRENT_USER,\n} from \"../../apollo/operations/queries/cache\";\nimport {FETCH_MESSAGES} from \"../../apollo/operations/queries/chat\"\nimport {cacheMutations} from \"../../apollo/operations/mutations/cache\"\n\nconst ChatBoardBody = () => {\n  //useState\n  const [loadMoreMessages, setLoadMoreMessages] = useState(false);\n  //useQuery\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-first\" });\n  const {refetch: fetchMoreMessages} = useQuery(FETCH_MESSAGES, {fetchPolicy : \"cache-and-network\", skip: true })\n  const chatBoardBodyRef = createRef(null)\n  const {updateMoreMessages} = cacheMutations;\n  const [shouldScrollIntoView, setShouldScrollIntoView] = useState(true);\n  useEffect(() => {    \n    let timer ;\n    timer = setTimeout(()=>{     \n      if(chatBoardBodyRef.current && shouldScrollIntoView){\n        chatBoardBodyRef.current.scrollIntoView({          \n          behavior : \"auto\"\n        })\n      }      \n    },10)\n    return () => clearTimeout(timer);\n  })    \n  \n  const { colorMode } = useThemeUI();    \n\n  const onScrollBoardBody = e => {\n    const {scrollHeight, scrollTop, clientHeight} = e.target;    \n    if(scrollTop + clientHeight === scrollHeight){\n      setShouldScrollIntoView(true);\n    }else{\n      setShouldScrollIntoView(false);\n    }\n    if( scrollTop + clientHeight <  (scrollHeight - scrollTop) / 2 && scrollTop + clientHeight > (scrollHeight - scrollTop) / 2 - 60 ){\n      if(!loadMoreMessages){\n        setLoadMoreMessages(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    let _isMounted = true ;    \n    if(loadMoreMessages ){            \n      const skip = messagesStorage[currentChat._id].messages.length ;       \n      const limit = +process.env.REACT_APP_NUMBER_MESSAGES_PER_LOAD;\n      const conversationId = currentChat._id ; \n      const scope = currentChat.scope ;\n      fetchMoreMessages({conversationId,scope,skip,limit}).then(({data})=>{\n        if(_isMounted){\n          const {messages} = data.fetchMessages;\n          updateMoreMessages(conversationId, messages);\n          setLoadMoreMessages(false)\n        }        \n      })\n    }\n    return () => _isMounted = false ;\n  },[loadMoreMessages,setLoadMoreMessages,updateMoreMessages])\n  return (\n    <Wrapper theme={colorMode} id=\"body-board\" onScroll={onScrollBoardBody}>     \n      {currentChat && messagesStorage[currentChat._id] && messagesStorage[currentChat._id].messages.length && user\n        ? messagesStorage[currentChat._id].messages.map((message, idx) => {              \n            return (\n              <Bubble\n                key={`bubble-${message._id}`}\n                message={message}\n                user={user}\n                me={message.sender && message.sender._id === user._id}\n                senderAvatar={\n                  message.sender && message.sender._id === user._id\n                    ? user.avatar\n                    : currentChat.avatar\n                }\n                index={idx}                \n              />\n            );\n          })\n        : null}   \n        <div ref={chatBoardBodyRef}></div>\n    </Wrapper>\n  );\n};\n\nexport default ChatBoardBody;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx",["976","977"],"import React, { useState, useContext, useRef } from \"react\";\nimport {\n  ContactItemWrapper,\n  Avatar,\n  UserContactOverview,\n  ContactControls,\n} from \"./styles/ContactItem.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useThemeUI } from \"theme-ui\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport ThreeDotsSetting from \"../UI/ThreeDotsSetting\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\"\n\nconst ContactItem = ({ friend }) => {\n  const [showSetting, setShowSettings] = useState(false);\n  const { setPopupPosition, setShowPopup } = usePopupContactActions();\n  const { colorMode } = useThemeUI();\n  const {setCurrentChat} = cacheMutations;\n  const onClickThreeDots = (e) => {    \n    e.stopPropagation()  ;\n    setShowPopup(true);\n    const positionY =\n      e.pageY > window.innerHeight * 0.75\n        ? e.pageY - 0.25 * window.innerHeight\n        : e.pageY;\n    setPopupPosition({ left: e.pageX, top: positionY });\n  };\n\n  return (\n    <ContactItemWrapper\n      theme={colorMode}\n      onMouseEnter={() => setShowSettings(true)}\n      onMouseLeave={() => setShowSettings(false)}\n      onClick={()=>setCurrentChat(friend)}\n    >\n      <Avatar>\n        <LazyLoadImage src={friend.avatar} />\n      </Avatar>\n      <UserContactOverview>{friend.name}</UserContactOverview>\n      <ContactControls show={showSetting} onClick={(e) => onClickThreeDots(e)}  aria-label=\"chat-contact-settings\">\n        <ThreeDotsSetting />\n      </ContactControls>\n    </ContactItemWrapper>\n  );\n};\n\nexport default React.memo(ContactItem);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/signup.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/acceptRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/removeFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/unFollowUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/followUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/cancelRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/rejectRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/sendRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx",["978"],"import styled, {css} from \"styled-components\"\n\n\nexport const Wrapper = styled.header`\nheight: 65px;\nwidth : 100%; \nbackground-color : #e8f5e9;\ndisplay : flex;\npadding: 1rem 2rem;  \njustify-content: space-between;\nalign-items : center;\n`\n\nexport const User = styled.div`\ndisplay : flex;\nalign-items : center;  \n`\n\nexport const Avatar = styled.div`\nwidth : 2.5rem;\nheight : 2.5rem;\n& > img{\n  width : 100%; \n  height: 100%;\n  border-radius : 50%;\n}\n`\n\nexport const UserInfo  = styled.div`\nmargin-left : 0.4rem;\nh4{\n  font-size : 1rem;\n}\nflex: 1;\n`\n\nexport const Controls = styled.div`\n  display : flex;\n  align-items: center;\n`\n\nexport const LinkItem = styled.span`\n  display : inline-block;\n  cursor : pointer;\n  font-size : 1.4rem;\n  margin :  0  0.5rem;\n  ${({phone}) => phone && `\n    color : #039be5 ;\n    &:hover{\n      color : #0277bd ; \n    }\n  `} \n  ${({video}) => video && `\n    color : #e53935; \n    &:hover{\n      color : #c62828;\n    }\n  `}\n  ${({photo}) => photo &&`\n    color : #00897b;\n    &:hover{\n      color : #00695c;\n    }\n  `}\n\n  ${({file}) => file && `\n    color : #3949ab;\n    &:hover{\n      color: #283593;\n    }\n  `}\n \n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx",["979","980","981"],"import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  BubbleContainer,\n  Message,\n  MentionWrapper,\n  MentionInfo,\n  MentionLinkInfo,\n  MentionAvatar,\n  BubbleTimeline,\n  ImageContainer,\n  AttachmentContainer,\n} from \"./styles/Bubble.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { convertFromRaw, EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport Moment from \"react-moment\";\nimport { GET_CURRENT_USER } from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nconst linkifyPlugin = createLinkifyPlugin({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n});\nconst mentionPlugin = createMentionPlugin({\n  mentionComponent({ mention }) {\n    return (\n      <MentionWrapper to={`/${mention.slug}`}>\n        <MentionLinkInfo to={`/${mention.slug}`}>\n          <MentionAvatar src={mention.avatar} />\n          <MentionInfo>\n            <span>{mention.name}</span>\n            <span>@{mention.slug}</span>\n          </MentionInfo>\n        </MentionLinkInfo>\n        <span>@{mention.name}</span>\n      </MentionWrapper>\n    );\n  },\n});\nconst Bubble = ({ message, me, user, senderAvatar, index }) => {\n  const [editorState, setEditorState] = useState(() =>\n    message.messageType === \"TEXT\"\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(message.text)))\n      : null\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [bubbleDimensions, setBubbleDimensions] = useState({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const bubbleRef = useRef(null);\n  useEffect(() => {\n    if (bubbleRef.current) {\n      setBubbleDimensions(bubbleRef.current.getBoundingClientRect());\n    }\n  }, [bubbleRef]);\n  if (!user) return null;\n  return (\n    <Wrapper index={index}>\n      <BubbleContainer me={me}>\n        <Avatar>\n          <LazyLoadImage src={senderAvatar} />\n        </Avatar>\n        <Message me={me} ref={bubbleRef} messageType={message.messageType}>\n          {message.messageType === \"TEXT\" ? (\n            <Editor\n              editorState={editorState}\n              setEditorState={setEditorState}\n              plugins={[linkifyPlugin, mentionPlugin]}\n              onChange={setEditorState}\n              readOnly\n            />\n          ) : message.messageType === \"IMAGE\" ? (\n            <ImageContainer>\n              <img\n                src={message.file.data}\n                alt={message.file.filename}\n                onClick={() => setIsOpen(true)}\n              />\n              {isOpen && (\n                <Lightbox\n                  mainSrc={message.file.data}\n                  onCloseRequest={() => setIsOpen(false)}\n                />\n              )}\n            </ImageContainer>\n          ) : message.messageType === \"ATTACHMENT\" ? (\n            <AttachmentContainer>\n              <a\n                href={message.file.data}\n                download={message.file.filename}\n                title={message.file.filename}\n              >\n                {message.file.filename}\n              </a>\n            </AttachmentContainer>\n          ) : null}\n        </Message>\n      </BubbleContainer>\n      <BubbleTimeline width={bubbleDimensions.width} me={me}>\n        <div>\n          <span>\n            <Moment fromNow>{+message.createdAt}</Moment>\n          </span>\n          {user._id === message.sender._id ? (\n            <span style={{ textTransform: \"capitalize\" }}>\n              {message.receiverStatus.toLowerCase()}\n            </span>\n          ) : null}\n        </div>\n      </BubbleTimeline>\n    </Wrapper>\n  );\n};\n\nexport default Bubble;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setPersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setOpenPopupNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setNewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setPostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/toggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenPopupNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/ToggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/ReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/SentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/Friends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js",["982","983"],"import { client, restartWebsocketConnection, closeWebsocketConnection } from \"../../apollo/client\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport {\n  User,\n  Posts,\n  Notifications,\n  NewNotifications,\n  CountNumberNotificationsUnseen,  \n  CurrentChat,\n  Friends,\n  MessagesStorage\n} from \"../../apollo/models\";\nconst clearCache = () => {\n  const {\n    setCurrentUser,\n    setCountNumberNotificationsUnseen,\n    setNotifications,\n    setNewNotifications,\n    setPosts,      \n    clearCurrentChat ,\n    setFriends,\n    clearMessageStorage\n  } = cacheMutations;\n  setCurrentUser(User);\n  setCountNumberNotificationsUnseen(CountNumberNotificationsUnseen);\n  setPosts(Posts);\n  setNotifications(Notifications);\n  setNewNotifications(NewNotifications);  \n  clearCurrentChat();\n  setFriends(Friends);\n  clearMessageStorage();\n}\n\nconst logout = async () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"tokenExpire\");    \n  clearCache();\n  await client.resetStore();   \n  closeWebsocketConnection() \n};\n\nconst login = async (user, token, tokenExpire) => {\n  await logout();  \n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\n    \"tokenExpire\",\n    new Date(Date.now() + tokenExpire * 1000)\n  );  \n  const {setCurrentUser} = cacheMutations  \n  setCurrentUser({...user})  \n  restartWebsocketConnection()\n};\n\nexport { logout, login };\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx",["984"],"import React, {useState, useRef, useEffect} from \"react\";\nimport { FriendsListWrapper, TitleContacts, FriendsListSearch, FriendsListTitle } from \"./Sidebar.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport FriendItem from \"./FriendItem\";\nimport {Scrollbars} from \"react-custom-scrollbars\"\nimport useLanguage from \"../Global/useLanguage\" \nimport {FaSearch} from \"react-icons/fa\"\n\nconst FriendsList = ({ show }) => {\n  const { colorMode } = useThemeUI();\n  const [openSearch, setOpenSearch] = useState(false)\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-and-network\" });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-and-network\" });\n  const inputRef = useRef(null)\n  const {i18n, lang} = useLanguage()\n\n  useEffect(() => {\n          \n    if(openSearch){\n      inputRef.current.focus();\n    }\n  },[openSearch])\n  const onClickSearchButton = () => {\n    inputRef.current.focus();\n    setOpenSearch(true);\n   \n  }\n  if (!friends.length) return null;\n  return (\n    <Scrollbars\n      autoHide\n      autoHideTimeout={1000}\n      autoHideDuration={200}\n      autoHeightMin={0}\n      autoHeightMax={200}            \n    >          \n      <FriendsListWrapper show={show} theme={colorMode}>\n        <TitleContacts>\n          <FriendsListTitle hide={openSearch}>{i18n.store.data[lang].translation.contacts.contactsList}</FriendsListTitle>\n          <FriendsListSearch show={openSearch} theme={colorMode}>\n            <input ref={inputRef} type=\"text\" placeholder={i18n.store.data[lang].translation.controls.search} onBlur={() => setOpenSearch(false)} />\n            <button onClick={onClickSearchButton}><FaSearch/></button>\n          </FriendsListSearch>\n        </TitleContacts>\n        {friends.map((friend) => (\n          <FriendItem key={friend._id} data={friend} />\n        ))}        \n      </FriendsListWrapper>\n    </Scrollbars>\n  );\n};\n\nexport default FriendsList;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx",["985","986"],"import React, { useState, useEffect } from \"react\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport styled from \"styled-components\";\nimport ButtonLogin from \"../Controls/ButtonLogin\"\nimport ButtonSignUp from \"../Controls/ButtonSignUp\"\nimport {useLocation} from \"react-router-dom\"\nconst CardUtility = () => {\n  const [welcome, setWelcome] = useState(\"\");\n  const [introduce, setIntroduce] = useState(\"\");\n  const [askLogin, setAskLogin] = useState(\"\");\n  const { colorMode } = useThemeUI();\n  const { lang, i18n } = useLanguage();\n  const {pathname} = useLocation()\n \n  useEffect(() => {\n    setWelcome(i18n.store.data[lang].translation.greeting.welcome);\n    setIntroduce(i18n.store.data[lang].translation.greeting.introduce);\n    setAskLogin(i18n.store.data[lang].translation.greeting.askLogin);\n  }, [lang]);\n\n  return <CardWrapper theme={colorMode}>\n    <Welcome>{welcome}</Welcome>\n    <div>{introduce}</div>   \n    <div className=\"auth\">\n      <ButtonLogin to=\"/auth\" from={pathname}>Login</ButtonLogin>\n      <ButtonSignUp to=\"/auth/signup\" from={pathname}>SignUp</ButtonSignUp>\n    </div>\n  </CardWrapper>;\n};\n\nconst CardWrapper = styled.aside`\n  background-color: ${({ theme }) =>\n    theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  text-align: center;\n  border-radius: 0.7rem;\n  overflow: hidden;\n  padding: 1.5rem;\n  .auth{\n    &> *{\n      margin : 1rem 0;\n    }\n  }\n`;\n\nconst Welcome = styled.h4`\n  font-size : 1.1em;\n  font-weight : 600;\n`\n\n\n\nexport default CardUtility;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx",["987"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Brand from \"./Brand\";\nimport Search from \"./Search\";\nimport Navigation from \"./Navigation\";\nimport MessengerAndNotification from \"./MessengerAndNotification\";\nimport SettingAccount from \"./SettingAccount\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport ButtonMenu from \"../Controls/ButtonMenu\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport classNames from \"classnames\";\nimport { GET_CURRENT_USER } from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport { useLocation } from \"react-router-dom\";\nimport { useThemeUI } from \"theme-ui\";\nimport ButtonLogin from \"../Controls/ButtonLogin\";\nimport ButtonSignUp from \"../Controls/ButtonSignUp\";\nconst Header = () => {\n  const [openSearch, setOpenSearch] = useState(false);\n  const {\n    data: { user },\n    loading,\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-only\",\n  });  \n  const { colorMode } = useThemeUI();\n  const { pathname } = useLocation();\n\n  const { toggleButtonMenu } = cacheMutations;\n  \n  const NavControls = user ? (\n    <div className=\"nav-controls\">\n      <div className=\"center\">\n        <div className=\"nav-toggle\">\n          <ButtonMenu onClick={toggleButtonMenu} />\n        </div>\n        <div className=\"nav-bar\">\n          <Navigation />\n        </div>\n\n        <div className=\"control\">\n          <MessengerAndNotification />\n        </div>\n      </div>\n      <div className=\"setting-account\">\n        <SettingAccount />\n      </div>\n    </div>\n  ) : (\n    <div className=\"nav-controls\">\n      <div className=\"nav-auth\">\n        <ButtonLogin to=\"/auth\" from={pathname}>\n          Login\n        </ButtonLogin>\n        <ButtonSignUp to=\"/auth/signup\" from={pathname}>\n          Sign up\n        </ButtonSignUp>\n        <div className=\"setting-account\">\n          <SettingAccount />\n        </div>\n      </div>\n    </div>\n  );\n  if (loading) return <div>Loading...</div>;\n  return (\n    <Wrapper theme={colorMode}>\n      <div className={classNames(\"nav-header\", { shorten: !openSearch })}>\n        <div className={classNames(\"nav-brand\", { hide: openSearch })}>\n          <Brand />\n        </div>\n        <div\n          className={classNames(\n            \"close-search\",\n            { \"on-search-open\": !openSearch },\n            { hide: !openSearch }\n          )}\n        >\n          <Button onClick={() => setOpenSearch(false)} variant=\"outlined\">\n            <FaArrowLeft />\n          </Button>\n        </div>\n        <div className={classNames(\"search-bar\")}>\n          <Search\n            openSearch={openSearch}\n            setOpenSearch={() => setOpenSearch(true)}\n          />\n        </div>\n      </div>\n      {NavControls}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.header`\n  width: 100vw;\n  height: 60px;\n  background-color: ${({ theme }) =>\n    theme === \"dark\"\n      ? \"var(--color-background-dark)\"\n      : \"var(--color-background-default)\"};\n  border-bottom: 1px solid\n    ${({ theme }) => (theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-light)\")};\n  position: fixed;\n  top: 0;\n  padding: 0 0.4rem;\n  display: flex;\n  align-items: center;\n  flex-wrap: no-wrap;\n  z-index: 100;\n  .nav-header {\n    display: flex;\n    align-items: center;\n    transition: var(--mainTransition);\n    flex-wrap: nowrap;\n    .nav-brand,\n    .on-search-open {\n      width: 60px;\n      transition: var(--mainTransition);\n    }\n    .search-bar {\n      width: calc(100% - 60px);\n      transition: var(--mainTransition);\n    }\n    .nav-brand {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .nav-controls {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: var(--mainTransition);\n    height: 100%;\n    padding: 0 1.5rem;\n    .nav-bar {\n      display: none;\n    }\n    .center {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: space-between;\n      flex: 1;\n      padding: 0 0.5rem;\n    }\n    .nav-toggle {\n      margin-right: 0.75rem;\n    }\n    .nav-auth {\n      width: 100%;\n      display: flex;\n      justify-content: flex-end;\n      & > * {\n        font-size: 0.8em;\n        margin-right: 0.25rem;\n      }\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .hide {\n      width: 0 !important;\n      opacity: 0;\n      visibility: hidden;\n      transition: var(--mainTransition);\n      transition-delay: 0.5s;\n    }\n    .shorten {\n      width: auto !important;\n      transition: var(--mainTransition);\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding: 0 2rem;\n    .close-search {\n      display: none;\n    }\n    .nav-header {\n      width: 30%;\n    }\n    .nav-controls {\n      width: 70%;\n      .nav-bar {\n        display: block;\n        height: 100%;\n      }\n      .center {\n        justify-content: flex-end;\n      }\n      .control {\n        padding: 0 0.5rem;\n      }\n    }\n  }\n  @media screen and (min-width: 992px) {\n    .nav-header {\n      width: 35%;\n    }\n    .nav-controls {\n      width: 65%;\n      .nav-toggle {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport default React.memo(Header);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersReceivedRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersSentRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchListContact.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/login.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/removeFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/cancelRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/rejectRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/postCreated.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/updateCountNotificationsWhenSeen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyReceivedRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyAcceptRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx",["988","989"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/updateUserHasSeenNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/FlashPopUpNotification.jsx",["990"],"import React, {useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\"\nconst FlashPopUpNotification = () => {\n  const [notification, setNotification] = useState(\"\")\n  \n  const { colorMode } = useThemeUI();\n  const {i18n, lang} = useLanguage()\n\n  useEffect(() => {\n    setNotification(i18n.store.data[lang].translation.notifications.message);\n  },[lang])\n\n  return <PopupWrapper theme={colorMode}>\n    {notification}\n    </PopupWrapper>;\n};\n\nconst PopupWrapper = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) =>\n    theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--white)\"};\n  border-radius: 0.5rem;\n  box-shadow: var(--mediumShadow);\n  font-size: 0.9rem;\n  padding: 1rem 2rem;  \n`;\n\nexport default FlashPopUpNotification;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx",[],["991","992"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setInitialMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useChatSubscriptions.jsx",["993","994"],"import { useEffect } from \"react\";\nimport chatSubscriptions from \"../../apollo/operations/subscriptions/chat\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../../apollo/operations/queries/chat/fetchChatConversations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_CHAT,\n} from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE } from \"../../apollo/operations/mutations/chat\";\n\nconst useChatSubscriptions = () => {\n  const { subscribeToMore: subscribeChatMessage } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const {\n    SENT_MESSAGE_CHAT_SUBSCRIPTION,\n    NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n    SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n  } = chatSubscriptions;\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-only\" });\n  const {\n    setMessagesStorage,\n    updateMessagesStorage,\n    updateMessagesStorageWhenReceiverSeenAllMessages,\n  } = cacheMutations;\n  const [updatePersonalReceiverWhenReceivedNewMessage] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE\n  );\n  useEffect(() => {\n    let unsubscribeChatMessage;\n    let unsubscribeNotifySenderThatReceiverHasReceivedMessage;\n    let unsubscribeSubscribeReceiverHasSeenAllMessages;\n    if (subscribeChatMessage && user) {      \n      unsubscribeChatMessage = subscribeChatMessage({\n        document: SENT_MESSAGE_CHAT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            action,\n            scope,\n            message,\n          } = subscriptionData.data.sentMessageChatSubscription;\n          const { sender } = message;\n          setMessagesStorage(sender, message, scope, false);\n          //update Delivered status\n          const messageStatus =\n            currentChat?._id === sender._id ? \"SEEN\" : \"DELIVERED\";\n          updatePersonalReceiverWhenReceivedNewMessage({\n            variables: { messageId: message._id, messageStatus },\n          });\n        },\n      });\n      unsubscribeNotifySenderThatReceiverHasReceivedMessage = subscribeChatMessage(\n        {\n          document: NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const {\n              action,\n              scope,\n              message,\n            } = subscriptionData.data.notifySenderThatReceiverHasReceivedMessageChat;\n            const { receiver } = message;\n            updateMessagesStorage(receiver, message, scope, action === \"SEEN\");\n          },\n        }\n      );\n      unsubscribeSubscribeReceiverHasSeenAllMessages = subscribeChatMessage({\n        document: SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            receiverId,\n          } = subscriptionData.data.senderSubscribeWhenReceiverHasSeenAllMessages;\n          updateMessagesStorageWhenReceiverSeenAllMessages(receiverId);\n        },\n      });\n    }\n    return () => {\n      if (unsubscribeChatMessage) {\n        unsubscribeChatMessage();      \n      }\n      if (unsubscribeNotifySenderThatReceiverHasReceivedMessage) {\n        unsubscribeNotifySenderThatReceiverHasReceivedMessage();\n      }\n      if (unsubscribeSubscribeReceiverHasSeenAllMessages) {\n        unsubscribeSubscribeReceiverHasSeenAllMessages();\n      }\n    };\n  }, [subscribeChatMessage, user, currentChat]);\n};\n\nexport default useChatSubscriptions;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/updateMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatFile.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/updateMessagesStorageWhenReceiverSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/updateHaveSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatText.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverWhenReceivedNewMessage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx",["995","996","997","998"],"import React, { useState, useEffect, createContext, useRef } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport { GET_CURRENT_USER } from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport ListConversations from \"./ListConversations\";\nimport { useThemeUI } from \"theme-ui\";\nimport ChatBoard from \"./ChatBoard\";\n\nexport const MessagesContext = createContext({});\nconst Conversations = () => {\n  //query\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n\n  //state\n  const [showPopup, setShowPopup] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [originalData, setOriginalData] = useState([]);\n\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const { colorMode } = useThemeUI();\n  const popupRef = useRef(null);\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-messages-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n\n  if (!user) return null;\n  return (\n    <MessagesContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top}\n      >\n        <span>Pin this conversation</span>\n        <hr />\n        <span>Label</span>\n        <hr />\n        <span>Add to group</span>\n        <span>Turn notification off</span>\n        <hr />\n        <span>Delete conversation</span>\n        <hr />\n        <span>Report</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search />\n          <hr />\n          <ListConversations />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </MessagesContext.Provider>\n  );\n};\n\nexport default Conversations;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx",["999","1000"],"import React, { useState, useEffect } from \"react\";\nimport { HeadingCharacter, Wrapper } from \"./styles/ListContacts.styles\";\nimport ContactItem from \"./ContactItem\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport { useQuery } from \"@apollo/client\";\nimport { FETCH_FRIENDS } from \"../../apollo/operations/queries/user/fetchFriends\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nconst ListContacts = ({ data }) => {\n  const { setShowPopup } = usePopupContactActions();\n  const [loadContactMore, setLoadContactMore] = useState(false);\n  const { refetch: fetchMoreContacts } = useQuery(FETCH_FRIENDS, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const { setFriends } = cacheMutations;\n  const onScrollListContacts = (e) => {\n    e.preventDefault();\n    const { clientHeight, scrollHeight, scrollTop } = e.target;\n    if (clientHeight + scrollTop > scrollHeight * 0.75) {\n      setLoadContactMore(true);\n    }\n  };\n\n  useEffect(() => {\n    if (loadContactMore) {\n      const skip = data.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchMoreContacts({ skip, limit }).then(({ data: { fetchFriends } }) => {\n        setFriends([...data, ...fetchFriends]);\n        setLoadContactMore(false);\n      });\n    }\n  }, [loadContactMore]);\n\n  if (!data.length) return null;\n  return (\n    <Wrapper\n      onScroll={() => setShowPopup(false)}\n      onScrollCapture={onScrollListContacts}\n    >\n      {data.map((friend) => (\n        <ContactItem key={`contact-${friend._id}`} friend={friend} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(ListContacts);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx",["1001"],"import React, { useEffect, useState } from \"react\";\nimport { ListConversationsWrapper } from \"./styles/ListConversations.styles\";\nimport {\n  GET_MESSAGES_STORAGE,\n  GET_CURRENT_CHAT,  \n  GET_CURRENT_USER,\n  GET_NUMBER_OF_CONVERSATIONS\n} from \"../../apollo/operations/queries/cache\";\nimport ConversationItem from \"./ConversationItem\";\nimport _ from \"lodash\";\nimport { usePopupMessagesActions } from \"./hook/usePopupActions\";\nimport {FETCH_CHAT_CONVERSATIONS} from \"../../apollo/operations/queries/chat/fetchChatConversations\"\nimport {useQuery, useMutation} from \"@apollo/client\";\nimport {UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED} from \"../../apollo/operations/mutations/chat\"\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nconst ListConversations = () => {\n  //use Query  \n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-only\" });\n    const {data: { numberOfConversations }\n  } = useQuery(GET_NUMBER_OF_CONVERSATIONS, { fetchPolicy: \"cache-only\" });\n  const {refetch : fetchMoreConversations} = useQuery(FETCH_CHAT_CONVERSATIONS, {fetchPolicy: \"cache-and-network\", skip : true})\n  //use State\n  const [_messagesStorage, _setMessagesStorage] = useState([]);\n  const [loadMoreConversations, setLoadMoreConversations] = useState(false);\n  const [updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched] = useMutation(UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED)\n  const {setInitialMessagesStorage} = cacheMutations;\n  const { setShowPopup } = usePopupMessagesActions();   \n  useEffect(() => {    \n    const _convertStorageToArray = Object.values(messagesStorage);   \n    const _sortedByLatestMessages = _.sortBy(_convertStorageToArray,[function(o) { return -o.latestMessage.createdAt; }])    \n    _setMessagesStorage([..._sortedByLatestMessages])    \n  }, [messagesStorage])\n \n  const onScrollListConversations = e => {\n    setShowPopup(false);\n    const {scrollHeight, scrollTop, clientHeight} = e.target;    \n    if(scrollTop + clientHeight > scrollHeight * 0.7 && scrollTop + clientHeight < scrollHeight * 0.7 + 40){\n      if(!loadMoreConversations){\n        setLoadMoreConversations(true); \n      }      \n    }\n  }  \n  \n  useEffect(() => {\n    let _isMounted = true;   \n    if(loadMoreConversations && user && numberOfConversations > _messagesStorage.length ){           \n      const skip = _messagesStorage.length ; \n      const limit = +process.env.REACT_APP_NUMBER_CONVERSATIONS_LIMITATION; \n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchMoreConversations({skip, limit}).then(({ data }) => {\n        if (_isMounted) {          \n          const { conversations } = data.fetchChatConversations;\n          let storage = {};          \n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });          \n          setInitialMessagesStorage({ ...messagesStorage,...storage });\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setLoadMoreConversations(false);\n        }\n      });\n    }\n  },[loadMoreConversations,user])\n  \n  return (\n    <ListConversationsWrapper onScroll={onScrollListConversations} >\n      {_messagesStorage.length ? _messagesStorage.map(({ profile, scope, latestMessage, hasSeenLatestMessage }) => (\n        <ConversationItem\n          key={profile._id}\n          conversation={profile}  \n          scope={scope}                \n          hasSeenLatestMessage={hasSeenLatestMessage}\n          latestMessage={latestMessage}          \n          active={currentChat && currentChat._id === profile._id}\n        />\n      )) : null}\n    </ListConversationsWrapper>\n  );\n};\n\nexport default React.memo(ListConversations);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/clearMessageStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/clearCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/updateHasSeenLatestMessage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/getNumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/setNumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/updateMoreMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx",["1002","1003","1004","1005","1006"],"import React, {useState} from 'react'\nimport FriendsList from \"./FriendsList\"\nimport ButtonToggleFriendsList from \"../Controls/ButtonToggleFriendsList\"\nimport {FriendsBoardWrapper} from \"./Sidebar.styles\"\nimport {cacheMutations} from \"../../apollo/operations/mutations/cache\"\nimport {GET_OPEN_FRIENDS_LIST,GET_FRIENDS} from \"../../apollo/operations/queries/cache\"\nimport {FETCH_FRIENDS} from \"../../apollo/operations/queries/user\"\nimport {useQuery} from \"@apollo/client\"\nimport {useThemeUI} from \"theme-ui\"\nconst FriendsBoard = () => {\n  const {data : {openFriendsList}} = useQuery(GET_OPEN_FRIENDS_LIST, {fetchPolicy : \"cache-first\"})\n  return (\n    <FriendsBoardWrapper show={openFriendsList}>\n      <FriendsList show={openFriendsList} />\n      <ButtonToggleFriendsList />\n    </FriendsBoardWrapper>\n  )\n}\n\nexport default FriendsBoard\n",{"ruleId":"1007","replacedBy":"1008"},{"ruleId":"1009","replacedBy":"1010"},{"ruleId":"1011","severity":1,"message":"1012","line":10,"column":8,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":10},{"ruleId":"1015","severity":1,"message":"1016","line":58,"column":5,"nodeType":"1017","endLine":58,"endColumn":7,"suggestions":"1018"},{"ruleId":"1019","severity":1,"message":"1020","line":15,"column":12,"nodeType":"1021","endLine":15,"endColumn":70},{"ruleId":"1015","severity":1,"message":"1022","line":87,"column":33,"nodeType":"1013","endLine":87,"endColumn":44},{"ruleId":"1015","severity":1,"message":"1023","line":58,"column":6,"nodeType":"1017","endLine":58,"endColumn":98,"suggestions":"1024"},{"ruleId":"1015","severity":1,"message":"1025","line":61,"column":6,"nodeType":"1017","endLine":61,"endColumn":24,"suggestions":"1026"},{"ruleId":"1015","severity":1,"message":"1027","line":78,"column":6,"nodeType":"1017","endLine":78,"endColumn":33,"suggestions":"1028"},{"ruleId":"1015","severity":1,"message":"1029","line":107,"column":6,"nodeType":"1017","endLine":107,"endColumn":19,"suggestions":"1030"},{"ruleId":"1011","severity":1,"message":"1031","line":1,"column":34,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":42},{"ruleId":"1015","severity":1,"message":"1032","line":87,"column":6,"nodeType":"1017","endLine":87,"endColumn":8,"suggestions":"1033"},{"ruleId":"1015","severity":1,"message":"1034","line":185,"column":6,"nodeType":"1017","endLine":191,"endColumn":4,"suggestions":"1035"},{"ruleId":"1015","severity":1,"message":"1036","line":199,"column":6,"nodeType":"1017","endLine":199,"endColumn":29,"suggestions":"1037"},{"ruleId":"1011","severity":1,"message":"1038","line":22,"column":9,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":23},{"ruleId":"1015","severity":1,"message":"1039","line":35,"column":6,"nodeType":"1017","endLine":35,"endColumn":12,"suggestions":"1040"},{"ruleId":"1011","severity":1,"message":"1041","line":17,"column":13,"nodeType":"1013","messageId":"1014","endLine":17,"endColumn":17},{"ruleId":"1015","severity":1,"message":"1042","line":75,"column":6,"nodeType":"1017","endLine":75,"endColumn":71,"suggestions":"1043"},{"ruleId":"1011","severity":1,"message":"1044","line":1,"column":17,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1045","line":57,"column":13,"nodeType":"1013","messageId":"1014","endLine":57,"endColumn":21},{"ruleId":"1015","severity":1,"message":"1046","line":72,"column":6,"nodeType":"1017","endLine":72,"endColumn":56,"suggestions":"1047"},{"ruleId":"1011","severity":1,"message":"1048","line":31,"column":45,"nodeType":"1013","messageId":"1014","endLine":31,"endColumn":61},{"ruleId":"1015","severity":1,"message":"1049","line":71,"column":6,"nodeType":"1017","endLine":71,"endColumn":15,"suggestions":"1050"},{"ruleId":"1015","severity":1,"message":"1051","line":85,"column":6,"nodeType":"1017","endLine":85,"endColumn":23,"suggestions":"1052"},{"ruleId":"1015","severity":1,"message":"1053","line":92,"column":6,"nodeType":"1017","endLine":92,"endColumn":15,"suggestions":"1054"},{"ruleId":"1011","severity":1,"message":"1041","line":7,"column":18,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1044","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1055","line":13,"column":37,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":56},{"ruleId":"1011","severity":1,"message":"1056","line":16,"column":8,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":21},{"ruleId":"1007","replacedBy":"1057"},{"ruleId":"1009","replacedBy":"1058"},{"ruleId":"1011","severity":1,"message":"1059","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1041","line":18,"column":18,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1060","line":19,"column":18,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":37},{"ruleId":"1011","severity":1,"message":"1061","line":5,"column":32,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":40},{"ruleId":"1015","severity":1,"message":"1062","line":168,"column":6,"nodeType":"1017","endLine":168,"endColumn":27,"suggestions":"1063"},{"ruleId":"1015","severity":1,"message":"1064","line":202,"column":49,"nodeType":"1013","endLine":202,"endColumn":56},{"ruleId":"1019","severity":1,"message":"1020","line":77,"column":16,"nodeType":"1021","endLine":77,"endColumn":74},{"ruleId":"1015","severity":1,"message":"1065","line":75,"column":5,"nodeType":"1017","endLine":75,"endColumn":62,"suggestions":"1066"},{"ruleId":"1011","severity":1,"message":"1067","line":1,"column":27,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":37},{"ruleId":"1011","severity":1,"message":"1068","line":1,"column":39,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":45},{"ruleId":"1011","severity":1,"message":"1069","line":1,"column":17,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1070","line":1,"column":17,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1071","line":21,"column":10,"nodeType":"1013","messageId":"1014","endLine":21,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1072","line":22,"column":10,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1073","line":9,"column":3,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1074","line":11,"column":3,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1041","line":18,"column":13,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1075","line":11,"column":10,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":18},{"ruleId":"1015","severity":1,"message":"1039","line":20,"column":6,"nodeType":"1017","endLine":20,"endColumn":12,"suggestions":"1076"},{"ruleId":"1011","severity":1,"message":"1044","line":1,"column":27,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":36},{"ruleId":"1015","severity":1,"message":"1022","line":66,"column":35,"nodeType":"1013","endLine":66,"endColumn":46},{"ruleId":"1015","severity":1,"message":"1077","line":107,"column":6,"nodeType":"1017","endLine":107,"endColumn":32,"suggestions":"1078"},{"ruleId":"1015","severity":1,"message":"1039","line":13,"column":5,"nodeType":"1017","endLine":13,"endColumn":11,"suggestions":"1079"},{"ruleId":"1007","replacedBy":"1080"},{"ruleId":"1009","replacedBy":"1081"},{"ruleId":"1011","severity":1,"message":"1082","line":49,"column":13,"nodeType":"1013","messageId":"1014","endLine":49,"endColumn":19},{"ruleId":"1015","severity":1,"message":"1083","line":100,"column":6,"nodeType":"1017","endLine":100,"endColumn":47,"suggestions":"1084"},{"ruleId":"1011","severity":1,"message":"1085","line":24,"column":10,"nodeType":"1013","messageId":"1014","endLine":24,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1086","line":24,"column":18,"nodeType":"1013","messageId":"1014","endLine":24,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1087","line":25,"column":10,"nodeType":"1013","messageId":"1014","endLine":25,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1088","line":25,"column":24,"nodeType":"1013","messageId":"1014","endLine":25,"endColumn":39},{"ruleId":"1011","severity":1,"message":"1089","line":2,"column":10,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":26},{"ruleId":"1015","severity":1,"message":"1090","line":33,"column":6,"nodeType":"1017","endLine":33,"endColumn":23,"suggestions":"1091"},{"ruleId":"1015","severity":1,"message":"1092","line":88,"column":5,"nodeType":"1017","endLine":88,"endColumn":33,"suggestions":"1093"},{"ruleId":"1011","severity":1,"message":"1031","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1038","line":5,"column":9,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1094","line":6,"column":31,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1095","line":7,"column":9,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1096","line":9,"column":9,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":19},"no-native-reassign",["1097"],"no-negated-in-lhs",["1098"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCurrentUser', 'fetchFriends', 'fetchNotifications', 'setCurrentUser', 'setFriends', and 'setNotifications'. Either include them or remove the dependency array.","ArrayExpression",["1099"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'setNotifications'. Either include it or remove the dependency array.",["1100"],"React Hook useEffect has missing dependencies: 'personalPosts', 'setCurrentPersonalUser', and 'setPersonalPosts'. Either include them or remove the dependency array.",["1101"],"React Hook useEffect has missing dependencies: 'fetchListContact', 'friends.length', 'setFriends', 'setReceivedRequestsToAddFriend', and 'setSentRequestsToAddFriend'. Either include them or remove the dependency array.",["1102"],"React Hook useEffect has missing dependencies: 'fetchFriends', 'friends', and 'setFriends'. Either include them or remove the dependency array.",["1103"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchChatConversations', 'messagesStorage', 'setInitialMessagesStorage', 'setNumberOfConversations', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user'. Either include them or remove the dependency array.",["1104"],"React Hook useEffect has missing dependencies: 'setReceivedRequestsToAddFriend' and 'updatedNotifications'. Either include them or remove the dependency array.",["1105"],"React Hook useEffect has a missing dependency: 'setOpenPopupNotification'. Either include it or remove the dependency array.",["1106"],"'cacheMutations' is defined but never used.","React Hook useEffect has a missing dependency: 'i18n.store.data'. Either include it or remove the dependency array.",["1107"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setPersonalPosts'. Either include it or remove the dependency array.",["1108"],"'useEffect' is defined but never used.","'receiver' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setReceivedRequestsToAddFriend'. Either include it or remove the dependency array.",["1109"],"'fetchMoreFriends' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchFriends' and 'setFriends'. Either include them or remove the dependency array.",["1110"],"React Hook useEffect has a missing dependency: 'originData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setContactData' needs the current value of 'originData'.",["1111"],"React Hook useEffect has a missing dependency: 'originData.length'. Either include it or remove the dependency array.",["1112"],"'BsThreeDotsVertical' is defined but never used.","'subscriptions' is defined but never used.",["1097"],["1098"],"'createRef' is defined but never used.","'currentPersonalUser' is assigned a value but never used.","'FaRocket' is defined but never used.","React Hook useEffect has missing dependencies: 'receivedRequestsToAddFriend', 'setReceivedRequestsToAddFriend', and 'updateSubscriptionOnChange'. Either include them or remove the dependency array.",["1113"],"The ref value 'responseRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'responseRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'currentChat._id', 'currentChat.scope', 'fetchMoreMessages', and 'messagesStorage'. Either include them or remove the dependency array.",["1114"],"'useContext' is defined but never used.","'useRef' is defined but never used.","'css' is defined but never used.","'useCallback' is defined but never used.","'GET_CURRENT_USER' is defined but never used.","'useQuery' is defined but never used.","'CurrentChat' is defined but never used.","'MessagesStorage' is defined but never used.","'askLogin' is assigned a value but never used.",["1115"],"React Hook useEffect has missing dependencies: 'fetchNotifications', 'notifications', and 'setNotifications'. Either include them or remove the dependency array.",["1116"],["1117"],["1097"],["1098"],"'action' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT', 'SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES', 'SENT_MESSAGE_CHAT_SUBSCRIPTION', 'setMessagesStorage', 'updateMessagesStorage', 'updateMessagesStorageWhenReceiverSeenAllMessages', and 'updatePersonalReceiverWhenReceivedNewMessage'. Either include them or remove the dependency array.",["1118"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'originalData' is assigned a value but never used.","'setOriginalData' is assigned a value but never used.","'HeadingCharacter' is defined but never used.","React Hook useEffect has missing dependencies: 'data', 'fetchMoreContacts', and 'setFriends'. Either include them or remove the dependency array.",["1119"],"React Hook useEffect has missing dependencies: '_messagesStorage.length', 'fetchMoreConversations', 'messagesStorage', 'numberOfConversations', 'setInitialMessagesStorage', and 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched'. Either include them or remove the dependency array.",["1120"],"'GET_FRIENDS' is defined but never used.","'FETCH_FRIENDS' is defined but never used.","'useThemeUI' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1121","fix":"1122"},{"desc":"1123","fix":"1124"},{"desc":"1125","fix":"1126"},{"desc":"1127","fix":"1128"},{"desc":"1129","fix":"1130"},{"desc":"1131","fix":"1132"},{"desc":"1133","fix":"1134"},{"desc":"1135","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1139","fix":"1140"},{"desc":"1141","fix":"1142"},{"desc":"1143","fix":"1144"},{"desc":"1145","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1137","fix":"1153"},{"desc":"1154","fix":"1155"},{"desc":"1137","fix":"1156"},{"desc":"1157","fix":"1158"},{"desc":"1159","fix":"1160"},{"desc":"1161","fix":"1162"},"Update the dependencies array to be: [fetchCurrentUser, fetchFriends, fetchNotifications, setCurrentUser, setFriends, setNotifications]",{"range":"1163","text":"1164"},"Update the dependencies array to be: [user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore, setNotifications]",{"range":"1165","text":"1166"},"Update the dependencies array to be: [personalPosts, personalUserData, setCurrentPersonalUser, setPersonalPosts]",{"range":"1167","text":"1168"},"Update the dependencies array to be: [user, fetched, setFetched, fetchListContact, friends.length, setSentRequestsToAddFriend, setReceivedRequestsToAddFriend, setFriends]",{"range":"1169","text":"1170"},"Update the dependencies array to be: [fetchFriends, friends, loadingMore, setFriends]",{"range":"1171","text":"1172"},"Update the dependencies array to be: [fetchChatConversations, messagesStorage, setInitialMessagesStorage, setNumberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",{"range":"1173","text":"1174"},"Update the dependencies array to be: [countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedNotifications, setReceivedRequestsToAddFriend]",{"range":"1175","text":"1176"},"Update the dependencies array to be: [openPopupNotification, setOpenPopupNotification]",{"range":"1177","text":"1178"},"Update the dependencies array to be: [i18n.store.data, lang]",{"range":"1179","text":"1180"},"Update the dependencies array to be: [loadingMore, currentPersonalUser, personalPosts, fetchMorePosts, setPersonalPosts]",{"range":"1181","text":"1182"},"Update the dependencies array to be: [subscribeUser, user, receivedRequestsToAddFriend, setReceivedRequestsToAddFriend]",{"range":"1183","text":"1184"},"Update the dependencies array to be: [fetchFriends, friends, setFriends]",{"range":"1185","text":"1186"},"Update the dependencies array to be: [search, friends, originData]",{"range":"1187","text":"1188"},"Update the dependencies array to be: [friends, originData.length]",{"range":"1189","text":"1190"},"Update the dependencies array to be: [receivedRequestsToAddFriend, setReceivedRequestsToAddFriend, subscribeUser, updateSubscriptionOnChange, user]",{"range":"1191","text":"1192"},"Update the dependencies array to be: [currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, setLoadMoreMessages, updateMoreMessages]",{"range":"1193","text":"1194"},{"range":"1195","text":"1180"},"Update the dependencies array to be: [fetchNotifications, loadingNotificationsMore, notifications, setNotifications]",{"range":"1196","text":"1197"},{"range":"1198","text":"1180"},"Update the dependencies array to be: [subscribeChatMessage, user, currentChat, SENT_MESSAGE_CHAT_SUBSCRIPTION, NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT, SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages]",{"range":"1199","text":"1200"},"Update the dependencies array to be: [data, fetchMoreContacts, loadContactMore, setFriends]",{"range":"1201","text":"1202"},"Update the dependencies array to be: [_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",{"range":"1203","text":"1204"},[2540,2542],"[fetchCurrentUser, fetchFriends, fetchNotifications, setCurrentUser, setFriends, setNotifications]",[2055,2147],"[user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore, setNotifications]",[1956,1974],"[personalPosts, personalUserData, setCurrentPersonalUser, setPersonalPosts]",[2341,2368],"[user, fetched, setFetched, fetchListContact, friends.length, setSentRequestsToAddFriend, setReceivedRequestsToAddFriend, setFriends]",[3239,3252],"[fetchFriends, friends, loadingMore, setFriends]",[3189,3191],"[fetchChatConversations, messagesStorage, setInitialMessagesStorage, setNumberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",[6061,6198],"[countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedNotifications, setReceivedRequestsToAddFriend]",[6368,6391],"[openPopupNotification, setOpenPopupNotification]",[1168,1174],"[i18n.store.data, lang]",[2416,2481],"[loadingMore, currentPersonalUser, personalPosts, fetchMorePosts, setPersonalPosts]",[2300,2350],"[subscribeUser, user, receivedRequestsToAddFriend, setReceivedRequestsToAddFriend]",[2136,2145],"[fetchFriends, friends, setFriends]",[2498,2515],"[search, friends, originData]",[2673,2682],"[friends, originData.length]",[5785,5806],"[receivedRequestsToAddFriend, setReceivedRequestsToAddFriend, subscribeUser, updateSubscriptionOnChange, user]",[2660,2717],"[currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, setLoadMoreMessages, updateMoreMessages]",[849,855],[3745,3771],"[fetchNotifications, loadingNotificationsMore, notifications, setNotifications]",[452,458],[3806,3847],"[subscribeChatMessage, user, currentChat, SENT_MESSAGE_CHAT_SUBSCRIPTION, NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT, SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages]",[1309,1326],"[data, fetchMoreContacts, loadContactMore, setFriends]",[4010,4038],"[_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]"]