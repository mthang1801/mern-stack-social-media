[{"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js":"1","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js":"2","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js":"3","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js":"4","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js":"5","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js":"6","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js":"7","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js":"8","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js":"9","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js":"10","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js":"11","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js":"12","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js":"13","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js":"14","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx":"15","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx":"16","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js":"17","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/index.js":"18","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js":"19","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx":"20","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx":"21","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx":"22","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx":"23","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx":"24","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx":"25","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx":"26","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx":"27","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx":"28","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx":"29","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx":"30","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx":"31","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx":"32","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx":"33","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx":"34","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx":"35","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx":"36","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js":"37","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js":"38","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js":"39","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js":"40","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/index.js":"41","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/index.js":"42","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx":"43","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx":"44","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx":"45","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx":"46","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js":"47","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx":"48","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx":"49","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx":"50","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.styles.jsx":"51","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx":"52","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchCountNumberNotificationsUnseen.js":"53","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchNotifications.js":"54","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchPosts.js":"55","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js":"56","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js":"57","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx":"58","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx":"59","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.styles.jsx":"60","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js":"61","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js":"62","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx":"63","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.styles.jsx":"64","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx":"65","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx":"66","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.styles.jsx":"67","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx":"68","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx":"69","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx":"70","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx":"71","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx":"72","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx":"73","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx":"74","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/index.js":"75","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/signup.js":"76","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/acceptRequestToAddFriend.js":"77","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/removeFriend.js":"78","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/unFollowUser.js":"79","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/followUser.js":"80","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/cancelRequestToAddFriend.js":"81","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/rejectRequestToAddFriend.js":"82","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/sendRequestToAddFriend.js":"83","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx":"84","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx":"85","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx":"86","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx":"87","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx":"88","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx":"89","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/ToggleButtonMenu.js":"90","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js":"91","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js":"92","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js":"93","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js":"94","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js":"95","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js":"96","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/ReceivedRequestsToAddFriend.js":"97","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/SentRequestsToAddFriend.js":"98","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/Friends.js":"99","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js":"100","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js":"101","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js":"102","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx":"103","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx":"104","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx":"105","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx":"106","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx":"107","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx":"108","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx":"109","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx":"110","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx":"111","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/index.js":"112","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/index.js":"113","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx":"114","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx":"115","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx":"116","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx":"117","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx":"118","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx":"119","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx":"120","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx":"121","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx":"122","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersReceivedRequestToAddFriend.js":"123","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersSentRequestToAddFriend.js":"124","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchListContact.js":"125","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchPersonalUser.js":"126","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchFriends.js":"127","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchCurrentUser.js":"128","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/login.js":"129","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/removeFriendSubscription.js":"130","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/cancelRequestToAddFriendSubscription.js":"131","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/rejectRequestToAddFriendSubscription.js":"132","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/postCreated.js":"133","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/updateCountNotificationsWhenSeen.js":"134","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyReceivedRequestToAddFriend.js":"135","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyAcceptRequestToAddFriend.js":"136","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx":"137","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx":"138","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js":"139","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx":"140","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/index.js":"141","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/index.js":"142","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx":"143","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx":"144","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx":"145","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx":"146","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx":"147","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx":"148","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/updateUserHasSeenNotification.js":"149","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createPost.js":"150","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx":"151","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx":"152","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx":"153","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js":"154","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/index.js":"155","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx":"156","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx":"157","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js":"158","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js":"159","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js":"160","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js":"161","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js":"162","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js":"163","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useChatSubscriptions.jsx":"164","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js":"165","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatFile.js":"166","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js":"167","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js":"168","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/updateHaveSeenAllMessages.js":"169","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatText.js":"170","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched.js":"171","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverWhenReceivedNewMessage.js":"172","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx":"173","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx":"174","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx":"175","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx":"176","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx":"177","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx":"178","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js":"179","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js":"180","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js":"181","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx":"182","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useUserStatusSubscriptions.jsx":"183","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx":"184","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySendersThatReceiverOnlineHasReceivedMessagesChat.js":"185","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchSingleChatConversation.js":"186","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setMessagesStorage.js":"187","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/clearMessageStorage.js":"188","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateHasSeenLatestMessage.js":"189","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorage.js":"190","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageToReceivedWhenUserOnline.js":"191","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageWhenReceiverSeenAllMessages.js":"192","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/addNewConversationToMessagesStorage.js":"193","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/clearCurrentChat.js":"194","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentPersonalUser.js":"195","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setCountNumberNotificationsUnseen.js":"196","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setCurrentChat.js":"197","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentUser.js":"198","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setFriends.js":"199","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setMoreFriends.js":"200","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setInitialMessagesStorage.js":"201","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNewNotifications.js":"202","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNotifications.js":"203","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setNumberOfConversations.js":"204","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setOpenFriendsList.js":"205","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPosts.js":"206","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPersonalPosts.js":"207","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPostStatus.js":"208","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setSentRequestsToAddFriend.js":"209","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setReceivedRequestsToAddFriend.js":"210","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMoreMessages.js":"211","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOffline.js":"212","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOfflineMessagesStorage.js":"213","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/toggleButtonMenu.js":"214","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getNumberOfConversations.js":"215","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getCurrentChat.js":"216","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/messagesStorage/getMessagesStorage.js":"217","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getReceivedRequestsToAddFriend.js":"218","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getSentRequestsToAddFriend.js":"219","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getFriends.js":"220","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getOpenFriendsList.js":"221","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPersonalPosts.js":"222","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentPersonalUser.js":"223","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNewNotifications.js":"224","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getCountNumberNotificationsUnseen.js":"225","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNotifications.js":"226","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentUser.js":"227","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPostStatus.js":"228","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPosts.js":"229","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/controls/getToggleButtonMenu.js":"230","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useContactSubscription.jsx":"231","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/contact/getContact.js":"232","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getHome.js":"233","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditor.jsx":"234","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorHeader.jsx":"235","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditor.styles.jsx":"236","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorHeader.styles.jsx":"237","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorBody.jsx":"238","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorBody.styles.jsx":"239","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ImagesCarousel.jsx":"240","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ImagesCarousel.styles.jsx":"241","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/searchFriends.js":"242","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setNewPost.js":"243","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardHeader.jsx":"244","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCard.styles.jsx":"245","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardHeader.styles.jsx":"246","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardBody.jsx":"247","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardBody.styles.jsx":"248","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardFooter.jsx":"249","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardFooter.styles.jsx":"250","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getNotifications.js":"251","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getHeader.js":"252","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/styles/Header.styles.jsx":"253","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/FlashPopUpNotification.jsx":"254","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/FlashPopUpNotification.styles.jsx":"255","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LatestNotification.js":"256","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setLatestNotification.js":"257","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getLatestNotification.js":"258","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionUsersInPost.js":"259","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentEditor.jsx":"260","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentEditor.styles.jsx":"261","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/likePost.js":"262","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateLikePost.js":"263","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/unlikePost.js":"264","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateUnlikePost.js":"265","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getUsePostsSubscription.js":"266","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/addNewNotification.js":"267","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/increaseCountNumberNotificationsUnseen.js":"268","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/decreaseCountNumberNotificationsUnseen.js":"269","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyUserLikePost.js":"270","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createComment.js":"271","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentToPost.js":"272","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Comments.jsx":"273","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/Comments.styles.jsx":"274","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentItem.jsx":"275","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentItem.styles.jsx":"276","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionUsersInComment.js":"277","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyOwnerPostUserComment.js":"278","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentToOwnerPost.js":"279","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/ResponseEditor.jsx":"280"},{"size":841,"mtime":1617020599125,"results":"281","hashOfConfig":"282"},{"size":362,"mtime":1616455707525,"results":"283","hashOfConfig":"282"},{"size":293,"mtime":1616455707525,"results":"284","hashOfConfig":"282"},{"size":3483,"mtime":1617035306351,"results":"285","hashOfConfig":"282"},{"size":1676,"mtime":1616455707513,"results":"286","hashOfConfig":"282"},{"size":341,"mtime":1616455707525,"results":"287","hashOfConfig":"282"},{"size":3676,"mtime":1616801677874,"results":"288","hashOfConfig":"282"},{"size":4839,"mtime":1617003484910,"results":"289","hashOfConfig":"282"},{"size":3630,"mtime":1617071905002,"results":"290","hashOfConfig":"282"},{"size":3617,"mtime":1616455707525,"results":"291","hashOfConfig":"282"},{"size":1143,"mtime":1616455707525,"results":"292","hashOfConfig":"282"},{"size":2109,"mtime":1616455707525,"results":"293","hashOfConfig":"282"},{"size":3707,"mtime":1616455707525,"results":"294","hashOfConfig":"282"},{"size":3958,"mtime":1616455707525,"results":"295","hashOfConfig":"282"},{"size":14847,"mtime":1617111023068,"results":"296","hashOfConfig":"282"},{"size":485,"mtime":1616455707525,"results":"297","hashOfConfig":"282"},{"size":573,"mtime":1616455707525,"results":"298","hashOfConfig":"282"},{"size":1005,"mtime":1616602263962,"results":"299","hashOfConfig":"282"},{"size":218,"mtime":1616455707517,"results":"300","hashOfConfig":"282"},{"size":1678,"mtime":1616783505755,"results":"301","hashOfConfig":"282"},{"size":393,"mtime":1617111533106,"results":"302","hashOfConfig":"282"},{"size":451,"mtime":1616455707525,"results":"303","hashOfConfig":"282"},{"size":8681,"mtime":1617089155176,"results":"304","hashOfConfig":"282"},{"size":1046,"mtime":1616455707521,"results":"305","hashOfConfig":"282"},{"size":1255,"mtime":1616455707521,"results":"306","hashOfConfig":"282"},{"size":5269,"mtime":1616455707521,"results":"307","hashOfConfig":"282"},{"size":1475,"mtime":1616455707521,"results":"308","hashOfConfig":"282"},{"size":8406,"mtime":1616455707521,"results":"309","hashOfConfig":"282"},{"size":2640,"mtime":1616455707521,"results":"310","hashOfConfig":"282"},{"size":2998,"mtime":1616602263962,"results":"311","hashOfConfig":"282"},{"size":2552,"mtime":1616455707521,"results":"312","hashOfConfig":"282"},{"size":2883,"mtime":1616456460876,"results":"313","hashOfConfig":"282"},{"size":258,"mtime":1616455707521,"results":"314","hashOfConfig":"282"},{"size":1011,"mtime":1616455707521,"results":"315","hashOfConfig":"282"},{"size":422,"mtime":1616455707521,"results":"316","hashOfConfig":"282"},{"size":3420,"mtime":1616455707521,"results":"317","hashOfConfig":"282"},{"size":1150,"mtime":1616800970715,"results":"318","hashOfConfig":"282"},{"size":6253,"mtime":1617090597523,"results":"319","hashOfConfig":"282"},{"size":5857,"mtime":1617090577351,"results":"320","hashOfConfig":"282"},{"size":2965,"mtime":1616956542969,"results":"321","hashOfConfig":"282"},{"size":108,"mtime":1616455707517,"results":"322","hashOfConfig":"282"},{"size":342,"mtime":1616455707517,"results":"323","hashOfConfig":"282"},{"size":1041,"mtime":1616455707521,"results":"324","hashOfConfig":"282"},{"size":2413,"mtime":1616455707521,"results":"325","hashOfConfig":"282"},{"size":2083,"mtime":1616455707521,"results":"326","hashOfConfig":"282"},{"size":6301,"mtime":1616455707521,"results":"327","hashOfConfig":"282"},{"size":1010,"mtime":1615348219838,"results":"328","hashOfConfig":"282"},{"size":570,"mtime":1616455707521,"results":"329","hashOfConfig":"282"},{"size":421,"mtime":1616455707521,"results":"330","hashOfConfig":"282"},{"size":2354,"mtime":1616455707521,"results":"331","hashOfConfig":"282"},{"size":619,"mtime":1616455707521,"results":"332","hashOfConfig":"282"},{"size":9232,"mtime":1616456433935,"results":"333","hashOfConfig":"282"},{"size":140,"mtime":1616455707517,"results":"334","hashOfConfig":"282"},{"size":378,"mtime":1616455707517,"results":"335","hashOfConfig":"282"},{"size":869,"mtime":1617001663713,"results":"336","hashOfConfig":"282"},{"size":38,"mtime":1616455707513,"results":"337","hashOfConfig":"282"},{"size":45,"mtime":1616455707513,"results":"338","hashOfConfig":"282"},{"size":1553,"mtime":1616455707521,"results":"339","hashOfConfig":"282"},{"size":324,"mtime":1616455707521,"results":"340","hashOfConfig":"282"},{"size":2431,"mtime":1616455707521,"results":"341","hashOfConfig":"282"},{"size":252,"mtime":1616455707517,"results":"342","hashOfConfig":"282"},{"size":6633,"mtime":1617075762069,"results":"343","hashOfConfig":"282"},{"size":10376,"mtime":1617003449653,"results":"344","hashOfConfig":"282"},{"size":1078,"mtime":1616455707521,"results":"345","hashOfConfig":"282"},{"size":1166,"mtime":1616455707521,"results":"346","hashOfConfig":"282"},{"size":446,"mtime":1616455707521,"results":"347","hashOfConfig":"282"},{"size":1063,"mtime":1616455707521,"results":"348","hashOfConfig":"282"},{"size":1397,"mtime":1616455707521,"results":"349","hashOfConfig":"282"},{"size":4571,"mtime":1616859261791,"results":"350","hashOfConfig":"282"},{"size":344,"mtime":1616455707521,"results":"351","hashOfConfig":"282"},{"size":865,"mtime":1616455707521,"results":"352","hashOfConfig":"282"},{"size":2675,"mtime":1616455707521,"results":"353","hashOfConfig":"282"},{"size":210,"mtime":1616455707521,"results":"354","hashOfConfig":"282"},{"size":2791,"mtime":1616455707521,"results":"355","hashOfConfig":"282"},{"size":921,"mtime":1616455707517,"results":"356","hashOfConfig":"282"},{"size":336,"mtime":1616455707517,"results":"357","hashOfConfig":"282"},{"size":514,"mtime":1616455707517,"results":"358","hashOfConfig":"282"},{"size":484,"mtime":1616455707517,"results":"359","hashOfConfig":"282"},{"size":477,"mtime":1616455707517,"results":"360","hashOfConfig":"282"},{"size":474,"mtime":1616455707517,"results":"361","hashOfConfig":"282"},{"size":516,"mtime":1616455707517,"results":"362","hashOfConfig":"282"},{"size":510,"mtime":1616455707517,"results":"363","hashOfConfig":"282"},{"size":504,"mtime":1616455707517,"results":"364","hashOfConfig":"282"},{"size":282,"mtime":1616455707521,"results":"365","hashOfConfig":"282"},{"size":1144,"mtime":1616455707521,"results":"366","hashOfConfig":"282"},{"size":3913,"mtime":1616455707521,"results":"367","hashOfConfig":"282"},{"size":1508,"mtime":1616455707521,"results":"368","hashOfConfig":"282"},{"size":255,"mtime":1616455707525,"results":"369","hashOfConfig":"282"},{"size":15320,"mtime":1616859605270,"results":"370","hashOfConfig":"282"},{"size":38,"mtime":1616455707513,"results":"371","hashOfConfig":"282"},{"size":42,"mtime":1616455707513,"results":"372","hashOfConfig":"282"},{"size":50,"mtime":1616455707513,"results":"373","hashOfConfig":"282"},{"size":170,"mtime":1616455707513,"results":"374","hashOfConfig":"282"},{"size":31,"mtime":1616455707513,"results":"375","hashOfConfig":"282"},{"size":48,"mtime":1616455707513,"results":"376","hashOfConfig":"282"},{"size":32,"mtime":1616455707513,"results":"377","hashOfConfig":"282"},{"size":46,"mtime":1616455707513,"results":"378","hashOfConfig":"282"},{"size":43,"mtime":1616455707513,"results":"379","hashOfConfig":"282"},{"size":26,"mtime":1616455707513,"results":"380","hashOfConfig":"282"},{"size":24,"mtime":1616455707513,"results":"381","hashOfConfig":"282"},{"size":39,"mtime":1616455707513,"results":"382","hashOfConfig":"282"},{"size":1386,"mtime":1616455707521,"results":"383","hashOfConfig":"282"},{"size":3257,"mtime":1616455707521,"results":"384","hashOfConfig":"282"},{"size":1632,"mtime":1616455707521,"results":"385","hashOfConfig":"282"},{"size":1160,"mtime":1616455707521,"results":"386","hashOfConfig":"282"},{"size":482,"mtime":1616455707521,"results":"387","hashOfConfig":"282"},{"size":645,"mtime":1616455707521,"results":"388","hashOfConfig":"282"},{"size":1161,"mtime":1616455707521,"results":"389","hashOfConfig":"282"},{"size":1645,"mtime":1616455707521,"results":"390","hashOfConfig":"282"},{"size":1178,"mtime":1616455707525,"results":"391","hashOfConfig":"282"},{"size":794,"mtime":1616455707521,"results":"392","hashOfConfig":"282"},{"size":419,"mtime":1616455707517,"results":"393","hashOfConfig":"282"},{"size":1088,"mtime":1617070976521,"results":"394","hashOfConfig":"282"},{"size":795,"mtime":1616455707521,"results":"395","hashOfConfig":"282"},{"size":2975,"mtime":1616455707525,"results":"396","hashOfConfig":"282"},{"size":758,"mtime":1616455707521,"results":"397","hashOfConfig":"282"},{"size":2081,"mtime":1616455707525,"results":"398","hashOfConfig":"282"},{"size":7476,"mtime":1616978242660,"results":"399","hashOfConfig":"282"},{"size":1560,"mtime":1616455707521,"results":"400","hashOfConfig":"282"},{"size":2694,"mtime":1616455707521,"results":"401","hashOfConfig":"282"},{"size":637,"mtime":1617111533134,"results":"402","hashOfConfig":"282"},{"size":5262,"mtime":1616455707521,"results":"403","hashOfConfig":"282"},{"size":265,"mtime":1616455707517,"results":"404","hashOfConfig":"282"},{"size":258,"mtime":1616455707517,"results":"405","hashOfConfig":"282"},{"size":399,"mtime":1616455707517,"results":"406","hashOfConfig":"282"},{"size":548,"mtime":1616455707517,"results":"407","hashOfConfig":"282"},{"size":290,"mtime":1616455707517,"results":"408","hashOfConfig":"282"},{"size":537,"mtime":1616455707517,"results":"409","hashOfConfig":"282"},{"size":664,"mtime":1616455707517,"results":"410","hashOfConfig":"282"},{"size":493,"mtime":1616455707517,"results":"411","hashOfConfig":"282"},{"size":537,"mtime":1616455707517,"results":"412","hashOfConfig":"282"},{"size":551,"mtime":1616455707517,"results":"413","hashOfConfig":"282"},{"size":590,"mtime":1616455707517,"results":"414","hashOfConfig":"282"},{"size":234,"mtime":1616455707517,"results":"415","hashOfConfig":"282"},{"size":781,"mtime":1616775923052,"results":"416","hashOfConfig":"282"},{"size":820,"mtime":1616455707517,"results":"417","hashOfConfig":"282"},{"size":1361,"mtime":1616455707521,"results":"418","hashOfConfig":"282"},{"size":3349,"mtime":1616455707521,"results":"419","hashOfConfig":"282"},{"size":1192,"mtime":1617089418261,"results":"420","hashOfConfig":"282"},{"size":550,"mtime":1616455707525,"results":"421","hashOfConfig":"282"},{"size":210,"mtime":1616455707517,"results":"422","hashOfConfig":"282"},{"size":344,"mtime":1616991151864,"results":"423","hashOfConfig":"282"},{"size":939,"mtime":1616455707521,"results":"424","hashOfConfig":"282"},{"size":6350,"mtime":1616455707521,"results":"425","hashOfConfig":"282"},{"size":3746,"mtime":1616979337458,"results":"426","hashOfConfig":"282"},{"size":1823,"mtime":1616455707521,"results":"427","hashOfConfig":"282"},{"size":505,"mtime":1616455707521,"results":"428","hashOfConfig":"282"},{"size":2370,"mtime":1616455707521,"results":"429","hashOfConfig":"282"},{"size":397,"mtime":1616455707517,"results":"430","hashOfConfig":"282"},{"size":745,"mtime":1617000558208,"results":"431","hashOfConfig":"282"},{"size":1243,"mtime":1616455707521,"results":"432","hashOfConfig":"282"},{"size":1142,"mtime":1616810898325,"results":"433","hashOfConfig":"282"},{"size":1279,"mtime":1616455707521,"results":"434","hashOfConfig":"282"},{"size":35,"mtime":1616455707513,"results":"435","hashOfConfig":"282"},{"size":1006,"mtime":1616455707517,"results":"436","hashOfConfig":"282"},{"size":1071,"mtime":1615141119088,"results":"437","hashOfConfig":"282"},{"size":702,"mtime":1615140573136,"results":"438","hashOfConfig":"282"},{"size":47,"mtime":1616455707513,"results":"439","hashOfConfig":"282"},{"size":402,"mtime":1616455707517,"results":"440","hashOfConfig":"282"},{"size":1213,"mtime":1616455707525,"results":"441","hashOfConfig":"282"},{"size":1029,"mtime":1616455707525,"results":"442","hashOfConfig":"282"},{"size":726,"mtime":1616455707517,"results":"443","hashOfConfig":"282"},{"size":752,"mtime":1616455707517,"results":"444","hashOfConfig":"282"},{"size":4717,"mtime":1616455707521,"results":"445","hashOfConfig":"282"},{"size":793,"mtime":1616455707517,"results":"446","hashOfConfig":"282"},{"size":998,"mtime":1616455707517,"results":"447","hashOfConfig":"282"},{"size":434,"mtime":1616455707525,"results":"448","hashOfConfig":"282"},{"size":267,"mtime":1616455707517,"results":"449","hashOfConfig":"282"},{"size":221,"mtime":1616455707517,"results":"450","hashOfConfig":"282"},{"size":746,"mtime":1616455707517,"results":"451","hashOfConfig":"282"},{"size":265,"mtime":1616455707517,"results":"452","hashOfConfig":"282"},{"size":272,"mtime":1616455707517,"results":"453","hashOfConfig":"282"},{"size":2680,"mtime":1616455707521,"results":"454","hashOfConfig":"282"},{"size":1637,"mtime":1616455707521,"results":"455","hashOfConfig":"282"},{"size":5350,"mtime":1616455707521,"results":"456","hashOfConfig":"282"},{"size":138,"mtime":1616455707521,"results":"457","hashOfConfig":"282"},{"size":3098,"mtime":1616455707521,"results":"458","hashOfConfig":"282"},{"size":2108,"mtime":1616455707521,"results":"459","hashOfConfig":"282"},{"size":1371,"mtime":1616455707517,"results":"460","hashOfConfig":"282"},{"size":41,"mtime":1616455707513,"results":"461","hashOfConfig":"282"},{"size":692,"mtime":1616455707517,"results":"462","hashOfConfig":"282"},{"size":837,"mtime":1616455707525,"results":"463","hashOfConfig":"282"},{"size":1547,"mtime":1616455707521,"results":"464","hashOfConfig":"282"},{"size":1014,"mtime":1616455707525,"results":"465","hashOfConfig":"282"},{"size":255,"mtime":1616455707517,"results":"466","hashOfConfig":"282"},{"size":1072,"mtime":1616455707517,"results":"467","hashOfConfig":"282"},{"size":561,"mtime":1616455707513,"results":"468","hashOfConfig":"282"},{"size":120,"mtime":1616455707513,"results":"469","hashOfConfig":"282"},{"size":309,"mtime":1616455707513,"results":"470","hashOfConfig":"282"},{"size":621,"mtime":1616455707513,"results":"471","hashOfConfig":"282"},{"size":637,"mtime":1616455707513,"results":"472","hashOfConfig":"282"},{"size":630,"mtime":1616455707513,"results":"473","hashOfConfig":"282"},{"size":270,"mtime":1616455707513,"results":"474","hashOfConfig":"282"},{"size":110,"mtime":1616455707517,"results":"475","hashOfConfig":"282"},{"size":147,"mtime":1616455707517,"results":"476","hashOfConfig":"282"},{"size":191,"mtime":1616455707513,"results":"477","hashOfConfig":"282"},{"size":171,"mtime":1616455707513,"results":"478","hashOfConfig":"282"},{"size":107,"mtime":1616455707517,"results":"479","hashOfConfig":"282"},{"size":109,"mtime":1616455707513,"results":"480","hashOfConfig":"282"},{"size":183,"mtime":1616455707513,"results":"481","hashOfConfig":"282"},{"size":180,"mtime":1616455707513,"results":"482","hashOfConfig":"282"},{"size":185,"mtime":1616455707513,"results":"483","hashOfConfig":"282"},{"size":133,"mtime":1616455707513,"results":"484","hashOfConfig":"282"},{"size":151,"mtime":1616455707513,"results":"485","hashOfConfig":"282"},{"size":147,"mtime":1616455707513,"results":"486","hashOfConfig":"282"},{"size":84,"mtime":1616455707517,"results":"487","hashOfConfig":"282"},{"size":125,"mtime":1616455707513,"results":"488","hashOfConfig":"282"},{"size":188,"mtime":1616455707517,"results":"489","hashOfConfig":"282"},{"size":194,"mtime":1616455707513,"results":"490","hashOfConfig":"282"},{"size":204,"mtime":1616455707513,"results":"491","hashOfConfig":"282"},{"size":390,"mtime":1616455707513,"results":"492","hashOfConfig":"282"},{"size":1028,"mtime":1616455707513,"results":"493","hashOfConfig":"282"},{"size":550,"mtime":1616455707513,"results":"494","hashOfConfig":"282"},{"size":137,"mtime":1616455707513,"results":"495","hashOfConfig":"282"},{"size":134,"mtime":1616455707517,"results":"496","hashOfConfig":"282"},{"size":112,"mtime":1616455707517,"results":"497","hashOfConfig":"282"},{"size":120,"mtime":1616455707517,"results":"498","hashOfConfig":"282"},{"size":147,"mtime":1616455707517,"results":"499","hashOfConfig":"282"},{"size":140,"mtime":1616455707517,"results":"500","hashOfConfig":"282"},{"size":104,"mtime":1616455707517,"results":"501","hashOfConfig":"282"},{"size":122,"mtime":1616455707517,"results":"502","hashOfConfig":"282"},{"size":116,"mtime":1616455707517,"results":"503","hashOfConfig":"282"},{"size":129,"mtime":1616455707517,"results":"504","hashOfConfig":"282"},{"size":123,"mtime":1616455707517,"results":"505","hashOfConfig":"282"},{"size":153,"mtime":1616455707517,"results":"506","hashOfConfig":"282"},{"size":131,"mtime":1616455707517,"results":"507","hashOfConfig":"282"},{"size":114,"mtime":1616455707517,"results":"508","hashOfConfig":"282"},{"size":125,"mtime":1616455707517,"results":"509","hashOfConfig":"282"},{"size":107,"mtime":1616455707517,"results":"510","hashOfConfig":"282"},{"size":143,"mtime":1616455707517,"results":"511","hashOfConfig":"282"},{"size":4074,"mtime":1616458276158,"results":"512","hashOfConfig":"282"},{"size":202,"mtime":1616458206981,"results":"513","hashOfConfig":"282"},{"size":154,"mtime":1616460918587,"results":"514","hashOfConfig":"282"},{"size":4194,"mtime":1617071861234,"results":"515","hashOfConfig":"282"},{"size":2550,"mtime":1616645805431,"results":"516","hashOfConfig":"282"},{"size":357,"mtime":1616500293962,"results":"517","hashOfConfig":"282"},{"size":2679,"mtime":1616483759159,"results":"518","hashOfConfig":"282"},{"size":5885,"mtime":1617111147189,"results":"519","hashOfConfig":"282"},{"size":1289,"mtime":1617111052716,"results":"520","hashOfConfig":"282"},{"size":1507,"mtime":1616510383576,"results":"521","hashOfConfig":"282"},{"size":421,"mtime":1616602263966,"results":"522","hashOfConfig":"282"},{"size":197,"mtime":1616645805431,"results":"523","hashOfConfig":"282"},{"size":382,"mtime":1616645805431,"results":"524","hashOfConfig":"282"},{"size":1496,"mtime":1616645805431,"results":"525","hashOfConfig":"282"},{"size":348,"mtime":1616645805435,"results":"526","hashOfConfig":"282"},{"size":996,"mtime":1616645805435,"results":"527","hashOfConfig":"282"},{"size":1585,"mtime":1617111098553,"results":"528","hashOfConfig":"282"},{"size":679,"mtime":1617111125149,"results":"529","hashOfConfig":"282"},{"size":2907,"mtime":1617090495409,"results":"530","hashOfConfig":"282"},{"size":2073,"mtime":1617020411404,"results":"531","hashOfConfig":"282"},{"size":289,"mtime":1616979159638,"results":"532","hashOfConfig":"282"},{"size":184,"mtime":1616783505743,"results":"533","hashOfConfig":"282"},{"size":864,"mtime":1616863683254,"results":"534","hashOfConfig":"282"},{"size":2095,"mtime":1616950100270,"results":"535","hashOfConfig":"282"},{"size":1449,"mtime":1616950094622,"results":"536","hashOfConfig":"282"},{"size":40,"mtime":1616800966227,"results":"537","hashOfConfig":"282"},{"size":279,"mtime":1616802010090,"results":"538","hashOfConfig":"282"},{"size":126,"mtime":1616801487243,"results":"539","hashOfConfig":"282"},{"size":353,"mtime":1616810024266,"results":"540","hashOfConfig":"282"},{"size":7157,"mtime":1617090449505,"results":"541","hashOfConfig":"282"},{"size":968,"mtime":1616989242544,"results":"542","hashOfConfig":"282"},{"size":132,"mtime":1616952545750,"results":"543","hashOfConfig":"282"},{"size":370,"mtime":1616953483650,"results":"544","hashOfConfig":"282"},{"size":134,"mtime":1616954142363,"results":"545","hashOfConfig":"282"},{"size":392,"mtime":1616954255116,"results":"546","hashOfConfig":"282"},{"size":152,"mtime":1616957978529,"results":"547","hashOfConfig":"282"},{"size":245,"mtime":1616978018525,"results":"548","hashOfConfig":"282"},{"size":282,"mtime":1616978486473,"results":"549","hashOfConfig":"282"},{"size":282,"mtime":1616977628368,"results":"550","hashOfConfig":"282"},{"size":410,"mtime":1616978873276,"results":"551","hashOfConfig":"282"},{"size":382,"mtime":1617067742643,"results":"552","hashOfConfig":"282"},{"size":373,"mtime":1617075209431,"results":"553","hashOfConfig":"282"},{"size":532,"mtime":1617090771166,"results":"554","hashOfConfig":"282"},{"size":99,"mtime":1617020243878,"results":"555","hashOfConfig":"282"},{"size":2221,"mtime":1617111954375,"results":"556","hashOfConfig":"282"},{"size":1245,"mtime":1617111989518,"results":"557","hashOfConfig":"282"},{"size":368,"mtime":1617070753465,"results":"558","hashOfConfig":"282"},{"size":667,"mtime":1617070913581,"results":"559","hashOfConfig":"282"},{"size":552,"mtime":1617075911551,"results":"560","hashOfConfig":"282"},{"size":7034,"mtime":1617111391549,"results":"561","hashOfConfig":"282"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},"1akjpqo",{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"564"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"564"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"564"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"564"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"564"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"564"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"564"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"564"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"564"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"564"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"564"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"564"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"564"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"564"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"564"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"564"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"564"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"674"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"564"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"564"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"564"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"564"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"564"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"564"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"564"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760","usedDeprecatedRules":"564"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793","usedDeprecatedRules":"564"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820","usedDeprecatedRules":"564"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"564"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"564"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"564"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"838","usedDeprecatedRules":"564"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"873","usedDeprecatedRules":"564"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"886","usedDeprecatedRules":"564"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"909"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"909"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"564"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"564"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"564"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951","usedDeprecatedRules":"564"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966","usedDeprecatedRules":"564"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969","usedDeprecatedRules":"564"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1050","messages":"1051","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1052","messages":"1053","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1062","messages":"1063","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1066","usedDeprecatedRules":"564"},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1073","usedDeprecatedRules":"564"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1078","messages":"1079","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1080","messages":"1081","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1086","usedDeprecatedRules":"564"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1093","usedDeprecatedRules":"564"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1096","usedDeprecatedRules":"564"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117","usedDeprecatedRules":"564"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"564"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/index.js",[],["1171","1172"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/reportWebVitals.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/i18n.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/App.js",["1173"],"import React, { useEffect, useState, lazy, Suspense } from \"react\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport { FETCH_CURRENT_USER, FETCH_FRIENDS } from \"../apollo/operations/queries/user\";\nimport { FETCH_NOTIFICATIONS } from \"../apollo/operations/queries/notification\";\nimport { useQuery } from \"@apollo/client\";\nimport ErrorBoundary from \"../containers/ErrorBoundary\";\nimport Explores from \"../pages/explores\";\nimport HomePage from \"../pages/home\"\nimport useUserStatusSubscriptions from \"../components/Global/useUserStatusSubscriptions\"\nimport useContactSubscription from \"../components/Global/useContactSubscription\"\nconst AuthPage = lazy(() => import(\"../pages/auth\"));\nconst NotificationsPage = lazy(() => import(\"../pages/notifications\"));\nconst PersonalPage = lazy(() => import(\"../pages/personal\"));\nconst ContactsPage = lazy(() => import(\"../pages/contacts\"));\nconst ChatsPage = lazy(() => import(\"../pages/chats\"));\n\nfunction App() { \n  const { colorMode } = useThemeUI();\n  const [fetched, setFetched] = useState(false);\n  const [isAuth, setIsAuth] = useState(null)\n  const { setFriends, setNotifications, setCurrentUser } = cacheMutations;  \n  const {refetch : fetchCurrentUser} = useQuery(FETCH_CURRENT_USER, {fetchPolicy : \"cache-and-network\"});\n  const {refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const {refetch: fetchFriends } = useQuery(FETCH_FRIENDS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  useEffect(() => {\n    let _isMounted = true ; \n    fetchCurrentUser().then(async ({data}) => {\n      const {fetchCurrentUser} = data ; \n      \n      if(_isMounted){\n        setCurrentUser({...fetchCurrentUser});  \n        //after fetching current user, fetch notification and friends  \n        const skip = 0;        \n        const limitNotifications = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n        const {data : notificationsData} = await fetchNotifications({skip, limit : limitNotifications})        \n        setNotifications([...notificationsData.fetchNotifications]);\n        \n        const limitFriends = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n        const {data : friendsData} = await fetchFriends({skip, limit : limitFriends});                \n        setFriends([...friendsData.fetchFriends])\n      \n      }      \n      setFetched(true)\n    }).catch(err => {\n      setFetched(true)\n    })\n    \n  },[isAuth])\n \n  useUserStatusSubscriptions()\n  useContactSubscription()     \n  if (!fetched) return null;\n  return (\n    <Router>\n      <GlobalStyles theme={colorMode} />\n      <ErrorBoundary>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/explores\" component={Explores} />\n            <Route path=\"/auth\" render={(props) => <AuthPage setIsAuth={(value) => setIsAuth(value)} {...props}/>} />\n            <Route path=\"/contacts\" component={ContactsPage} />\n            <Route path=\"/chats\" component={ChatsPage} />\n            <Route path=\"/notifications\" component={NotificationsPage} />\n            <Route path=\"/:slug\" component={PersonalPage} />\n          </Switch>\n        </Suspense>\n      </ErrorBoundary>\n    </Router>\n  );\n}\n\nexport default (App);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/client.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/theme/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/cache.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/explores.js",["1174"],"import React, { useState } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nconst emojiPlugin = createEmojiPlugin();\nconst { EmojiSelect, EmojiSuggestions } = emojiPlugin;\nconst linkifyPlugin = createLinkifyPlugin({\n  component(props) {\n    return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n  },\n});\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [linkifyPlugin, mentionPlugin, emojiPlugin];\n\nconst Linkify = () => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n\n  const onOpenChange = React.useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = React.useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n  return (\n    <div className=\"wrapper\">\n      <h2 style={{ color: \"#43a047\" }}>Draftjs Linkify</h2>\n      <Editor\n        editorState={editorState}\n        onChange={setEditorState}\n        plugins={plugins}\n      />\n      <MentionSuggestions\n        open={open}\n        suggestions={suggestions}\n        onOpenChange={onOpenChange}\n        onSearchChange={onSearchChange}\n      />\n      <EmojiSuggestions />\n      <EmojiSelect />\n    </div>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 36812,\n    name: \"Maxewqeq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 789327,\n    name: \"Nikewqewqad Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 32131,\n    name: \"Pascalsadwq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 121312,\n    name: \"Matthewewqe Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 125134,\n    name: \"Julianewq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 3213214,\n    name: \"Jyotiasd Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 65361,\n    name: \"Maxewq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 5321,\n    name: \"Nikewq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 43,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n];\n\nexport default Linkify;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/home.js",["1175","1176","1177"],"import React, { useEffect, useState, useCallback , lazy, Suspense} from \"react\";\nimport Layout from \"../containers/Layout\";\nimport PostEditor from \"../components/Post/PostEditor/PostEditor\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_HOME_CACHE_DATA } from \"../apollo/operations/queries/cache\";\nimport { FETCH_POSTS } from \"../apollo/operations/queries/post\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport HomeSidebar from \"../components/Sidebar/HomeSidebar\";\nimport MainBody from \"../components/Body/MainBody\";\nimport FriendsBoard from \"../components/Sidebar/FriendsBoard\";\nimport ButtonToggleFriendsList from \"../components/Controls/ButtonToggleFriendsList\";\nimport {\n  MainContent,\n  MainContentLeftSide,\n  MainContentRightSide,\n} from \"./styles/pages.styles.js\";\nconst Posts = lazy(() => import(\"../components/Post/Posts\"));\nconst Home = () => {\n  const {\n    data: { user, openFriendsList, posts },\n  } = useQuery(GET_HOME_CACHE_DATA, { fetchPolicy: \"cache-and-network\" });\n  const { refetch: fetchPosts } = useQuery(FETCH_POSTS, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  \n  const [fetched, setFetched] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const { setPosts, setOpenFriendsList, setNewPost } = cacheMutations;\n  useEffect(() => {\n    let _mounted = true;\n    if (!posts.length && user && !fetched) {\n      fetchPosts().then(({ data: { fetchPosts } }) => {\n        if (_mounted && fetchPosts) {\n          setPosts([...fetchPosts]);\n          setFetched(true);\n        }\n      });\n    }\n    return () => (_mounted = false);\n  }, [user, posts, fetched]);\n\n  useEffect(() => {\n    let _mounted = true;\n    if (user && loadingMore) {\n      const skip = posts.length;\n      const limit = +process.env.REACT_APP_POSTS_PER_PAGE;\n      fetchPosts({ skip, limit }).then(({ data: { fetchPosts } }) => {\n        if (_mounted) {\n          console.log(fetchPosts);\n          if (fetchPosts) {\n            setPosts([...posts, ...fetchPosts]);\n          }\n          setLoadingMore(false);\n        }\n      });\n    }\n    return () => (_mounted = false);\n  }, [posts, fetchPosts, setPosts, loadingMore, user]);\n\n  useEffect(() => {\n    let isScrolling;\n    function onTrackUserScrolled(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const {\n          clientHeight,\n          scrollTop,\n          scrollHeight,\n        } = document.documentElement;\n        if (clientHeight + scrollTop > scrollHeight * 0.8) {\n          setLoadingMore(true);\n        }\n      }, 66);\n    }\n    window.addEventListener(\"scroll\", onTrackUserScrolled);\n    return () => {\n      clearTimeout(isScrolling);\n      window.removeEventListener(\"scroll\", onTrackUserScrolled);\n    };\n  });\n  const handleOpenFriendsList = useCallback(() => {\n    setOpenFriendsList();\n  }, []);  \n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentLeftSide>\n            {user && <PostEditor user={user} />}\n            <Suspense fallback={<div>Loading posts...</div>}>\n            {posts.length ? <Posts posts={posts} /> : null}\n            </Suspense>\n          </MainContentLeftSide>\n          <MainContentRightSide>\n            <HomeSidebar user={user} />\n          </MainContentRightSide>\n        </MainContent>\n        {user && (\n          <>\n            {\" \"}\n            <FriendsBoard />\n            <ButtonToggleFriendsList\n              hide={openFriendsList}\n              onClick={handleOpenFriendsList}\n            />\n          </>\n        )}\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default Home;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/notifications.js",["1178"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport styled from \"styled-components\";\nimport Notifications from \"../components/Notification/Notifications\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_NOTIFICATIONS,\n} from \"../apollo/operations/queries/cache\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport MainBody from \"../components/Body/MainBody\";\nimport { FETCH_NOTIFICATIONS } from \"../apollo/operations/queries/notification\";\n\nconst NotificationsPage = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const {\n    data: { notifications },\n  } = useQuery(GET_NOTIFICATIONS, { fetchPolicy: \"cache-first\" });\n  const { setNotifications } = cacheMutations;\n  const [fetchNotificationsMore, setFetchNotificationsMore] = useState(false);\n  useEffect(() => {\n    let _mounted = true;\n    if(user && fetchNotifications){\n      if (!notifications.length) {\n        fetchNotifications({\n          variables: {\n            skip: 0,\n            limit: +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE,\n          },\n        }).then(({ data }) => {\n          if (data && data.fetchNotifications && _mounted) {\n            setNotifications([...data.fetchNotifications]);\n          }\n        });\n      }\n      else if(fetchNotificationsMore){\n        const skip = notifications.length;\n        const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n        fetchNotifications({ skip, limit }).then(\n          ({ data: { fetchNotifications } }) => {\n            if (_mounted) {\n              setNotifications([...notifications, ...fetchNotifications]);\n              setFetchNotificationsMore(false);\n            }\n          }\n        );\n      }\n    }\n   \n    return () => (_mounted = false);\n  }, [user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore]);\n\n  useEffect(() => {\n    function setLoadmoreOnScroll() {\n      const {\n        scrollHeight,\n        scrollTop,\n        clientHeight,\n      } = document.documentElement;\n      if (clientHeight + scrollTop > scrollHeight * 0.75) {\n        setFetchNotificationsMore(true);\n      }\n    }\n    window.addEventListener(\"scroll\", (e) => {\n      setLoadmoreOnScroll();\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", () => {\n        setLoadmoreOnScroll();\n      });\n  }, []);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <div className=\"notifications\">\n            {user ? <Notifications /> : <CardRequestAuth />}\n          </div>\n          <div className=\"sidebar\"></div>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nconst MainContent = styled.div`\n  display: flex;\n  margin: auto;\n  padding: 1.5rem 0;\n  .notifications {\n    width: 100%;\n  }\n  .sidebar {\n    display: none;\n  }\n  @media screen and (min-width: 768px) {\n    .notifications {\n      width: calc(100% - 320px);\n      padding: 0 1rem;\n    }\n    .sidebar {\n      display: block;\n      width: 320px;\n      padding: 0 1rem;\n    }\n  }\n  @media screen and (min-width: 992px) {\n    padding: 0;\n    .notifications {\n      width: 50%;\n    }\n    .sidebar {\n      width: 50%;\n    }\n  }\n  @media screen and (min-width: 1920px) {\n    .notifications {\n      width: 55%;\n    }\n    .sidebar {\n      width: 45%;\n    }\n  }\n`;\nexport default NotificationsPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/auth.js",["1179"],"import React, { lazy, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { GET_CURRENT_USER } from \"../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nconst SignIn = lazy(() => import(\"../components/Auth/SignIn\"));\nconst SignUp = lazy(() => import(\"../components/Auth/SignUp\"));\n\nconst AuthPage = ({setIsAuth, ...props}) => {\n  const { match, location, history } = props;\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-only\",\n  }); \n  useEffect(() => {\n    if (user && location.state && location.state.from) {\n      history.replace(location.state.from);\n      setIsAuth(true);\n    } else if (user) {\n      history.replace(\"/\");\n      setIsAuth(Date.now());\n    }\n  }, [user, history, location.state]);\n  return (\n    <Switch>\n      <Route\n        exact\n        path={match.path}\n        render={(props) => <SignIn authPath={match.path} {...props} />}\n      />\n      <Route\n        path={`${match.path}/signup`}\n        render={(props) => <SignUp authPath={match.path} {...props} />}\n      />\n    </Switch>\n  );\n};\n\nexport default AuthPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/personal.js",["1180"],"import React, { useEffect } from \"react\";\nimport PersonalHeading from \"../components/Personal/PersonalHeading\";\nimport { useLazyQuery, useQuery } from \"@apollo/client\";\nimport {  \n  GET_PERSONAL_POSTS,\n  GET_CURRENT_PERSONAL_USER,\n} from \"../apollo/operations/queries/cache\";\nimport { FETCH_PERSONAL_USER } from \"../apollo/operations/queries/user\";\nimport Layout from \"../containers/Layout\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport PersonalPosts from \"../components/Personal/PersonalPosts\"\n\nconst PersonalPage = (props) => {\n  const [\n    fetchPersonalUser,\n    { data: personalUserData },\n  ] = useLazyQuery(FETCH_PERSONAL_USER, { fetchPolicy: \"cache-and-network\" });  \n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { personalPosts },\n  } = useQuery(GET_PERSONAL_POSTS, { fetchPolicy: \"cache-first\" });\n  const {    \n    setCurrentPersonalUser,\n    setPersonalPosts,\n  } = cacheMutations;\n  const { slug } = props.match.params;\n  useEffect(() => {\n    let _mounted = true;\n    if (_mounted) {\n      //require fetch personal user because we need to set who is current personal user\n      fetchPersonalUser({ variables: { slug } });\n    }\n    return () => (_mounted = false);\n  }, [fetchPersonalUser, slug, currentPersonalUser]);\n  useEffect(() => {\n    if (personalUserData && personalUserData.fetchPersonalUser) {\n      let {\n        _id,\n        name,\n        email,\n        avatar,\n        posts,\n        slug,\n      } = personalUserData.fetchPersonalUser;    \n\n      setCurrentPersonalUser({ ...personalUserData.fetchPersonalUser });\n      posts = posts.map((post) => {\n        const author = {\n          _id,\n          name,\n          avatar,\n          email,\n          slug,\n        };\n        return { ...post, author: { ...author } };\n      });\n      setPersonalPosts({ ...personalPosts, [slug]: [...posts] });\n    }\n  }, [personalUserData]);\n\n  return (\n    <Layout>\n      <PersonalHeading />\n      <PersonalPosts/>      \n    </Layout>\n  );\n};\n\nexport default PersonalPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/contacts.js",["1181","1182"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../apollo/operations/queries/cache\";\nimport {\n  FETCH_LIST_CONTACT,\n  FETCH_FRIENDS,  \n} from \"../apollo/operations/queries/user\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport MainBody from \"../components/Body/MainBody\";\nimport { MainContent, MainContentFullSize, ContactTitle } from \"./styles/pages.styles\";\nimport SentRequestsToAddFriend from \"../components/Contact/SentRequestsToAddFriend\";\nimport ReceivedRequestsToAddFriend from \"../components/Contact/ReceivedRequestsToAddFriend\";\nimport FriendsList from \"../components/Contact/FriendsList\";\nimport useLanguage from \"../components/Global/useLanguage\";\n\n\nconst FriendsPage = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [fetched, setFetched] = useState(false);\n  const { i18n, lang } = useLanguage();\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-first\",\n  });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, {\n    fetchPolicy: \"cache-first\",\n  });\n \n  const { refetch: fetchFriends } = useQuery(FETCH_FRIENDS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  \n  const {\n    setFriends,\n    setSentRequestsToAddFriend,\n    setReceivedRequestsToAddFriend,\n  } = cacheMutations;\n\n  const { refetch: fetchListContact } = useQuery(FETCH_LIST_CONTACT, {\n    skip: true,\n  });\n\n  useEffect(() => {\n    if (!fetched) {\n      if (\n        user?.sentRequestToAddFriend.length ||\n        user?.receivedRequestToAddFriend.length ||\n        user?.friends.length\n      ) {\n        fetchListContact().then(({ data }) => {\n          setFetched(true); \n          console.log(\"fetched\")         \n          const {\n            sentRequests,\n            receivedRequests,\n            friends: friendsList,\n          } = data.fetchListContact;\n          if (sentRequests.length) {\n            setSentRequestsToAddFriend([...sentRequests]);\n          }\n          if (receivedRequests.length) {\n            setReceivedRequestsToAddFriend([...receivedRequests]);\n          }\n          if (!friends.length) {\n            setFriends([...friendsList]);\n          }\n        });\n      }\n    }\n  }, [user, fetched, setFetched]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", async (e) => {\n      const docEl = document.documentElement;\n      if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n        setLoadingMore(true);\n      }\n    });\n    return () =>\n      window.removeEventListener(\"scroll\", async (e) => {\n        const docEl = document.documentElement;\n        if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.8) {\n          setLoadingMore(true);\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    if (loadingMore) {\n      const skip = friends.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchFriends({ skip, limit }).then(({ data }) => {\n        if (data?.fetchFriends?.length) {\n          setFriends([...friends, ...data.fetchFriends]);\n          setLoadingMore(false);\n        }\n      });\n    }\n  }, [loadingMore]);\n\n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentFullSize>\n            <ContactTitle>\n              {i18n.store.data[lang].translation.contacts.title}\n            </ContactTitle>\n            <SentRequestsToAddFriend />\n            <ReceivedRequestsToAddFriend />\n            <FriendsList />\n          </MainContentFullSize>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default FriendsPage;","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/chats.js",["1183","1184"],"import React, { lazy, useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport {\n  GET_CURRENT_USER,\n  GET_MESSAGES_STORAGE,\n} from \"../apollo/operations/queries/cache\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport {\n  RequestAuthScreen,\n  ChatsWrapper,\n  SidebarNav,\n  MainTab,\n} from \"./styles/chats.styles\";\nimport MenuChat from \"../components/Chat/MenuChat\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../apollo/operations/queries/chat\";\nimport { UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED } from \"../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../apollo/operations/mutations\";\nimport useChatSubscriptions from \"../components/Global/useChatSubscriptions\";\n\nconst ChatConversations = lazy(() =>\n  import(\"../components/Chat/Conversations\")\n);\nconst ChatContacts = lazy(() => import(\"../components/Chat/Contact\"));\n\nconst ChatsPage = ({ match }) => {\n  //use Query\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-first\" });\n  const { refetch: fetchChatConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n  const [\n    updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched,\n  ] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n  );\n  const { setInitialMessagesStorage, setNumberOfConversations } = cacheMutations;\n  //useState\n  \n  useChatSubscriptions();\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (!Object.keys(messagesStorage).length && user) {  \n      //fetch conversations \n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchChatConversations().then(({ data }) => {\n        if (_isMounted) {          \n          const { conversations, numberOfConversations } = data.fetchChatConversations;\n          let storage = {};          \n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });          \n          \n          setInitialMessagesStorage({ ...storage });\n          //update those conversations to received when user online if he/she has offlined before       \n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setNumberOfConversations(numberOfConversations);\n        }\n      });\n    }\n    return () => _isMounted = false ;\n  }, []);  \n  if (!user)\n    return (\n      <Layout>\n        <RequestAuthScreen>\n          <CardRequestAuth />\n        </RequestAuthScreen>\n      </Layout>\n    );\n  return (\n    <Layout>\n      <ChatsWrapper>\n        <SidebarNav>\n          <MenuChat />\n        </SidebarNav>\n        <MainTab>\n          <Switch>\n            <Route exact path={match.path} component={ChatConversations} />\n            <Route\n              exact\n              path={`${match.path}/contacts`}\n              component={ChatContacts}\n            />\n          </Switch>\n        </MainTab>\n      </ChatsWrapper>\n    </Layout>\n  );\n};\n\nexport default ChatsPage;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/containers/Layout.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Posts.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx",["1185"],"import React, { useEffect } from \"react\";\nimport NotificationItem from \"./NotificationItem\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_NOTIFICATIONS_CACHE_DATA } from \"../../apollo/operations/queries/cache\";\nimport {\n  FETCH_NOTIFICATIONS,\n  FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n} from \"../../apollo/operations/queries/notification\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport subscriptions from \"../../apollo/operations/subscriptions\";\nimport LazyLoad from \"react-lazyload\";\nconst Notifications = () => {\n  //useQuery\n  const { refetch: fetchCountNumberNotificationsUnseen } = useQuery(\n    FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n    {\n      fetchPolicy: \"network-only\",\n      skip: true,\n    }\n  );\n  const { subscribeToMore: subscribeToMoreNotifications } = useQuery(\n    FETCH_NOTIFICATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const {\n    data: {\n      countNumberNotificationsUnseen,\n      user,\n      notifications,      \n      currentPersonalUser,\n      receivedRequestsToAddFriend,\n      personalPosts\n    },\n  } = useQuery(GET_NOTIFICATIONS_CACHE_DATA, {\n    fetchPolicy: \"cache-first\",\n  });\n  //mutations\n  const {\n    setCountNumberNotificationsUnseen,\n    increaseNumberNotificationsUnseen,\n    setNotifications,\n    setNewNotifications,\n    setLatestNotification,\n    setCurrentUser,\n    setCurrentPersonalUser,\n    setReceivedRequestsToAddFriend, \n    setPersonalPosts,\n    addCommentToOwnerPost\n  } = cacheMutations;\n  \n  useEffect(() => {\n    let _isMounted = true;\n    if (countNumberNotificationsUnseen === null) {\n      fetchCountNumberNotificationsUnseen().then(\n        ({ data: { countNotificationsUnseen } }) => {\n          if (_isMounted) {\n            setCountNumberNotificationsUnseen(countNotificationsUnseen);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [\n    countNumberNotificationsUnseen,\n    fetchCountNumberNotificationsUnseen,\n    setCountNumberNotificationsUnseen,\n  ]);\n\n  //sender and receiver only use in field 'user'\n  const updatedNotifications = (\n    newNotification,\n    sender = null,\n    receiver = null\n  ) => {\n    setLatestNotification(newNotification);\n    setNewNotifications(newNotification._id);\n    increaseNumberNotificationsUnseen()   ; \n    if (sender && receiver) {\n      setCurrentUser({\n        // ...user,\n        // friends: [...receiver.friends],\n        // following: [...receiver.following],\n        // followed: [...receiver.followed],\n        // sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        // receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n        ...receiver\n      });\n\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          // ...currentPersonalUser,\n          // friends: [...sender.friends],\n          // following: [...sender.following],\n          // followed: [...sender.followed],\n          // sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n          // receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n          ...sender\n        });\n      }\n    }\n\n    setNotifications([{ ...newNotification, new: true }, ...notifications]);\n  };\n\n  useEffect(() => {\n    let unsubscribeMentionUsersInPost,\n      unsubscribeRequestAddFriend,\n      unsubscribeAcceptRequestAddFriend,\n      unsubscribeUserLikePost,\n      unsubscribeOwnerPostReceivedUserComment,\n      unsubscribeMentionUsersInComment\n      ;\n    if (subscribeToMoreNotifications && user) {\n      unsubscribeMentionUsersInPost = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription.NOTIFY_MENTION_USERS_IN_POST,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const {notifyMentionUsersInPost : newNotification} = subscriptionData.data;          \n          updatedNotifications(newNotification);\n        },\n      });\n      unsubscribeUserLikePost = subscribeToMoreNotifications({\n        document : subscriptions.notificationSubscription.NOTIFY_USER_LIKE_POST_SUBSCRIPTION, \n        variables : {userId : user._id},\n        updateQuery : (_, {subscriptionData}) => {\n          if(subscriptionData){\n            const {notification : newNotification, post} = subscriptionData.data.notifyUserLikePost;\n            updatedNotifications(newNotification)\n            if(personalPosts[user._id]){\n              const personalPostsByUserId = personalPosts[user._id].map(_post => {\n                if(_post._id === post._id ){\n                  let _p = {..._post};\n                  _p.likes = [..._p.likes, newNotification.creator._id];\n                  return _p;\n                }\n                return {..._post};\n              })\n              setPersonalPosts(personalPostsByUserId) ;        \n            }\n          }\n        } \n      })\n      unsubscribeRequestAddFriend = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .NOTIFY_RECEIVED_REQUEST_TO_ADD_FRIEND,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData) return prev;\n          const {\n            notification: newNotification,\n            receiver,\n            sender,\n          } = subscriptionData.data.notifyReceivedRequestToAddFriend;\n\n          // push new sender to received requests to add friend cache\n          setReceivedRequestsToAddFriend([\n            { ...sender },\n            ...receivedRequestsToAddFriend,\n          ]);\n          updatedNotifications(newNotification, sender, receiver);\n        },\n      });\n      unsubscribeAcceptRequestAddFriend = subscribeToMoreNotifications({\n        document:\n          subscriptions.notificationSubscription\n            .NOTIFY_ACCEPT_REQUEST_TO_ADD_FRIEND,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData) return prev;\n          const {\n            notification: newNotification,\n            sender,\n            receiver,\n          } = subscriptionData.data.notifyAcceptRequestToAddFriend;\n          updatedNotifications(newNotification, sender, receiver);\n        },\n      });\n      unsubscribeOwnerPostReceivedUserComment = subscribeToMoreNotifications({\n        document : subscriptions.notificationSubscription.NOTIFY_OWNER_POST_USER_COMMENT_SUBSCRIPTION,\n        variables : {userId : user._id} , \n        updateQuery : (_, {subscriptionData}) => {\n          if(subscriptionData){\n            const {comment, notification} = subscriptionData.data.notifyOwnerPostUserComment;\n            updatedNotifications(notification);           \n            addCommentToOwnerPost(user._id, comment);\n          }\n        }\n      }); \n      unsubscribeMentionUsersInComment = subscribeToMoreNotifications({\n        document : subscriptions.notificationSubscription.NOTIFY_MENTION_USERS_IN_COMMENT_SUBSCRIPTION,\n        variables : {userId : user._id}, \n        updateQuery : (_, {subscriptionData }) => {\n          if(subscriptionData){\n            const {notifyMentionUsersInComment} = subscriptionData.data;\n            updatedNotifications(notifyMentionUsersInComment)\n          }\n        }\n      })\n    }\n\n    return () => {\n      if (unsubscribeMentionUsersInPost) {\n        unsubscribeMentionUsersInPost();\n      }\n      if(unsubscribeUserLikePost){\n        unsubscribeUserLikePost();\n      }\n      if (unsubscribeRequestAddFriend) {\n        unsubscribeRequestAddFriend();\n      }\n      if (unsubscribeAcceptRequestAddFriend) {\n        unsubscribeAcceptRequestAddFriend();\n      }\n      if(unsubscribeOwnerPostReceivedUserComment){\n        unsubscribeOwnerPostReceivedUserComment();\n      }\n      if(unsubscribeMentionUsersInComment){\n        unsubscribeMentionUsersInComment();\n      }\n    };\n  }, [\n    countNumberNotificationsUnseen,\n    subscribeToMoreNotifications,\n    receivedRequestsToAddFriend,\n    notifications,\n    user,\n  ]);\n  if (!notifications.length)\n    return <NoNotifications>No notifications</NoNotifications>;\n  return (\n    <LazyLoad>\n      {notifications.map((notification) => (\n        <NotificationItem\n          key={`notification-${notification._id}`}\n          notifications={notifications}\n          notification={notification}\n        />\n      ))}      \n    </LazyLoad>\n  );\n};\n\nconst NoNotifications = styled.div`\n  text-align: center;\n  padding: 3rem;\n  font-size: 1.1em;\n`;\n\nexport default React.memo(Notifications);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Body/MainBody.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx",["1186"],"import React from \"react\";\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  Title,\n  SubTitle,\n  ErrorMessage,\n} from \"./AuthForm\";\nimport CustomInput from \"../Custom/CustomInput\";\nimport CustomButton from \"../Custom/CustomButton\";\nimport { withRouter } from \"react-router-dom\";\nimport GoogleRecaptcha from \"./GoogleRecapcha\";\nimport FacebookLogin from \"./GoogleAuth\";\nimport GoogleLogin from \"./FacebookAuth\";\nimport { useMutation } from \"@apollo/client\";\nimport { SIGNUP } from \"../../apollo/operations/mutations/user\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport {login} from \"./Auth.utility\"\nconst INITIAL_STATE = {\n  controls: {\n    name: {\n      type: \"text\",\n      name: \"name\",\n      valid: false,\n      label: \"Name\",\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 50,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    email: {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      valid: false,\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    password: {\n      type: \"password\",\n      name: \"password\",\n      valid: false,\n      label: \"Password\",\n      validation: {\n        required: true,\n        minLength: 6,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    confirmPassword: {\n      type: \"password\",\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      valid: false,\n      validation: {\n        required: true,\n        minLength: 6,\n        match: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n  },\n  formIsValid: false,\n  loaded: false,\n  disabled: true,\n  title: \"\",\n};\n\nfunction withSignUpMutation(WrappedComponent) {\n  return function MutationWrapper(props) {\n    const [createUser, { data, loading, error }] = useMutation(SIGNUP, {errorPolicy : \"all\"});      \n    return (\n      <WrappedComponent\n        createUser={createUser}        \n        data={data}        \n        loading={loading}        \n        error={error}        \n        {...props}\n      />\n    );\n  };\n}\n\nconst SignUp = withSignUpMutation(\n  class extends React.Component {\n    state = { ...INITIAL_STATE };\n    timer = null ;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    componentWillUnmount(){\n      clearTimeout(this.timer)\n      if(this.unsubcribeLogin){\n        this.unsubcribeLogin();\n      }\n    }\n    unsubcribeLogin; \n    async componentDidUpdate(prevProps){\n      if(prevProps.error !== this.props.error){\n        this.clearForm();        \n      }\n      if(prevProps.data !== this.props.data && this.props.data )  {\n        const { user, token, tokenExpire} = this.props.data.createUser;                    \n        this.unsubcribeLogin = await login(user, token, tokenExpire)\n        this.clearForm() ;\n      }\n    }\n\n    clearForm = () => {\n      this.setState({...INITIAL_STATE});      \n      setTimeout(() => {\n        this.setState({ loaded: true });\n      }, 0);\n    }\n    \n    checkValidity = (value, rules) => {\n      let isValid = true;\n      let errorsMessage = [];\n      if (rules.required) {\n        isValid = value.trim().length && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"This field is required\");\n        }\n      }\n      if (rules.isEmail) {\n        const pattern = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        isValid = pattern.test(value) && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Email is invalid\");\n        }\n      }\n      if (rules.minLength) {\n        isValid = value.trim().length >= rules.minLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at least ${rules.minLength} characters`);\n        }\n      }\n      if (rules.maxLength) {\n        isValid = value.trim().length <= rules.maxLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at most ${rules.maxLength} characters`);\n        }\n      }\n      if (rules.match) {\n        isValid =\n          value.trim() === this.state.controls.password.value && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Password and confirm Password do not match\");\n        }\n      }\n      return errorsMessage;\n    };\n\n    handleChange = (e, name) => {\n      let updatedControls = { ...this.state.controls };\n      let updatedControlElement = { ...updatedControls[name] };\n      updatedControlElement.value = e.target.value;\n      const checkValid = this.checkValidity(\n        e.target.value,\n        updatedControlElement.validation\n      );\n      updatedControlElement.valid = checkValid.length === 0;\n      updatedControlElement.touched = true;\n      updatedControlElement.validationErrors = checkValid;\n      updatedControls[name] = updatedControlElement;\n      let { email, password, confirmPassword } = updatedControls;\n      const formIsValid =\n        email.valid &&\n        updatedControlElement.valid &&\n        password.valid &&\n        confirmPassword.valid;\n      this.setState({ controls: updatedControls, formIsValid });\n    };\n\n    handleSubmitSignUpForm = (e) => {\n      e.preventDefault();\n      if (!this.state.formIsValid) {\n        this.setState({ ...INITIAL_STATE });\n        return;\n      }\n      const { name, email, password } = this.state.controls;\n\n      this.props.createUser({\n        variables: {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        },\n      });\n    };\n\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {      \n      const { formIsValid, loaded, disabled } = this.state;\n      let formInputArray = [];\n      Object.keys(this.state.controls).forEach((controlItem) => {\n        formInputArray.push(this.state.controls[controlItem]);\n      });\n      const { error, loading } = this.props;   \n         \n      if(!loaded) return <div>Loading...</div>\n      return (\n        <CustomFormContainer onSubmit={this.handleSubmitSignUpForm}>\n          <FormHeader>\n            <Title>Sign Up</Title>\n            <SubTitle>Sign up your account via email and password.</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}\n          {loading && <h2>Loading...</h2>}\n          <FlashForm>\n            <FacebookLogin />\n            <GoogleLogin />\n          </FlashForm>\n          <FormGroups>\n            {formInputArray.map(\n              ({\n                label,\n                name,\n                touched,\n                type,\n                valid,\n                validation,\n                validationErrors,\n                value,\n              }) => (\n                <CustomInput\n                  key={name}\n                  type={type}\n                  name={name}\n                  value={value}\n                  label={label}\n                  onChange={(e) => this.handleChange(e, name)}\n                  require={validation.required}\n                  touched={touched}\n                  valid={valid}\n                  validationErrors={validationErrors}\n                />\n              )\n            )}\n            {loaded && (\n              <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n            )}\n            <CustomButton\n              variant=\"outlined\"\n              size=\"small\"\n              color=\"#0d47a1\"\n              bgColor=\"blue\"\n              disabled={!formIsValid || disabled}\n            >\n              Submit\n            </CustomButton>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              <StyledLink to=\"/auth\">Signin account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{\" \"}\n              <StyledLink to=\"/auth/restore-account\">\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignUp);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx",["1187"],"import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_PERSONAL_USER,\n  GET_CURRENT_USER\n} from \"../../apollo/operations/queries/cache\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport {\n  Container,\n  UserName,\n  PersonalHeadingBackground,\n  BackgroundImageContainer,\n  PersonalMenus,\n  ProfileMenuItemLink,\n  Footer\n} from \"./PersonalHeading.styles\";\nimport BackgroundImage from \"../../assets/images/background-wallpaper.jpg\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport PersonalHeadingContact from \"./PersonalHeadingContact\"\n\nconst PersonalHeading = () => {\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER,{fetchPolicy : \"cache-first\"});\n  const {data : {user}} =useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"})\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const [menus, setMenus] = useState([]);\n  const [activeLink, setActiveLink] = useState(null);\n  \n  \n  useEffect(() => {\n    setMenus(i18n.store.data[lang].translation.personalMenus);\n  }, [lang]);\n\n  useEffect(() => {\n    if (currentPersonalUser) {\n      setActiveLink(`/${currentPersonalUser.slug}/posts`);\n    }\n  }, [currentPersonalUser]);\n\n  if (!currentPersonalUser) return null;\n  return (\n    <Container theme={colorMode}>\n      <PersonalHeadingBackground theme={colorMode} background={BackgroundImage}>\n        <BackgroundImageContainer theme={colorMode}>\n          <LazyLoadImage\n            src={currentPersonalUser.avatar}\n            alt={currentPersonalUser.avatar}\n          />\n          <UserName>\n            <h4>{currentPersonalUser.name}</h4>\n            <span>@{currentPersonalUser.slug}</span>\n          </UserName>\n        </BackgroundImageContainer>\n      </PersonalHeadingBackground>\n      <Footer>\n        <PersonalMenus>\n          {menus.length\n            ? menus.map((menu) => (\n                <ProfileMenuItemLink\n                  to={menu.path(currentPersonalUser.slug)}\n                  theme={colorMode}\n                  active={(\n                    activeLink === menu.path(currentPersonalUser.slug)\n                  ).toString()}\n                  onClick={() =>\n                    setActiveLink(menu.path(currentPersonalUser.slug))\n                  }\n                >\n                  {menu.name}\n                </ProfileMenuItemLink>\n              ))\n            : null}\n        </PersonalMenus>\n        {user && <PersonalHeadingContact/>}\n      </Footer>\n    </Container>\n  );\n};\n\nexport default PersonalHeading;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx",["1188","1189","1190","1191"],"import React, { useEffect, useState } from \"react\";\nimport { Wrapper, LeftSide, RightSide } from \"./PersonalPosts.styles\";\nimport Posts from \"../Post/Posts\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_PERSONAL_USER,\n  GET_PERSONAL_POSTS,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_POSTS } from \"../../apollo/operations/queries/post\";\nimport IntroductionBox from \"./IntroductionBox\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\n\nconst PersonalPosts = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { personalPosts },\n  } = useQuery(GET_PERSONAL_POSTS, { fetchPolicy: \"cache-first\" });\n\n  // const { refetch: fetchMorePosts } = useQuery(FETCH_POSTS, {\n  //   skip: true,\n  //   fetchPolicy: \"cache-and-network\",\n  // });\n  // const { setPersonalPosts } = cacheMutations;\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      const docEl = document.documentElement;\n      if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.75) {\n        setLoadingMore(true);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", () => {\n        const docEl = document.documentElement;\n        if (docEl.clientHeight + docEl.scrollTop > docEl.scrollHeight * 0.75) {\n          setLoadingMore(true);\n        }\n      });\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   let _mounted = true;\n  //   if (\n  //     loadingMore &&\n  //     currentPersonalUser &&\n  //     personalPosts[currentPersonalUser.slug] &&\n  //     fetchMorePosts\n  //   ) {\n  //     const skip = personalPosts[currentPersonalUser.slug].length;\n  //     const limit = +process.env.REACT_APP_POSTS_PER_PAGE;\n  //     const userId = currentPersonalUser._id;\n  //     fetchMorePosts({ skip, limit, userId }).then(\n  //       ({ data: { fetchPosts } }) => {\n  //         if (_mounted) {\n  //           setPersonalPosts({\n  //             ...personalPosts,\n  //             [currentPersonalUser.slug]: [\n  //               ...personalPosts[currentPersonalUser.slug],\n  //               ...fetchPosts,\n  //             ],\n  //           });\n  //           setLoadingMore(false);\n  //         }\n  //       }\n  //     );\n  //   }\n  //   return () => (_mounted = false);\n  // }, [loadingMore, currentPersonalUser, personalPosts, fetchMorePosts]);\n  return (\n    <Wrapper>\n      <LeftSide>\n        <IntroductionBox />\n      </LeftSide>\n      <RightSide>        \n        {currentPersonalUser &&\n        personalPosts[currentPersonalUser.slug] &&\n        personalPosts[currentPersonalUser.slug].length ? (\n          <Posts posts={personalPosts[currentPersonalUser.slug]} />\n        ) : null}\n      </RightSide>\n    </Wrapper>\n  );\n};\n\nexport default PersonalPosts;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx",["1192"],"import React , {useEffect} from \"react\";\nimport {\n  GET_CURRENT_USER,\n  GET_SENT_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_USERS_SENT_REQUEST_TO_ADD_FRIEND } from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nconst SentRequestsToAddFriend = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { sentRequestsToAddFriend },\n  } = useQuery(GET_SENT_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const {\n    refetch: fetchUsersSentRequestsToAddFriend,\n  } = useQuery(FETCH_USERS_SENT_REQUEST_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const { setSentRequestsToAddFriend } = cacheMutations;\n  const getMoreUsersSentRequestToAddFriend = () => {\n    const skip = sentRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_CONTACT_USER_PER_PAGE;\n    if (fetchUsersSentRequestsToAddFriend) {\n      fetchUsersSentRequestsToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchUsersSentRequestToAddFriend?.length) {         \n          setSentRequestsToAddFriend([\n            ...sentRequestsToAddFriend,\n            ...data.fetchUsersSentRequestToAddFriend,\n          ]);\n        }\n      });\n    }\n  };\n \n  if (!user || !user?.sentRequestToAddFriend.length || !sentRequestsToAddFriend.length) return null;\n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userSentRequest}\n      </Title>\n      {sentRequestsToAddFriend.map((item) => (\n        <ContactItem key={item._id} userContact={item} type=\"sent\" />\n      ))}\n      {sentRequestsToAddFriend.length < user.sentRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreUsersSentRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(SentRequestsToAddFriend);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx",["1193","1194","1195"],"import React, { useEffect } from \"react\";\nimport {\n  GET_CURRENT_USER,\n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport {\n  FETCH_USERS_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n  FETCH_CURRENT_USER,\n} from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nimport subscriptions from \"../../apollo/operations/subscriptions\";\nimport _ from \"lodash\"\nconst SentRequestsToAddFriend = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-first\",\n  });\n  const { refetch: fetchUsersReceivedRequestToAddFriend } = useQuery(\n    FETCH_USERS_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n\n  const { setReceivedRequestsToAddFriend } = cacheMutations;\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n\n  const getMoreUsersReceivedRequestToAddFriend = () => {\n    const skip = receivedRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_CONTACT_USER_PER_PAGE;\n    if (fetchUsersReceivedRequestToAddFriend) {\n      fetchUsersReceivedRequestToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchUsersReceivedRequestToAddFriend?.length) {\n          const resultData = [...receivedRequestsToAddFriend, ...data.fetchUsersReceivedRequestToAddFriend]\n          const uniqueResultData = _.uniqBy(resultData, \"_id\")\n          \n          setReceivedRequestsToAddFriend([...uniqueResultData]);\n        }\n      });\n    }\n  };\n\n  if (\n    !user ||\n    !user?.receivedRequestToAddFriend.length ||\n    !receivedRequestsToAddFriend.length\n  )\n    return null;\n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userReceivedRequest}\n      </Title>\n      {receivedRequestsToAddFriend.map((item) => (\n        <ContactItem key={item._id} userContact={item} type=\"received\" />\n      ))}\n      {receivedRequestsToAddFriend.length <\n      user.receivedRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreUsersReceivedRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(SentRequestsToAddFriend);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx",["1196","1197","1198"],"import React, { useEffect, useState, useRef, createContext } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_FRIENDS } from \"../../apollo/operations/queries/user\";\nimport { useQuery } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport { useThemeUI } from \"theme-ui\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport ListContacts from \"./ListContacts\";\nimport ChatBoard from \"./ChatBoard\";\nexport const ContactContext = createContext({});\n\nconst Contact = () => {\n  //useQuery\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const { setCurrentChat } = cacheMutations;\n\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-only\" });\n  \n  //useState\n  const [search, setSearch] = useState(\"\");\n  const [contactData, setContactData] = useState([]);\n  const [originData, setOriginData] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const popupRef = useRef(null);\n\n  useEffect(() => {\n    if (friends.length) {\n      if (!search) {\n        setContactData([...originData]);\n      } else {\n        const searchRegex = new RegExp(search, \"i\");\n        const searchResults = originData.filter(\n          ({ name }) => !!name.match(searchRegex)\n        );\n        setContactData([...searchResults]);\n      }\n    }\n  }, [search, friends]);\n\n  useEffect(() => {    \n    setContactData([...friends]);\n    setOriginData([...friends]);    \n  }, [friends]);\n\n  useEffect(() => {\n    setCurrentChat(null);\n  },[])\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-contact-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n  const { colorMode } = useThemeUI();\n\n  const onChangeSearch = React.useCallback((e) => {\n    setSearch(e.target.value);\n  },[])\n  if (!user) return null;\n  return (\n    <ContactContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top+50}\n      >\n        <span>Mark as favorite</span>\n        <hr />\n        <span>Label</span>\n        <span>Set alias</span>\n        <hr />\n        <span>Block</span>\n        <span>Delete</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search search={search} onChange={onChangeSearch} />\n          <hr />\n          <ListContacts data={contactData.length ? contactData : friends} />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </ContactContext.Provider>\n  );\n};\n\nexport default Contact;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/vi/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/locales/en/translation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx",["1199"],"import {useState, useEffect} from 'react'\nimport useLanguage from \"../Global/useLanguage\"\nimport {useLocation} from \"react-router-dom\"\nimport {useQuery} from \"@apollo/client\"\nimport {GET_CURRENT_USER} from \"../../apollo/operations/queries/cache\"\nconst useMenuList = () => {\n  const {data : {user}} = useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"});\n\n  const location = useLocation();  \n  const { lang, i18n } = useLanguage();\n  const [namePage, setNamePage] = useState(\"\");\n  const [menu, setMenu] = useState([]);  \n  const [explores, setExplores] = useState([]);\n  \n  useEffect(() => {\n    const menuName =  i18n.store.data[lang].translation.menuList.find(\n      (item) => item.path === location.pathname\n    )        \n    setNamePage(\n      menuName ? menuName.name : \"\"\n    );\n    setMenu(i18n.store.data[lang].translation.menuList);\n    setExplores(i18n.store.data[lang].translation.explores);\n  }, [lang, i18n.store.data, location.pathname]);\n  return {\n    namePage,\n    menu, \n    explores\n  }\n}\n\nexport default useMenuList\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx",["1200","1201"],"import React, {useEffect} from \"react\";\nimport {\n  ContactItemWrapper,\n  ContactInfo,\n  ContactActions,\n  FriendActions,\n} from \"./Contact.styles\";\nimport { Link } from \"react-router-dom\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport Button from \"../Controls/ButtonDefault\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BsChatDots, BsCameraVideo, BsThreeDotsVertical } from \"react-icons/bs\";\nimport { MdStarBorder } from \"react-icons/md\";\nimport { IoMdCall } from \"react-icons/io\";\n\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_PERSONAL_USER,\n  GET_SENT_REQUESTS_TO_ADD_FRIEND,\n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n  GET_FRIENDS\n} from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { userMutations } from \"../../apollo/operations/mutations/user\";\nimport { useQuery, useMutation } from \"@apollo/client\";\n\n\nconst ContactItem = ({ userContact, type }) => {\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });  \n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { sentRequestsToAddFriend },\n  } = useQuery(GET_SENT_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, { fetchPolicy: \"cache-first\" });\n  const [cancelRequestToAddFriend] = useMutation(\n    userMutations.CANCEL_REQUEST_TO_ADD_FRIEND\n  );\n  const [rejectRequestToAddFriend] = useMutation(userMutations.REJECT_REQUEST_TO_ADD_FRIEND);\n  const [acceptRequestToAddFriend] = useMutation(userMutations.ACCEPT_REQUEST_TO_ADD_FRIEND);\n  const {\n    setCurrentUser,\n    setCurrentPersonalUser,\n    setReceivedRequestsToAddFriend,\n    setSentRequestsToAddFriend,\n    setFriends\n  } = cacheMutations;\n\n\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...sender.friends],\n      following: [...sender.following],\n      followed: [...sender.followed],\n      sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n    });\n    if (currentPersonalUser && currentPersonalUser._id === userContact._id) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        following: [...receiver.following],\n        followed: [...receiver.followed],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    }\n  };\n\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    const filterUsersReceivedRequest = sentRequestsToAddFriend.filter(\n      (userReceivedRequest) => userReceivedRequest._id !== userContact._id\n    );   \n    cancelRequestToAddFriend({\n      variables: { receiverId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;     \n      setSentRequestsToAddFriend(filterUsersReceivedRequest);\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n   //Handle accept request to add friend\n   const onAcceptRequestToAddFriend = () => {\n     const filterUsersSentRequest = receivedRequestsToAddFriend.filter(userSentRequest => userSentRequest._id !== userContact._id);\n    acceptRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.acceptRequestToAddFriend;\n      //remove user at recived requests to head of friends list\n      setReceivedRequestsToAddFriend(filterUsersSentRequest);\n      setFriends([{...userContact}, ...friends])\n      updateMutationOnChange(sender, receiver);    \n    });\n  };\n\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    const filterUsersSentRequest = receivedRequestsToAddFriend.filter(userSentRequest => userSentRequest._id !== userContact._id);    \n    \n    rejectRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.rejectRequestToAddFriend;\n        setReceivedRequestsToAddFriend(filterUsersSentRequest)\n        updateMutationOnChange(sender, receiver);        \n      })\n      .catch((err) => console.log(err));\n  };\n\n  const sentActions = (\n    <Button cancel onClick={onCancelRequestToAddFriend}>\n      {i18n.store.data[lang].translation.contacts.cancelRequest}\n    </Button>\n  );\n  const receivedActions = (\n    <>\n      <Button acceptBtn variant=\"outlined\" onClick={onAcceptRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.acceptRequest}\n      </Button>\n      <Button reject onClick={onRejectRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.rejectRequest}\n      </Button>\n    </>\n  );\n\n  const friendsActions = (\n    <FriendActions>\n      <Button favorite>\n        <MdStarBorder />\n      </Button>\n      <Button chat>\n        <BsChatDots />\n      </Button>\n      <Button call>\n        <IoMdCall />\n      </Button>\n      <Button videocall>\n        <BsCameraVideo />\n      </Button>\n      {/* <Button setting>\n        <BsThreeDotsVertical />\n      </Button>      */}\n    </FriendActions>\n  );\n  return (\n    <ContactItemWrapper theme={colorMode}>\n      <ContactInfo>\n        <Link to={userContact.slug}>\n          <LazyLoadImage src={userContact.avatar} alt={userContact.avatar} />\n        </Link>\n        <Link to={userContact.slug}>\n          <h6>{userContact.name}</h6>\n          <span>@{userContact.slug}</span>\n        </Link>\n      </ContactInfo>\n      <ContactActions>\n        {type === \"sent\"\n          ? sentActions\n          : type === \"received\"\n          ? receivedActions\n          : type === \"friends\"\n          ? friendsActions\n          : null}\n      </ContactActions>\n    </ContactItemWrapper>\n  );\n};\n\nexport default ContactItem;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/auth.js",[],["1202","1203"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx",["1204"],"import React, {createRef} from \"react\";\nimport {\n  Wrapper\n} from \"./styles/ChatBoard.styles\";\n\nimport ChatBoardHeading from \"./ChatBoardHeading\"\nimport ChatBoardBody from \"./ChatBoardBody\"\nimport ChatBoardFooter from \"./ChatBoardFooter\"\n\nconst ChatCenter = () => {  \n  \n  return (\n    <Wrapper>\n      <ChatBoardHeading/>\n      <ChatBoardBody/>\n      <ChatBoardFooter/>\n    </Wrapper>\n  );\n};\n\nexport default ChatCenter;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx",["1205","1206"],"import React from 'react'\nimport {BoxWrapper, WorkList, Introduce, Website} from \"./IntroductionBox.styles\"\nimport {useQuery} from \"@apollo/client\"\nimport {GET_CURRENT_PERSONAL_USER, GET_CURRENT_USER} from \"../../apollo/operations/queries/cache\"\nimport {useThemeUI} from \"theme-ui\"\nimport {Link} from \"react-router-dom\"\nimport {FaGlobe} from \"react-icons/fa\"\nimport {MdWork} from \"react-icons/md\"\nconst works = [\n  {job_name : \"Data Engineer\", company_name : \"iTech Corp\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", },\n  {job_name : \"Data Scientist\", company_name : \"Samsung\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", },\n  {job_name : \"Junior Developer\", company_name : \"Freelance\", company_location : \"HCM city\", company_coordinates_href: \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\", company_href : \"http://google.com\", }\n]\n\n\n\nconst IntroductionBox = () => {\n  const {data : {user}} = useQuery(GET_CURRENT_USER, {fetchPolicy : \"cache-first\"})\n  const {data : {currentPersonalUser}} = useQuery(GET_CURRENT_PERSONAL_USER, {fetchPolicy : \"cache-first\"})\n  const {colorMode} = useThemeUI();\n  return (\n    <BoxWrapper theme={colorMode}>\n      <h4>Introduction</h4>\n      {/* Introduce */}\n      <Introduce>Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem possimus harum aliquam nobis qui! Temporibus, commodi facilis ex nihil veniam in quia eius dicta quos.</Introduce>\n      {/* works list */}\n      <WorkList>\n        {works.map(work => (\n          <li>\n           <Website><span><MdWork/></span><Link to={`/tags/${work.job_name}`}>{work.job_name}</Link>at<Link to={work.company_href}>{work.company_name}</Link></Website> \n          </li>\n        ))}\n      </WorkList>\n      {/* Live in */}\n      <p>Live in <Link to=\"https://google.com\">Can Tho</Link></p>\n      {/* Followers */}\n      <p>Current Have <strong>200</strong> followers</p>      \n      {/* Contact */}\n      <p>Contact me via : 0123 456 789</p>\n      <Website> <span><FaGlobe/></span> <Link href=\"https://github.com/mthang1801\">https://github.com/mthang1801</Link></Website>\n    </BoxWrapper>\n  )\n}\n\nexport default IntroductionBox\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx",["1207","1208","1209"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { HiOutlinePencilAlt } from \"react-icons/hi\";\nimport { AiOutlineMenuUnfold } from \"react-icons/ai\";\nimport { TiMessages } from \"react-icons/ti\";\nimport { FaUserCheck, FaReply, FaRocket } from \"react-icons/fa\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { IoIosPersonAdd, IoIosRemove } from \"react-icons/io\";\nimport { FcCheckmark, FcCancel } from \"react-icons/fc\";\nimport { CgRemoveR } from \"react-icons/cg\";\n\nimport { RiUserFollowLine, RiUserUnfollowLine } from \"react-icons/ri\";\nimport { userMutations } from \"../../apollo/operations/mutations\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  GET_CURRENT_PERSONAL_USER,\n  GET_CURRENT_USER,  \n  GET_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n} from \"../../apollo/operations/queries/cache\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  PersonalContactContainer,\n  ResponseRequests,\n  DropdownResponseRequest,\n} from \"./PersonalHeadingContact.styles\";\nconst PersonalContact = () => {\n  const [relationship, setRelationship] = useState(\"stranger\");\n  const [openResponse, setOpenResponse] = useState(false);\n  //Mutations\n  const [sendRequestToAddFriend] = useMutation(\n    userMutations.SEND_REQUEST_TO_ADD_FRIEND\n  );\n  const [rejectRequestToAddFriend] = useMutation(\n    userMutations.REJECT_REQUEST_TO_ADD_FRIEND\n  );\n  const [cancelRequestToAddFriend] = useMutation(\n    userMutations.CANCEL_REQUEST_TO_ADD_FRIEND\n  );\n  const [followUser] = useMutation(userMutations.FOLLOW_USER);\n  const [unFollowUser] = useMutation(userMutations.UNFOLLOW_USER);\n  const [acceptRequestToAddFriend] = useMutation(\n    userMutations.ACCEPT_REQUEST_TO_ADD_FRIEND\n  );\n  const [removeFriend] = useMutation(userMutations.REMOVE_FRIEND);\n  const {\n    setCurrentUser,    \n    setCurrentPersonalUser,\n  } = cacheMutations;\n  //user Query\n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER);\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER);\n\n  const {\n    data: { receivedRequestsToAddFriend },\n  } = useQuery(GET_RECEIVED_REQUESTS_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-first\",\n  });\n\n  //color theme\n  const { colorMode } = useThemeUI();\n  //useRef\n  const responseRef = useRef(false);\n\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...sender.friends],\n      following: [...sender.following],\n      followed: [...sender.followed],\n      sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n    });\n    \n    setCurrentPersonalUser({\n      ...currentPersonalUser,\n      friends: [...receiver.friends],\n      following: [...receiver.following],\n      followed: [...receiver.followed],\n      sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n    });\n  };\n\n  useEffect(() => {\n    if (!responseRef.current) {\n      setOpenResponse(false);\n    }\n    window.addEventListener(\"click\", (e) => {\n      if (responseRef.current && !responseRef.current.contains(e.target)) {\n        setOpenResponse(false);\n      }\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        if (responseRef.current && !responseRef.current.contains(e.target)) {\n          setOpenResponse(false);\n        }\n      });\n  }, [responseRef]);\n\n  useEffect(() => {\n    if (currentPersonalUser) {\n      if (user && currentPersonalUser._id === user._id) {\n        setRelationship(\"me\");\n      } else if (\n        user &&\n        currentPersonalUser.friends.includes(user._id.toString())\n      ) {\n        setRelationship(\"friend\");\n      } else {\n        setRelationship(\"stranger\");\n      }\n    }\n  }, [user, currentPersonalUser]);\n\n  // Handle add friend\n  const onSendRequestToAddFriend = (e) => {\n    sendRequestToAddFriend({ variables: { userId: currentPersonalUser._id } })\n      .then(({ data }) => {\n        const { sender, receiver } = data.sendRequestToAddFriend;\n        updateMutationOnChange(sender, receiver);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    rejectRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.rejectRequestToAddFriend;\n        updateMutationOnChange(sender, receiver);\n        setOpenResponse(false);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    cancelRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n  //Handle Follow User\n  const onHandleFollowUser = () => {\n    followUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.followUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle Unfollow user\n  const onHandleUnfollowUser = () => {\n    unFollowUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.unFollowUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle accept request to add friend\n  const onAcceptRequestToAddFriend = () => {\n    acceptRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.acceptRequestToAddFriend;\n      updateMutationOnChange(sender, receiver);\n      setOpenResponse(false);\n    });\n  };\n  //handle remove friend\n  const onRemoveFriend = () => {\n    removeFriend({ variables: { friendId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.removeFriend;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n\n  const MyActionsContact = (\n    <>\n      <Button theme={colorMode} title=\"update personal\">\n        <HiOutlinePencilAlt />\n      </Button>\n      <Button theme={colorMode} title=\"history actions\">\n        <AiOutlineMenuUnfold />\n      </Button>\n      <Button theme={colorMode} title=\"setting\">\n        <BsThreeDots />\n      </Button>\n    </>\n  );\n\n  const FriendActionsContact = (\n    <>\n      <Button theme={colorMode} title=\"remove friend\" onClick={onRemoveFriend}>\n        <IoIosRemove />\n      </Button>\n      <Button theme={colorMode} title=\"chat\">\n        <TiMessages />\n      </Button>\n      <Button theme={colorMode} title=\"friend\">\n        <FaUserCheck />\n      </Button>\n      <Button theme={colorMode} title=\"setting\">\n        <BsThreeDots />\n      </Button>\n    </>\n  );\n  const StrangerActionsContact = (\n    <>\n      {user &&\n      currentPersonalUser &&\n      user?.sentRequestToAddFriend?.includes(\n        currentPersonalUser._id.toString()\n      ) ? (\n        <Button\n          theme={colorMode}\n          title=\"Cancel request\"\n          onClick={onCancelRequestToAddFriend}\n        >\n          <CgRemoveR />\n        </Button>\n      ) : user &&\n        currentPersonalUser &&\n        user?.receivedRequestToAddFriend?.includes(\n          currentPersonalUser._id.toString()\n        ) ? (\n        <ResponseRequests ref={responseRef}>\n          <Button theme={colorMode} title=\"Response the request\">\n            <FaReply\n              onClick={() => setOpenResponse((prevState) => !prevState)}\n            />\n          </Button>\n          <DropdownResponseRequest theme={colorMode} open={openResponse}>\n            <div onClick={onAcceptRequestToAddFriend}>\n              <FcCheckmark /> Accept\n            </div>\n            <div onClick={onRejectRequestToAddFriend}>\n              <FcCancel /> Reject\n            </div>\n          </DropdownResponseRequest>\n        </ResponseRequests>\n      ) : (\n        <Button\n          theme={colorMode}\n          title=\"add friend\"\n          onClick={onSendRequestToAddFriend}\n        >\n          <IoIosPersonAdd />\n        </Button>\n      )}\n\n      <Button theme={colorMode} title=\"Chat\">\n        <TiMessages />\n      </Button>\n      {user?.following?.includes(currentPersonalUser._id) ? (\n        <Button\n          theme={colorMode}\n          title=\"UnFollow\"\n          onClick={onHandleUnfollowUser}\n        >\n          <RiUserUnfollowLine />\n        </Button>\n      ) : (\n        <Button theme={colorMode} title=\"Follow\" onClick={onHandleFollowUser}>\n          <RiUserFollowLine />\n        </Button>\n      )}\n      <Button theme={colorMode} title=\"Setting\">\n        <BsThreeDots />\n      </Button>\n    </>\n  );\n  return (\n    <PersonalContactContainer>\n      {relationship === \"me\"\n        ? MyActionsContact\n        : relationship === \"friend\"\n        ? FriendActionsContact\n        : StrangerActionsContact}\n    </PersonalContactContainer>\n  );\n};\n\nexport default PersonalContact;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/notification/fetchNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/post/fetchPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/OpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LoadingNotificationsMore.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx",["1210"],"import React, {\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n  useMemo,\n} from \"react\";\nimport {\n  Wrapper,\n  ChatInput,\n  ChatActions,\n  Label,\n  SendMessage,\n} from \"./styles/ChatBoardFooter.styles\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { FiSend } from \"react-icons/fi\";\nimport { IoMdAttach } from \"react-icons/io\";\nimport { HiOutlinePhotograph } from \"react-icons/hi\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport \"./styles/editor.css\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  SEND_MESSAGE_CHAT_TEXT,\n  SEND_MESSAGE_CHAT_FILE,\n} from \"../../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/\";\nimport {\n  GET_CURRENT_CHAT,\n  GET_CURRENT_USER,\n} from \"../../apollo/operations/queries/cache\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport generateBase64Image from \"../../utils/generateBase64Image\";\nimport useLanguage from \"../Global/useLanguage\"\nconst ChatBoardFooter = () => {\n  //useState\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );  \n  const { colorMode } = useThemeUI();\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n  const {i18n, lang} = useLanguage();\n  const {chatInputPlaceholder} = i18n.store.data[lang].translation.chat;\n  //useQuery\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-and-network\" });\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-and-network\" });\n  //useMutation\n  const [sendMessageChatText] = useMutation(SEND_MESSAGE_CHAT_TEXT);\n  const [sendMessageChatFile] = useMutation(SEND_MESSAGE_CHAT_FILE);\n  const { setMessagesStorage } = cacheMutations;\n  const editorRef = useRef(null);\n\n  const {\n    plugins,\n    EmojiSelect,\n    EmojiSuggestions,\n    MentionSuggestions,\n  } = useMemo(() => {\n    const emojiPlugin = createEmojiPlugin({\n      selectButtonContent: \"😀\",\n    });\n    const { EmojiSelect, EmojiSuggestions } = emojiPlugin;\n    const linkifyPlugin = createLinkifyPlugin({\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      component(props) {\n        return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n      },\n    });\n    const mentionPlugin = createMentionPlugin({\n      positionSuggestions: (settings) => {\n        return {\n          left: `${settings.decoratorRect.left - 360 + 30}px`,\n          top: `${-settings.decoratorRect.height * 5 - 100}px`,\n          display: \"block\",\n          transform: \"scale(1)\", // transition popover on the value of its height\n          transformOrigin: \"1em 0% 0px\",\n          transition: \"all 0.25s cubic-bezier(0.3, 1.2, 0.2, 1)\",\n        };\n      },\n      mentionComponent(mentionProps) {\n        return (\n          <span\n            className={mentionProps.className}\n            onClick={() => alert(\"CLick mentions\")}\n          >\n            {mentionProps.children}\n          </span>\n        );\n      },\n    });\n    const { MentionSuggestions } = mentionPlugin;\n    const plugins = [mentionPlugin, emojiPlugin, linkifyPlugin];\n    return { plugins, EmojiSelect, EmojiSuggestions, MentionSuggestions };\n  }, []);\n\n  const onOpenChange = useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n\n\n  useEffect(() => {\n    function focusEditorWhenTypingTabButton(e) {\n      if (e.which === 9) {\n        if (editorRef.current) {\n          editorRef.current.focus();\n        }\n      }\n    }\n    window.addEventListener(\"keyup\", (e) => {\n      focusEditorWhenTypingTabButton(e);\n    });\n    return () =>\n      window.removeEventListener(\"keyup\", (e) => {\n        focusEditorWhenTypingTabButton(e);\n      });\n  }, [editorRef]);\n  const onSendMessage = (e) => {    \n    if (editorState.getCurrentContent().hasText() && currentChat) {\n      const rawData = JSON.stringify(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      sendMessageChatText({\n        variables: {\n          receiverId: currentChat._id,\n          text: rawData,\n          scope: currentChat.scope || \"PERSONAL\",\n        },\n      })\n        .then(({ data }) => {\n          const { message, scope } = data.sendMessageChatText;\n          const { receiver } = message;\n          console.log(receiver)\n          //always set hasSeenLatestMessage is true  because  this user is sender\n          setMessagesStorage(receiver, message, scope, true);\n          setEditorState(EditorState.createEmpty());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const onChangeInputChatImage = async (e) => {\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024;\n    if (fileData && fileData.size > maxSize) {\n      return false;\n    }\n    const validFiles = [\"image/jpeg\", \"image/png\", \"image/jpg\", \"image/gif\"];\n    if (!validFiles.includes(fileData.type)) {\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData);\n\n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"IMAGE\",\n        },\n      });\n      const { message, scope } = data.sendMessageChatFile;\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n      document.getElementById(\"chat-image\").value =  \"\";\n    }\n  };\n\n  const onChangeInputChatAttachment = async (e) => {    \n    e.preventDefault();\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024 * 5;\n    if (fileData && fileData.size > maxSize) {\n      console.log(\"oversize\");\n      return false;\n    }\n    const validExtensions = new RegExp(\"(.*?).(docx|doc|pdf|xml|bmp|ppt|xls|txt)$\");\n    if (!validExtensions.test(e.target.value.toLowerCase())) {\n      console.log(\"invalid file\")\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData); \n         \n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"ATTACHMENT\",\n        },\n      });\n      const { message, scope, error } = data.sendMessageChatFile;\n      if(error){\n        console.log(error)\n        return ;\n      }\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n    }\n    document.getElementById(\"chat-attachment\").value =  \"\";\n  };\n  return (\n    <Wrapper style={{ display: !user || !currentChat || !Object.entries(currentChat).length ? \"none\" : \"block\" }}>\n      <ChatActions theme={colorMode}>\n        <Label htmlFor=\"chat-image\" style={{ color: \"#fb8c00\" }}>\n          <HiOutlinePhotograph />\n          <input\n            type=\"file\"\n            id=\"chat-image\"\n            name=\"chat-image\"\n            onChange={onChangeInputChatImage}\n          />\n        </Label>\n        <Label htmlFor=\"chat-attachment\" style={{ color: \"#4527a0 \" }}>\n          <IoMdAttach />\n          <input\n            type=\"file\"\n            id=\"chat-attachment\"\n            name=\"chat-attachment\"\n            onChange={onChangeInputChatAttachment}            \n          />\n        </Label>\n      </ChatActions>\n      <ChatInput onClick={() => editorRef.current?.focus()}>\n        <EmojiSuggestions />\n        <EmojiSelect />\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          ref={editorRef}\n          tabIndex=\"0\"          \n          placeholder={`${chatInputPlaceholder} ${currentChat?.name}`}\n        />\n        <MentionSuggestions\n          open={open}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />       \n        <SendMessage onClick={onSendMessage}>\n          <FiSend />\n        </SendMessage>\n      </ChatInput>\n    </Wrapper>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    slug: \"matthew\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    slug: \"juliansadaw\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    slug: \"jyoti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    slug: \"stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    slug: \"graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    slug: \"brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    slug: \"russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    slug: \"julianewqeq\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    slug: \"puti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n];\n\nexport default ChatBoardFooter;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx",["1211","1212","1213","1214","1215"],"import React, { useState, useEffect, createRef, useCallback } from \"react\";\nimport { Wrapper } from \"./styles/ChatBoardBody.styles\";\nimport Bubble from \"./Bubble\";\nimport { useThemeUI } from \"theme-ui\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  GET_CURRENT_CHAT,\n  GET_MESSAGES_STORAGE,\n  GET_CURRENT_USER,\n} from \"../../apollo/operations/queries/cache\";\nimport { FETCH_MESSAGES } from \"../../apollo/operations/queries/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\n\nconst ChatBoardBody = () => {\n  //useState\n  const [loadMoreMessages, setLoadMoreMessages] = useState(false);\n  //useQuery\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-first\" });\n  const { refetch: fetchMoreMessages } = useQuery(FETCH_MESSAGES, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const chatBoardBodyRef = createRef(null);\n  const { updateMoreMessages } = cacheMutations;\n  const [shouldScrollIntoView, setShouldScrollIntoView] = useState(true);\n  const { colorMode } = useThemeUI();\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      if (chatBoardBodyRef.current && shouldScrollIntoView) {\n        chatBoardBodyRef.current.scrollIntoView({\n          behavior: \"auto\",\n        });\n      }\n    }, 50);\n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if(messagesStorage[currentChat?._id]?.latestMessage.sender._id === user._id ){\n      timer = setTimeout(() => {\n        if (chatBoardBodyRef.current) {\n          chatBoardBodyRef.current.scrollIntoView({\n            behavior: \"auto\",\n          });\n        }\n      }, 10);\n    }\n    \n    return () => clearTimeout(timer);\n  }, [currentChat,messagesStorage[currentChat?._id]?.messages, user]);\n  \n  useEffect(() => {\n    let isScrolling;\n    function onScrollBodyBoard(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollHeight, scrollTop, clientHeight } = e.target;\n        if (scrollTop + clientHeight === scrollHeight) {\n          setShouldScrollIntoView(true);\n        } else {\n          setShouldScrollIntoView(false);\n        }\n        if (\n          scrollTop + clientHeight <\n          (scrollHeight - scrollTop) / 2 + scrollHeight * 0.15\n        ) {\n          setLoadMoreMessages(true);\n        }\n      }, 66);\n    }\n    document.getElementById(\"body-board\").addEventListener(\n      \"scroll\",\n      function (e) {\n        onScrollBodyBoard(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById(\"body-board\").removeEventListener(\n        \"scroll\",\n        function (e) {\n          onScrollBodyBoard(e);\n        },\n        false\n      );\n    };\n  });\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (loadMoreMessages) {\n      const skip = messagesStorage[currentChat._id].messages.length;\n      const limit = +process.env.REACT_APP_NUMBER_MESSAGES_PER_LOAD;\n      const conversationId = currentChat._id;\n      const scope = currentChat.scope;\n      fetchMoreMessages({ conversationId, scope, skip, limit }).then(\n        ({ data }) => {\n          if (_isMounted) {\n            const { messages } = data.fetchMessages;\n            updateMoreMessages(conversationId, messages);\n            setLoadMoreMessages(false);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [loadMoreMessages]);\n\n  return (\n    <Wrapper\n      theme={colorMode}\n      id=\"body-board\"\n      // onScrollCapture={onScrollBoardBody}\n    >\n      {currentChat &&\n      messagesStorage[currentChat._id] &&\n      messagesStorage[currentChat._id].messages.length &&\n      user\n        ? messagesStorage[currentChat._id].messages.map((message, idx) => {\n            return (\n              <Bubble\n                key={`bubble-${message._id}`}\n                message={message}\n                user={user}\n                me={message.sender && message.sender._id === user._id}\n                senderAvatar={\n                  message.sender && message.sender._id === user._id\n                    ? user.avatar\n                    : currentChat.avatar\n                }\n                index={idx}\n              />\n            );\n          })\n        : null}\n      <div ref={chatBoardBodyRef}></div>\n    </Wrapper>\n  );\n};\n\nexport default ChatBoardBody;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx",["1216","1217"],"import React, { useState, useContext, useRef } from \"react\";\nimport {\n  ContactItemWrapper,\n  Avatar,\n  UserContactOverview,\n  ContactControls,\n} from \"./styles/ContactItem.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useThemeUI } from \"theme-ui\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport ThreeDotsSetting from \"../UI/ThreeDotsSetting\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport { GET_MESSAGES_STORAGE } from \"../../apollo/operations/queries/cache\";\nimport { FETCH_SINGLE_CHAT_CONVERSATION } from \"../../apollo/operations/queries/chat/fetchSingleChatConversation\";\nimport { useQuery } from \"@apollo/client\";\n\nconst ContactItem = ({ friend }) => {\n  const [showSetting, setShowSettings] = useState(false);\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-only\" });\n  const { setPopupPosition, setShowPopup } = usePopupContactActions();\n  const { colorMode } = useThemeUI();\n  const {\n    setCurrentChat,\n    addNewConversationToMessagesStorage,\n  } = cacheMutations;\n  const { refetch: fetchSingleChatConversation } = useQuery(\n    FETCH_SINGLE_CHAT_CONVERSATION,\n    {\n      fetchPolicy: \"network-only\",\n      skip: true,\n    }\n  );\n  const onClickThreeDots = (e) => {\n    e.stopPropagation();\n    setShowPopup(true);\n    const positionY =\n      e.pageY > window.innerHeight * 0.75\n        ? e.pageY - 0.25 * window.innerHeight\n        : e.pageY;\n    setPopupPosition({ left: e.pageX, top: positionY });\n  };\n\n  const onSetCurrentChat = async (e) => {\n    if (!messagesStorage[friend._id]) {\n      const { data } = await fetchSingleChatConversation({\n        conversationId: friend._id,\n        scope: \"PERSONAL\",\n      });\n      if (data) {\n        const { fetchSingleChatConversation } = data;\n        addNewConversationToMessagesStorage(\n          friend._id,\n          fetchSingleChatConversation\n        );\n      }\n    }\n    setCurrentChat({...friend, scope: \"PERSONAL\"});\n  };  \n  return (\n    <ContactItemWrapper\n      theme={colorMode}\n      onMouseEnter={() => setShowSettings(true)}\n      onMouseLeave={() => setShowSettings(false)}\n      onClick={onSetCurrentChat}\n    >\n      <Avatar active={friend.isOnline}>\n        <LazyLoadImage src={friend.avatar} />\n      </Avatar>\n      <UserContactOverview>{friend.name}</UserContactOverview>\n      <ContactControls\n        show={showSetting}\n        onClick={(e) => onClickThreeDots(e)}\n        aria-label=\"chat-contact-settings\"\n      >\n        <ThreeDotsSetting />\n      </ContactControls>\n    </ContactItemWrapper>\n  );\n};\n\nexport default React.memo(ContactItem);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/signup.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/acceptRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/removeFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/unFollowUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/followUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/cancelRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/rejectRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/user/sendRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx",["1218"],"import styled, {css} from \"styled-components\"\n\n\nexport const Wrapper = styled.header`\nheight: 65px;\nwidth : 100%; \nbackground-color : #e8f5e9;\ndisplay : flex;\npadding: 1rem 2rem;  \njustify-content: space-between;\nalign-items : center;\n`\n\nexport const User = styled.div`\ndisplay : flex;\nalign-items : center;  \n`\n\nexport const Avatar = styled.div`\nwidth : 2.5rem;\nheight : 2.5rem;\n& > img{\n  width : 100%; \n  height: 100%;\n  border-radius : 50%;\n}\n`\n\nexport const UserInfo  = styled.div`\nmargin-left : 0.4rem;\nh4{\n  font-size : 1rem;\n}\nflex: 1;\n`\n\nexport const Controls = styled.div`\n  display : flex;\n  align-items: center;\n`\n\nexport const LinkItem = styled.span`\n  display : inline-block;\n  cursor : pointer;\n  font-size : 1.4rem;\n  margin :  0  0.5rem;\n  ${({phone}) => phone && `\n    color : #039be5 ;\n    &:hover{\n      color : #0277bd ; \n    }\n  `} \n  ${({video}) => video && `\n    color : #e53935; \n    &:hover{\n      color : #c62828;\n    }\n  `}\n  ${({photo}) => photo &&`\n    color : #00897b;\n    &:hover{\n      color : #00695c;\n    }\n  `}\n\n  ${({file}) => file && `\n    color : #3949ab;\n    &:hover{\n      color: #283593;\n    }\n  `}\n \n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx",["1219","1220"],"import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  BubbleContainer,\n  Message,\n  MentionWrapper,\n  MentionInfo,\n  MentionLinkInfo,\n  MentionAvatar,\n  BubbleTimeline,\n  ImageContainer,\n  AttachmentContainer,\n} from \"./styles/Bubble.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { convertFromRaw, EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport Moment from \"react-moment\";\nimport LazyLoad from \"react-lazyload\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nconst linkifyPlugin = createLinkifyPlugin({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n});\nconst mentionPlugin = createMentionPlugin({\n  mentionComponent({ mention }) {\n    return (\n      <MentionWrapper to={`/${mention.slug}`}>\n        <MentionLinkInfo to={`/${mention.slug}`}>\n          <MentionAvatar src={mention.avatar} />\n          <MentionInfo>\n            <span>{mention.name}</span>\n            <span>@{mention.slug}</span>\n          </MentionInfo>\n        </MentionLinkInfo>\n        <span>@{mention.name}</span>\n      </MentionWrapper>\n    );\n  },\n});\nconst Bubble = ({ message, me, user, senderAvatar, index }) => {\n  const [editorState, setEditorState] = useState(() =>\n    message.messageType === \"TEXT\"\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(message.text)))\n      : null\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [bubbleDimensions, setBubbleDimensions] = useState({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const bubbleRef = useRef(null);\n  useEffect(() => {\n    if (bubbleRef.current) {\n      setBubbleDimensions(bubbleRef.current.getBoundingClientRect());\n    }\n  }, [bubbleRef]);  \n  \n  if (!user) return null;  \n  return (\n    \n      <Wrapper index={index}>\n        <BubbleContainer me={me}>\n          <Avatar>\n            <LazyLoadImage src={senderAvatar} />\n          </Avatar>\n          <Message me={me} ref={bubbleRef} messageType={message.messageType}>\n            {message.messageType === \"TEXT\" ? (\n              <Editor\n                editorState={editorState}\n                setEditorState={setEditorState}\n                plugins={[linkifyPlugin, mentionPlugin]}\n                onChange={setEditorState}\n                readOnly\n              />\n            ) : message.messageType === \"IMAGE\" ? (\n              <ImageContainer>\n                <img\n                  src={message.file.data}\n                  alt={message.file.filename}\n                  onClick={() => setIsOpen(true)}\n                />\n                {isOpen && (\n                  <Lightbox\n                    mainSrc={message.file.data}\n                    onCloseRequest={() => setIsOpen(false)}\n                  />\n                )}\n              </ImageContainer>\n            ) : message.messageType === \"ATTACHMENT\" ? (\n              <AttachmentContainer>\n                <a\n                  href={message.file.data}\n                  download={message.file.filename}\n                  title={message.file.filename}\n                >\n                  {message.file.filename}\n                </a>\n              </AttachmentContainer>\n            ) : null}\n          </Message>\n        </BubbleContainer>\n        <BubbleTimeline width={bubbleDimensions.width} me={me}>\n          <div>\n            <span>\n              <Moment fromNow>{+message.createdAt}</Moment>\n            </span>\n            {user._id === message.sender._id ? (\n              <span style={{ textTransform: \"capitalize\" }}>\n                {message.receiverStatus.toLowerCase()}\n              </span>\n            ) : null}\n          </div>\n        </BubbleTimeline>\n      </Wrapper>\n    \n  );\n};\n\nexport default Bubble;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/ToggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/NewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/CountNumbeNotificationUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/PersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Notification/Notifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/Post/Posts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/ReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/SentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/Friends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/UserAuth.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/User/CurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js",["1221","1222"],"import { client, restartWebsocketConnection, closeWebsocketConnection } from \"../../apollo/client\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport {\n  User,\n  Posts,\n  Notifications,\n  NewNotifications,\n  CountNumberNotificationsUnseen,  \n  CurrentChat,\n  Friends,\n  MessagesStorage\n} from \"../../apollo/models\";\nconst clearCache = () => {\n  const {\n    setCurrentUser,\n    setCountNumberNotificationsUnseen,\n    setNotifications,\n    setNewNotifications,\n    setPosts,      \n    clearCurrentChat ,\n    setFriends,\n    clearMessageStorage\n  } = cacheMutations;\n  setCurrentUser(User);\n  setCountNumberNotificationsUnseen(CountNumberNotificationsUnseen);\n  setPosts(Posts);\n  setNotifications(Notifications);\n  setNewNotifications(NewNotifications);  \n  clearCurrentChat();\n  setFriends(Friends);\n  clearMessageStorage();\n}\n\nconst logout = async () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"tokenExpire\");    \n  clearCache();\n  await client.resetStore();   \n  closeWebsocketConnection() \n};\n\nconst login = async (user, token, tokenExpire) => {\n  await logout();  \n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\n    \"tokenExpire\",\n    new Date(Date.now() + tokenExpire * 1000)\n  );  \n  const {setCurrentUser} = cacheMutations  \n  setCurrentUser({...user})  \n  restartWebsocketConnection()\n};\n\nexport { logout, login };\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx",["1223"],"import styled, {css} from 'styled-components'\nimport {Link} from \"react-router-dom\"\n\nexport const FriendsBoardWrapper = styled.div`\n  position : fixed; \n  top : 60px;\n  right: 0 ;\n  height: calc(100% - 60px);    \n  width : 300px;  \n  overflow: auto;\n  transition : var(--mainTransition);\n  z-index : ${({show}) => show ? 2 : -1};\n`\n\nexport const FriendsListWrapper = styled.div`\n  height: auto;\n  min-height: 95vh;\n  width :100%;  \n  border-radius : 6px;\n  box-shadow : var(--mediumShadow);\n  transition : var(--mainTransition);\n  border-left: 1px solid ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};\n  background-color: ${({theme}) => theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  position : relative;\n  ${({show}) => show ? css`\n    transform: translateX(0);\n  ` : css`\n    transform : translateX(100%);\n  `}  \n`\n\nexport const TitleContacts = styled.div`\n  display : flex;\n  justify-content : space-between;\n  align-items : center;\n  padding : 1rem;  \n`\n\nexport const FriendsListSearch = styled.div`\n  flex: ${({show}) => show ? 1 : \"unset\"};\n  display : flex;\n  justify-content : space-between;\n  position : relative;\n  transition : var(--secondTransition);\n  background-color : ${({theme, show}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n  border-radius : 3rem;  \n  overflow : hidden;  \n  width : ${({show}) => show ? \"90%\" : \"2rem\"};\n  transition-delay : width 0.15s;\n  input{\n    flex:  1;\n    display : ${({show}) => show ? \"block\" : \"none\"};\n    width : ${({show}) => show ? \"calc(100% - 2rem)\" : 0};    \n    padding : 0 0.7rem;  \n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n    outline : none ; \n    border: ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};    \n    font-size : 1rem;\n    color :  ${({theme}) => theme === \"dark\" ? \"var(--color-text-dark)\" : \"var(--color-text-default)\"};\n  }\n  \n  button{      \n    outline : none ; \n    border: none ;\n    text-align : center;\n    width : 2rem;\n    height:  2rem;\n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray-dark)\" : \"var(--gray-light)\"}; \n    border-radius : 50%;\n    display : flex;\n    align-items: center;\n    justify-content : center;\n    cursor : pointer;\n    &:hover{\n      background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-deep)\"}; \n    }\n  }\n  \n`\n\nexport const FriendsListTitle = styled.h4`\n  font-size : 1.1rem;\n  width : ${({hide})  => hide ? \"0\" : \"auto\"};   \n  visibility : ${({hide}) => hide ? \"hidden\" : \"visible\"};\n  transform : ${({hide}) => hide ?  \"translateX(-200%)\" : \"translateX(0)\"};  \n  transition : 0.12s all; \n  transition-delay: 0.05;\n`\n\nexport const ButtonClose = styled.button`\n  position : absolute;\n  top : 50vh;\n  right:  0;\n`\n\nexport const ImageContainer = styled.div`\n\n`","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx",["1224"],"import React, {useState, useRef, useEffect} from \"react\";\nimport { FriendsListWrapper, TitleContacts, FriendsListSearch, FriendsListTitle } from \"./Sidebar.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  GET_CURRENT_USER,\n  GET_FRIENDS,\n} from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport FriendItem from \"./FriendItem\";\nimport {Scrollbars} from \"react-custom-scrollbars\"\nimport useLanguage from \"../Global/useLanguage\" \nimport {FaSearch} from \"react-icons/fa\"\n\nconst FriendsList = ({ show }) => {\n  const { colorMode } = useThemeUI();\n  const [openSearch, setOpenSearch] = useState(false)\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-and-network\" });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-and-network\" });\n  const inputRef = useRef(null)\n  const {i18n, lang} = useLanguage()\n\n  useEffect(() => {\n          \n    if(openSearch){\n      inputRef.current.focus();\n    }\n  },[openSearch])\n  const onClickSearchButton = () => {\n    inputRef.current.focus();\n    setOpenSearch(true);\n   \n  }\n  if (!friends.length) return null;\n  return (\n    <Scrollbars\n      autoHide\n      autoHideTimeout={1000}\n      autoHideDuration={200}\n      autoHeightMin={0}\n      autoHeightMax={200}            \n    >          \n      <FriendsListWrapper show={show} theme={colorMode}>\n        <TitleContacts>\n          <FriendsListTitle hide={openSearch}>{i18n.store.data[lang].translation.contacts.contactsList}</FriendsListTitle>\n          <FriendsListSearch show={openSearch} theme={colorMode}>\n            <input ref={inputRef} type=\"text\" placeholder={i18n.store.data[lang].translation.controls.search} onBlur={() => setOpenSearch(false)} />\n            <button onClick={onClickSearchButton}><FaSearch/></button>\n          </FriendsListSearch>\n        </TitleContacts>\n        {friends.map((friend) => (\n          <FriendItem key={friend._id} data={friend} />\n        ))}        \n      </FriendsListWrapper>\n    </Scrollbars>\n  );\n};\n\nexport default FriendsList;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx",["1225"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  notificationMutations,\n  userMutations,\n  cacheMutations,\n} from \"../../apollo/operations/mutations\";\nimport {\n  GET_CURRENT_USER,\n  GET_NEW_NOTIFICATIONS,\n  GET_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n  GET_CURRENT_PERSONAL_USER,  \n} from \"../../apollo/operations/queries/cache\";\nimport classNames from \"classnames\";\nimport styled from \"styled-components\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport useLanguage from \"../Global/useLanguage\";\nimport Moment from \"react-moment\";\nimport {\n  notificationContent,\n  showResponseButtons,\n} from \"../../utils/notificationContent\";\n\nimport { useThemeUI } from \"theme-ui\";\nconst NotificationItem = ({ notification, notifications }) => {\n  //Query\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-and-network\" });\n  const {\n    data: { newNotifications },\n  } = useQuery(GET_NEW_NOTIFICATIONS, { fetchPolicy: \"cache-first\" });  \n  const {\n    data: { currentPersonalUser },\n  } = useQuery(GET_CURRENT_PERSONAL_USER, { fetchPolicy: \"cache-first\" });\n  const {\n    data: { countNumberNotificationsUnseen },\n  } = useQuery(GET_COUNT_NUMBER_NOTIFICATIONS_UNSEEN, {\n    fetchPolicy: \"cache-first\",\n  });\n  //Mutations\n  const {\n    setNotifications,\n    decreaseNumberNotificationsUnseen,\n    setCurrentUser,    \n    setCurrentPersonalUser,\n  } = cacheMutations;\n  const [updateToHasSeen] = useMutation(\n    notificationMutations.UPDATE_USER_HAS_SEEN_NOTIFICATION\n  );\n  const [acceptRequestToAddFriend] = useMutation(\n    userMutations.ACCEPT_REQUEST_TO_ADD_FRIEND\n  );\n  const [rejectRequestToAddFriend] = useMutation(\n    userMutations.REJECT_REQUEST_TO_ADD_FRIEND\n  )\n  const { lang } = useLanguage();\n  const handleUserClickHasSeen = (notification) => {\n    if (!notification.hasSeen.includes(user._id)) {\n      updateToHasSeen({ variables: { notificationId: notification._id } }).then(\n        (res) => {\n          //set Notification again\n          setNotifications(\n            notifications.map((notificationItem) =>\n              notificationItem._id.toString() === notification._id.toString()\n                ? {\n                    ...notificationItem,\n                    hasSeen: [...notificationItem.hasSeen, user._id],\n                  }\n                : { ...notificationItem }\n            )\n          );\n          //count number notification unseen again\n          decreaseNumberNotificationsUnseen();\n        }\n      );\n    }\n  };\n\n  const updateMutationOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...sender.friends],\n      following: [...sender.following],\n      followed: [...sender.followed],\n      sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n    });    \n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id === notification.creator._id\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        following: [...receiver.following],\n        followed: [...receiver.followed],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n      });\n    }\n  };\n\n  const onAcceptRequestToAddFriend = () => {\n    acceptRequestToAddFriend({\n      variables: { senderId: notification.creator._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.acceptRequestToAddFriend;\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n\n  const onRejectRequestToAddFriend = () => {\n    rejectRequestToAddFriend({\n      variables : {senderId : notification.creator._id }\n    }).then(({data}) => {\n      const { sender, receiver } = data.rejectRequestToAddFriend;\n        updateMutationOnChange(sender, receiver);        \n    })\n  }\n  const { colorMode } = useThemeUI();\n  if (!user) return null;\n  return (\n    <Wrapper theme={colorMode}>\n      <div\n        className={classNames(\"notification-item-container\", {\n          unseen: !notification.hasSeen.includes(user._id),\n        })}\n      >\n        <Link\n          to={notification.href}\n          key={notification._id}\n          className={classNames(\"notification-link\", {\n            unseen: !notification.hasSeen.includes(user._id),\n          })}\n          onClick={() => handleUserClickHasSeen(notification)}\n        >\n          <div className=\"avatar-container\">\n            <LazyLoadImage\n              src={`${notification.creator.avatar}`}\n              alt={notification.href}\n              effect=\"blur\"\n              width=\"40px\"\n              height=\"40px\"\n            />\n          </div>\n          <div className=\"notification-content\">\n            <span className=\"creator-name\">{notification.creator.name} </span>\n            <span>\n              {notificationContent(\n                notification.field,\n                notification.action,\n                lang\n              )}\n            </span>\n            <div className=\"notification-datetime\">\n              <Moment\n                fromNow\n                className={newNotifications.has(notification._id) ? \"new\" : \"\"}\n              >\n                {new Date(+notification.createdAt)}\n              </Moment>\n            </div>\n          </div>\n        </Link>\n        {showResponseButtons(notification, user) && (\n          <ButtonsGroup>\n            <ButtonAccept onClick={onAcceptRequestToAddFriend}>\n              Accept\n            </ButtonAccept>\n            <ButtonDecline onClick={onRejectRequestToAddFriend}>Decline</ButtonDecline>\n          </ButtonsGroup>\n        )}\n      </div>\n    </Wrapper>\n  );\n};\nconst ButtonsGroup = styled.div`\n  display: flex;\n  padding: 1rem;\n`;\n\nconst ButtonAccept = styled.button`\n  padding: 0.5rem 1rem;\n  outline: none;\n  border: none;\n  background-color: #16c172e3;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: var(--white);\n  &:hover {\n    background-color: #009651e3;\n  }\n`;\nconst ButtonDecline = styled.button`\n  padding: 0.5rem 1rem;\n  outline: none;\n  border: none;\n  background-color: #ec1b1be3;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: var(--white);\n  &:hover {\n    background-color: #c70000e3;\n  }\n`;\n\nconst Wrapper = styled.div`\n  .notification-item-container:hover {\n    background-color: ${({ theme }) =>\n      theme === \"dark\"\n        ? \"var(--color-background-dark)\"\n        : \"var(--color-background-default)\"};\n  }\n  .unseen {\n    background-color: ${({ theme }) =>\n      theme === \"dark\" ? \"var(--dark)\" : \"var(--light)\"};\n  }\n  .notification-link {\n    display: flex;\n    align-items: flex-start;\n    padding: 0.6rem;\n    transition: var(--mainTransition);\n    &:last-child {\n      overflow: hidden;\n    }\n    &:hover {\n      background-color: inherit;\n    }\n  }\n\n  .avatar-container {\n    width: 40px;\n    height: 40px;\n    margin-right: 0.5rem;\n    & img {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n    }\n  }\n  .notification-content {\n    font-size: 0.9rem;\n  }\n  .notification-datetime {\n    font-size: 0.85rem;\n    opacity: 0.7;\n  }\n  .new {\n    font-weight: bold;\n    color: red;\n  }\n  .creator-name {\n    font-weight: bolder;\n  }\n`;\n\nexport default React.memo(NotificationItem);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx",["1226","1227"],"import React, { useState, useEffect } from \"react\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport styled from \"styled-components\";\nimport ButtonLogin from \"../Controls/ButtonLogin\"\nimport ButtonSignUp from \"../Controls/ButtonSignUp\"\nimport {useLocation} from \"react-router-dom\"\nconst CardUtility = () => {\n  const [welcome, setWelcome] = useState(\"\");\n  const [introduce, setIntroduce] = useState(\"\");\n  const [askLogin, setAskLogin] = useState(\"\");\n  const { colorMode } = useThemeUI();\n  const { lang, i18n } = useLanguage();\n  const {pathname} = useLocation()\n \n  useEffect(() => {\n    setWelcome(i18n.store.data[lang].translation.greeting.welcome);\n    setIntroduce(i18n.store.data[lang].translation.greeting.introduce);\n    setAskLogin(i18n.store.data[lang].translation.greeting.askLogin);\n  }, [lang]);\n\n  return <CardWrapper theme={colorMode}>\n    <Welcome>{welcome}</Welcome>\n    <div>{introduce}</div>   \n    <div className=\"auth\">\n      <ButtonLogin to=\"/auth\" from={pathname}>Login</ButtonLogin>\n      <ButtonSignUp to=\"/auth/signup\" from={pathname}>SignUp</ButtonSignUp>\n    </div>\n  </CardWrapper>;\n};\n\nconst CardWrapper = styled.aside`\n  background-color: ${({ theme }) =>\n    theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  text-align: center;\n  border-radius: 0.7rem;\n  overflow: hidden;\n  padding: 1.5rem;\n  .auth{\n    &> *{\n      margin : 1rem 0;\n    }\n  }\n`;\n\nconst Welcome = styled.h4`\n  font-size : 1.1em;\n  font-weight : 600;\n`\n\n\n\nexport default CardUtility;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Header.jsx",["1228"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Brand from \"./Brand\";\nimport Search from \"./Search\";\nimport Navigation from \"./Navigation\";\nimport MessengerAndNotification from \"./MessengerAndNotification\";\nimport SettingAccount from \"./SettingAccount\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport ButtonMenu from \"../Controls/ButtonMenu\";\nimport {cacheMutations} from \"../../apollo/operations/mutations\";\nimport classNames from \"classnames\";\nimport { GET_CURRENT_USER } from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport { useLocation } from \"react-router-dom\";\nimport { useThemeUI } from \"theme-ui\";\nimport ButtonLogin from \"../Controls/ButtonLogin\";\nimport ButtonSignUp from \"../Controls/ButtonSignUp\";\nconst Header = () => {\n  const [openSearch, setOpenSearch] = useState(false);\n  const {\n    data: { user },\n    loading,\n  } = useQuery(GET_CURRENT_USER, {\n    fetchPolicy: \"cache-only\",\n  });  \n  const { colorMode } = useThemeUI();\n  const { pathname } = useLocation();\n\n  const { toggleButtonMenu } = cacheMutations;\n  \n  const NavControls = user ? (\n    <div className=\"nav-controls\">\n      <div className=\"center\">\n        <div className=\"nav-toggle\">\n          <ButtonMenu onClick={toggleButtonMenu} />\n        </div>\n        <div className=\"nav-bar\">\n          <Navigation />\n        </div>\n\n        <div className=\"control\">\n          <MessengerAndNotification />\n        </div>\n      </div>\n      <div className=\"setting-account\">\n        <SettingAccount />\n      </div>\n    </div>\n  ) : (\n    <div className=\"nav-controls\">\n      <div className=\"nav-auth\">\n        <ButtonLogin to=\"/auth\" from={pathname}>\n          Login\n        </ButtonLogin>\n        <ButtonSignUp to=\"/auth/signup\" from={pathname}>\n          Sign up\n        </ButtonSignUp>\n        <div className=\"setting-account\">\n          <SettingAccount />\n        </div>\n      </div>\n    </div>\n  );\n  if (loading) return <div>Loading...</div>;\n  return (\n    <Wrapper theme={colorMode}>\n      <div className={classNames(\"nav-header\", { shorten: !openSearch })}>\n        <div className={classNames(\"nav-brand\", { hide: openSearch })}>\n          <Brand />\n        </div>\n        <div\n          className={classNames(\n            \"close-search\",\n            { \"on-search-open\": !openSearch },\n            { hide: !openSearch }\n          )}\n        >\n          <Button onClick={() => setOpenSearch(false)} variant=\"outlined\">\n            <FaArrowLeft />\n          </Button>\n        </div>\n        <div className={classNames(\"search-bar\")}>\n          <Search\n            openSearch={openSearch}\n            setOpenSearch={() => setOpenSearch(true)}\n          />\n        </div>\n      </div>\n      {NavControls}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.header`\n  width: 100vw;\n  height: 60px;\n  background-color: ${({ theme }) =>\n    theme === \"dark\"\n      ? \"var(--color-background-dark)\"\n      : \"var(--color-background-default)\"};\n  border-bottom: 1px solid\n    ${({ theme }) => (theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-light)\")};\n  position: fixed;\n  top: 0;\n  padding: 0 0.4rem;\n  display: flex;\n  align-items: center;\n  flex-wrap: no-wrap;\n  z-index: 100;\n  .nav-header {\n    display: flex;\n    align-items: center;\n    transition: var(--mainTransition);\n    flex-wrap: nowrap;\n    .nav-brand,\n    .on-search-open {\n      width: 60px;\n      transition: var(--mainTransition);\n    }\n    .search-bar {\n      width: calc(100% - 60px);\n      transition: var(--mainTransition);\n    }\n    .nav-brand {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .nav-controls {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: var(--mainTransition);\n    height: 100%;\n    padding: 0 1.5rem;\n    .nav-bar {\n      display: none;\n    }\n    .center {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: space-between;\n      flex: 1;\n      padding: 0 0.5rem;\n    }\n    .nav-toggle {\n      margin-right: 0.75rem;\n    }\n    .nav-auth {\n      width: 100%;\n      display: flex;\n      justify-content: flex-end;\n      & > * {\n        font-size: 0.8em;\n        margin-right: 0.25rem;\n      }\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .hide {\n      width: 0 !important;\n      opacity: 0;\n      visibility: hidden;\n      transition: var(--mainTransition);\n      transition-delay: 0.5s;\n    }\n    .shorten {\n      width: auto !important;\n      transition: var(--mainTransition);\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding: 0 2rem;\n    .close-search {\n      display: none;\n    }\n    .nav-header {\n      width: 30%;\n    }\n    .nav-controls {\n      width: 70%;\n      .nav-bar {\n        display: block;\n        height: 100%;\n      }\n      .center {\n        justify-content: flex-end;\n      }\n      .control {\n        padding: 0 0.5rem;\n      }\n    }\n  }\n  @media screen and (min-width: 992px) {\n    .nav-header {\n      width: 35%;\n    }\n    .nav-controls {\n      width: 65%;\n      .nav-toggle {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport default React.memo(Header);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersReceivedRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchUsersSentRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchListContact.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/fetchCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/login.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/removeFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/cancelRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/user/rejectRequestToAddFriendSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/postCreated.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/updateCountNotificationsWhenSeen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyReceivedRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyAcceptRequestToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/notificationContent.js",["1229","1230","1231","1232","1233","1234","1235"],"import i18n from \"../i18n\"\n\nconst notificationContent = (field, action, lang) => {\n  const {notifications} = i18n.store.data[lang].translation;\n  field = field.toLowerCase();\n  action = action.toUpperCase();  \n\n  switch(field){\n    case \"post\" : \n      switch(action){        \n        case \"MENTION\" : {          \n          return notifications.postMention; \n        };\n        case \"LIKE\" : {\n          return notifications.likePost;\n        }\n      }\n    case \"user\" : \n      switch(action){\n        case \"ADDED\" : return  notifications.sentRequestToAddFriend;\n        case \"ACCEPTED\" : return notifications.acceptRequestToAddFriend\n      }\n    case \"comment\" : \n      switch(action){\n        case \"MENTION\" : return notifications.commentMention; \n        case \"CREATED\" : return notifications.commentCreated;\n      }\n  }\n}\n\nconst showResponseButtons = (notification, user) => {\n  const field = notification.field.toLowerCase();\n  const action = notification.action.toUpperCase();\n  if(field === \"user\" && action === \"ADDED\" && user.receivedRequestToAddFriend.includes(notification.creator._id)){\n    return true ; \n  }\n  return false ;\n}\n\nexport {notificationContent , showResponseButtons}","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx",["1236","1237","1238"],"import React, { useEffect, useState, useRef, useCallback } from \"react\";\n\nimport {\n  Wrapper,\n  Notification,\n  UnseenNotification,\n  NotificationBoard,\n} from \"./styles/Header.styles\";\nimport { IoMdNotifications } from \"react-icons/io\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport NotificationsBoard from \"./NotificationsBoard\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { GET_HEADER_CACHE_DATA } from \"../../apollo/operations/queries/cache\";\nimport { FETCH_NOTIFICATIONS } from \"../../apollo/operations/queries/notification\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport FlashPopUpNotification from \"../Notification/FlashPopUpNotification\";\n\nconst Control = () => {\n  const [openNotificationBoard, setOpenNotificationBoard] = useState(false);\n  const [loadingNotificationsMore, setLoadingNotificationsMore] = useState(\n    false\n  );\n  const notificationRef = useRef(false);\n  const { setLatestNotification, setNotifications } = cacheMutations;\n\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const {\n    data: { user, notifications, countNumberNotificationsUnseen },\n  } = useQuery(GET_HEADER_CACHE_DATA, { fetchPolicy: \"cache-and-network\" });\n  useEffect(() => {\n    function handleClickOutsideNotificationBoard(e) {\n      if (\n        openNotificationBoard\n      ) {\n        setOpenNotificationBoard(false);\n      }\n    }\n    window.addEventListener(\"click\", handleClickOutsideNotificationBoard);\n    return () =>\n      window.removeEventListener(\"click\", handleClickOutsideNotificationBoard);\n  }, [notificationRef.current , openNotificationBoard]);\n\n  const handleClickNotification = useCallback(async () => { \n    setLoadingNotificationsMore(false);\n    setOpenNotificationBoard((prevStatus) => !prevStatus);\n    setLatestNotification(null);\n  });\n\n\n  const getMoreNotifications = (e) => {\n    const { target } = e;\n    if (target.clientHeight + target.scrollTop > target.scrollHeight * 0.75) {\n      setLoadingNotificationsMore(true);\n    }\n  };\n  useEffect(() => {\n    let _isMounted = true;\n    if (loadingNotificationsMore && fetchNotifications) {\n      const skip = notifications.length;\n      const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n      fetchNotifications({ skip, limit }).then(\n        ({ data: { fetchNotifications } }) => {\n          if (_isMounted) {\n            setNotifications([...notifications, ...fetchNotifications]);\n            setLoadingNotificationsMore(false);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [loadingNotificationsMore]);\n\n  const onOpenNotificationBoard = useCallback(() => {\n    setOpenNotificationBoard(true);\n  },[]);\n\n  return (\n    <Wrapper>     \n      <Notification ref={notificationRef}>\n        <FlashPopUpNotification onClick={onOpenNotificationBoard} />\n        <Button onClick={handleClickNotification}>\n          <IoMdNotifications />\n          {countNumberNotificationsUnseen ? (\n            <UnseenNotification>\n              {countNumberNotificationsUnseen}\n            </UnseenNotification>\n          ) : null}\n        </Button>\n        {user && (\n          <NotificationBoard open={openNotificationBoard}>\n            <Scrollbars\n              autoHide\n              autoHideTimeout={1000}\n              autoHideDuration={200}\n              autoHeightMin={0}\n              autoHeightMax={200}\n              onScroll={getMoreNotifications}\n            >\n              <NotificationsBoard />\n            </Scrollbars>\n          </NotificationBoard>\n        )}\n      </Notification>\n    </Wrapper>\n  );\n};\n\nexport default Control;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Search.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Brand.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/notification/updateUserHasSeenNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/MessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Editor.jsx",[],["1239","1240"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Editor/Link.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/CurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/index.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/sentMessageChatSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useChatSubscriptions.jsx",["1241","1242"],"import { useEffect } from \"react\";\nimport chatSubscriptions from \"../../apollo/operations/subscriptions/chat\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../../apollo/operations/queries/chat/fetchChatConversations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  GET_CURRENT_USER,\n  GET_CURRENT_CHAT,\n} from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE } from \"../../apollo/operations/mutations/chat\";\n\nconst useChatSubscriptions = () => {\n  const { subscribeToMore: subscribeChatMessage } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const {\n    SENT_MESSAGE_CHAT_SUBSCRIPTION,\n    NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n    SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n    NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n  } = chatSubscriptions;\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-only\" });\n  const {\n    setMessagesStorage,\n    updateMessagesStorage,\n    updateMessagesStorageWhenReceiverSeenAllMessages,\n    updateMessagesStorageToReceivedWhenUserOnline,\n  } = cacheMutations;\n  const [updatePersonalReceiverWhenReceivedNewMessage] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE\n  );\n  useEffect(() => {\n    let unsubscribeChatMessage;\n    let unsubscribeNotifySenderThatReceiverHasReceivedMessage;\n    let unsubscribeSubscribeReceiverHasSeenAllMessages;\n    let unsubscribeNotifySendersReceiverOnlineHasReceivedMessages;\n    if (subscribeChatMessage && user) {\n      unsubscribeChatMessage = subscribeChatMessage({\n        document: SENT_MESSAGE_CHAT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            action,\n            scope,\n            message,\n          } = subscriptionData.data.sentMessageChatSubscription;\n          const { sender } = message;\n        \n          setMessagesStorage(sender, message, scope, false);\n          //update Delivered status\n          const messageStatus =\n            currentChat?._id === sender._id ? \"SEEN\" : \"DELIVERED\";\n          updatePersonalReceiverWhenReceivedNewMessage({\n            variables: { messageId: message._id, messageStatus },\n          });\n        },\n      });\n      unsubscribeNotifySenderThatReceiverHasReceivedMessage = subscribeChatMessage(\n        {\n          document: NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const {\n              action,\n              scope,\n              message,\n            } = subscriptionData.data.notifySenderThatReceiverHasReceivedMessageChat;\n            const { receiver } = message;\n            updateMessagesStorage(receiver, message, scope, action === \"SEEN\");\n          },\n        }\n      );\n      unsubscribeSubscribeReceiverHasSeenAllMessages = subscribeChatMessage({\n        document: SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            receiverId,\n          } = subscriptionData.data.senderSubscribeWhenReceiverHasSeenAllMessages;\n          updateMessagesStorageWhenReceiverSeenAllMessages(receiverId);\n        },\n      });\n      unsubscribeNotifySendersReceiverOnlineHasReceivedMessages = subscribeChatMessage(\n        {\n          document: NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const {\n              receiver,\n            } = subscriptionData.data.notifySendersThatReceiverOnlineHasReceivedMessagesChat;\n            updateMessagesStorageToReceivedWhenUserOnline(receiver);\n          },\n        }\n      );\n    }\n    return () => {\n      if (unsubscribeChatMessage) {\n        unsubscribeChatMessage();\n      }\n      if (unsubscribeNotifySenderThatReceiverHasReceivedMessage) {\n        unsubscribeNotifySenderThatReceiverHasReceivedMessage();\n      }\n      if (unsubscribeSubscribeReceiverHasSeenAllMessages) {\n        unsubscribeSubscribeReceiverHasSeenAllMessages();\n      }\n      if(unsubscribeNotifySendersReceiverOnlineHasReceivedMessages){\n        unsubscribeNotifySendersReceiverOnlineHasReceivedMessages()\n      }\n    };\n  }, [subscribeChatMessage, user, currentChat]);\n};\n\nexport default useChatSubscriptions;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySenderThatReceiverHasReceivedMessageChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatFile.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/utils/generateBase64Image.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/senderSubscribeWhenReceiverHasSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/updateHaveSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/sendMessageChatText.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/chat/personal/updatePersonalReceiverWhenReceivedNewMessage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx",["1243","1244","1245","1246","1247"],"import React, { useState, useEffect, createContext, useRef } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport { GET_CURRENT_USER } from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport ListConversations from \"./ListConversations\";\nimport { useThemeUI } from \"theme-ui\";\nimport ChatBoard from \"./ChatBoard\";\n\nexport const MessagesContext = createContext({});\nconst Conversations = () => {\n  //query\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-first\" });\n\n  //state\n  const [showPopup, setShowPopup] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [originalData, setOriginalData] = useState([]);  \n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const {setCurrentChat} = cacheMutations\n  const { colorMode } = useThemeUI();\n  const popupRef = useRef(null);\n\n  //empty current chat when change page\n  useEffect(()=>{\n    setCurrentChat(null);\n  },[])\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-messages-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n\n  if (!user) return null;\n  return (\n    <MessagesContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top}\n      >\n        <span>Pin this conversation</span>\n        <hr />\n        <span>Label</span>\n        <hr />\n        <span>Add to group</span>\n        <span>Turn notification off</span>\n        <hr />\n        <span>Delete conversation</span>\n        <hr />\n        <span>Report</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search />\n          <hr />\n          <ListConversations />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </MessagesContext.Provider>\n  );\n};\n\nexport default Conversations;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx",["1248"],"import React, { useState, useEffect } from \"react\";\nimport { Wrapper } from \"./styles/ListContacts.styles\";\nimport ContactItem from \"./ContactItem\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport { useQuery } from \"@apollo/client\";\nimport { FETCH_FRIENDS } from \"../../apollo/operations/queries/user/fetchFriends\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nconst ListContacts = ({ data }) => {\n  const { setShowPopup } = usePopupContactActions();\n  const [loadContactMore, setLoadContactMore] = useState(false);\n  const { refetch: fetchMoreContacts } = useQuery(FETCH_FRIENDS, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const { setFriends } = cacheMutations;\n  const onScrollListContacts = (e) => {\n    e.preventDefault();\n    const { clientHeight, scrollHeight, scrollTop } = e.target;\n    if (clientHeight + scrollTop > scrollHeight * 0.75) {\n      setLoadContactMore(true);\n    }\n  };\n\n  useEffect(() => {\n    if (loadContactMore) {\n      const skip = data.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchMoreContacts({ skip, limit }).then(({ data: { fetchFriends } }) => {\n        setFriends([...data, ...fetchFriends]);\n        setLoadContactMore(false);\n      });\n    }\n  }, [loadContactMore]);\n  if (!data.length) return null;\n  return (\n    <Wrapper\n      onScroll={() => setShowPopup(false)}\n      onScrollCapture={onScrollListContacts}\n    >\n      {data.map((friend) => (\n        <ContactItem key={`contact-${friend._id}`} friend={friend} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(ListContacts);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx",["1249","1250"],"import React, { useEffect, useState } from \"react\";\nimport { ListConversationsWrapper } from \"./styles/ListConversations.styles\";\nimport {\n  GET_MESSAGES_STORAGE,\n  GET_CURRENT_CHAT,\n  GET_CURRENT_USER,\n  GET_NUMBER_OF_CONVERSATIONS,\n} from \"../../apollo/operations/queries/cache\";\nimport ConversationItem from \"./ConversationItem\";\nimport _ from \"lodash\";\nimport { usePopupMessagesActions } from \"./hook/usePopupActions\";\nimport { FETCH_CHAT_CONVERSATIONS } from \"../../apollo/operations/queries/chat/fetchChatConversations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED } from \"../../apollo/operations/mutations/chat\";\nimport { cacheMutations } from \"../../apollo/operations/mutations\";\nconst ListConversations = () => {\n  //use Query\n  const {\n    data: { currentChat },\n  } = useQuery(GET_CURRENT_CHAT, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { messagesStorage },\n  } = useQuery(GET_MESSAGES_STORAGE, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { numberOfConversations },\n  } = useQuery(GET_NUMBER_OF_CONVERSATIONS, { fetchPolicy: \"cache-only\" });\n  const { refetch: fetchMoreConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    { fetchPolicy: \"cache-and-network\", skip: true }\n  );\n  //use State\n  const [_messagesStorage, _setMessagesStorage] = useState([]);\n  const [loadMoreConversations, setLoadMoreConversations] = useState(false);\n  const [\n    updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched,\n  ] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n  );\n  const { setInitialMessagesStorage } = cacheMutations;\n  const { setShowPopup } = usePopupMessagesActions();\n  useEffect(() => {\n    const _convertStorageToArray = Object.values(messagesStorage);\n    const _sortedByLatestMessages = _.sortBy(_convertStorageToArray, [\n      function (o) {\n        return -o.latestMessage.createdAt;\n      },\n    ]);\n    _setMessagesStorage([..._sortedByLatestMessages]);\n  }, [messagesStorage]);\n \n  useEffect(() => {\n    let isScrolling;\n    function onScrollListConversations(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollTop, clientHeight, scrollHeight } = e.target;\n        console.log(scrollTop, clientHeight, scrollHeight)\n        if (scrollTop + clientHeight > 0.8 * scrollHeight) {         \n          setLoadMoreConversations(true);\n        }\n      }, 66);\n    }\n    document.getElementById(\"list-conversations\").addEventListener(\n      \"scroll\",\n      (e) => {\n        onScrollListConversations(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById(\"list-conversations\").removeEventListener(\n        \"scroll\",\n        (e) => {\n          onScrollListConversations(e);\n        },\n        false\n      );\n    };\n  });\n  useEffect(() => {\n    let _isMounted = true;\n\n    if (\n      loadMoreConversations &&\n      numberOfConversations > _messagesStorage.length\n    ) {\n      console.log(\"load more\");\n      const skip = _messagesStorage.length;\n      const limit = +process.env.REACT_APP_NUMBER_CONVERSATIONS_LIMITATION;\n      const except = Object.keys(messagesStorage);\n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchMoreConversations({ except, skip, limit }).then(({ data }) => {\n        if (_isMounted) {\n          const { conversations } = data.fetchChatConversations;\n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n          setInitialMessagesStorage({ ...messagesStorage, ...storage });\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setLoadMoreConversations(false);\n        }\n      });\n    }\n  }, [loadMoreConversations, numberOfConversations]);\n\n  return (\n    <ListConversationsWrapper id=\"list-conversations\">\n      {_messagesStorage.length\n        ? _messagesStorage.map(\n            ({ profile, scope, latestMessage, hasSeenLatestMessage }) => (\n              <ConversationItem\n                key={`conversation-${profile._id}`}\n                conversation={profile}\n                scope={scope}\n                hasSeenLatestMessage={hasSeenLatestMessage}\n                latestMessage={latestMessage}\n                active={currentChat && currentChat._id === profile._id}\n              />\n            )\n          )\n        : null}\n    </ListConversationsWrapper>\n  );\n};\n\nexport default React.memo(ListConversations);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchChatConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/chat/NumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx",["1251","1252","1253","1254","1255"],"import React, {useState} from 'react'\nimport FriendsList from \"./FriendsList\"\nimport ButtonToggleFriendsList from \"../Controls/ButtonToggleFriendsList\"\nimport {FriendsBoardWrapper} from \"./Sidebar.styles\"\nimport {cacheMutations} from \"../../apollo/operations/mutations/cache\"\nimport {GET_OPEN_FRIENDS_LIST,GET_FRIENDS} from \"../../apollo/operations/queries/cache\"\nimport {FETCH_FRIENDS} from \"../../apollo/operations/queries/user\"\nimport {useQuery} from \"@apollo/client\"\nimport {useThemeUI} from \"theme-ui\"\nconst FriendsBoard = () => {\n  const {data : {openFriendsList}} = useQuery(GET_OPEN_FRIENDS_LIST, {fetchPolicy : \"cache-first\"})\n  return (\n    <FriendsBoardWrapper show={openFriendsList}>\n      <FriendsList show={openFriendsList} />\n      <ButtonToggleFriendsList />\n    </FriendsBoardWrapper>\n  )\n}\n\nexport default FriendsBoard\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useUserStatusSubscriptions.jsx",["1256","1257","1258"],"import { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CURRENT_USER, GET_FRIENDS } from \"../../apollo/operations/queries/cache\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport io from \"socket.io-client\";\nimport _ from \"lodash\"\nconst useUserStatusSubscriptions = () => {\n  const {\n    data: { user },\n  } = useQuery(GET_CURRENT_USER, { fetchPolicy: \"cache-only\" });\n  const {\n    data: { friends },\n  } = useQuery(GET_FRIENDS, { fetchPolicy: \"cache-only\" });\n  const {  updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage } = cacheMutations;\n  useEffect(() => {\n    const socket = io(\"http://localhost:5000\") ; \n    \n    if (user) {\n      console.log(\"render\")\n      //pass socket to backend to update status online \n      socket.open();     \n      const { _id, name, slug, avatar } = user;     \n      socket.emit(\"client-send-user-info\", {\n        _id,\n        name,\n        slug,\n        avatar,\n        isOnline: true,\n      });\n      socket.on(\"server-send-user-online\", (data) => {\n        updateUserOnlineOffline(data);\n        updateUserOnlineOfflineMessagesStorage(data._id);\n      });\n      socket.on(\"server-send-user-is-offline\", userId => {\n        updateUserOnlineOffline({_id : userId},false)\n        updateUserOnlineOfflineMessagesStorage(userId, false);\n      })\n    }else{\n      socket.disconnect();\n    }\n    return () => {\n      if(socket){\n        socket.close()        \n      }\n    }\n  }, [user]);\n};\n\nexport default useUserStatusSubscriptions;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/chat/notifySendersThatReceiverOnlineHasReceivedMessagesChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/chat/fetchSingleChatConversation.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/clearMessageStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateHasSeenLatestMessage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageToReceivedWhenUserOnline.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMessagesStorageWhenReceiverSeenAllMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/addNewConversationToMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/clearCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/user/setCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setMoreFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/setInitialMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/setNumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setPostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/friends/setReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/messagesStorage/updateMoreMessages.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOffline.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/chat/updateUserOnlineOfflineMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/controls/toggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getNumberOfConversations.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/chat/getCurrentChat.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/messagesStorage/getMessagesStorage.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getReceivedRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getSentRequestsToAddFriend.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/friends/getOpenFriendsList.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPersonalPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentPersonalUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNewNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/user/getCurrentUser.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPostStatus.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/post/getPosts.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/controls/getToggleButtonMenu.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Global/useContactSubscription.jsx",["1259","1260"],"import React, {useEffect} from \"react\";\nimport { FETCH_CURRENT_USER } from \"../../apollo/operations/queries/user\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport {useQuery} from \"@apollo/client\"\nimport subscriptions from \"../../apollo/operations/subscriptions\";\nimport {GET_CONTACT_CACHE_DATA} from \"../../apollo/operations/queries/cache\"\nconst useContactSubscription = () => {\n  const {data : {user,receivedRequestsToAddFriend,currentPersonalUser,friends}} = useQuery(GET_CONTACT_CACHE_DATA)\n  const {setReceivedRequestsToAddFriend, setCurrentUser, setCurrentPersonalUser, setFriends} = cacheMutations\n  const {\n    refetch: fetchCurrentUser,\n    subscribeToMore: subscribeUser,\n  } = useQuery(FETCH_CURRENT_USER, { skip: true });\n\n  //function to handle when subscription called\n  const updateSubscriptionOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      friends: [...receiver.friends],\n      following: [...receiver.following],\n      followed: [...receiver.followed],\n      sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n      receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n    });\n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id.toString() === receiver._id.toString()\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    }\n  };\n  useEffect(() => {\n    fetchCurrentUser();\n    return () => fetchCurrentUser();\n  }, [fetchCurrentUser]);\n\n  useEffect(() => {\n    let unsubscribeRejectRquestToAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeRemoveFriend;\n    if (subscribeUser && user) {\n      unsubscribeRejectRquestToAddFriend = subscribeUser({\n        document:\n          subscriptions.userSubscription\n            .REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.rejectRequestToAddFriendSubscription;\n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      unsubscribeCancelRequestToAddFriend = subscribeUser({\n        document:\n          subscriptions.userSubscription\n            .CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.cancelRequestToAddFriendSubscription;\n\n          // remove sender from received requests\n          setReceivedRequestsToAddFriend(\n            receivedRequestsToAddFriend.filter(\n              (senderRequest) => senderRequest._id !== sender._id\n            )\n          );\n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      unsubscribeRemoveFriend = subscribeUser({\n        document: subscriptions.userSubscription.REMOVE_FRIEND,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n          } = subscriptionData.data.removeFriendSubscription;\n          updateSubscriptionOnChange(sender, receiver);\n          const updatedFriends = friends.filter(friend => friend._id !== sender._id);\n          setFriends(updatedFriends)\n        },\n      });\n    }\n\n    return () => {\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeRejectRquestToAddFriend) {\n        unsubscribeRejectRquestToAddFriend();\n      }\n      if (unsubscribeRemoveFriend) {\n        unsubscribeRemoveFriend();\n      }\n    };\n  }, [subscribeUser, user,receivedRequestsToAddFriend, friends]);\n};\n\nexport default useContactSubscription;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/contact/getContact.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/pages/getHome.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditor.jsx",["1261"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport PostEditorHeader from \"./PostEditorHeader\";\nimport PostEditorBody from \"./PostEditorBody\";\nimport { EditorWrapper } from \"./styles/PostEditor.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport Button from \"@material-ui/core/Button\";\nimport useLanguage from \"../../Global/useLanguage\";\nimport _ from \"lodash\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_POST } from \"../../../apollo/operations/mutations/post/createPost\";\nimport {cacheMutations} from \"../../../apollo/operations/mutations/cache\"\nconst PostEditor = ({ user }) => {\n  const [postStatus, setPostStatus] = useState(\"PUBLIC\");\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [images, setImages] = useState([]);\n  const [disabledSubmit, setDisabledSubmit] = useState(true);\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const { post } = i18n.store.data[lang].translation;\n  const [createPost, { loading: createPostLoading }] = useMutation(CREATE_POST);\n  const {setNewPost} = cacheMutations\n  const handleSetPostStatus = useCallback((status) => {\n    setPostStatus(status);\n  }, []);\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      if (images.length || editorState.getCurrentContent().hasText()) {\n        if (\n          postStatus === \"PUBLIC\" ||\n          postStatus === \"PRIVATE\" ||\n          postStatus === \"FRIENDS\"\n        ) {\n          setDisabledSubmit(false);\n        } else {\n          setDisabledSubmit(true);\n        }\n      } else {\n        setDisabledSubmit(true);\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [images, editorState, postStatus]);\n\n  const onSubmitPostStatus = () => {\n    const rawEditorState = convertToRaw(editorState.getCurrentContent());\n    document.getElementById(\"post-editor\").querySelector(\"[contenteditable=true]\").setAttribute(\"contenteditable\", false);\n    const text = document.getElementById(\"post-editor\").innerHTML;\n    \n    let mentions = [];    \n    let fileNames = [];\n    let fileMimetype = [];\n    let fileEncodings = [];\n\n    if (rawEditorState.entityMap) {\n      Object.values(rawEditorState.entityMap).map(({ data }) => {\n        if (data.mention) {\n          mentions.push({ ...data.mention });\n        }\n      });\n    }\n    mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n      mention._id.toString()\n    );\n   \n    if (images.length) {\n      fileNames = images.map((image) => image.name);\n      fileMimetype = images.map((image) => image.mimetype);\n      fileEncodings = images.map((image) => image.src);\n    }\n\n    createPost({variables : {\n      text,\n      mentions,\n      fileNames,\n      fileMimetype,\n      fileEncodings,\n      status: postStatus\n    }})\n      .then(({data}) => {\n        const {createPost} = data ;        \n        setNewPost(createPost)\n        document.getElementById(\"post-editor\").querySelector(\"[contenteditable=true]\").setAttribute(\"contenteditable\", true);\n        setEditorState(EditorState.createEmpty());\n        setImages([]);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        document.getElementById(\"post-editor\").querySelector(\"[contenteditable=true]\").setAttribute(\"contenteditable\", true);\n      });\n  };\n\n  if (createPostLoading) return <div>Loading...</div>;\n  return (\n    <EditorWrapper theme={colorMode}>\n      <PostEditorHeader\n        user={user}\n        postStatus={postStatus}\n        setPostStatus={handleSetPostStatus}\n      />\n      \n        <PostEditorBody\n          editorState={editorState}\n          setEditorState={setEditorState}\n          images={images}\n          setImages={setImages}\n          id=\"post-editor\"\n        />\n      \n      {!disabledSubmit && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={disabledSubmit}\n          onClick={onSubmitPostStatus}\n          style={{ display: \"block\", width: \"95%\", margin: \"0.5rem auto\" }}\n        >\n          {post.post}\n        </Button>\n      )}\n    </EditorWrapper>\n  );\n};\n\nexport default React.memo(PostEditor);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorHeader.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditor.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorHeader.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorBody.jsx",["1262","1263","1264","1265"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorBody.styles.jsx",["1266"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/ImagesCarousel.jsx",["1267"],"import React, {useState} from \"react\";\nimport Slider from \"react-slick\";\nimport LightBox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport {ImageContainer, NextArrow, PrevArrow} from \"./styles/ImagesCarousel.styles\"\n\nfunction CustomNextArrow(props) {  \n  return (\n    <NextArrow {...props}/>\n  );\n}\n\nfunction CustomPrevArrow(props) {\n  \n  return (\n    <PrevArrow {...props}/>  \n  );\n}\n\nconst ImagesCarousel = ({ images }) => {\n  const [openLightBox, setOpenLightBox] = useState(-1);\n  let dragging = false;\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: images.length > 2 ? 2 : images.length,\n    slidesToScroll: images.length > 2 ? 2 : images.length,\n    swipeToSlide: true,\n    lazyLoad: true,\n    beforeChange: () => (dragging = true),\n    afterChange: () => (dragging = false),\n    nextArrow : <CustomNextArrow/>,\n    prevArrow : <CustomPrevArrow/>\n  };\n  if(!images.length) return null\n  return (\n    <>\n      {openLightBox !== -1 && (\n        <LightBox\n          mainSrc={images[openLightBox].src}\n          onCloseRequest={() => setOpenLightBox(-1)}\n        />\n      )}\n      <Slider {...settings}>\n        {images.map((image, idx) => (\n          <ImageContainer key={image.name}>\n            <img\n              src={image.src}\n              alt={image.src}\n              onClick={() => setOpenLightBox(idx)}\n            />\n          </ImageContainer>\n        ))}\n      </Slider>\n    </>\n  );\n};\n\nexport default ImagesCarousel;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/UI/styles/ImagesCarousel.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/user/searchFriends.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/setNewPost.js",["1268"],"import { setPostsVar } from \"../../../../cache\";\n\nconst setNewPost = setPostsVar => newPost => {\n  const posts = {...setPostsVar()}\n  const postAuthorId = newPost.author._id ; \n  if(!postAuthorId || (postAuthorId && !posts[postAuthorId])){\n    return false; \n  }\n  return setPostsVar({...posts, [postAuthorId] : [{...newPost}, ...posts[postAuthorId]]})\n}\n\nexport default setNewPost ","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardHeader.jsx",["1269","1270","1271"],"import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Wrapper,\n  Information,\n  Controls,\n  Timeline,\n  Small\n} from \"./styles/PostCardHeader.styles\";\nimport { Link } from \"react-router-dom\";\nimport LazyLoad from \"react-lazyload\";\nimport { useThemeUI } from \"theme-ui\";\nimport Moment from \"react-moment\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport useLanguage from \"../Global/useLanguage\"\n\nconst PostCardHeader = ({ post }) => {\n  const {i18n, lang} = useLanguage();\n  const { colorMode } = useThemeUI();  \n  const {status} = i18n.store.data[lang].translation.post;\n  const postIcon = status.find(status => status.name === post.status.toLowerCase()).icon;\n  return (\n    <Wrapper theme={colorMode}>\n      <Information>\n        <Link to={`/${post.author.slug}`}>\n          <LazyLoad>\n            <img src={post.author.avatar} alt={post.author.avatar} />\n          </LazyLoad>\n        </Link>\n        <Timeline>\n          <Link\n            to={`/${post.author.slug}`}\n            style={{ textTransform: \"capitalize\" }}\n          >\n            {post.author.name.toLowerCase()}\n          </Link>\n          <Small>\n            <span>{postIcon()}</span>\n            <Moment fromNow>{+post.createdAt}</Moment>\n          </Small>\n        </Timeline>\n      </Information>\n      <Controls>\n        <Button>\n          <BsThreeDots />\n        </Button>\n      </Controls>\n    </Wrapper>\n  );\n};\n\nexport default PostCardHeader;\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCard.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardHeader.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardBody.jsx",["1272","1273","1274","1275"],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardBody.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/PostCardFooter.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/PostCardFooter.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getNotifications.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getHeader.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Header/styles/Header.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/FlashPopUpNotification.jsx",["1276","1277","1278"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Wrapper,\n  SenderAvatar,\n  NotificationContent,\n  SenderName,\n} from \"./styles/FlashPopUpNotification.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { GET_LATEST_NOTIFICATION } from \"../../apollo/operations/queries/cache\";\nimport { useQuery } from \"@apollo/client\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n\nimport { notificationContent } from \"../../utils/notificationContent\";\nconst FlashPopUpNotification = ({ onClick }) => {\n  const { setLatestNotification } = cacheMutations;\n  const {\n    data: { latestNotification },\n  } = useQuery(GET_LATEST_NOTIFICATION, { fetchPolicy: \"cache-only\" });\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n\n  const { message } = i18n.store.data[lang].translation.notifications;\n  useEffect(() => {\n    let timer;\n    if (latestNotification) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        setLatestNotification(null);\n      }, 6000);\n    }\n    return () => clearTimeout(timer);\n  }, [latestNotification]);\n\n  const onClickPopup = () => {\n    onClick();\n    setLatestNotification(null);\n  };\n  console.log(latestNotification);\n  return (\n    <Wrapper show={latestNotification} theme={colorMode} onClick={onClickPopup}>\n      {latestNotification ? (\n        <>\n          <SenderAvatar>\n            <LazyLoadImage\n              src={latestNotification.creator.avatar}\n              effect=\"blur\"\n            ></LazyLoadImage>\n          </SenderAvatar>\n          <NotificationContent>\n            <SenderName>{latestNotification.creator.name}</SenderName>\n            <span>\n              {notificationContent(\n                latestNotification.field,\n                latestNotification.action,\n                lang\n              )}\n            </span>\n          </NotificationContent>\n        </>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(FlashPopUpNotification);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Notification/styles/FlashPopUpNotification.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/models/cache/LatestNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/setLatestNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/notifications/getLatestNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionUsersInPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentEditor.jsx",["1279","1280","1281","1282","1283","1284"],"import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createHashTagPlugin from \"@draft-js-plugins/hashtag\";\nimport _ from \"lodash\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { SEARCH_FRIENDS } from \"../../apollo/operations/queries/user\";\nimport {\n  HashtagLink,\n  Wrapper,\n  LinkAnchor,\n} from \"./PostEditor/styles/PostEditorBody.styles\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  CommentInput,\n  CommentControls,\n  InputImage,\n} from \"./styles/CommentEditor.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { CREATE_COMMENT } from \"../../apollo/operations/mutations/post/createComment\";\nimport { cacheMutations } from \"../../apollo/operations/mutations/cache\";\nimport { Link } from \"react-router-dom\";\nconst CommentEditor = ({ post }) => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [openMention, setOpenMention] = useState(true);\n  const [suggestions, setSuggestions] = useState([]);\n  const {\n    refetch: searchFriends,\n    loading: searchFriendsLoading,\n  } = useQuery(SEARCH_FRIENDS, { fetchPolicy: \"network-only\", skip: true });\n  const [createComment] = useMutation(CREATE_COMMENT);\n  const { addCommentToPost } = cacheMutations;\n  const { push } = useHistory();\n  const { colorMode } = useThemeUI();\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const [showControls, setShowControls] = useState(false);\n  const controlsRef = useRef(null);\n  const commentRef = useRef(null);\n  const editorRef = useRef(null);\n  const { i18n, lang } = useLanguage();\n  const { commentInputPlaceholder } = i18n.store.data[lang].translation.comment;\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n  // useMemo plugins\n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,\n  } = useMemo(() => {\n    // Emoji\n    const emojiPlugin = createEmojiPlugin({\n      selectButtonContent: \"☺\",\n    });\n    const { EmojiSelect, EmojiSuggestions } = emojiPlugin;\n    // Linkify\n    const linkifyPlugin = createLinkifyPlugin({\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      component(props) {\n        return <LinkAnchor {...props} aria-label=\"link\" />;\n      },\n    });\n    // Mention\n    const mentionPlugin = createMentionPlugin({\n      mentionComponent(mentionProps) {\n        return (\n          <a\n            className={mentionProps.className}\n            href={`${window.location.href}${mentionProps.mention.slug}`}\n            aria-label=\"mention\"\n          >\n            {mentionProps.children}\n          </a>\n        );\n      },\n    });\n    const hashTagPlugin = createHashTagPlugin({\n      hashtagComponent(props) {\n        return (\n          <HashtagLink\n            to={`${window.location.href}search?q=${props.decoratedText.replace(\n              /#/g,\n              \"\"\n            )}`}\n            aria-label=\"hashtag\"\n          >\n            {props.children}\n          </HashtagLink>\n        );\n      },\n    });\n    const { MentionSuggestions } = mentionPlugin;\n    // hashTag\n\n    const plugins = [mentionPlugin, hashTagPlugin, emojiPlugin, linkifyPlugin];\n\n    return { plugins, EmojiSelect, EmojiSuggestions, MentionSuggestions };\n  }, []);\n\n  useEffect(() => {\n    function trackUserClickCommentControls(e) {\n      if (\n        commentRef.current &&\n        !commentRef.current.contains(e.target) &&\n        showControls\n      ) {\n        setShowControls(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickCommentControls);\n\n    return () =>\n      window.removeEventListener(\"click\", trackUserClickCommentControls);\n  }, [commentRef, showControls]);\n\n  const onSubmitComment = (e) => {\n    if (e.which === 13 && editorState.getCurrentContent().hasText()) {\n      const rawEditorState = convertToRaw(editorState.getCurrentContent());\n      document\n        .querySelector(`[data-target=comment-input-${post._id}]`)\n        .querySelector(\"[contenteditable=true]\")\n        ?.setAttribute(\"contenteditable\", false);\n      const textData = document.querySelector(\n        `[data-target=comment-input-${post._id}]`\n      ).innerHTML;\n      let mentions = [];\n      if (rawEditorState.entityMap) {\n        Object.values(rawEditorState.entityMap).map(({ data }) => {\n          if (data.mention) {\n            mentions.push({ ...data.mention });\n          }\n        });\n      }\n      mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n        mention._id.toString()\n      );\n      if (textData) {\n        setEditorState(EditorState.createEmpty());\n        createComment({\n          variables: { postId: post._id, text: textData, mentions: mentions },\n        })\n          .then(({ data }) => {\n            document\n              .querySelector(`[data-target=comment-input-${post._id}]`)\n              .querySelector(\"[contenteditable=false]\")\n              ?.setAttribute(\"contenteditable\", true);\n              \n            const {createComment} = data;\n            addCommentToPost(post._id, createComment);\n          })\n          .catch((err) => {\n            console.log(err.message);\n            document\n              .querySelector(`[data-target=comment-input-${post._id}]`)\n              .querySelector(\"[contenteditable=true]\")\n              ?.setAttribute(\"contenteditable\", true);\n          });\n      }\n    }\n  };\n  return (\n    <Wrapper ref={commentRef}>\n      <CommentInput\n        theme={colorMode}\n        onClick={() => {\n          editorRef.current?.focus();\n          setShowControls(true);\n        }}\n        onKeyDown={onSubmitComment}\n        data-target={`comment-input-${post._id}`}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          placeholder={commentInputPlaceholder}\n          ref={editorRef}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n        <EmojiSuggestions />\n      </CommentInput>\n      <CommentControls\n        ref={controlsRef}\n        theme={colorMode}\n        show={showControls}\n        onClick={() => setShowControls(true)}\n      >\n        <EmojiSelect />\n        {/* <InputImage htmlFor={`comment-image-${post._id}`}>\n          <input type=\"file\" name=\"comment-image\" id={`comment-image-${post._id}`}/>  \n          <BiImageAlt/>\n        </InputImage>         */}\n      </CommentControls>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(CommentEditor);\n","/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentEditor.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/likePost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateLikePost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/unlikePost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/updateUnlikePost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/queries/cache/components/getUsePostsSubscription.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/addNewNotification.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/increaseCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/notifications/decreaseCountNumberNotificationsUnseen.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyUserLikePost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/post/createComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentToPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/Comments.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/Comments.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/CommentItem.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/styles/CommentItem.styles.jsx",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyMentionUsersInComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/subscriptions/notification/notifyOwnerPostUserComment.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/apollo/operations/mutations/cache/post/addCommentToOwnerPost.js",[],"/home/mvt/Desktop/github/mern-stack-social-media/frontend/src/components/Post/ResponseEditor.jsx",["1285","1286","1287","1288","1289","1290","1291","1292"],{"ruleId":"1293","replacedBy":"1294"},{"ruleId":"1295","replacedBy":"1296"},{"ruleId":"1297","severity":1,"message":"1298","line":57,"column":5,"nodeType":"1299","endLine":57,"endColumn":13,"suggestions":"1300"},{"ruleId":"1301","severity":1,"message":"1302","line":13,"column":12,"nodeType":"1303","endLine":13,"endColumn":70},{"ruleId":"1304","severity":1,"message":"1305","line":29,"column":41,"nodeType":"1306","messageId":"1307","endLine":29,"endColumn":51},{"ruleId":"1297","severity":1,"message":"1308","line":41,"column":6,"nodeType":"1299","endLine":41,"endColumn":28,"suggestions":"1309"},{"ruleId":"1297","severity":1,"message":"1310","line":84,"column":6,"nodeType":"1299","endLine":84,"endColumn":8,"suggestions":"1311"},{"ruleId":"1297","severity":1,"message":"1312","line":58,"column":6,"nodeType":"1299","endLine":58,"endColumn":98,"suggestions":"1313"},{"ruleId":"1297","severity":1,"message":"1314","line":23,"column":6,"nodeType":"1299","endLine":23,"endColumn":37,"suggestions":"1315"},{"ruleId":"1297","severity":1,"message":"1316","line":61,"column":6,"nodeType":"1299","endLine":61,"endColumn":24,"suggestions":"1317"},{"ruleId":"1297","severity":1,"message":"1318","line":78,"column":6,"nodeType":"1299","endLine":78,"endColumn":33,"suggestions":"1319"},{"ruleId":"1297","severity":1,"message":"1320","line":107,"column":6,"nodeType":"1299","endLine":107,"endColumn":19,"suggestions":"1321"},{"ruleId":"1304","severity":1,"message":"1322","line":1,"column":34,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":42},{"ruleId":"1297","severity":1,"message":"1323","line":90,"column":6,"nodeType":"1299","endLine":90,"endColumn":8,"suggestions":"1324"},{"ruleId":"1297","severity":1,"message":"1325","line":228,"column":6,"nodeType":"1299","endLine":234,"endColumn":4,"suggestions":"1326"},{"ruleId":"1304","severity":1,"message":"1327","line":22,"column":9,"nodeType":"1306","messageId":"1307","endLine":22,"endColumn":23},{"ruleId":"1297","severity":1,"message":"1328","line":35,"column":6,"nodeType":"1299","endLine":35,"endColumn":12,"suggestions":"1329"},{"ruleId":"1304","severity":1,"message":"1330","line":10,"column":10,"nodeType":"1306","messageId":"1307","endLine":10,"endColumn":21},{"ruleId":"1304","severity":1,"message":"1327","line":12,"column":10,"nodeType":"1306","messageId":"1307","endLine":12,"endColumn":24},{"ruleId":"1304","severity":1,"message":"1331","line":15,"column":10,"nodeType":"1306","messageId":"1307","endLine":15,"endColumn":21},{"ruleId":"1304","severity":1,"message":"1332","line":17,"column":13,"nodeType":"1306","messageId":"1307","endLine":17,"endColumn":17},{"ruleId":"1304","severity":1,"message":"1333","line":1,"column":17,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":26},{"ruleId":"1304","severity":1,"message":"1333","line":1,"column":17,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":26},{"ruleId":"1304","severity":1,"message":"1334","line":8,"column":3,"nodeType":"1306","messageId":"1307","endLine":8,"endColumn":21},{"ruleId":"1304","severity":1,"message":"1335","line":16,"column":8,"nodeType":"1306","messageId":"1307","endLine":16,"endColumn":21},{"ruleId":"1304","severity":1,"message":"1336","line":12,"column":10,"nodeType":"1306","messageId":"1307","endLine":12,"endColumn":23},{"ruleId":"1297","severity":1,"message":"1337","line":55,"column":6,"nodeType":"1299","endLine":55,"endColumn":23,"suggestions":"1338"},{"ruleId":"1297","severity":1,"message":"1339","line":64,"column":5,"nodeType":"1299","endLine":64,"endColumn":7,"suggestions":"1340"},{"ruleId":"1304","severity":1,"message":"1332","line":7,"column":18,"nodeType":"1306","messageId":"1307","endLine":7,"endColumn":22},{"ruleId":"1304","severity":1,"message":"1333","line":1,"column":16,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":25},{"ruleId":"1304","severity":1,"message":"1341","line":13,"column":37,"nodeType":"1306","messageId":"1307","endLine":13,"endColumn":56},{"ruleId":"1293","replacedBy":"1342"},{"ruleId":"1295","replacedBy":"1343"},{"ruleId":"1304","severity":1,"message":"1344","line":1,"column":16,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":25},{"ruleId":"1304","severity":1,"message":"1332","line":18,"column":18,"nodeType":"1306","messageId":"1307","endLine":18,"endColumn":22},{"ruleId":"1304","severity":1,"message":"1345","line":19,"column":18,"nodeType":"1306","messageId":"1307","endLine":19,"endColumn":37},{"ruleId":"1304","severity":1,"message":"1346","line":5,"column":32,"nodeType":"1306","messageId":"1307","endLine":5,"endColumn":40},{"ruleId":"1304","severity":1,"message":"1347","line":59,"column":13,"nodeType":"1306","messageId":"1307","endLine":59,"endColumn":40},{"ruleId":"1297","severity":1,"message":"1348","line":101,"column":49,"nodeType":"1306","endLine":101,"endColumn":56},{"ruleId":"1301","severity":1,"message":"1302","line":77,"column":16,"nodeType":"1303","endLine":77,"endColumn":74},{"ruleId":"1304","severity":1,"message":"1349","line":1,"column":49,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":60},{"ruleId":"1297","severity":1,"message":"1350","line":45,"column":6,"nodeType":"1299","endLine":45,"endColumn":8,"suggestions":"1351"},{"ruleId":"1297","severity":1,"message":"1352","line":60,"column":6,"nodeType":"1299","endLine":60,"endColumn":69,"suggestions":"1353"},{"ruleId":"1297","severity":1,"message":"1354","line":60,"column":19,"nodeType":"1355","endLine":60,"endColumn":62},{"ruleId":"1297","severity":1,"message":"1356","line":118,"column":6,"nodeType":"1299","endLine":118,"endColumn":24,"suggestions":"1357"},{"ruleId":"1304","severity":1,"message":"1358","line":1,"column":27,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":37},{"ruleId":"1304","severity":1,"message":"1359","line":1,"column":39,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":45},{"ruleId":"1304","severity":1,"message":"1360","line":1,"column":17,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":20},{"ruleId":"1304","severity":1,"message":"1349","line":1,"column":17,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":28},{"ruleId":"1304","severity":1,"message":"1361","line":21,"column":8,"nodeType":"1306","messageId":"1307","endLine":21,"endColumn":16},{"ruleId":"1304","severity":1,"message":"1362","line":9,"column":3,"nodeType":"1306","messageId":"1307","endLine":9,"endColumn":14},{"ruleId":"1304","severity":1,"message":"1363","line":11,"column":3,"nodeType":"1306","messageId":"1307","endLine":11,"endColumn":18},{"ruleId":"1304","severity":1,"message":"1364","line":2,"column":9,"nodeType":"1306","messageId":"1307","endLine":2,"endColumn":13},{"ruleId":"1304","severity":1,"message":"1332","line":18,"column":13,"nodeType":"1306","messageId":"1307","endLine":18,"endColumn":17},{"ruleId":"1304","severity":1,"message":"1365","line":38,"column":13,"nodeType":"1306","messageId":"1307","endLine":38,"endColumn":43},{"ruleId":"1304","severity":1,"message":"1366","line":11,"column":10,"nodeType":"1306","messageId":"1307","endLine":11,"endColumn":18},{"ruleId":"1297","severity":1,"message":"1328","line":20,"column":6,"nodeType":"1299","endLine":20,"endColumn":12,"suggestions":"1367"},{"ruleId":"1304","severity":1,"message":"1333","line":1,"column":27,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":36},{"ruleId":"1368","severity":1,"message":"1369","line":8,"column":3,"nodeType":"1370","messageId":"1371","endLine":28,"endColumn":4},{"ruleId":"1368","severity":1,"message":"1369","line":10,"column":7,"nodeType":"1370","messageId":"1371","endLine":17,"endColumn":8},{"ruleId":"1372","severity":1,"message":"1373","line":11,"column":26,"nodeType":"1374","messageId":"1375","endLine":13,"endColumn":10},{"ruleId":"1376","severity":1,"message":"1377","line":18,"column":5,"nodeType":"1378","messageId":"1379","endLine":22,"endColumn":8},{"ruleId":"1368","severity":1,"message":"1369","line":19,"column":7,"nodeType":"1370","messageId":"1371","endLine":22,"endColumn":8},{"ruleId":"1376","severity":1,"message":"1377","line":23,"column":5,"nodeType":"1378","messageId":"1379","endLine":27,"endColumn":8},{"ruleId":"1368","severity":1,"message":"1369","line":24,"column":7,"nodeType":"1370","messageId":"1371","endLine":27,"endColumn":8},{"ruleId":"1297","severity":1,"message":"1380","line":46,"column":6,"nodeType":"1299","endLine":46,"endColumn":55,"suggestions":"1381"},{"ruleId":"1297","severity":1,"message":"1382","line":48,"column":35,"nodeType":"1306","endLine":48,"endColumn":46},{"ruleId":"1297","severity":1,"message":"1383","line":76,"column":6,"nodeType":"1299","endLine":76,"endColumn":32,"suggestions":"1384"},{"ruleId":"1293","replacedBy":"1385"},{"ruleId":"1295","replacedBy":"1386"},{"ruleId":"1304","severity":1,"message":"1387","line":52,"column":13,"nodeType":"1306","messageId":"1307","endLine":52,"endColumn":19},{"ruleId":"1297","severity":1,"message":"1388","line":119,"column":6,"nodeType":"1299","endLine":119,"endColumn":47,"suggestions":"1389"},{"ruleId":"1304","severity":1,"message":"1390","line":25,"column":10,"nodeType":"1306","messageId":"1307","endLine":25,"endColumn":16},{"ruleId":"1304","severity":1,"message":"1391","line":25,"column":18,"nodeType":"1306","messageId":"1307","endLine":25,"endColumn":27},{"ruleId":"1304","severity":1,"message":"1392","line":26,"column":10,"nodeType":"1306","messageId":"1307","endLine":26,"endColumn":22},{"ruleId":"1304","severity":1,"message":"1393","line":26,"column":24,"nodeType":"1306","messageId":"1307","endLine":26,"endColumn":39},{"ruleId":"1297","severity":1,"message":"1339","line":38,"column":5,"nodeType":"1299","endLine":38,"endColumn":7,"suggestions":"1394"},{"ruleId":"1297","severity":1,"message":"1395","line":33,"column":6,"nodeType":"1299","endLine":33,"endColumn":23,"suggestions":"1396"},{"ruleId":"1304","severity":1,"message":"1397","line":43,"column":11,"nodeType":"1306","messageId":"1307","endLine":43,"endColumn":23},{"ruleId":"1297","severity":1,"message":"1398","line":126,"column":6,"nodeType":"1299","endLine":126,"endColumn":52,"suggestions":"1399"},{"ruleId":"1304","severity":1,"message":"1322","line":1,"column":16,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":24},{"ruleId":"1304","severity":1,"message":"1327","line":5,"column":9,"nodeType":"1306","messageId":"1307","endLine":5,"endColumn":23},{"ruleId":"1304","severity":1,"message":"1400","line":6,"column":31,"nodeType":"1306","messageId":"1307","endLine":6,"endColumn":42},{"ruleId":"1304","severity":1,"message":"1336","line":7,"column":9,"nodeType":"1306","messageId":"1307","endLine":7,"endColumn":22},{"ruleId":"1304","severity":1,"message":"1401","line":9,"column":9,"nodeType":"1306","messageId":"1307","endLine":9,"endColumn":19},{"ruleId":"1304","severity":1,"message":"1402","line":6,"column":8,"nodeType":"1306","messageId":"1307","endLine":6,"endColumn":9},{"ruleId":"1304","severity":1,"message":"1403","line":12,"column":13,"nodeType":"1306","messageId":"1307","endLine":12,"endColumn":20},{"ruleId":"1297","severity":1,"message":"1404","line":46,"column":6,"nodeType":"1299","endLine":46,"endColumn":12,"suggestions":"1405"},{"ruleId":"1304","severity":1,"message":"1406","line":1,"column":8,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":13},{"ruleId":"1297","severity":1,"message":"1407","line":110,"column":6,"nodeType":"1299","endLine":110,"endColumn":64,"suggestions":"1408"},{"ruleId":"1409","severity":1,"message":"1410","line":59,"column":62,"nodeType":"1411","messageId":"1412","endLine":59,"endColumn":64},{"ruleId":"1304","severity":1,"message":"1413","line":9,"column":3,"nodeType":"1306","messageId":"1307","endLine":9,"endColumn":10},{"ruleId":"1304","severity":1,"message":"1414","line":37,"column":14,"nodeType":"1306","messageId":"1307","endLine":37,"endColumn":34},{"ruleId":"1304","severity":1,"message":"1415","line":39,"column":11,"nodeType":"1306","messageId":"1307","endLine":39,"endColumn":15},{"ruleId":"1297","severity":1,"message":"1416","line":110,"column":6,"nodeType":"1299","endLine":110,"endColumn":8,"suggestions":"1417"},{"ruleId":"1304","severity":1,"message":"1364","line":2,"column":10,"nodeType":"1306","messageId":"1307","endLine":2,"endColumn":14},{"ruleId":"1304","severity":1,"message":"1418","line":32,"column":25,"nodeType":"1306","messageId":"1307","endLine":32,"endColumn":33},{"ruleId":"1304","severity":1,"message":"1419","line":1,"column":10,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":21},{"ruleId":"1304","severity":1,"message":"1322","line":1,"column":17,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":25},{"ruleId":"1304","severity":1,"message":"1333","line":1,"column":27,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":36},{"ruleId":"1304","severity":1,"message":"1359","line":1,"column":38,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":44},{"ruleId":"1304","severity":1,"message":"1420","line":1,"column":27,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":34},{"ruleId":"1304","severity":1,"message":"1413","line":6,"column":3,"nodeType":"1306","messageId":"1307","endLine":6,"endColumn":10},{"ruleId":"1304","severity":1,"message":"1421","line":8,"column":3,"nodeType":"1306","messageId":"1307","endLine":8,"endColumn":14},{"ruleId":"1297","severity":1,"message":"1422","line":29,"column":6,"nodeType":"1299","endLine":29,"endColumn":8,"suggestions":"1423"},{"ruleId":"1304","severity":1,"message":"1322","line":1,"column":17,"nodeType":"1306","messageId":"1307","endLine":1,"endColumn":25},{"ruleId":"1304","severity":1,"message":"1424","line":24,"column":11,"nodeType":"1306","messageId":"1307","endLine":24,"endColumn":18},{"ruleId":"1297","severity":1,"message":"1425","line":34,"column":6,"nodeType":"1299","endLine":34,"endColumn":26,"suggestions":"1426"},{"ruleId":"1304","severity":1,"message":"1427","line":26,"column":3,"nodeType":"1306","messageId":"1307","endLine":26,"endColumn":13},{"ruleId":"1304","severity":1,"message":"1364","line":32,"column":10,"nodeType":"1306","messageId":"1307","endLine":32,"endColumn":14},{"ruleId":"1304","severity":1,"message":"1414","line":41,"column":14,"nodeType":"1306","messageId":"1307","endLine":41,"endColumn":34},{"ruleId":"1304","severity":1,"message":"1415","line":45,"column":11,"nodeType":"1306","messageId":"1307","endLine":45,"endColumn":15},{"ruleId":"1297","severity":1,"message":"1416","line":63,"column":6,"nodeType":"1299","endLine":63,"endColumn":8,"suggestions":"1428"},{"ruleId":"1409","severity":1,"message":"1410","line":149,"column":64,"nodeType":"1411","messageId":"1412","endLine":149,"endColumn":66},{"ruleId":"1304","severity":1,"message":"1429","line":8,"column":23,"nodeType":"1306","messageId":"1307","endLine":8,"endColumn":35},{"ruleId":"1304","severity":1,"message":"1402","line":14,"column":8,"nodeType":"1306","messageId":"1307","endLine":14,"endColumn":9},{"ruleId":"1304","severity":1,"message":"1430","line":22,"column":10,"nodeType":"1306","messageId":"1307","endLine":22,"endColumn":20},{"ruleId":"1304","severity":1,"message":"1427","line":26,"column":3,"nodeType":"1306","messageId":"1307","endLine":26,"endColumn":13},{"ruleId":"1304","severity":1,"message":"1364","line":32,"column":10,"nodeType":"1306","messageId":"1307","endLine":32,"endColumn":14},{"ruleId":"1304","severity":1,"message":"1431","line":44,"column":10,"nodeType":"1306","messageId":"1307","endLine":44,"endColumn":23},{"ruleId":"1304","severity":1,"message":"1432","line":45,"column":11,"nodeType":"1306","messageId":"1307","endLine":45,"endColumn":27},{"ruleId":"1297","severity":1,"message":"1416","line":63,"column":6,"nodeType":"1299","endLine":63,"endColumn":8,"suggestions":"1433"},"no-native-reassign",["1434"],"no-negated-in-lhs",["1435"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCurrentUser', 'fetchFriends', 'fetchNotifications', 'setCurrentUser', 'setFriends', and 'setNotifications'. Either include them or remove the dependency array.","ArrayExpression",["1436"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'setNewPost' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchPosts' and 'setPosts'. Either include them or remove the dependency array.",["1437"],"React Hook useCallback has a missing dependency: 'setOpenFriendsList'. Either include it or remove the dependency array.",["1438"],"React Hook useEffect has a missing dependency: 'setNotifications'. Either include it or remove the dependency array.",["1439"],"React Hook useEffect has a missing dependency: 'setIsAuth'. Either include it or remove the dependency array. If 'setIsAuth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1440"],"React Hook useEffect has missing dependencies: 'personalPosts', 'setCurrentPersonalUser', and 'setPersonalPosts'. Either include them or remove the dependency array.",["1441"],"React Hook useEffect has missing dependencies: 'fetchListContact', 'friends.length', 'setFriends', 'setReceivedRequestsToAddFriend', and 'setSentRequestsToAddFriend'. Either include them or remove the dependency array.",["1442"],"React Hook useEffect has missing dependencies: 'fetchFriends', 'friends', and 'setFriends'. Either include them or remove the dependency array.",["1443"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchChatConversations', 'messagesStorage', 'setInitialMessagesStorage', 'setNumberOfConversations', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user'. Either include them or remove the dependency array.",["1444"],"React Hook useEffect has missing dependencies: 'addCommentToOwnerPost', 'personalPosts', 'setPersonalPosts', 'setReceivedRequestsToAddFriend', and 'updatedNotifications'. Either include them or remove the dependency array.",["1445"],"'cacheMutations' is defined but never used.","React Hook useEffect has a missing dependency: 'i18n.store.data'. Either include it or remove the dependency array.",["1446"],"'FETCH_POSTS' is defined but never used.","'loadingMore' is assigned a value but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'FETCH_CURRENT_USER' is defined but never used.","'subscriptions' is defined but never used.","'FETCH_FRIENDS' is defined but never used.","React Hook useEffect has a missing dependency: 'originData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setContactData' needs the current value of 'originData'.",["1447"],"React Hook useEffect has a missing dependency: 'setCurrentChat'. Either include it or remove the dependency array.",["1448"],"'BsThreeDotsVertical' is defined but never used.",["1434"],["1435"],"'createRef' is defined but never used.","'currentPersonalUser' is assigned a value but never used.","'FaRocket' is defined but never used.","'receivedRequestsToAddFriend' is assigned a value but never used.","The ref value 'responseRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'responseRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'shouldScrollIntoView'. Either include them or remove the dependency array.",["1449"],"React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'messagesStorage'. Either include them or remove the dependency array.",["1450"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ChainExpression","React Hook useEffect has missing dependencies: 'currentChat._id', 'currentChat.scope', 'fetchMoreMessages', 'messagesStorage', and 'updateMoreMessages'. Either include them or remove the dependency array.",["1451"],"'useContext' is defined but never used.","'useRef' is defined but never used.","'css' is defined but never used.","'LazyLoad' is defined but never used.","'CurrentChat' is defined but never used.","'MessagesStorage' is defined but never used.","'Link' is defined but never used.","'countNumberNotificationsUnseen' is assigned a value but never used.","'askLogin' is assigned a value but never used.",["1452"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","React Hook useEffect has an unnecessary dependency: 'notificationRef.current'. Either exclude it or remove the dependency array. Mutable values like 'notificationRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1453"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has missing dependencies: 'fetchNotifications', 'notifications', and 'setNotifications'. Either include them or remove the dependency array.",["1454"],["1434"],["1435"],"'action' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES', 'NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT', 'SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES', 'SENT_MESSAGE_CHAT_SUBSCRIPTION', 'setMessagesStorage', 'updateMessagesStorage', 'updateMessagesStorageToReceivedWhenUserOnline', 'updateMessagesStorageWhenReceiverSeenAllMessages', and 'updatePersonalReceiverWhenReceivedNewMessage'. Either include them or remove the dependency array.",["1455"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'originalData' is assigned a value but never used.","'setOriginalData' is assigned a value but never used.",["1456"],"React Hook useEffect has missing dependencies: 'data', 'fetchMoreContacts', and 'setFriends'. Either include them or remove the dependency array.",["1457"],"'setShowPopup' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_messagesStorage.length', 'fetchMoreConversations', 'messagesStorage', 'setInitialMessagesStorage', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user._id'. Either include them or remove the dependency array.",["1458"],"'GET_FRIENDS' is defined but never used.","'useThemeUI' is defined but never used.","'_' is defined but never used.","'friends' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'updateUserOnlineOffline' and 'updateUserOnlineOfflineMessagesStorage'. Either include them or remove the dependency array.",["1459"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'setFriends', 'setReceivedRequestsToAddFriend', and 'updateSubscriptionOnChange'. Either include them or remove the dependency array.",["1460"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Wrapper' is defined but never used.","'searchFriendsLoading' is assigned a value but never used.","'push' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'searchFriends'. Either include it or remove the dependency array.",["1461"],"'dragging' is assigned a value but never used.","'setPostsVar' is defined but never used.","'useMemo' is defined but never used.","'HashtagLink' is defined but never used.","React Hook useEffect has a missing dependency: 'post._id'. Either include it or remove the dependency array.",["1462"],"'message' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setLatestNotification'. Either include it or remove the dependency array.",["1463"],"'InputImage' is defined but never used.",["1464"],"'convertToRaw' is defined but never used.","'useHistory' is defined but never used.","'createComment' is assigned a value but never used.","'addCommentToPost' is assigned a value but never used.",["1465"],"no-global-assign","no-unsafe-negation",{"desc":"1466","fix":"1467"},{"desc":"1468","fix":"1469"},{"desc":"1470","fix":"1471"},{"desc":"1472","fix":"1473"},{"desc":"1474","fix":"1475"},{"desc":"1476","fix":"1477"},{"desc":"1478","fix":"1479"},{"desc":"1480","fix":"1481"},{"desc":"1482","fix":"1483"},{"desc":"1484","fix":"1485"},{"desc":"1486","fix":"1487"},{"desc":"1488","fix":"1489"},{"desc":"1490","fix":"1491"},{"desc":"1492","fix":"1493"},{"desc":"1494","fix":"1495"},{"desc":"1496","fix":"1497"},{"desc":"1486","fix":"1498"},{"desc":"1499","fix":"1500"},{"desc":"1501","fix":"1502"},{"desc":"1503","fix":"1504"},{"desc":"1490","fix":"1505"},{"desc":"1506","fix":"1507"},{"desc":"1508","fix":"1509"},{"desc":"1510","fix":"1511"},{"desc":"1512","fix":"1513"},{"desc":"1514","fix":"1515"},{"desc":"1516","fix":"1517"},{"desc":"1518","fix":"1519"},{"desc":"1514","fix":"1520"},{"desc":"1514","fix":"1521"},"Update the dependencies array to be: [fetchCurrentUser, fetchFriends, fetchNotifications, isAuth, setCurrentUser, setFriends, setNotifications]",{"range":"1522","text":"1523"},"Update the dependencies array to be: [user, posts, fetched, fetchPosts, setPosts]",{"range":"1524","text":"1525"},"Update the dependencies array to be: [setOpenFriendsList]",{"range":"1526","text":"1527"},"Update the dependencies array to be: [user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore, setNotifications]",{"range":"1528","text":"1529"},"Update the dependencies array to be: [user, history, location.state, setIsAuth]",{"range":"1530","text":"1531"},"Update the dependencies array to be: [personalPosts, personalUserData, setCurrentPersonalUser, setPersonalPosts]",{"range":"1532","text":"1533"},"Update the dependencies array to be: [user, fetched, setFetched, fetchListContact, friends.length, setSentRequestsToAddFriend, setReceivedRequestsToAddFriend, setFriends]",{"range":"1534","text":"1535"},"Update the dependencies array to be: [fetchFriends, friends, loadingMore, setFriends]",{"range":"1536","text":"1537"},"Update the dependencies array to be: [fetchChatConversations, messagesStorage, setInitialMessagesStorage, setNumberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",{"range":"1538","text":"1539"},"Update the dependencies array to be: [countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedNotifications, personalPosts, setPersonalPosts, setReceivedRequestsToAddFriend, addCommentToOwnerPost]",{"range":"1540","text":"1541"},"Update the dependencies array to be: [i18n.store.data, lang]",{"range":"1542","text":"1543"},"Update the dependencies array to be: [search, friends, originData]",{"range":"1544","text":"1545"},"Update the dependencies array to be: [setCurrentChat]",{"range":"1546","text":"1547"},"Update the dependencies array to be: [chatBoardBodyRef, shouldScrollIntoView]",{"range":"1548","text":"1549"},"Update the dependencies array to be: [chatBoardBodyRef, currentChat, messagesStorage, user]",{"range":"1550","text":"1551"},"Update the dependencies array to be: [currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, updateMoreMessages]",{"range":"1552","text":"1553"},{"range":"1554","text":"1543"},"Update the dependencies array to be: [openNotificationBoard]",{"range":"1555","text":"1556"},"Update the dependencies array to be: [fetchNotifications, loadingNotificationsMore, notifications, setNotifications]",{"range":"1557","text":"1558"},"Update the dependencies array to be: [subscribeChatMessage, user, currentChat, SENT_MESSAGE_CHAT_SUBSCRIPTION, NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT, SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES, NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages, updateMessagesStorageToReceivedWhenUserOnline]",{"range":"1559","text":"1560"},{"range":"1561","text":"1547"},"Update the dependencies array to be: [data, fetchMoreContacts, loadContactMore, setFriends]",{"range":"1562","text":"1563"},"Update the dependencies array to be: [_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",{"range":"1564","text":"1565"},"Update the dependencies array to be: [updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage, user]",{"range":"1566","text":"1567"},"Update the dependencies array to be: [subscribeUser, user, receivedRequestsToAddFriend, friends, updateSubscriptionOnChange, setReceivedRequestsToAddFriend, setFriends]",{"range":"1568","text":"1569"},"Update the dependencies array to be: [searchFriends]",{"range":"1570","text":"1571"},"Update the dependencies array to be: [post._id]",{"range":"1572","text":"1573"},"Update the dependencies array to be: [latestNotification, setLatestNotification]",{"range":"1574","text":"1575"},{"range":"1576","text":"1571"},{"range":"1577","text":"1571"},[2621,2629],"[fetchCurrentUser, fetchFriends, fetchNotifications, isAuth, setCurrentUser, setFriends, setNotifications]",[1633,1655],"[user, posts, fetched, fetchPosts, setPosts]",[2869,2871],"[setOpenFriendsList]",[2055,2147],"[user, notifications, fetchNotifications, setFetchNotificationsMore, fetchNotificationsMore, setNotifications]",[771,802],"[user, history, location.state, setIsAuth]",[1956,1974],"[personalPosts, personalUserData, setCurrentPersonalUser, setPersonalPosts]",[2341,2368],"[user, fetched, setFetched, fetchListContact, friends.length, setSentRequestsToAddFriend, setReceivedRequestsToAddFriend, setFriends]",[3239,3252],"[fetchFriends, friends, loadingMore, setFriends]",[3327,3329],"[fetchChatConversations, messagesStorage, setInitialMessagesStorage, setNumberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user]",[8029,8166],"[countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedNotifications, personalPosts, setPersonalPosts, setReceivedRequestsToAddFriend, addCommentToOwnerPost]",[1168,1174],"[i18n.store.data, lang]",[1611,1628],"[search, friends, originData]",[1795,1797],"[setCurrentChat]",[1560,1562],"[chatBoardBodyRef, shouldScrollIntoView]",[1931,1994],"[chatBoardBodyRef, currentChat, messagesStorage, user]",[3621,3639],"[currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage, updateMoreMessages]",[849,855],[1703,1752],"[openNotificationBoard]",[2693,2719],"[fetchNotifications, loadingNotificationsMore, notifications, setNotifications]",[4632,4673],"[subscribeChatMessage, user, currentChat, SENT_MESSAGE_CHAT_SUBSCRIPTION, NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT, SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES, NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES, setMessagesStorage, updatePersonalReceiverWhenReceivedNewMessage, updateMessagesStorage, updateMessagesStorageWhenReceiverSeenAllMessages, updateMessagesStorageToReceivedWhenUserOnline]",[1170,1172],[1291,1308],"[data, fetchMoreContacts, loadContactMore, setFriends]",[4619,4665],"[_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, setInitialMessagesStorage, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",[1491,1497],"[updateUserOnlineOffline, updateUserOnlineOfflineMessagesStorage, user]",[3970,4028],"[subscribeUser, user, receivedRequestsToAddFriend, friends, updateSubscriptionOnChange, setReceivedRequestsToAddFriend, setFriends]",[3386,3388],"[searchFriends]",[948,950],"[post._id]",[1192,1212],"[latestNotification, setLatestNotification]",[2316,2318],[2260,2262]]