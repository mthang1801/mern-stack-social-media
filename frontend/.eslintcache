[{"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/index.js":"1","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/reportWebVitals.js":"2","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/i18n.js":"3","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/App/App.js":"4","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/client.js":"5","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/theme/index.js":"6","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/cache.js":"7","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.types.js":"8","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/explores.js":"9","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/home.js":"10","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/auth.js":"11","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/personal.js":"12","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/notifications.js":"13","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/chats.js":"14","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/contacts.js":"15","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx":"16","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx":"17","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useUserStatusSubscriptions.jsx":"18","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useContactSubscription.jsx":"19","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/locales/index.js":"20","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js":"21","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/initialState.js":"22","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.queries.js":"23","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.mutations.js":"24","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.subscriptions.js":"25","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/currentPersonalUser.caches.js":"26","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js":"27","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.queries.js":"28","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/controls/controls.caches.js":"29","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.caches.js":"30","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.types.js":"31","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.caches.js":"32","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.types.js":"33","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.caches.js":"34","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.caches.js":"35","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.types.js":"36","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/containers/Layout.jsx":"37","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/containers/MainBody.jsx":"38","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useHomePostsSubscription.jsx":"39","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.subscriptions.js":"40","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.caches.js":"41","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useChatSubscriptions.jsx":"42","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/styles/notifications.styles.jsx":"43","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx":"44","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx":"45","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx":"46","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/Posts.jsx":"47","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditor.jsx":"48","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx":"49","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx":"50","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx":"51","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx":"52","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx":"53","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx":"54","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx":"55","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx":"56","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx":"57","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx":"58","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx":"59","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx":"60","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx":"61","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/locales/vi/translation.js":"62","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/locales/en/translation.js":"63","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.mutations.js":"64","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.queries.js":"65","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.subscriptions.js":"66","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.mutations.js":"67","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.queries.js":"68","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.subscriptions.js":"69","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.mutations.js":"70","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.types.js":"71","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/AlertDialogSlide.jsx":"72","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx":"73","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/containers/styles/MainBody.styles.jsx":"74","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx":"75","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx":"76","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx":"77","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx":"78","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx":"79","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx":"80","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/Search.jsx":"81","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx":"82","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Header.jsx":"83","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx":"84","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx":"85","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx":"86","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.subscriptions.js":"87","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.mutations.js":"88","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx":"89","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx":"90","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx":"91","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx":"92","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx":"93","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx":"94","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx":"95","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx":"96","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Brand.jsx":"97","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Search.jsx":"98","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx":"99","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx":"100","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/utils/generateBase64Image.js":"101","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js":"102","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx":"103","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/FlashPopUpNotification.jsx":"104","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useNotificationsSubscription.jsx":"105","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx":"106","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx":"107","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx":"108","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx":"109","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx":"110","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/styles/Header.styles.jsx":"111","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/utils/notificationContent.js":"112","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx":"113","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/styles/NotificationsBoard.styles.jsx":"114","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/styles/FlashPopUpNotification.styles.jsx":"115","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx":"116","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx":"117","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx":"118","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx":"119","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx":"120","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx":"121","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx":"122","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx":"123","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/styles/NotificationItem.styles.jsx":"124","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx":"125","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx":"126","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx":"127","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx":"128","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx":"129","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx":"130","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx":"131","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx":"132","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomMaterialButton.jsx":"133","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalPosts.styles.jsx":"134","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx":"135","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx":"136","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx":"137","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx":"138","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeading.styles.jsx":"139","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.queries.js":"140","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorBody.jsx":"141","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditor.styles.jsx":"142","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorHeader.jsx":"143","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx":"144","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx":"145","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx":"146","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx":"147","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx":"148","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx":"149","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/styles/IntroductionBox.styles.jsx":"150","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx":"151","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx":"152","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeadingContact.styles.jsx":"153","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorBody.styles.jsx":"154","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/useDraftEditorPlugin.jsx":"155","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/ImagesCarousel.jsx":"156","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorHeader.styles.jsx":"157","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostCardBody.jsx":"158","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostCardHeader.jsx":"159","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostCardFooter.jsx":"160","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/Comments.jsx":"161","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/EditPostDialog.jsx":"162","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx":"163","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/PostCard.styles.jsx":"164","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/useDraftEditorPlugin.styles.jsx":"165","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/styles/ImagesCarousel.styles.jsx":"166","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/PostCardHeader.styles.jsx":"167","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/PostCardBody.styles.jsx":"168","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/styles/Dropdown.styles.jsx":"169","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/PostCardFooter.styles.jsx":"170","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/Comments.styles.jsx":"171","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/CommentEditor.jsx":"172","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/EditPostDialog.styles.jsx":"173","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/CommentItem.jsx":"174","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx":"175","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/CommentEditor.styles.jsx":"176","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/CommentItem.styles.jsx":"177","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/Responses.jsx":"178","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/ResponseEditor.jsx":"179","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/CommentCard.jsx":"180","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/CommentCard.styles.jsx":"181"},{"size":841,"mtime":1628555354838,"results":"182","hashOfConfig":"183"},{"size":362,"mtime":1628555354838,"results":"184","hashOfConfig":"183"},{"size":293,"mtime":1628555354838,"results":"185","hashOfConfig":"183"},{"size":2385,"mtime":1634481882738,"results":"186","hashOfConfig":"183"},{"size":1704,"mtime":1629987788540,"results":"187","hashOfConfig":"183"},{"size":341,"mtime":1628555354838,"results":"188","hashOfConfig":"183"},{"size":3386,"mtime":1628555354826,"results":"189","hashOfConfig":"183"},{"size":269,"mtime":1628555354830,"results":"190","hashOfConfig":"183"},{"size":4839,"mtime":1628555354838,"results":"191","hashOfConfig":"183"},{"size":3684,"mtime":1628555354838,"results":"192","hashOfConfig":"183"},{"size":1058,"mtime":1628555354838,"results":"193","hashOfConfig":"183"},{"size":1243,"mtime":1628555354838,"results":"194","hashOfConfig":"183"},{"size":3316,"mtime":1628555354838,"results":"195","hashOfConfig":"183"},{"size":3824,"mtime":1628555354838,"results":"196","hashOfConfig":"183"},{"size":4409,"mtime":1628555354838,"results":"197","hashOfConfig":"183"},{"size":13739,"mtime":1628555354826,"results":"198","hashOfConfig":"183"},{"size":485,"mtime":1628555354838,"results":"199","hashOfConfig":"183"},{"size":1348,"mtime":1628555354838,"results":"200","hashOfConfig":"183"},{"size":3155,"mtime":1628555354838,"results":"201","hashOfConfig":"183"},{"size":573,"mtime":1628555354838,"results":"202","hashOfConfig":"183"},{"size":1213,"mtime":1628555354838,"results":"203","hashOfConfig":"183"},{"size":606,"mtime":1628555354826,"results":"204","hashOfConfig":"183"},{"size":1272,"mtime":1628555354830,"results":"205","hashOfConfig":"183"},{"size":1406,"mtime":1628555354830,"results":"206","hashOfConfig":"183"},{"size":909,"mtime":1628555354830,"results":"207","hashOfConfig":"183"},{"size":131,"mtime":1628555354830,"results":"208","hashOfConfig":"183"},{"size":1029,"mtime":1628555354838,"results":"209","hashOfConfig":"183"},{"size":1371,"mtime":1628555354826,"results":"210","hashOfConfig":"183"},{"size":564,"mtime":1628555354826,"results":"211","hashOfConfig":"183"},{"size":14516,"mtime":1628555354826,"results":"212","hashOfConfig":"183"},{"size":830,"mtime":1628555354826,"results":"213","hashOfConfig":"183"},{"size":5253,"mtime":1628555354826,"results":"214","hashOfConfig":"183"},{"size":611,"mtime":1628555354826,"results":"215","hashOfConfig":"183"},{"size":4042,"mtime":1628555354826,"results":"216","hashOfConfig":"183"},{"size":4403,"mtime":1628555354826,"results":"217","hashOfConfig":"183"},{"size":463,"mtime":1628555354826,"results":"218","hashOfConfig":"183"},{"size":1776,"mtime":1628555354838,"results":"219","hashOfConfig":"183"},{"size":507,"mtime":1628555354838,"results":"220","hashOfConfig":"183"},{"size":2617,"mtime":1628555354838,"results":"221","hashOfConfig":"183"},{"size":1208,"mtime":1628555354826,"results":"222","hashOfConfig":"183"},{"size":2607,"mtime":1628555354830,"results":"223","hashOfConfig":"183"},{"size":4361,"mtime":1628555354838,"results":"224","hashOfConfig":"183"},{"size":773,"mtime":1628555354838,"results":"225","hashOfConfig":"183"},{"size":463,"mtime":1628555354838,"results":"226","hashOfConfig":"183"},{"size":632,"mtime":1628555354838,"results":"227","hashOfConfig":"183"},{"size":1475,"mtime":1628555354834,"results":"228","hashOfConfig":"183"},{"size":397,"mtime":1628555354834,"results":"229","hashOfConfig":"183"},{"size":8093,"mtime":1628555354834,"results":"230","hashOfConfig":"183"},{"size":5817,"mtime":1634484243958,"results":"231","hashOfConfig":"183"},{"size":2582,"mtime":1628555354834,"results":"232","hashOfConfig":"183"},{"size":8904,"mtime":1634484469580,"results":"233","hashOfConfig":"183"},{"size":2914,"mtime":1628555354834,"results":"234","hashOfConfig":"183"},{"size":5522,"mtime":1628555354834,"results":"235","hashOfConfig":"183"},{"size":1255,"mtime":1628555354830,"results":"236","hashOfConfig":"183"},{"size":422,"mtime":1628555354830,"results":"237","hashOfConfig":"183"},{"size":3153,"mtime":1628555354830,"results":"238","hashOfConfig":"183"},{"size":2546,"mtime":1628555354830,"results":"239","hashOfConfig":"183"},{"size":258,"mtime":1628555354834,"results":"240","hashOfConfig":"183"},{"size":1699,"mtime":1628555354830,"results":"241","hashOfConfig":"183"},{"size":2160,"mtime":1628555354834,"results":"242","hashOfConfig":"183"},{"size":2007,"mtime":1628555354834,"results":"243","hashOfConfig":"183"},{"size":9624,"mtime":1628555354838,"results":"244","hashOfConfig":"183"},{"size":9121,"mtime":1628555354838,"results":"245","hashOfConfig":"183"},{"size":4604,"mtime":1628555354826,"results":"246","hashOfConfig":"183"},{"size":1148,"mtime":1628555354826,"results":"247","hashOfConfig":"183"},{"size":1963,"mtime":1628555354826,"results":"248","hashOfConfig":"183"},{"size":2363,"mtime":1628555354826,"results":"249","hashOfConfig":"183"},{"size":3059,"mtime":1628555354826,"results":"250","hashOfConfig":"183"},{"size":8911,"mtime":1628555354826,"results":"251","hashOfConfig":"183"},{"size":231,"mtime":1628555354826,"results":"252","hashOfConfig":"183"},{"size":450,"mtime":1628555354826,"results":"253","hashOfConfig":"183"},{"size":1610,"mtime":1628555354838,"results":"254","hashOfConfig":"183"},{"size":758,"mtime":1628555354830,"results":"255","hashOfConfig":"183"},{"size":646,"mtime":1628555354838,"results":"256","hashOfConfig":"183"},{"size":974,"mtime":1628555354834,"results":"257","hashOfConfig":"183"},{"size":2359,"mtime":1628555354834,"results":"258","hashOfConfig":"183"},{"size":5224,"mtime":1628555354830,"results":"259","hashOfConfig":"183"},{"size":2083,"mtime":1628555354830,"results":"260","hashOfConfig":"183"},{"size":421,"mtime":1628555354830,"results":"261","hashOfConfig":"183"},{"size":4984,"mtime":1628555354830,"results":"262","hashOfConfig":"183"},{"size":570,"mtime":1628555354830,"results":"263","hashOfConfig":"183"},{"size":1587,"mtime":1628555354830,"results":"264","hashOfConfig":"183"},{"size":5076,"mtime":1628555354834,"results":"265","hashOfConfig":"183"},{"size":794,"mtime":1628555354834,"results":"266","hashOfConfig":"183"},{"size":1553,"mtime":1628555354830,"results":"267","hashOfConfig":"183"},{"size":324,"mtime":1628555354830,"results":"268","hashOfConfig":"183"},{"size":1147,"mtime":1628555354826,"results":"269","hashOfConfig":"183"},{"size":4274,"mtime":1628555354826,"results":"270","hashOfConfig":"183"},{"size":10099,"mtime":1628555354830,"results":"271","hashOfConfig":"183"},{"size":795,"mtime":1628555354834,"results":"272","hashOfConfig":"183"},{"size":939,"mtime":1628555354834,"results":"273","hashOfConfig":"183"},{"size":446,"mtime":1628555354830,"results":"274","hashOfConfig":"183"},{"size":1166,"mtime":1628555354834,"results":"275","hashOfConfig":"183"},{"size":6284,"mtime":1628555354834,"results":"276","hashOfConfig":"183"},{"size":5971,"mtime":1634476804032,"results":"277","hashOfConfig":"183"},{"size":2370,"mtime":1628555354834,"results":"278","hashOfConfig":"183"},{"size":505,"mtime":1628555354834,"results":"279","hashOfConfig":"183"},{"size":1823,"mtime":1628555354834,"results":"280","hashOfConfig":"183"},{"size":2511,"mtime":1628555354830,"results":"281","hashOfConfig":"183"},{"size":210,"mtime":1628555354830,"results":"282","hashOfConfig":"183"},{"size":434,"mtime":1628555354838,"results":"283","hashOfConfig":"183"},{"size":1383,"mtime":1628555354830,"results":"284","hashOfConfig":"183"},{"size":15320,"mtime":1628555354830,"results":"285","hashOfConfig":"183"},{"size":1842,"mtime":1628555354834,"results":"286","hashOfConfig":"183"},{"size":16933,"mtime":1628555354838,"results":"287","hashOfConfig":"183"},{"size":1279,"mtime":1628555354834,"results":"288","hashOfConfig":"183"},{"size":1205,"mtime":1628555354834,"results":"289","hashOfConfig":"183"},{"size":255,"mtime":1628555354838,"results":"290","hashOfConfig":"183"},{"size":1508,"mtime":1628555354830,"results":"291","hashOfConfig":"183"},{"size":1324,"mtime":1628555354834,"results":"292","hashOfConfig":"183"},{"size":1002,"mtime":1628555354834,"results":"293","hashOfConfig":"183"},{"size":3215,"mtime":1628555354838,"results":"294","hashOfConfig":"183"},{"size":550,"mtime":1628555354834,"results":"295","hashOfConfig":"183"},{"size":689,"mtime":1628555354834,"results":"296","hashOfConfig":"183"},{"size":1449,"mtime":1628555354834,"results":"297","hashOfConfig":"183"},{"size":1178,"mtime":1628555354838,"results":"298","hashOfConfig":"183"},{"size":865,"mtime":1628555354830,"results":"299","hashOfConfig":"183"},{"size":3036,"mtime":1628555354830,"results":"300","hashOfConfig":"183"},{"size":138,"mtime":1628555354830,"results":"301","hashOfConfig":"183"},{"size":4376,"mtime":1628555354830,"results":"302","hashOfConfig":"183"},{"size":1365,"mtime":1628555354830,"results":"303","hashOfConfig":"183"},{"size":344,"mtime":1628555354830,"results":"304","hashOfConfig":"183"},{"size":2791,"mtime":1628555354834,"results":"305","hashOfConfig":"183"},{"size":1708,"mtime":1628555354834,"results":"306","hashOfConfig":"183"},{"size":2108,"mtime":1628555354830,"results":"307","hashOfConfig":"183"},{"size":3913,"mtime":1628555354830,"results":"308","hashOfConfig":"183"},{"size":282,"mtime":1628555354830,"results":"309","hashOfConfig":"183"},{"size":1144,"mtime":1628555354830,"results":"310","hashOfConfig":"183"},{"size":2579,"mtime":1628555354834,"results":"311","hashOfConfig":"183"},{"size":1632,"mtime":1628555354830,"results":"312","hashOfConfig":"183"},{"size":1029,"mtime":1634515300370,"results":"313","hashOfConfig":"183"},{"size":482,"mtime":1628555354830,"results":"314","hashOfConfig":"183"},{"size":732,"mtime":1628555354834,"results":"315","hashOfConfig":"183"},{"size":619,"mtime":1628555354834,"results":"316","hashOfConfig":"183"},{"size":645,"mtime":1628555354834,"results":"317","hashOfConfig":"183"},{"size":1161,"mtime":1628555354834,"results":"318","hashOfConfig":"183"},{"size":1889,"mtime":1634480145640,"results":"319","hashOfConfig":"183"},{"size":13462,"mtime":1628555354834,"results":"320","hashOfConfig":"183"},{"size":2431,"mtime":1628555354834,"results":"321","hashOfConfig":"183"},{"size":565,"mtime":1628555354826,"results":"322","hashOfConfig":"183"},{"size":4455,"mtime":1628555354834,"results":"323","hashOfConfig":"183"},{"size":639,"mtime":1628555354834,"results":"324","hashOfConfig":"183"},{"size":3103,"mtime":1628555354834,"results":"325","hashOfConfig":"183"},{"size":3010,"mtime":1628555354834,"results":"326","hashOfConfig":"183"},{"size":2975,"mtime":1628555354838,"results":"327","hashOfConfig":"183"},{"size":2982,"mtime":1628555354838,"results":"328","hashOfConfig":"183"},{"size":1560,"mtime":1628555354830,"results":"329","hashOfConfig":"183"},{"size":2697,"mtime":1628555354830,"results":"330","hashOfConfig":"183"},{"size":3257,"mtime":1628555354830,"results":"331","hashOfConfig":"183"},{"size":1063,"mtime":1628555354834,"results":"332","hashOfConfig":"183"},{"size":3349,"mtime":1628555354834,"results":"333","hashOfConfig":"183"},{"size":1361,"mtime":1628555354834,"results":"334","hashOfConfig":"183"},{"size":2087,"mtime":1628555354834,"results":"335","hashOfConfig":"183"},{"size":1050,"mtime":1628555354834,"results":"336","hashOfConfig":"183"},{"size":2001,"mtime":1628555354838,"results":"337","hashOfConfig":"183"},{"size":1507,"mtime":1628555354838,"results":"338","hashOfConfig":"183"},{"size":2679,"mtime":1628555354834,"results":"339","hashOfConfig":"183"},{"size":1585,"mtime":1628555354834,"results":"340","hashOfConfig":"183"},{"size":3386,"mtime":1628555354834,"results":"341","hashOfConfig":"183"},{"size":3784,"mtime":1628555354834,"results":"342","hashOfConfig":"183"},{"size":502,"mtime":1628555354834,"results":"343","hashOfConfig":"183"},{"size":641,"mtime":1628555354834,"results":"344","hashOfConfig":"183"},{"size":668,"mtime":1628555354838,"results":"345","hashOfConfig":"183"},{"size":558,"mtime":1628555354834,"results":"346","hashOfConfig":"183"},{"size":362,"mtime":1628555354838,"results":"347","hashOfConfig":"183"},{"size":421,"mtime":1628555354838,"results":"348","hashOfConfig":"183"},{"size":996,"mtime":1628555354838,"results":"349","hashOfConfig":"183"},{"size":881,"mtime":1628555354834,"results":"350","hashOfConfig":"183"},{"size":1183,"mtime":1628555354838,"results":"351","hashOfConfig":"183"},{"size":2419,"mtime":1628555354834,"results":"352","hashOfConfig":"183"},{"size":99,"mtime":1628555354834,"results":"353","hashOfConfig":"183"},{"size":5936,"mtime":1628555354834,"results":"354","hashOfConfig":"183"},{"size":441,"mtime":1628555354834,"results":"355","hashOfConfig":"183"},{"size":7525,"mtime":1628555354834,"results":"356","hashOfConfig":"183"},{"size":1269,"mtime":1628555354838,"results":"357","hashOfConfig":"183"},{"size":968,"mtime":1628555354834,"results":"358","hashOfConfig":"183"},{"size":897,"mtime":1628555354834,"results":"359","hashOfConfig":"183"},{"size":2136,"mtime":1628555354834,"results":"360","hashOfConfig":"183"},{"size":7534,"mtime":1628555354834,"results":"361","hashOfConfig":"183"},{"size":2417,"mtime":1628555354834,"results":"362","hashOfConfig":"183"},{"size":1883,"mtime":1628555354834,"results":"363","hashOfConfig":"183"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},"dqrfun",{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"366"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"366"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"366"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"366"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"366"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"366"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"366"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"366"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"366"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"366"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"366"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"366"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"366"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"366"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"366"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"366"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"366"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"366"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"366"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"366"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"366"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"366"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"366"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"366"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"366"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"366"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"366"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"366"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"366"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"366"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"366"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"366"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"366"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"366"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"366"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"366"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"366"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"366"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"366"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"366"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"366"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"366"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"679"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"366"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"366"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"366"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"366"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"366"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707","usedDeprecatedRules":"366"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"679"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"366"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"366"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732","usedDeprecatedRules":"366"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"366"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"366"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"366"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"366"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"366"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"366"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/index.js",[],["785","786"],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/reportWebVitals.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/i18n.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/App/App.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/client.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/theme/index.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/cache.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.types.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/explores.js",["787"],"import React, { useState } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nconst emojiPlugin = createEmojiPlugin();\nconst { EmojiSelect, EmojiSuggestions } = emojiPlugin;\nconst linkifyPlugin = createLinkifyPlugin({\n  component(props) {\n    return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n  },\n});\nconst mentionPlugin = createMentionPlugin();\nconst { MentionSuggestions } = mentionPlugin;\nconst plugins = [linkifyPlugin, mentionPlugin, emojiPlugin];\n\nconst Linkify = () => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n\n  const onOpenChange = React.useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = React.useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n  return (\n    <div className=\"wrapper\">\n      <h2 style={{ color: \"#43a047\" }}>Draftjs Linkify</h2>\n      <Editor\n        editorState={editorState}\n        onChange={setEditorState}\n        plugins={plugins}\n      />\n      <MentionSuggestions\n        open={open}\n        suggestions={suggestions}\n        onOpenChange={onOpenChange}\n        onSearchChange={onSearchChange}\n      />\n      <EmojiSuggestions />\n      <EmojiSelect />\n    </div>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 36812,\n    name: \"Maxewqeq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 789327,\n    name: \"Nikewqewqad Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 32131,\n    name: \"Pascalsadwq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 121312,\n    name: \"Matthewewqe Russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 125134,\n    name: \"Julianewq Krispel-Samsel\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 3213214,\n    name: \"Jyotiasd Puri\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 65361,\n    name: \"Maxewq Stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 5321,\n    name: \"Nikewq Graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 43,\n    name: \"Pascalewq Brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n];\n\nexport default Linkify;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/home.js",["788","789"],"import React, { useEffect, useState, useCallback} from \"react\";\nimport Layout from \"../containers/Layout\";\nimport PostEditor from \"../components/Post/PostEditor/PostEditor\";\nimport HomeSidebar from \"../components/Sidebar/HomeSidebar\";\nimport MainBody from \"../containers/MainBody\";\nimport FriendsBoard from \"../components/Sidebar/FriendsBoard\";\nimport {useReactiveVar, useQuery} from \"@apollo/client\"\nimport ButtonToggleFriendsList from \"../components/Controls/ButtonToggleFriendsList\";\nimport {\n  MainContent,\n  MainContentLeftSide,\n  MainContentRightSide,\n} from \"./styles/pages.styles.js\";\nimport Posts from \"../components/Post/Posts\";\nimport useHomePostsSubscription from \"../hooks/useHomePostsSubscription\"\nimport LazyLoad from \"react-lazyload\"\nimport {userVar, toggleFriendsBoardVar, postsVar} from \"../apollo/cache\"\nimport {setToggleFriendsBoard} from \"../apollo/controls/controls.caches\"\nimport {FETCH_POSTS} from \"../apollo/post/post.queries\"\nimport {addFetchedPostToCache} from \"../apollo/post/post.caches\"\n\nconst Home = () => {  \n  const user =  useReactiveVar(userVar);\n  const toggleFriendsBoard = useReactiveVar(toggleFriendsBoardVar);\n  const posts = useReactiveVar(postsVar);\n  const [fetched, setFetched] = useState(false);\n  const [loading, setLoading] = useState();\n  const [fetchMore, setFetchMore] = useState(false);\n  useHomePostsSubscription();\n \n  const { refetch: fetchPosts } = useQuery(FETCH_POSTS, {\n    fetchPolicy: \"no-cache\",\n    skip: true,\n  });\n  useEffect(() => {    \n    if (!posts.length && user && !fetched) {\n      setLoading(true);\n      setFetched(true);\n      fetchPosts().then(({ data }) => {                \n        if (data) {          \n          addFetchedPostToCache(data.fetchPosts);         \n        }\n        setLoading(false);          \n      });\n      \n    }\n  }, [user, posts, fetched]);\n\n  useEffect(() => {\n    let isScrolling;\n    function onTrackUserScrolled(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const {\n          clientHeight,\n          scrollTop,\n          scrollHeight,\n        } = document.documentElement;\n        if (clientHeight + scrollTop > scrollHeight * 0.8 ) {\n          setFetchMore(true);\n        }\n      }, 66);\n    }\n    window.addEventListener(\"scroll\", onTrackUserScrolled);\n    return () => {\n      clearTimeout(isScrolling);\n      window.removeEventListener(\"scroll\", onTrackUserScrolled);\n    };\n  });\n \n  useEffect(() => {\n    if (user && fetchMore) {\n      const skip = posts.length;\n      const limit = +process.env.REACT_APP_POSTS_PER_PAGE;      \n      fetchPosts({ skip, limit }).then(({ data: { fetchPosts } }) => {\n        if(fetchPosts){\n          addFetchedPostToCache(fetchPosts);\n        }        \n        setFetchMore(false);\n      });\n    }\n  }, [user, posts, fetchMore, setFetchMore]);\n\n  const handleOpenFriendsList = useCallback(() => {    \n    setToggleFriendsBoard();\n  }, []);  \n  \n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentLeftSide>\n            {user && <LazyLoad once><PostEditor /></LazyLoad>}\n            {loading && <div>Loading post</div>}\n            {posts.length ? <LazyLoad><Posts posts={posts} /></LazyLoad>: null}\n          </MainContentLeftSide>\n          <MainContentRightSide>\n            <HomeSidebar user={user} />\n          </MainContentRightSide>\n        </MainContent>\n        {user &&  (\n          <>\n            {\" \"}\n            {<FriendsBoard />}\n            <ButtonToggleFriendsList\n              hide={toggleFriendsBoard}\n              onClick={handleOpenFriendsList}\n            />\n          </>\n        )}\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default Home;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/auth.js",["790"],"import React, { lazy, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { userVar } from \"../apollo/cache\";\nimport { useReactiveVar } from \"@apollo/client\";\nconst SignIn = lazy(() => import(\"../components/Auth/SignIn\"));\nconst SignUp = lazy(() => import(\"../components/Auth/SignUp\"));\n\nconst AuthPage = ({setIsAuth, ...props}) => {\n  const { match, location, history } = props;\n  const user = useReactiveVar(userVar);\n  useEffect(() => {\n    if (user && location.state && location.state.from) {\n      history.replace(location.state.from);\n      setIsAuth(true);\n    } else if (user) {\n      history.replace(\"/\");\n      setIsAuth(Date.now());\n    }\n  }, [user, history, location.state]);\n  return (\n    <Switch>\n      <Route\n        exact\n        path={match.path}\n        render={(props) => <SignIn authPath={match.path} {...props} />}\n      />\n      <Route\n        path={`${match.path}/signup`}\n        render={(props) => <SignUp authPath={match.path} {...props} />}\n      />\n    </Switch>\n  );\n};\n\nexport default AuthPage;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/personal.js",["791"],"import React, { useEffect, useState } from \"react\";\nimport PersonalHeading from \"../components/Personal/PersonalHeading\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport {\n  currentPersonalUserVar,\n} from \"../apollo/cache\";\nimport { FETCH_PERSONAL_USER } from \"../apollo/user/user.types\";\nimport Layout from \"../containers/Layout\";\nimport { setCurrentPersonalUser } from \"../apollo/user/currentPersonalUser.caches\";\nimport PersonalPosts from \"../components/Personal/PersonalPosts\";\nconst PersonalPage = (props) => {  \n  const { slug } = props.match.params; \n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar)\n  const {refetch : fetchCurrentPersonalUser} = useQuery(FETCH_PERSONAL_USER, {skip : true})  \n  const [fetched, setFetched] = useState(false);\n  useEffect(() => {\n    let _mounted = true ;\n    fetchCurrentPersonalUser({slug}).then(({data}) => {\n      if(data && _mounted){\n        setCurrentPersonalUser(data.fetchPersonalUser);\n        setFetched(true);\n      }\n    })\n    return () => _mounted = false ;\n  },[slug])  \n\n  if(!currentPersonalUser || !fetched) return null;\n  return (\n    <Layout>\n      <PersonalHeading />\n      <PersonalPosts/>\n    </Layout>\n  );\n};\n\nexport default PersonalPage;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/notifications.js",["792","793"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport {\n  Wrapper,\n  NotificationsContent,\n  OtherContents,\n} from \"./styles/notifications.styles\";\nimport NotificationItem from \"../components/Notification/NotificationItem\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { userVar, notificationsVar } from \"../apollo/cache\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MainBody from \"../containers/MainBody\";\nimport { FETCH_NOTIFICATIONS } from \"../apollo/notification/notification.types\";\nimport { addNotificationsToNotifcationsList, setNotifications } from \"../apollo/notification/notification.caches\";\nconst NotificationsPage = () => {\n  const user = useReactiveVar(userVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const [fetchedNotifications, setFetchedNotifications] = useState(false);\n  const [loadingNotifications, setLoadingNotifications] = useState(true);\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });  \n\n  useEffect(() => {\n    if (\n      !fetchedNotifications &&\n      user?.notifications?.length && !notifications.length\n    ) {\n      fetchNotifications()\n        .then(({ data }) => {\n          console.log(data);\n          if (data) {\n            setNotifications(data.fetchNotifications);\n            setLoadingNotifications(false);\n            setFetchedNotifications(true);\n          }\n        })\n        .catch(() => {\n          setLoadingNotifications(false);\n          setFetchedNotifications(true);\n        });\n    } else if (!fetchedNotifications && notifications.length) {\n      setFetchedNotifications(true);\n      setLoadingNotifications(false);\n    }\n  }, [fetchedNotifications, user,user?.notifications?.length && notifications]);\n\n  const fetchMoreNotifications = () => {\n    const skip = notifications.length; \n    const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n    fetchNotifications({skip, limit}).then(({data})=> {\n      if(data){\n        addNotificationsToNotifcationsList(data.fetchNotifications)\n      }\n    })\n  }\n\n  return (\n    <Layout>\n      <MainBody>\n        <Wrapper>\n          <NotificationsContent>\n            {loadingNotifications ? (\n              <div>Loading Notifications 1...</div>\n            ) : user ? (\n              <InfiniteScroll\n                dataLength={notifications.length}\n                hasMore={notifications.length < user.notifications.length}\n                loader={<div>Loading Notifications...</div>}\n                next={fetchMoreNotifications}\n                scrollThreshold={0.85}\n              >\n                {notifications.map((notification) => (\n                  <NotificationItem\n                    key={`notification-${notification._id}`}\n                    notifications={notifications}\n                    notification={notification}\n                  />\n                ))}\n              </InfiniteScroll>\n            ) : (\n              <CardRequestAuth />\n            )}\n          </NotificationsContent>\n          <OtherContents></OtherContents>\n        </Wrapper>\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default NotificationsPage;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/chats.js",["794","795"],"import React, { lazy, useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport { userVar, messagesStorageVar } from \"../apollo/cache\";\n\nimport { useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\nimport CardRequestAuth from \"../components/Card/CardRequestAuth\";\nimport {\n  RequestAuthScreen,\n  ChatsWrapper,\n  SidebarNav,\n  MainTab,\n} from \"./styles/chats.styles\";\nimport MenuChat from \"../components/Chat/MenuChat\";\nimport { Route, Switch } from \"react-router-dom\";\nimport {\n  FETCH_CHAT_CONVERSATIONS,\n  UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED,\n} from \"../apollo/chat/chat.types\";\n\nimport { setInitialMessagesStorage } from \"../apollo/chat/chat.caches\";\nimport useChatSubscriptions from \"../hooks/useChatSubscriptions\";\nimport { setNumberOfConversations } from \"../apollo/chat/chat.caches\";\nconst ChatConversations = lazy(() =>\n  import(\"../components/Chat/Conversations\")\n);\nconst ChatContacts = lazy(() => import(\"../components/Chat/Contact\"));\n\nconst ChatsPage = ({ match }) => {\n  //use Query\n  const user = useReactiveVar(userVar);\n  const messagesStorage = useReactiveVar(messagesStorageVar)\n  const { refetch: fetchChatConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n  const [\n    updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched,\n  ] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n  );\n  //useState\n\n  useChatSubscriptions();\n    console.log(messagesStorage)\n  useEffect(() => {\n    let _isMounted = true;\n    if (!Object.keys(messagesStorage).length && user) {\n      //fetch conversations\n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchChatConversations().then(({ data }) => {\n        if (_isMounted) {\n          console.log(data)\n          const {\n            conversations,\n            numberOfConversations,\n          } = data.fetchChatConversations;\n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n\n          setInitialMessagesStorage({ ...storage });\n          //update those conversations to received when user online if he/she has offlined before\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setNumberOfConversations(numberOfConversations);\n        }\n      });\n    }\n    return () => (_isMounted = false);\n  }, [user, messagesStorage]);\n  if (!user)\n    return (\n      <Layout>\n        <RequestAuthScreen>\n          <CardRequestAuth />\n        </RequestAuthScreen>\n      </Layout>\n    );\n  return (\n    <Layout>\n      <ChatsWrapper>\n        <SidebarNav>\n          <MenuChat />\n        </SidebarNav>\n        <MainTab>\n          <Switch>\n            <Route exact path={match.path} component={ChatConversations} />\n            <Route\n              exact\n              path={`${match.path}/contacts`}\n              component={ChatContacts}\n            />\n          </Switch>\n        </MainTab>\n      </ChatsWrapper>\n    </Layout>\n  );\n};\n\nexport default ChatsPage;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/contacts.js",["796","797","798","799"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../containers/Layout\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { userVar, contactVar } from \"../apollo/cache\";\nimport {\n  FETCH_LIST_CONTACT\n} from \"../apollo/contact/contact.types\";\nimport {\n  FETCH_RECEIVED_REQUESTS_TO_ADD_FRIEND, \n  FETCH_SENT_REQUEST_TO_ADD_FRIEND\n} from \"../apollo/contact/contact.types\";\n\nimport {\n  setContactList,\n  fetchMoreSentRequestsToAddFriend,\n  fetchMoreReceivedRequestsToAddFriend\n} from \"../apollo/contact/contact.caches\";\nimport MainBody from \"../containers/MainBody\";\nimport {\n  MainContent,\n  MainContentFullSize,\n  ContactTitle,\n} from \"./styles/pages.styles\";\nimport SentRequestsToAddFriend from \"../components/Contact/SentRequestsToAddFriend\";\nimport ReceivedRequestsToAddFriend from \"../components/Contact/ReceivedRequestsToAddFriend\";\nimport FriendsList from \"../components/Contact/FriendsList\";\nimport useLanguage from \"../components/Global/useLanguage\";\n\nconst FriendsPage = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [fetched, setFetched] = useState(false);\n  const { i18n, lang } = useLanguage();\n  const user = useReactiveVar(userVar);    \n  const contact = useReactiveVar(contactVar);\n\n  const { refetch: fetchListContact } = useQuery(FETCH_LIST_CONTACT, {\n    skip: true,\n  });\n  const {refetch : fetchReceivedRequestsToAddFriend} = useQuery(FETCH_RECEIVED_REQUESTS_TO_ADD_FRIEND, {skip : true})\n  const {refetch : fetchSentRequestToAddFriend} = useQuery(FETCH_SENT_REQUEST_TO_ADD_FRIEND, {skip: true})\n  useEffect(() => {\n    if (!fetched && user) {\n      if (\n        user?.sentRequestToAddFriend.length ||\n        user?.receivedRequestToAddFriend.length ||\n        user?.friends.length\n      ) {\n        fetchListContact()\n          .then(({ data }) => {\n            setFetched(true);\n            const {\n              sentRequests,\n              receivedRequests,\n              friends,\n            } = data.fetchListContact;\n            \n            setContactList(friends, receivedRequests, sentRequests);           \n          })\n          .catch((err) => {\n            setFetched(true);\n            console.log(err);\n          });\n      }\n    }\n  }, [user, fetched, setFetched]);\n  \n  useEffect(() => {\n    let _isMounted = true ; \n    if(fetched){\n      const limit = +process.env.REACT_APP_USERS_CONTACT_PER_LOAD;\n      if(contact.sentRequestsToAddFriend.length <= 1 && user.sentRequestToAddFriend.length > 1){\n        const skip = contact.sentRequestsToAddFriend.length ; \n       \n        fetchSentRequestToAddFriend({ skip, limit }).then(({ data }) => {\n          if (data?.fetchSentRequestToAddFriend?.length && _isMounted ) {         \n            fetchMoreSentRequestsToAddFriend(data.fetchSentRequestToAddFriend)\n          }\n        });\n      }\n      if(contact.receivedRequestsToAddFriend.length <= 1 && user.receivedRequestToAddFriend.length > 1){\n        const skip = contact.receivedRequestsToAddFriend.length ; \n        fetchReceivedRequestsToAddFriend({skip, limit}).then(({data}) => {\n          if(data?.fetchReceivedRequestToAddFriend?.length && _isMounted){\n            fetchMoreReceivedRequestsToAddFriend(data.fetchReceivedRequestToAddFriend)\n          }\n        })\n      }\n    }\n    \n   \n    return () => _isMounted = false ;\n  },[fetched, contact, user, fetchSentRequestToAddFriend])\n  \n  return (\n    <Layout>\n      <MainBody>\n        <MainContent>\n          <MainContentFullSize>\n            <ContactTitle>\n              {i18n.store.data[lang].translation.contacts.title}\n            </ContactTitle>\n            {user && contact.sentRequestsToAddFriend.length ? (\n              <SentRequestsToAddFriend\n                user={user}\n                sentRequestsToAddFriend={contact.sentRequestsToAddFriend}\n              />\n            ) : null}\n            {user && contact.receivedRequestsToAddFriend.length ? (\n              <ReceivedRequestsToAddFriend\n                user={user}\n                receivedRequestsToAddFriend={\n                  contact.receivedRequestsToAddFriend\n                }\n              />\n            ) : null}\n            {user && contact.friends.length ? (\n              <FriendsList user={user} friends={contact.friends} />\n            ) : null}\n          </MainContentFullSize>\n        </MainContent>\n      </MainBody>\n    </Layout>\n  );\n};\n\nexport default FriendsPage;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/App/GlobalStyles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/containers/ErrorBoundary.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useUserStatusSubscriptions.jsx",["800"],"import { useEffect } from \"react\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { userVar } from \"../apollo/cache\";\n\nimport io from \"socket.io-client\";\nimport _ from \"lodash\";\nimport {updateUserOnlineOfflineMessagesStorage} from \"../apollo/chat/chat.caches\"\nimport {updateUserOnlineOffline} from \"../apollo/contact/contact.caches\"\nconst useUserStatusSubscriptions = () => {\n  const user = useReactiveVar(userVar); \n \n  useEffect(() => {\n    const socket = io(\"http://localhost:5000\");\n\n    if (user) {\n      console.log(\"render\");\n      //pass socket to backend to update status online\n      socket.open();\n      const { _id, name, slug, avatar } = user;\n      socket.emit(\"client-send-user-info\", {\n        _id,\n        name,\n        slug,\n        avatar,\n        isOnline: true,\n      });\n      socket.on(\"server-send-user-online\", (data) => {\n        updateUserOnlineOffline(data);        \n        updateUserOnlineOfflineMessagesStorage(data._id);\n      });\n      socket.on(\"server-send-user-is-offline\", (userId) => {\n        updateUserOnlineOffline({ _id: userId }, false);\n        updateUserOnlineOfflineMessagesStorage(userId, false);\n      });\n    } else {\n      socket.disconnect();\n    }\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [user]);\n};\n\nexport default useUserStatusSubscriptions;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useContactSubscription.jsx",["801"],"import { useEffect } from \"react\";\nimport { FETCH_CURRENT_USER } from \"../apollo/user/user.types\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport {\n  userVar,\n  receivedRequestsToAddFriendVar,\n  currentPersonalUserVar,    \n} from \"../apollo/cache\";\nimport {\n  REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  REMOVE_FRIEND_SUBSCRIPTION,\n} from \"../apollo/contact/contact.subscriptions\";\nimport { removeNotificationItemFromNotificationsList } from \"../apollo/notification/notification.caches\";\nimport { setCurrentUser } from \"../apollo/user/user.caches\";\nimport { setCurrentPersonalUser } from \"../apollo/user/currentPersonalUser.caches\";\nimport {\n  removeSentRequestToAddFriend,\n  removeFriendsFromContact,\n} from \"../apollo/contact/contact.caches\";\n\nconst useContactSubscription = () => {\n  const user = useReactiveVar(userVar);\n  const receivedRequestsToAddFriend = useReactiveVar(\n    receivedRequestsToAddFriendVar\n  );\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);  \n  \n  const { subscribeToMore: subscribeUser } = useQuery(FETCH_CURRENT_USER, {\n    skip: true,\n  });\n\n  //function to handle when subscription called\n  const updateSubscriptionOnChange = (sender, receiver) => {\n    setCurrentUser({\n      ...user,\n      ...sender,\n    });\n\n    if (\n      currentPersonalUser &&\n      currentPersonalUser._id.toString() === receiver._id.toString()\n    ) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        ...receiver,\n      });\n    }\n  };\n  useEffect(() => {\n    let unsubscribeRejectRquestToAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeRemoveFriend;\n    if (subscribeUser && user) {\n      unsubscribeRejectRquestToAddFriend = subscribeUser({\n        document: REJECT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,            \n          } = subscriptionData.data.rejectRequestToAddFriendSubscription;\n          removeSentRequestToAddFriend(receiver);        \n          updateSubscriptionOnChange(sender, receiver);\n        },\n      });\n\n      unsubscribeRemoveFriend = subscribeUser({\n        document: REMOVE_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            sender,\n            receiver,\n            notification,\n          } = subscriptionData.data.removeFriendSubscription;\n          console.log(subscriptionData);\n          removeFriendsFromContact(sender);\n          removeNotificationItemFromNotificationsList(notification)\n          updateSubscriptionOnChange(receiver, sender);\n        },\n      });\n    }\n\n    return () => {\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeRejectRquestToAddFriend) {\n        unsubscribeRejectRquestToAddFriend();\n      }\n      if (unsubscribeRemoveFriend) {\n        unsubscribeRemoveFriend();\n      }\n    };\n  }, [subscribeUser, user, receivedRequestsToAddFriend]);\n};\n\nexport default useContactSubscription;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/locales/index.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/styles/pages.styles.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/initialState.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.queries.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.mutations.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.subscriptions.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/currentPersonalUser.caches.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/styles/chats.styles.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.queries.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/controls/controls.caches.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.caches.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.types.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.caches.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.types.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.caches.js",["802","803"],"import {\n  currentChatVar,\n  numberOfConversationsVar,\n  friendsVar,\n  messagesStorageVar,\n  contactVar,\n} from \"../cache\";\nimport { initialState } from \"../initialState\";\nexport const setCurrentChat = (userOrGroup) =>\n  currentChatVar({ ...userOrGroup });\n\nexport const setNumberOfConversations = (number) =>\n  numberOfConversationsVar(number);\n\n/**\n * {user} Object\n */\n\n\nexport const updateUserOnlineOfflineMessagesStorage = (\n  userId,\n  isOnline = true\n) => {\n  const storage = { ...messagesStorageVar() };\n  const checkUserExistedInStore = storage[userId];\n  if (checkUserExistedInStore) {\n    return messagesStorageVar({\n      ...storage,\n      [userId]: {\n        ...storage[userId],\n        profile: {\n          ...storage[userId].profile,\n          isOnline,\n          offlinedAt: isOnline ? null : new Date(),\n        },\n      },\n    });\n  }\n};\n\nexport const clearCurrentChat = () =>\n  currentChatVar(initialState.currentUserChat);\n\nexport const addNewConversationToMessagesStorage = (key, value) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({ ...storage, [key]: { ...value } });\n};\n\nexport const setInitialMessagesStorage = (data) =>\n  messagesStorageVar({ ...data });\n\nexport const setMessagesStorage = (\n  conversation,\n  message,\n  scope,\n  hasSeenLatestMessage = false\n) => {\n  const storage = { ...messagesStorageVar() };\n\n  return messagesStorageVar({\n    ...storage,\n    [conversation._id]: {\n      profile: { ...conversation },\n      messages: storage[conversation._id]\n        ? [...storage[conversation._id].messages, { ...message }]\n        : [{ ...message }],\n      scope,\n      latestMessage: { ...message },\n      hasSeenLatestMessage,\n    },\n  });\n};\n\nexport const updateHasSeenLatestMessage = (conversationId) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({\n    ...storage,\n    [conversationId]: {\n      ...storage[conversationId],\n      hasSeenLatestMessage: true,\n    },\n  });\n};\n\nexport const updateMessagesStorage = (\n  messenger,\n  updatedMessage,\n  scope,\n  hasSeenLatestMessage\n) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({\n    ...storage,\n    [messenger._id]: {\n      profile: { ...messenger },\n      messages: storage[messenger._id].messages.map((message) => {\n        if (message._id === updatedMessage._id) {\n          return { ...updatedMessage };\n        }\n        return { ...message };\n      }),\n      scope,\n      latestMessage: updatedMessage,\n      hasSeenLatestMessage,\n    },\n  });\n};\n\nexport const updateMessagesStorageToReceivedWhenUserOnline = (conversationId) => {\n  const storage = { ...messagesStorageVar() };\n  if (storage[conversationId]) {\n    return messagesStorageVar({\n      ...storage,\n      [conversationId]: {\n        ...storage[conversationId],\n        messages: storage[conversationId].messages.map((message) => {\n          let __message = { ...message };\n          if (message.receiverStatus === \"SENT\") {\n            __message.receiverStatus = \"DELIVERED\";\n          }\n          return { ...__message };\n        }),\n      },\n    });\n  }\n};\nexport const updateMessagesStorageWhenReceiverSeenAllMessages = (\n  conversationId\n) => {\n  const storage = { ...messagesStorageVar() };\n  return setMessagesStorage({\n    ...storage,\n    [conversationId]: {\n      ...storage[conversationId],\n      messages: storage[conversationId].messages.map((message) => {\n        if (message.receiver._id === conversationId) {\n          return { ...message, receiverStatus: \"SEEN\" };\n        }\n        return { ...message };\n      }),\n      hasSeenLatestMessage: true,\n    },\n  });\n};\n\nexport const updateMoreMessages = (conversationsId, newMessages) => {\n  const storage = { ...messagesStorageVar() };\n  return messagesStorageVar({\n    ...storage,\n    [conversationsId]: {\n      ...storage[conversationsId],\n      messages: [...newMessages, ...storage[conversationsId].messages],\n    },\n  });\n};\n\nexport const clearMessageStorage = () =>\n  messagesStorageVar(initialState.messagesStorage);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.caches.js",["804","805"],"import { AiOutlineConsoleSql } from \"react-icons/ai\";\nimport {contactVar, userVar} from \"../cache\"\nimport { initialState } from \"../initialState\";\nimport _ from \"lodash\"\nexport const setContactList = (friends, receivedRequestsToAddFriend, sentRequestsToAddFriend) => {  \n  const contact = {...contactVar()};\n  if(friends) contact.friends = [...friends];\n  if(receivedRequestsToAddFriend) contact.receivedRequestsToAddFriend = [...receivedRequestsToAddFriend];\n  if(sentRequestsToAddFriend) contact.sentRequestsToAddFriend = [...sentRequestsToAddFriend];\n  return contactVar(contact);\n}\n\nexport const pushFriendsListToContact = friends => {\n  const contact = {...contactVar()};\n  contact.friends = [...contact.friends, ...friends]\n  console.log(contact);\n  return contactVar(contact);\n}\n\nexport const fetchMoreReceivedRequestsToAddFriend = receivedRequestsData => {\n  const contact = {...contactVar()};\n  contact.receivedRequestsToAddFriend = [...contact.receivedRequestsToAddFriend, ...receivedRequestsData];\n  return contactVar(contact);\n}\n\nexport const fetchMoreSentRequestsToAddFriend = sentRequestsData => {\n  const contact = {...contactVar()};\n  contact.sentRequestsToAddFriend = [...contact.sentRequestsToAddFriend, ...sentRequestsData];\n  return contactVar(contact);\n}\n\nexport const moveReceivedRequestToFriend = senderRequest => {\n  const contact = {...contactVar()};\n  contact.receivedRequestsToAddFriend = contact.receivedRequestsToAddFriend.filter(receivedUser => receivedUser._id !== senderRequest._id);\n  contact.friends = [{...senderRequest}, ...contact.friends];\n  return contactVar(contact);\n}\nexport const moveSentRequestToFriend = senderRequest => {\n  const contact = {...contactVar()};\n  contact.sentRequestsToAddFriend = contact.sentRequestsToAddFriend.filter(receivedUser => receivedUser._id !== senderRequest._id);\n  contact.friends = [{...senderRequest}, ...contact.friends];\n  return contactVar(contact);\n}\n\nexport const removeSentRequestToAddFriend = receiverRequest => {\n  const contact = {...contactVar()};\n  contact.sentRequestsToAddFriend = contact.sentRequestsToAddFriend.filter(sentUser => sentUser._id !== receiverRequest._id) ;\n  return contactVar(contact);\n}\n\nexport const addUserToReceivedRequestToAddFriend = sender => {  \n  const contact = {...contactVar()};  \n  contact.receivedRequestsToAddFriend = [{...sender}, ...contact.receivedRequestsToAddFriend];\n  console.log(contact);\n  return contactVar(contact);\n}\n\nexport const removeUserFromReceivedRequestToAddFriend = sender => {\n  const contact = {...contactVar()};\n  contact.receivedRequestsToAddFriend =contact.receivedRequestsToAddFriend.filter(receivedUserRequest =>  receivedUserRequest._id !== sender._id) \n  return contactVar(contact);\n}\n\nexport const removeReceivedRequestToAddFriend = senderRequest => {\n  const contact = {...contactVar()};\n  contact.receivedRequestsToAddFriend = contact.receivedRequestsToAddFriend.filter(receivedRequest => receivedRequest._id !== senderRequest._id);\n  return contactVar(contact);\n}\n\nexport const removeFriendsFromContact = friend => {\n  const contact = {...contactVar()};\n  contact.friends = contact.friends.filter(_friend => _friend._id !== friend._id);\n  return contactVar(contact);\n}\n\nexport const clearContact = () => contactVar(initialState.contact)\n\nexport const updateUserOnlineOffline = (user, isOnline = true) => {\n  let contact = {...contactVar()};\n  if (typeof isOnline === \"boolean\") {\n    if (isOnline) {\n      //update user is online\n      if (\n        contact.friends.find((friend) => friend._id.toString() === user._id.toString())\n      ) {\n        contact.friends = contact.friends.filter(\n          (friend) => friend._id.toString() !== user._id.toString()\n        );\n        contact.friends = [{...user}, ...contact.friends];\n      }\n      return contactVar(contact);\n    }\n    //update user is Offline\n    const { _id } = user;\n    if (_id) {\n      contact.friends = contact.friends.map((friend) => {\n        let updatedFriends = { ...friend };\n        if (updatedFriends._id.toString() === _id.toString()) {\n          updatedFriends.isOnline = false;\n          updatedFriends.offlinedAt = new Date();\n        }\n        return { ...updatedFriends };\n      });\n      contact.friends = _.orderBy(contact.friends, [function(item){return item.isOnline}, function(item){return item.slug}], [\"desc\", \"asc\"])\n      return contactVar(contact);\n    }\n  }\n};","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.types.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/containers/Layout.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/containers/MainBody.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useHomePostsSubscription.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.subscriptions.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/user/user.caches.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useChatSubscriptions.jsx",["806","807"],"import { useEffect } from \"react\";\nimport {\n  FETCH_CHAT_CONVERSATIONS,\n  UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE,\n} from \"../apollo/chat/chat.types\";\nimport { useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { userVar, currentChatVar } from \"../apollo/cache\";\nimport {\n  setMessagesStorage,\n  updateMessagesStorage,\n  updateMessagesStorageWhenReceiverSeenAllMessages,\n  updateMessagesStorageToReceivedWhenUserOnline,\n} from \"../apollo/chat/chat.caches\";\nimport {\n  SENT_MESSAGE_CHAT_SUBSCRIPTION,\n  NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n  SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n  NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n} from \"../apollo/chat/chat.types\";\n\nconst useChatSubscriptions = () => {\n  const user = useReactiveVar(userVar);\n  const currentChat = useReactiveVar(currentChatVar)\n  const { subscribeToMore: subscribeChatMessage } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );  \n\n  const [updatePersonalReceiverWhenReceivedNewMessage] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_WHEN_RECEIVED_NEW_MESSAGE\n  );\n  useEffect(() => {\n    let unsubscribeChatMessage;\n    let unsubscribeNotifySenderThatReceiverHasReceivedMessage;\n    let unsubscribeSubscribeReceiverHasSeenAllMessages;\n    let unsubscribeNotifySendersReceiverOnlineHasReceivedMessages;\n    if (subscribeChatMessage && user) {\n      unsubscribeChatMessage = subscribeChatMessage({\n        document: SENT_MESSAGE_CHAT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            action,\n            scope,\n            message,\n          } = subscriptionData.data.sentMessageChatSubscription;\n          const { sender } = message;\n\n          setMessagesStorage(sender, message, scope, false);\n          //update Delivered status\n          const messageStatus =\n            currentChat?._id === sender._id ? \"SEEN\" : \"DELIVERED\";\n          updatePersonalReceiverWhenReceivedNewMessage({\n            variables: { messageId: message._id, messageStatus },\n          });\n        },\n      });\n      unsubscribeNotifySenderThatReceiverHasReceivedMessage = subscribeChatMessage(\n        {\n          document: NOTIFY_SENDER_THAT_RECEIVER_HAS_RECEIVED_NEW_MESSAGE_CHAT,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const {\n              action,\n              scope,\n              message,\n            } = subscriptionData.data.notifySenderThatReceiverHasReceivedMessageChat;\n            const { receiver } = message;\n            updateMessagesStorage(receiver, message, scope, action === \"SEEN\");\n          },\n        }\n      );\n      unsubscribeSubscribeReceiverHasSeenAllMessages = subscribeChatMessage({\n        document: SENDER_SUBSCRIBE_WHEN_RECEIVER_HAS_SEEN_ALL_MESSAGES,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          const {\n            receiverId,\n          } = subscriptionData.data.senderSubscribeWhenReceiverHasSeenAllMessages;\n          updateMessagesStorageWhenReceiverSeenAllMessages(receiverId);\n        },\n      });\n      unsubscribeNotifySendersReceiverOnlineHasReceivedMessages = subscribeChatMessage(\n        {\n          document: NOTIFY_SENDERS_RECEIVER_ONLINE_HAS_RECEIVED_MESSAGES,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            const {\n              receiver,\n            } = subscriptionData.data.notifySendersThatReceiverOnlineHasReceivedMessagesChat;\n            updateMessagesStorageToReceivedWhenUserOnline(receiver);\n          },\n        }\n      );\n    }\n    return () => {\n      if (unsubscribeChatMessage) {\n        unsubscribeChatMessage();\n      }\n      if (unsubscribeNotifySenderThatReceiverHasReceivedMessage) {\n        unsubscribeNotifySenderThatReceiverHasReceivedMessage();\n      }\n      if (unsubscribeSubscribeReceiverHasSeenAllMessages) {\n        unsubscribeSubscribeReceiverHasSeenAllMessages();\n      }\n      if (unsubscribeNotifySendersReceiverOnlineHasReceivedMessages) {\n        unsubscribeNotifySendersReceiverOnlineHasReceivedMessages();\n      }\n    };\n  }, [subscribeChatMessage, user, currentChat]);\n};\n\nexport default useChatSubscriptions;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/pages/styles/notifications.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/HomeSidebar.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/FriendsBoard.jsx",["808"],"import React, {useState} from 'react'\nimport FriendsList from \"./FriendsList\"\nimport ButtonToggleFriendsList from \"../Controls/ButtonToggleFriendsList\"\nimport {FriendsBoardWrapper} from \"./Sidebar.styles\"\nimport {useReactiveVar} from \"@apollo/client\"\nimport {toggleFriendsBoardVar} from \"../../apollo/cache\"\nconst FriendsBoard = () => {\n  const toggleFriendsBoard = useReactiveVar(toggleFriendsBoardVar);  \n  return (\n    <FriendsBoardWrapper show={toggleFriendsBoard}>      \n      <FriendsList show={toggleFriendsBoard} />\n      <ButtonToggleFriendsList />\n    </FriendsBoardWrapper>\n  )\n}\n\nexport default React.memo(FriendsBoard)\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonToggleFriendsList.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/Posts.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditor.jsx",["809"],"import React, { useState, useCallback, useEffect } from \"react\";\nimport PostEditorHeader from \"./PostEditorHeader\";\nimport PostEditorBody from \"./PostEditorBody\";\nimport { EditorWrapper } from \"./styles/PostEditor.styles\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { useThemeUI } from \"theme-ui\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport useLanguage from \"../../Global/useLanguage\";\nimport _ from \"lodash\";\nimport { useMutation, useReactiveVar } from \"@apollo/client\";\nimport { EDIT_POST, CREATE_POST } from \"../../../apollo/post/post.types\";\nimport { userVar, currentPersonalUserVar } from \"../../../apollo/cache\";\nimport { Prompt } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {\n  pushNewPostToPostsList,\n  updatePost,\n} from \"../../../apollo/post/post.caches\";\nimport {\n  addPostItemToCurrentPersonalUser,\n  updatePostInCurrentPersonalUser,\n} from \"../../../apollo/post/post.caches\";\nconst PostEditor = ({\n  editedEditorState,\n  isEdited,\n  postEdited,\n  openEdited,\n  setOpenEdited,\n}) => {\n  const user = useReactiveVar(userVar);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const [postStatus, setPostStatus] = useState(\"PUBLIC\");\n  const [editorState, setEditorState] = useState(() =>\n    editedEditorState ? editedEditorState : EditorState.createEmpty()\n  );\n  const [isBlocking, setIsBlocking] = useState(false);\n  const [images, setImages] = useState([]);\n  const [disabledSubmit, setDisabledSubmit] = useState(true);\n  const [openPostEditorDialog, setOpenPostEditorDialog] = useState(false);\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const { post } = i18n.store.data[lang].translation;\n  const [createPost, { loading: createPostLoading }] = useMutation(CREATE_POST);\n  const [editPost] = useMutation(EDIT_POST);\n  const handleSetPostStatus = useCallback((status) => {\n    setPostStatus(status);\n  }, []);\n\n  useEffect(() => {\n    if (editorState.getCurrentContent().hasText()) {\n      setIsBlocking(true);\n    } else {\n      setIsBlocking(false);\n    }\n  }, [editorState]);\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      if (images.length || editorState.getCurrentContent().hasText()) {\n        if (\n          postStatus === \"PUBLIC\" ||\n          postStatus === \"PRIVATE\" ||\n          postStatus === \"FRIENDS\"\n        ) {\n          setDisabledSubmit(false);\n        } else {\n          setDisabledSubmit(true);\n        }\n      } else {\n        setDisabledSubmit(true);\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [images, editorState, postStatus]);\n\n  const onOpenDialog = useCallback((e) => {\n    e.preventDefault();\n    setOpenPostEditorDialog(true);\n  }, []);\n\n  const onSubmitPostStatus = () => {\n    let elementId;\n    if (isEdited) {\n      elementId = `edited-post-body-${postEdited._id}`;\n    } else {\n      elementId = \"post-editor-body\";\n    }\n    const rawEditorState = convertToRaw(editorState.getCurrentContent());\n    const rawText = JSON.stringify(rawEditorState);\n    const shortenText = draftToHtml(rawEditorState)\n      .split(\"</p>\")[0]\n      .replace(/<p>|&nbsp;/g, \"\");\n    document\n      .getElementById(elementId)\n      ?.querySelector(\"[contenteditable=true]\")\n      ?.setAttribute(\"contenteditable\", false);\n    const text = document.getElementById(elementId).innerHTML;\n    let mentions = [];\n    let fileNames = [];\n    let fileMimetype = [];\n    let fileEncodings = [];\n\n    if (rawEditorState.entityMap) {\n      Object.values(rawEditorState.entityMap).map(({ data }) => {\n        if (data.mention) {\n          mentions.push({ ...data.mention });\n        }\n      });\n    }\n    mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n      mention._id.toString()\n    );\n\n    if (images.length) {\n      fileNames = images.map((image) => image.name);\n      fileMimetype = images.map((image) => image.mimetype);\n      fileEncodings = images.map((image) => image.src);\n    }\n    const postData = {\n      text,\n      shortenText,\n      rawText,\n      mentions,\n      fileNames,\n      fileMimetype,\n      fileEncodings,\n      status: postStatus,\n    };\n    if (isEdited && postEdited) {\n      console.log(\"edited Post\");\n      editPost({ variables: { postId: postEdited._id, ...postData } })\n        .then(({ data }) => {\n          if (openEdited) {\n            setOpenEdited(false);\n            setEditorState(EditorState.createEmpty());\n          }\n\n          const { editPost } = data;\n          updatePost(editPost);\n          if (user._id === currentPersonalUser._id) {\n            updatePostInCurrentPersonalUser(editPost);\n          }\n          document\n            .getElementById(elementId)\n            ?.querySelector(\"[contenteditable=true]\")\n            ?.setAttribute(\"contenteditable\", true);\n          setEditorState(EditorState.createEmpty());\n          setImages([]);\n        })\n        .catch((err) => {\n          console.log(err.message);\n          document\n            .getElementById(elementId)\n            ?.querySelector(\"[contenteditable=true]\")\n            ?.setAttribute(\"contenteditable\", true);\n        });\n    } else {\n      console.log(\"create new post\");\n      createPost({\n        variables: {\n          text,\n          shortenText,\n          rawText,\n          mentions,\n          fileNames,\n          fileMimetype,\n          fileEncodings,\n          status: postStatus,\n        },\n      })\n        .then(({ data }) => {\n          if (onOpenDialog) {\n            handleCloseDialog();\n            setEditorState(EditorState.createEmpty());\n          }\n          const { createPost } = data;\n          pushNewPostToPostsList(createPost);\n          if (user?._id === currentPersonalUser?._id) {\n            addPostItemToCurrentPersonalUser(createPost);\n          }\n          document\n            .getElementById(elementId)\n            ?.querySelector(\"[contenteditable=true]\")\n            ?.setAttribute(\"contenteditable\", true);\n          setEditorState(EditorState.createEmpty());\n          setImages([]);\n        })\n        .catch((err) => {\n          console.log(err);\n          document\n            .getElementById(elementId)\n            ?.querySelector(\"[contenteditable=true]\")\n            ?.setAttribute(\"contenteditable\", true);\n        });\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setOpenPostEditorDialog(false);\n  };\n\n  const PostEditorRoot = (\n    <EditorWrapper\n      isEdited={isEdited}\n      theme={colorMode}\n      fullWidth={openPostEditorDialog}\n    >\n      <Prompt\n        when={isBlocking}\n        message={(location) =>\n          `Are you sure you want to go to ${location.pathname}`\n        }\n      />\n      <PostEditorHeader\n        user={user}\n        postStatus={postStatus}\n        setPostStatus={handleSetPostStatus}\n        setOpenDialog={onOpenDialog}\n        openDialog={openPostEditorDialog}\n        isEdited={isEdited}\n      />\n\n      <PostEditorBody\n        editorState={editorState}\n        setEditorState={setEditorState}\n        images={images}\n        setImages={setImages}\n        isEdited={isEdited}\n        postEdited={postEdited}\n        id={\n          postEdited ? `edited-post-body-${postEdited._id}` : \"post-editor-body\"\n        }\n      />\n\n      {!disabledSubmit && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={disabledSubmit}\n          onClick={onSubmitPostStatus}\n          style={{ display: \"block\", width: \"95%\", margin: \"0.5rem auto\" }}\n        >\n          {post.post}\n        </Button>\n      )}\n    </EditorWrapper>\n  );\n\n  const PostEditorOnOpenDialog = (\n    <Dialog\n      fullWidth={true}\n      maxWidth=\"md\"\n      open={openPostEditorDialog}\n      onClose={handleCloseDialog}\n      aria-labelledby=\"max-width-dialog-title\"\n      style={{ maxWidth: \"800px\", margin: \"auto\" }}\n    >\n      {PostEditorRoot}\n    </Dialog>\n  );\n  if (createPostLoading) return <div>Loading...</div>;\n  return <>{openPostEditorDialog ? PostEditorOnOpenDialog : PostEditorRoot}</>;\n};\n\nexport default React.memo(PostEditor);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/SignIn.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/PersonalHeading.jsx",["810"],"import React, { useEffect, useState } from \"react\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport {userVar, currentPersonalUserVar\n} from \"../../apollo/cache\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport {\n  Container,\n  UserName,\n  PersonalHeadingBackground,\n  BackgroundImageContainer,\n  PersonalMenus,\n  ProfileMenuItemLink,\n  Footer\n} from \"./styles/PersonalHeading.styles\";\nimport BackgroundImage from \"../../assets/images/background-wallpaper.jpg\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport PersonalHeadingContact from \"./PersonalHeadingContact\"\n\nconst PersonalHeading = () => {\n  const user  = useReactiveVar(userVar);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const [menus, setMenus] = useState([]);\n  const [activeLink, setActiveLink] = useState(null);\n\n  useEffect(() => {\n    setMenus(i18n.store.data[lang].translation.personalMenus);\n  }, [lang]);\n  \n  useEffect(() => {\n    if (currentPersonalUser) {\n      setActiveLink(`/${currentPersonalUser.slug}/posts`);\n    }\n  }, [currentPersonalUser]);\n\n  if (!currentPersonalUser) return null;\n  return (\n    <Container theme={colorMode}>\n      <PersonalHeadingBackground theme={colorMode} background={BackgroundImage}>\n        <BackgroundImageContainer theme={colorMode}>\n          <LazyLoadImage\n            src={currentPersonalUser.avatar}\n            alt={currentPersonalUser.avatar}\n          />\n          <UserName>\n            <h4>{currentPersonalUser.name}</h4>\n            <span>@{currentPersonalUser.slug}</span>\n          </UserName>\n        </BackgroundImageContainer>\n      </PersonalHeadingBackground>\n      <Footer>\n        <PersonalMenus>\n          {menus.length\n            ? menus.map((menu) => (\n                <ProfileMenuItemLink\n                  key={menu.name}\n                  to={menu.path(currentPersonalUser.slug)}\n                  theme={colorMode}\n                  active={(\n                    activeLink === menu.path(currentPersonalUser.slug)\n                  ).toString()}\n                  onClick={() =>\n                    setActiveLink(menu.path(currentPersonalUser.slug))\n                  }\n                >\n                  {menu.name}\n                </ProfileMenuItemLink>\n              ))\n            : null}\n        </PersonalMenus>\n        {user && <PersonalHeadingContact user={user}/>}\n      </Footer>\n    </Container>\n  );\n};\n\nexport default React.memo(PersonalHeading);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/SignUp.jsx",["811"],"import React from \"react\";\nimport {\n  CustomFormContainer,\n  FormHeader,\n  FormGroups,\n  FormActions,\n  StyledLink,\n  Option,\n  FlashForm,\n  Title,\n  SubTitle,\n  ErrorMessage,\n  TextForm,\n  ValidTextField\n} from \"./AuthForm\";\nimport {AiFillCheckCircle} from \"react-icons/ai\"\nimport CustomButton from \"../Custom/CustomButton\";\nimport { withRouter } from \"react-router-dom\";\nimport GoogleRecaptcha from \"./GoogleRecapcha\";\nimport FacebookLogin from \"./GoogleAuth\";\nimport GoogleLogin from \"./FacebookAuth\";\nimport { useMutation } from \"@apollo/client\";\nimport { SIGNUP } from \"../../apollo/user/user.types\";\nimport {login} from \"./Auth.utility\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nconst INITIAL_STATE = {\n  controls: {\n    name: {\n      type: \"text\",\n      name: \"name\",\n      valid: false,\n      label: \"Name\",\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 50,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    email: {\n      type: \"email\",\n      name: \"email\",\n      label: \"Email\",\n      valid: false,\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    password: {\n      type: \"password\",\n      name: \"password\",\n      valid: false,\n      label: \"Password\",\n      validation: {\n        required: true,\n        minLength: 6,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n    confirmPassword: {\n      type: \"password\",\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      valid: false,\n      validation: {\n        required: true,\n        minLength: 6,\n        match: true,\n      },\n      value: \"\",\n      touched: false,\n      validationErrors: \"\",\n    },\n  },\n  formIsValid: false,\n  captcha_loaded: false,\n  disabled: true,\n  title: \"\",\n};\n\nfunction withSignUpMutation(WrappedComponent) {\n  return function MutationWrapper(props) {\n    const [createUser, { data, loading, error }] = useMutation(SIGNUP, {errorPolicy : \"all\"});      \n    return (\n      <WrappedComponent\n        createUser={createUser}        \n        data={data}        \n        loading={loading}        \n        error={error}        \n        {...props}\n      />\n    );\n  };\n}\n\nconst SignUp = withSignUpMutation(\n  class extends React.Component {\n    state = { ...INITIAL_STATE };\n    timer = null ;\n    componentDidMount() {\n      this.timer = setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 0);\n    }\n    componentWillUnmount(){\n      clearTimeout(this.timer)\n      if(this.unsubcribeLogin){\n        this.unsubcribeLogin();\n      }\n    }\n    unsubcribeLogin; \n    async componentDidUpdate(prevProps){\n      if(prevProps.error !== this.props.error){\n        this.clearForm();        \n      }\n      if(prevProps.data !== this.props.data && this.props.data )  {\n        const { user, token, tokenExpire} = this.props.data.createUser;  \n        console.log(user)                  \n        this.unsubcribeLogin = await login(user, token, tokenExpire)\n        this.clearForm() ;\n      }\n    }\n\n    clearForm = () => {\n      this.setState({...INITIAL_STATE});      \n      setTimeout(() => {\n        this.setState({ captcha_loaded: true });\n      }, 0);\n    }\n    \n    checkValidity = (value, rules) => {\n      let isValid = true;\n      let errorsMessage = [];\n      if (rules.required) {\n        isValid = value.trim().length && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"This field is required\");\n        }\n      }\n      if (rules.isEmail) {\n        const pattern = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        isValid = pattern.test(value) && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Email is invalid\");\n        }\n      }\n      if (rules.minLength) {\n        isValid = value.trim().length >= rules.minLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at least ${rules.minLength} characters`);\n        }\n      }\n      if (rules.maxLength) {\n        isValid = value.trim().length <= rules.maxLength && isValid;\n        if (!isValid) {\n          errorsMessage.push(`Invalid, at most ${rules.maxLength} characters`);\n        }\n      }\n      if (rules.match) {\n        isValid =\n          value.trim() === this.state.controls.password.value && isValid;\n        if (!isValid) {\n          errorsMessage.push(\"Password and confirm Password do not match\");\n        }\n      }\n      return errorsMessage;\n    };\n\n    handleChange = (e, name) => {\n      let updatedControls = { ...this.state.controls };\n      let updatedControlElement = { ...updatedControls[name] };\n      updatedControlElement.value = e.target.value;\n      const checkValid = this.checkValidity(\n        e.target.value,\n        updatedControlElement.validation\n      );\n      updatedControlElement.valid = checkValid.length === 0;\n      updatedControlElement.touched = true;\n      updatedControlElement.validationErrors = checkValid;\n      updatedControls[name] = updatedControlElement;\n      let { email, password, confirmPassword } = updatedControls;\n      const formIsValid =\n        email.valid &&\n        updatedControlElement.valid &&\n        password.valid &&\n        confirmPassword.valid;\n      this.setState({ controls: updatedControls, formIsValid });\n    };\n\n    handleSubmitSignUpForm = (e) => {\n      e.preventDefault();\n      if (!this.state.formIsValid) {\n        this.setState({ ...INITIAL_STATE });\n        return;\n      }\n      const { name, email, password } = this.state.controls;\n\n      this.props.createUser({\n        variables: {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        },\n      });\n    };\n\n    handleChangeGoogleRecaptcha = (value) => {\n      this.setState({ captcha_value: value, disabled: false });\n      if (value === null) this.setState({ disabled: true });\n    };\n\n    render() {      \n      const { formIsValid, captcha_loaded, disabled } = this.state;\n      let formInputArray = [];\n      Object.keys(this.state.controls).forEach((controlItem) => {\n        formInputArray.push(this.state.controls[controlItem]);\n      });\n      const { error, loading } = this.props;   \n      return (\n        <CustomFormContainer onSubmit={this.handleSubmitSignUpForm}>\n          <FormHeader>\n            <Title>Sign Up</Title>\n            <SubTitle>Sign up your account via email and password.</SubTitle>\n          </FormHeader>\n          {error && <ErrorMessage>{error.message}</ErrorMessage>}          \n          <FlashForm>\n            <FacebookLogin />\n            <GoogleLogin />\n          </FlashForm>\n          <FormGroups>\n            {formInputArray.map(\n              ({\n                label,\n                name,\n                touched,\n                type,\n                valid,\n                validation,\n                validationErrors,\n                value,\n              }) => (            \n                <TextForm valid={valid && touched}>\n                <TextField\n                  size=\"small\"\n                  key={name}\n                  type={type}\n                  variant=\"outlined\"\n                  name={name}\n                  value={value}\n                  error={!valid && touched}\n                  label={label}\n                  onChange={(e) => this.handleChange(e, name)}\n                  required={validation.required}       \n                  helperText={validationErrors}           \n                />\n                {valid && touched ?  <ValidTextField>\n                  <AiFillCheckCircle/>\n                </ValidTextField> : null }\n               \n                </TextForm>  \n              )\n            )}\n            \n            {captcha_loaded && (\n              <GoogleRecaptcha onChange={this.handleChangeGoogleRecaptcha} />\n            )}\n            <Button\n              variant=\"outlined\"\n              size=\"medium\"\n              color=\"primary\"\n              disabled={!formIsValid || disabled }\n              type=\"submit\"\n            >\n              <span>Submit</span>\n              {loading && <CircularProgress size={12} style={{marginLeft : \"0.5rem\"}}/>}\n            </Button>\n          </FormGroups>\n          <FormActions>\n            <Option>\n              <StyledLink to=\"/auth\">Signin account</StyledLink>\n            </Option>\n            <Option>\n              Forgot password ?{\" \"}\n              <StyledLink to=\"/auth/restore-account\">\n                Get Password Again.\n              </StyledLink>\n            </Option>\n          </FormActions>\n        </CustomFormContainer>\n      );\n    }\n  }\n);\n\nexport default withRouter(SignUp);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/PersonalPosts.jsx",["812"],"import React, { useEffect, useState } from \"react\";\nimport { Wrapper, LeftSide, RightSide } from \"./styles/PersonalPosts.styles\";\nimport Posts from \"../Post/Posts\";\nimport PostEditor from \"../Post/PostEditor/PostEditor\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { currentPersonalUserVar, userVar } from \"../../apollo/cache\";\nimport { FETCH_POSTS } from \"../../apollo/post/post.queries\";\nimport { addPostsToCurrentPersonalUser } from \"../../apollo/post/post.caches\";\nimport IntroductionBox from \"./IntroductionBox\";\n\nconst PersonalPosts = () => {\n  const [loadingMore, setLoadingMore] = useState(false);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const user = useReactiveVar(userVar);\n  const {\n    data: fetchedPostsData,\n    loading,\n    fetchMore: fetchMorePostsData,\n  } = useQuery(FETCH_POSTS, {\n    variables: {\n      userId: currentPersonalUser._id,\n      skip: 0,\n      limit: +process.env.REACT_APP_POSTS_PER_PAGE,\n    },\n    onCompleted: (data) => {      \n      if (data) {\n        addPostsToCurrentPersonalUser(data.fetchPosts);\n      }\n    },\n  });\n\n  useEffect(() => {\n    let isScrolling;\n    function trackUserScroll(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const {\n          scrollHeight,\n          scrollTop,\n          clientHeight,\n        } = document.documentElement;\n        if (\n          scrollTop + clientHeight > 0.8 * scrollHeight &&\n          currentPersonalUser.posts.length >\n            currentPersonalUser.postsData?.length\n        ) {\n          setLoadingMore(true);\n        }\n      }, 66);\n    }\n    window.addEventListener(\"scroll\", trackUserScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", trackUserScroll);\n      if (isScrolling) {\n        clearTimeout(isScrolling);\n      }\n    };\n  });\n\n  useEffect(() => {\n    if (loadingMore && currentPersonalUser.postsData) {\n      const skip = currentPersonalUser.postsData.length;\n      const limit = +process.env.REACT_APP_POSTS_PER_PAGE;\n      fetchMorePostsData({\n        variables: {\n          userId: currentPersonalUser._id,\n          skip,\n          limit,\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (fetchMoreResult) {\n            addPostsToCurrentPersonalUser(fetchMoreResult.fetchPosts);\n          }\n        },\n      }).then(() => setLoadingMore(false));\n    }\n  }, [loadingMore, currentPersonalUser]);\n\n  if (!fetchedPostsData) return null;\n  if (loading) return <div>Loading...</div>;\n  return (\n    <Wrapper>\n      <LeftSide>\n        <IntroductionBox />\n      </LeftSide>\n      <RightSide>\n        {user?._id === currentPersonalUser?._id && <PostEditor />}\n        {currentPersonalUser?.postsData?.length ? (\n          <Posts posts={currentPersonalUser.postsData} />\n        ) : null}\n      </RightSide>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(PersonalPosts);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/NotificationItem.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Card/CardRequestAuth.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/MenuChat.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/Contact.jsx",["813","814","815","816","817"],"import React, { useEffect, useState, useRef, createContext } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { userVar } from \"../../apollo/cache\";\nimport Search from \"./Search\";\nimport { useThemeUI } from \"theme-ui\";\nimport { setCurrentChat } from \"../../apollo/chat/chat.caches\";\nimport ListContacts from \"./ListContacts\";\nimport ChatBoard from \"./ChatBoard\";\n\nexport const ContactContext = createContext({});\n\nconst Contact = () => {\n  //useQuery\n  const user = useReactiveVar(userVar);  \n  //useState\n  const [search, setSearch] = useState(\"\");\n  const [contactData, setContactData] = useState([]);\n  const [originData, setOriginData] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const popupRef = useRef(null);\n\n  useEffect(() => {\n    // if (friends.length) {\n    //   if (!search) {\n    //     setContactData([...originData]);\n    //   } else {\n    //     const searchRegex = new RegExp(search, \"i\");\n    //     const searchResults = originData.filter(\n    //       ({ name }) => !!name.match(searchRegex)\n    //     );\n    //     setContactData([...searchResults]);\n    //   }\n    // }\n  }, [search]);\n\n  // useEffect(() => {\n  //   setContactData([...friends]);\n  //   setOriginData([...friends]);\n  // }, [friends]);\n\n  useEffect(() => {\n    setCurrentChat(null);\n  }, []);\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-contact-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n  const { colorMode } = useThemeUI();\n\n  const onChangeSearch = React.useCallback((e) => {\n    setSearch(e.target.value);\n  }, []);\n  if (!user) return null;\n  return (\n    <ContactContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top + 50}\n      >\n        <span>Mark as favorite</span>\n        <hr />\n        <span>Label</span>\n        <span>Set alias</span>\n        <hr />\n        <span>Block</span>\n        <span>Delete</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search search={search} onChange={onChangeSearch} />\n          <hr />\n          {/* <ListContacts data={contactData.length ? contactData : friends} /> */}\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </ContactContext.Provider>\n  );\n};\n\nexport default Contact;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/Conversations.jsx",["818","819","820","821"],"import React, { useState, useEffect, createContext, useRef } from \"react\";\nimport {\n  Wrapper,\n  LeftSide,\n  RightSide,\n  PopupSettings,\n} from \"./styles/Chat.styles\";\nimport { userVar } from \"../../apollo/cache\";\n\nimport { useReactiveVar } from \"@apollo/client\";\nimport Search from \"./Search\";\nimport ListConversations from \"./ListConversations\";\nimport { useThemeUI } from \"theme-ui\";\nimport ChatBoard from \"./ChatBoard\";\nimport {setCurrentChat} from \"../../apollo/chat/chat.caches\"\nexport const MessagesContext = createContext({});\nconst Conversations = () => {\n  //query\n  const user = useReactiveVar(userVar)\n\n  //state\n  const [showPopup, setShowPopup] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [originalData, setOriginalData] = useState([]);  \n  const [popupPosition, setPopupPosition] = useState({\n    left: -10000,\n    top: -10000,\n  });\n  const { colorMode } = useThemeUI();\n  const popupRef = useRef(null);\n\n  //empty current chat when change page\n  useEffect(()=>{\n    setCurrentChat(null);\n  },[])\n\n  useEffect(() => {\n    function handleClickDotsSetting(e) {\n      const dotsElements = document.querySelectorAll(\n        `[aria-label=\"chat-messages-settings\"]`\n      );\n      let flag = false;\n      for (let s of dotsElements) {\n        if (s.contains(e.target)) {\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        setShowPopup(false);\n      } else {\n        setShowPopup(true);\n      }\n    }\n    window.addEventListener(\"click\", (e) => {\n      handleClickDotsSetting(e);\n    });\n    return () =>\n      window.removeEventListener(\"click\", (e) => {\n        handleClickDotsSetting(e);\n      });\n  });\n\n  if (!user) return null;\n  return (\n    <MessagesContext.Provider value={{ setShowPopup, setPopupPosition }}>\n      <PopupSettings\n        ref={popupRef}\n        show={showPopup}\n        left={popupPosition.left}\n        top={popupPosition.top}\n      >\n        <span>Pin this conversation</span>\n        <hr />\n        <span>Label</span>\n        <hr />\n        <span>Add to group</span>\n        <span>Turn notification off</span>\n        <hr />\n        <span>Delete conversation</span>\n        <hr />\n        <span>Report</span>\n      </PopupSettings>\n      <Wrapper theme={colorMode}>\n        <LeftSide theme={colorMode}>\n          <Search />\n          <hr />\n          <ListConversations />\n        </LeftSide>\n        <RightSide>\n          <ChatBoard />\n        </RightSide>\n      </Wrapper>\n    </MessagesContext.Provider>\n  );\n};\n\nexport default Conversations;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Global/useLanguage.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/FriendsList.jsx",["822"],"import React from 'react'\nimport {useThemeUI} from \"theme-ui\"\nimport {ContactWrapper, Title} from \"./Contact.styles\"\nimport useLanguage from \"../Global/useLanguage\"\nimport ContactItem from \"./ContactItem\"\nimport InfiniteScroll from \"react-infinite-scroll-component\"\nimport {FETCH_USER_FRIENDS_DATA} from \"../../apollo/contact/contact.types\"\nimport {pushFriendsListToContact} from \"../../apollo/contact/contact.caches\"\nimport { useQuery } from '@apollo/client'\nimport _ from \"lodash\"\nconst SentRequestsToAddFriend = ({user, friends}) => {  \n  const {colorMode} = useThemeUI();\n  const {i18n, lang} = useLanguage()\n  const {refetch : fetchUserFriends} = useQuery(FETCH_USER_FRIENDS_DATA, {skip: true})\n  const onFetchMoreFriends = () => {    \n    const skip = friends.length; \n    const limit = +process.env.REACT_APP_USERS_CONTACT_PER_LOAD;\n \n    let existedFriendsId = [];\n    friends.forEach(friend => existedFriendsId.push(friend._id));  \n    fetchUserFriends({skip, limit, except : existedFriendsId}).then(({data}) => {\n      if(data){\n        pushFriendsListToContact(data.fetchFriends);\n      }\n    })\n  }\n  \n  return (\n    <ContactWrapper theme={colorMode}>      \n      <Title theme={colorMode}>{i18n.store.data[lang].translation.contacts.friendsList}</Title>      \n      <InfiniteScroll\n        dataLength={friends.length}\n        next={onFetchMoreFriends}\n        hasMore={friends.length < user.friends.length}\n        loader={<h4>Loading...</h4>}        \n      >\n      {friends.map(item => (\n          <ContactItem key={item._id} user={user} userContact={item} type=\"friends\"/>\n        ))}\n      </InfiniteScroll>\n        \n    </ContactWrapper>\n  )\n}\n\nexport default SentRequestsToAddFriend","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/ReceivedRequestsToAddFriend.jsx",["823","824"],"import React, { useEffect } from \"react\";\nimport { FETCH_RECEIVED_REQUESTS_TO_ADD_FRIEND } from \"../../apollo/contact/contact.types\";\nimport { useQuery } from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport { fetchMoreReceivedRequestsToAddFriend } from \"../../apollo/contact/contact.caches\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nimport _ from \"lodash\";\nconst ReceivedRequestsToAddFriend = ({ user, receivedRequestsToAddFriend }) => {\n  const { refetch: fetchReceivedRequestToAddFriend } = useQuery(\n    FETCH_RECEIVED_REQUESTS_TO_ADD_FRIEND,\n    {\n      fetchPolicy: \"cache-and-network\",\n      skip: true,\n    }\n  );\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n\n  const getMoreReceivedRequestToAddFriend = () => {\n    const skip = receivedRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_CONTACT_USER_PER_PAGE;\n    if (fetchReceivedRequestToAddFriend) {\n      fetchReceivedRequestToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchReceivedRequestToAddFriend?.length) {\n          fetchMoreReceivedRequestsToAddFriend(data.fetchReceivedRequestToAddFriend)\n        }\n      });\n    }\n  };\n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userReceivedRequest}\n      </Title>\n      {receivedRequestsToAddFriend.map((item) => (\n        <ContactItem\n          key={item._id}\n          user={user}\n          userContact={item}\n          type=\"received\"\n        />\n      ))}\n      {receivedRequestsToAddFriend.length <\n      user.receivedRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreReceivedRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(ReceivedRequestsToAddFriend);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/SentRequestsToAddFriend.jsx",["825"],"import React, {useEffect}  from \"react\";\nimport { FETCH_SENT_REQUEST_TO_ADD_FRIEND } from \"../../apollo/contact/contact.types\";\nimport { useQuery} from \"@apollo/client\";\nimport { useThemeUI } from \"theme-ui\";\nimport { fetchMoreSentRequestsToAddFriend } from \"../../apollo/contact/contact.caches\";\nimport { ContactWrapper, Title, LinkReadMore } from \"./Contact.styles\";\nimport useLanguage from \"../Global/useLanguage\";\nimport ContactItem from \"./ContactItem\";\nconst SentRequestsToAddFriend = ({user,sentRequestsToAddFriend}) => {\n  \n  const {\n    refetch: fetchUsersSentRequestsToAddFriend,\n  } = useQuery(FETCH_SENT_REQUEST_TO_ADD_FRIEND, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();  \n\n  const getMoreSentRequestToAddFriend = () => {\n    const skip = sentRequestsToAddFriend.length;\n    const limit = +process.env.REACT_APP_USERS_CONTACT_PER_LOAD;\n    if (fetchUsersSentRequestsToAddFriend) {\n      fetchUsersSentRequestsToAddFriend({ skip, limit }).then(({ data }) => {\n        if (data?.fetchSentRequestToAddFriend?.length) {         \n          fetchMoreSentRequestsToAddFriend(data.fetchSentRequestToAddFriend)\n        }\n      });\n    }\n  };\n \n  return (\n    <ContactWrapper theme={colorMode}>\n      <Title theme={colorMode}>\n        {i18n.store.data[lang].translation.contacts.userSentRequest}\n      </Title>\n      {sentRequestsToAddFriend.map((item) => (\n        <ContactItem key={item._id} userContact={item} type=\"sent\" />\n      ))}\n      {sentRequestsToAddFriend.length < user.sentRequestToAddFriend.length ? (\n        <LinkReadMore>\n          <span\n            role=\"button\"\n            tabIndex={0}\n            aria-label=\"button\"\n            onClick={getMoreSentRequestToAddFriend}\n          >\n            {i18n.store.data[lang].translation.contacts.getMore}\n          </span>\n        </LinkReadMore>\n      ) : null}\n    </ContactWrapper>\n  );\n};\n\nexport default React.memo(SentRequestsToAddFriend);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/locales/vi/translation.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/locales/en/translation.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.mutations.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/contact/contact.queries.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.subscriptions.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.mutations.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/chat/chat.queries.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.subscriptions.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.mutations.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.types.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/AlertDialogSlide.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Aside/Aside.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/containers/styles/MainBody.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Menu/useMenuList.jsx",["826"],"import {useState, useEffect} from 'react'\nimport useLanguage from \"../Global/useLanguage\"\nimport {useLocation} from \"react-router-dom\"\nimport {useReactiveVar} from \"@apollo/client\"\nimport {userVar} from \"../../apollo/cache\"\nconst useMenuList = () => {\n  const user = useReactiveVar(userVar);\n\n  const location = useLocation();  \n  const { lang, i18n } = useLanguage();\n  const [namePage, setNamePage] = useState(\"\");\n  const [menu, setMenu] = useState([]);  \n  const [explores, setExplores] = useState([]);\n  \n  useEffect(() => {\n    const menuName =  i18n.store.data[lang].translation.menuList.find(\n      (item) => item.path === location.pathname\n    )        \n    setNamePage(\n      menuName ? menuName.name : \"\"\n    );\n    setMenu(i18n.store.data[lang].translation.menuList);\n    setExplores(i18n.store.data[lang].translation.explores);\n  }, [lang, i18n.store.data, location.pathname]);\n  return {\n    namePage,\n    menu, \n    explores\n  }\n}\n\nexport default useMenuList\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Menu/MenuList.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/ContactItem.jsx",["827"],"import React from \"react\";\nimport {\n  ContactItemWrapper,\n  ContactInfo,\n  ContactActions,\n  FriendActions,\n} from \"./Contact.styles\";\nimport { Link } from \"react-router-dom\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport Button from \"../Controls/ButtonDefault\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BsChatDots, BsCameraVideo } from \"react-icons/bs\";\nimport { MdStarBorder } from \"react-icons/md\";\nimport { IoMdCall } from \"react-icons/io\";\nimport { setCurrentUser } from \"../../apollo/user/user.caches\";\nimport {\n  moveReceivedRequestToFriend,\n  removeSentRequestToAddFriend,\n  removeReceivedRequestToAddFriend,\n} from \"../../apollo/contact/contact.caches\";\nimport { setCurrentPersonalUser } from \"../../apollo/user/currentPersonalUser.caches\";\nimport {\n  removeNotificationWhenUserRejectToAddFriend,\n  removeNotificationItemFromNotificationsList,\n} from \"../../apollo/notification/notification.caches\";\nimport {\n  currentPersonalUserVar,\n  receivedRequestsToAddFriendVar,\n} from \"../../apollo/cache\";\nimport {\n  REJECT_REQUEST_TO_ADD_FRIEND,\n  ACCEPT_REQUEST_TO_ADD_FRIEND,\n  CANCEL_REQUEST_TO_ADD_FRIEND,\n} from \"../../apollo/contact/contact.types\";\nimport { useMutation, useReactiveVar } from \"@apollo/client\";\nimport { userVar } from \"../../apollo/cache\";\n\nconst ContactItem = ({ userContact, type }) => {\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const user = useReactiveVar(userVar);\n\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n\n  const [cancelRequestToAddFriend] = useMutation(CANCEL_REQUEST_TO_ADD_FRIEND);\n  const [rejectRequestToAddFriend] = useMutation(REJECT_REQUEST_TO_ADD_FRIEND);\n  const [acceptRequestToAddFriend] = useMutation(ACCEPT_REQUEST_TO_ADD_FRIEND);\n\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver) => {    \n    setCurrentUser({\n      ...user,\n      ...sender\n    });\n    if (currentPersonalUser && currentPersonalUser._id === receiver._id) {\n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        ...receiver\n      });\n    }\n  };\n\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    cancelRequestToAddFriend({\n      variables: { receiverId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;\n      removeSentRequestToAddFriend(receiver);\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n  //Handle accept request to add friend\n  const onAcceptRequestToAddFriend = () => {\n    acceptRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    }).then(({ data }) => {\n      const { sender, receiver, notification } = data.acceptRequestToAddFriend;      \n      //remove user at recived requests to head of friends list\n      removeNotificationItemFromNotificationsList(notification);\n      moveReceivedRequestToFriend(sender);\n      updateMutationOnChange(receiver, sender);\n    }).catch(err => console.log(err));\n  };\n\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    rejectRequestToAddFriend({\n      variables: { senderId: userContact._id },\n    })\n      .then(({ data }) => {\n        const {\n          sender,\n          receiver,\n          notification,\n        } = data.rejectRequestToAddFriend;       \n        \n        removeReceivedRequestToAddFriend(sender);\n        removeNotificationWhenUserRejectToAddFriend(notification);\n        updateMutationOnChange(receiver, sender);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const sentActions = (\n    <Button cancel onClick={onCancelRequestToAddFriend}>\n      {i18n.store.data[lang].translation.contacts.cancelRequest}\n    </Button>\n  );\n  const receivedActions = (\n    <>\n      <Button acceptBtn variant=\"outlined\" onClick={onAcceptRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.acceptRequest}\n      </Button>\n      <Button reject onClick={onRejectRequestToAddFriend}>\n        {i18n.store.data[lang].translation.contacts.rejectRequest}\n      </Button>\n    </>\n  );\n\n  const friendsActions = (\n    <FriendActions>\n      <Button favorite>\n        <MdStarBorder />\n      </Button>\n      <Button chat>\n        <BsChatDots />\n      </Button>\n      <Button call>\n        <IoMdCall />\n      </Button>\n      <Button videocall>\n        <BsCameraVideo />\n      </Button>\n      {/* <Button setting>\n        <BsThreeDotsVertical />\n      </Button>      */}\n    </FriendActions>\n  );\n  return (\n    <ContactItemWrapper theme={colorMode}>\n      <ContactInfo>\n        <Link to={userContact.slug}>\n          <LazyLoadImage src={userContact.avatar} alt={userContact.avatar} />\n        </Link>\n        <Link to={userContact.slug}>\n          <h6>{userContact.name}</h6>\n          <span>@{userContact.slug}</span>\n        </Link>\n      </ContactInfo>\n      <ContactActions>\n        {type === \"sent\"\n          ? sentActions\n          : type === \"received\"\n          ? receivedActions\n          : type === \"friends\"\n          ? friendsActions\n          : null}\n      </ContactActions>\n    </ContactItemWrapper>\n  );\n};\n\nexport default ContactItem;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Contact/Contact.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ChatBoard.jsx",["828"],"import React, {createRef} from \"react\";\nimport {\n  Wrapper\n} from \"./styles/ChatBoard.styles\";\n\nimport ChatBoardHeading from \"./ChatBoardHeading\"\nimport ChatBoardBody from \"./ChatBoardBody\"\nimport ChatBoardFooter from \"./ChatBoardFooter\"\n\nconst ChatCenter = () => {  \n  \n  return (\n    <Wrapper>\n      <ChatBoardHeading/>\n      <ChatBoardBody/>\n      <ChatBoardFooter/>\n    </Wrapper>\n  );\n};\n\nexport default ChatCenter;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ListConversations.jsx",["829","830"],"import React, { useEffect, useState } from \"react\";\nimport { ListConversationsWrapper } from \"./styles/ListConversations.styles\";\nimport {userVar, messagesStorageVar, currentChatVar, numberOfConversationsVar} from \"../../apollo/cache\"\nimport ConversationItem from \"./ConversationItem\";\nimport _ from \"lodash\";\nimport { usePopupMessagesActions } from \"./hook/usePopupActions\";\nimport { FETCH_CHAT_CONVERSATIONS, UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED } from \"../../apollo/chat/chat.types\";\nimport { useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { setInitialMessagesStorage } from \"../../apollo/chat/chat.caches\";\nconst ListConversations = () => {\n  //use Query\n  const currentChat = useReactiveVar(currentChatVar);\n  const messagesStorage = useReactiveVar(messagesStorageVar);\n  const numberOfConversations = useReactiveVar(numberOfConversationsVar)\n  const user = useReactiveVar(userVar);\n  \n  const { refetch: fetchMoreConversations } = useQuery(\n    FETCH_CHAT_CONVERSATIONS,\n    { fetchPolicy: \"cache-and-network\", skip: true }\n  );\n  //use State\n  const [_messagesStorage, _setMessagesStorage] = useState([]);\n  const [loadMoreConversations, setLoadMoreConversations] = useState(false);\n  const [\n    updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched,\n  ] = useMutation(\n    UPDATE_PERSONAL_RECEIVER_STATUS_SENT_TO_DELIVERED_WHEN_RECEIVER_FETCHED\n  );\n  const { setShowPopup } = usePopupMessagesActions();\n  useEffect(() => {\n    const _convertStorageToArray = Object.values(messagesStorage);\n    const _sortedByLatestMessages = _.sortBy(_convertStorageToArray, [\n      function (o) {\n        return -o.latestMessage.createdAt;\n      },\n    ]);\n    _setMessagesStorage([..._sortedByLatestMessages]);\n  }, [messagesStorage]);\n \n  useEffect(() => {\n    let isScrolling;\n    function onScrollListConversations(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollTop, clientHeight, scrollHeight } = e.target;\n        console.log(scrollTop, clientHeight, scrollHeight)\n        if (scrollTop + clientHeight > 0.8 * scrollHeight) {         \n          setLoadMoreConversations(true);\n        }\n      }, 66);\n    }\n    document.getElementById(\"list-conversations\").addEventListener(\n      \"scroll\",\n      (e) => {\n        onScrollListConversations(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById(\"list-conversations\").removeEventListener(\n        \"scroll\",\n        (e) => {\n          onScrollListConversations(e);\n        },\n        false\n      );\n    };\n  });\n  useEffect(() => {\n    let _isMounted = true;\n\n    if (\n      loadMoreConversations &&\n      numberOfConversations > _messagesStorage.length\n    ) {\n      console.log(\"load more\");\n      const skip = _messagesStorage.length;\n      const limit = +process.env.REACT_APP_NUMBER_CONVERSATIONS_LIMITATION;\n      const except = Object.keys(messagesStorage);\n      let personalMessagesHaveReceiverSentStatus = new Set();\n      fetchMoreConversations({ except, skip, limit }).then(({ data }) => {\n        if (_isMounted) {\n          const { conversations } = data.fetchChatConversations;\n          let storage = {};\n          conversations.forEach((conversation) => {\n            if (conversation.scope === \"PERSONAL\") {\n              storage[conversation.profile._id] = { ...conversation };\n              if (\n                conversation.latestMessage.receiver._id.toString() ===\n                  user._id.toString() &&\n                conversation.latestMessage.receiverStatus === \"SENT\"\n              ) {\n                personalMessagesHaveReceiverSentStatus.add(\n                  conversation.latestMessage.sender._id\n                );\n              }\n            }\n          });\n          setInitialMessagesStorage({ ...messagesStorage, ...storage });\n          if (personalMessagesHaveReceiverSentStatus.size) {\n            updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched({\n              variables: {\n                listSenderId: [...personalMessagesHaveReceiverSentStatus],\n              },\n            });\n          }\n          setLoadMoreConversations(false);\n        }\n      });\n    }\n  }, [loadMoreConversations, numberOfConversations]);\n\n  return (\n    <ListConversationsWrapper id=\"list-conversations\">\n      {_messagesStorage.length\n        ? _messagesStorage.map(\n            ({ profile, scope, latestMessage, hasSeenLatestMessage }) => (\n              <ConversationItem\n                key={`conversation-${profile._id}`}\n                conversation={profile}\n                scope={scope}\n                hasSeenLatestMessage={hasSeenLatestMessage}\n                latestMessage={latestMessage}\n                active={currentChat && currentChat._id === profile._id}\n              />\n            )\n          )\n        : null}\n    </ListConversationsWrapper>\n  );\n};\n\nexport default React.memo(ListConversations);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/Search.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ListContacts.jsx",["831"],"import React, { useState, useEffect } from \"react\";\nimport { Wrapper } from \"./styles/ListContacts.styles\";\nimport ContactItem from \"./ContactItem\";\nimport { usePopupContactActions } from \"./hook/usePopupActions\";\nimport { useQuery } from \"@apollo/client\";\nimport { FETCH_USER_FRIENDS_DATA } from \"../../apollo/contact/contact.types\";\nimport { setFriends } from \"../../apollo/user/user.caches\";\nconst ListContacts = ({ data }) => {\n  const { setShowPopup } = usePopupContactActions();\n  const [loadContactMore, setLoadContactMore] = useState(false);\n  const { refetch: fetchMoreContacts } = useQuery(FETCH_USER_FRIENDS_DATA, {\n    skip: true,\n    fetchPolicy: \"cache-and-network\",\n  });\n  const onScrollListContacts = (e) => {\n    e.preventDefault();\n    const { clientHeight, scrollHeight, scrollTop } = e.target;\n    if (clientHeight + scrollTop > scrollHeight * 0.75) {\n      setLoadContactMore(true);\n    }\n  };\n\n  useEffect(() => {\n    if (loadContactMore) {\n      const skip = data.length;\n      const limit = +process.env.REACT_APP_FRIENDS_PER_LOAD;\n      fetchMoreContacts({ skip, limit }).then(({ data: { fetchFriends } }) => {\n        setFriends([...data, ...fetchFriends]);\n        setLoadContactMore(false);\n      });\n    }\n  }, [loadContactMore]);\n  if (!data.length) return null;\n  return (\n    <Wrapper\n      onScroll={() => setShowPopup(false)}\n      onScrollCapture={onScrollListContacts}\n    >\n      {data.map((friend) => (\n        <ContactItem key={`contact-${friend._id}`} friend={friend} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(ListContacts);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Header.jsx",["832","833"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Brand from \"./Brand\";\nimport Search from \"./Search\";\nimport Navigation from \"./Navigation\";\nimport MessengerAndNotification from \"./MessengerAndNotification\";\nimport SettingAccount from \"./SettingAccount\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport ButtonMenu from \"../Controls/ButtonMenu\";\nimport {toggleMenu} from \"../../apollo/controls/controls.caches\"\n\nimport classNames from \"classnames\";\nimport { userVar } from \"../../apollo//cache\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { useLocation } from \"react-router-dom\";\nimport { useThemeUI } from \"theme-ui\";\nimport ButtonLogin from \"../Controls/ButtonLogin\";\nimport ButtonSignUp from \"../Controls/ButtonSignUp\";\nconst Header = () => {\n  const [openSearch, setOpenSearch] = useState(false);\n const user = useReactiveVar(userVar);\n  const { colorMode } = useThemeUI();\n  const { pathname } = useLocation();\n  \n  const NavControls = user ? (\n    <div className=\"nav-controls\">\n      <div className=\"center\">\n        <div className=\"nav-toggle\">\n          <ButtonMenu onClick={toggleMenu} />\n        </div>\n        <div className=\"nav-bar\">\n          <Navigation />\n        </div>\n\n        <div className=\"control\">\n          <MessengerAndNotification />\n        </div>\n      </div>\n      <div className=\"setting-account\">\n        <SettingAccount />\n      </div>\n    </div>\n  ) : (\n    <div className=\"nav-controls\">\n      <div className=\"nav-auth\">\n        <ButtonLogin to=\"/auth\" from={pathname}>\n          Login\n        </ButtonLogin>\n        <ButtonSignUp to=\"/auth/signup\" from={pathname}>\n          Sign up\n        </ButtonSignUp>\n        <div className=\"setting-account\">\n          <SettingAccount />\n        </div>\n      </div>\n    </div>\n  );\n \n  return (\n    <Wrapper theme={colorMode}>\n      <div className={classNames(\"nav-header\", { shorten: !openSearch })}>\n        <div className={classNames(\"nav-brand\", { hide: openSearch })}>\n          <Brand />\n        </div>\n        <div\n          className={classNames(\n            \"close-search\",\n            { \"on-search-open\": !openSearch },\n            { hide: !openSearch }\n          )}\n        >\n          <Button onClick={() => setOpenSearch(false)} variant=\"outlined\">\n            <FaArrowLeft />\n          </Button>\n        </div>\n        <div className={classNames(\"search-bar\")}>\n          <Search\n            openSearch={openSearch}\n            setOpenSearch={() => setOpenSearch(true)}\n          />\n        </div>\n      </div>\n      {NavControls}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.header`\n  width: 100vw;\n  height: 60px;\n  background-color: ${({ theme }) =>\n    theme === \"dark\"\n      ? \"var(--color-background-dark)\"\n      : \"var(--color-background-default)\"};\n  border-bottom: 1px solid\n    ${({ theme }) => (theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-light)\")};\n  position: fixed;\n  top: 0;\n  padding: 0 0.4rem;\n  display: flex;\n  align-items: center;\n  flex-wrap: no-wrap;\n  z-index: 100;\n  .nav-header {\n    display: flex;\n    align-items: center;\n    transition: var(--mainTransition);\n    flex-wrap: nowrap;\n    .nav-brand,\n    .on-search-open {\n      width: 60px;\n      transition: var(--mainTransition);\n    }\n    .search-bar {\n      width: calc(100% - 60px);\n      transition: var(--mainTransition);\n    }\n    .nav-brand {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .nav-controls {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: var(--mainTransition);\n    height: 100%;\n    padding: 0 1.5rem;\n    .nav-bar {\n      display: none;\n    }\n    .center {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: space-between;\n      flex: 1;\n      padding: 0 0.5rem;\n    }\n    .nav-toggle {\n      margin-right: 0.75rem;\n    }\n    .nav-auth {\n      width: 100%;\n      display: flex;\n      justify-content: flex-end;\n      & > * {\n        font-size: 0.8em;\n        margin-right: 0.25rem;\n      }\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .hide {\n      width: 0 !important;\n      opacity: 0;\n      visibility: hidden;\n      transition: var(--mainTransition);\n      transition-delay: 0.5s;\n    }\n    .shorten {\n      width: auto !important;\n      transition: var(--mainTransition);\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding: 0 2rem;\n    .close-search {\n      display: none;\n    }\n    .nav-header {\n      width: 30%;\n    }\n    .nav-controls {\n      width: 70%;\n      .nav-bar {\n        display: block;\n        height: 100%;\n      }\n      .center {\n        justify-content: flex-end;\n      }\n      .control {\n        padding: 0 0.5rem;\n      }\n    }\n  }\n  @media screen and (min-width: 992px) {\n    .nav-header {\n      width: 35%;\n    }\n    .nav-controls {\n      width: 65%;\n      .nav-toggle {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport default React.memo(Header);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonSignUp.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/Chat.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/MenuChat.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.subscriptions.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/post/post.mutations.js",["834"],"import { gql } from \"@apollo/client\";\n\n\nexport const CREATE_POST = gql`\n  mutation CreatePost(\n    $text: String\n    $shortenText: String\n    $rawText : String\n    $mentions: [ID!]\n    $fileNames: [String!]\n    $fileMimetype: [String!]\n    $fileEncodings: [String!]\n    $status: String!\n  ) {\n    createPost(\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText : $rawText\n        mentions: $mentions\n        fileNames: $fileNames\n        fileMimetype: $fileMimetype\n        fileEncodings: $fileEncodings\n        status: $status\n      }\n    ) {\n      _id\n      text\n      rawText\n      shortenText\n      mentions {\n        _id\n        name\n        avatar\n        slug\n        isOnline\n      }      \n      author {\n        _id\n        name\n        slug\n        avatar\n      }\n      files{\n        filename\n        mimetype\n        data\n      }\n      comments       \n      responses     \n      likes      \n      status\n      createdAt\n    }\n  }\n`;\n\nexport const CREATE_COMMENT = gql`\n  mutation(\n    $postId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n  ) {\n    createComment(\n      postId: $postId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n      }\n    ) {\n      _id\n      text\n      shortenText\n      rawText\n      author {\n        _id\n        name\n        avatar\n        slug\n      }\n      post\n      likes\n      responses\n      createdAt\n    }\n  }\n`;\n\nexport const CREATE_RESPONSE = gql`\n  mutation CreateResponse(\n    $commentId: ID!\n    $text: String\n    $shortenText: String\n    $rawText: String\n    $mentions: [ID!]\n  ) {\n    createResponse(\n      commentId: $commentId\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText: $rawText\n        mentions: $mentions\n      }\n    ) {\n      _id\n      text\n      shortenText\n      rawText\n      author {\n        _id\n        name\n        avatar\n        slug\n      }\n      comment\n      likes\n      post\n      createdAt\n    }\n  }\n`;\n\nexport const EDIT_POST = gql`\n  mutation EditPost(\n    $postId : ID!\n    $text: String\n    $shortenText: String\n    $rawText : String\n    $mentions: [ID!]\n    $fileNames: [String!]\n    $fileMimetype: [String!]\n    $fileEncodings: [String!]\n    $status: String!\n  ) {\n    editPost(\n      postId : $postId,\n      data: {\n        text: $text\n        shortenText: $shortenText\n        rawText : $rawText\n        mentions: $mentions\n        fileNames: $fileNames\n        fileMimetype: $fileMimetype\n        fileEncodings: $fileEncodings\n        status: $status\n      }\n    ) {\n      _id\n      text\n      rawText\n      shortenText\n      mentions {\n        _id\n        name\n        avatar\n        slug\n        isOnline\n      }      \n      author {\n        _id\n        name\n        slug\n        avatar\n      }\n      files{\n        filename\n        mimetype\n        data\n      }\n      comments       \n      responses     \n      likes      \n      status\n      createdAt\n    }\n  }\n`;\n\nexport const LIKE_COMMENT = gql`\n  mutation LikeComment($commentId: ID!){\n    likeComment(commentId: $commentId)\n  }\n`\n\nexport const LIKE_POST = gql`\n  mutation ($postId : ID!){\n    likePost(postId : $postId)\n  } \n`\n export const LIKE_RESPONSE = gql`\n  mutation LikeResponse($responseId : ID!){\n    likeResponse(responseId : $responseId)\n  }\n`\n\nexport const REMOVE_COMMENT = gql`\n  mutation RemoveComment($commentId : ID!){\n    removeComment(commentId: $commentId)\n  }\n`\nexport const REMOVE_LIKE_COMMENT = gql`\n  mutation RemoveLikeComment($commentId : ID!){\n    removeLikeComment(commentId : $commentId)\n  }\n`\n\nexport const REMOVE_LIKE_POST = gql`\n  mutation ($postId: ID!){\n    removeLikePost(postId : $postId)\n  }\n`\n\n\nexport const REMOVE_LIKE_RESPONSE = gql`\n  mutation RemoveLikeResponse($responseId: ID!){\n    removeLikeResponse(responseId : $responseId) \n  }\n`\n\nexport const REMOVE_RESPONSE = gql`\n  mutation RemoveResponse($responseId : ID!){\n    removeResponse(responseId : $responseId)\n  }\n`\n\nexport default {\n  CREATE_POST,\n  CREATE_COMMENT,\n  CREATE_RESPONSE,\n  EDIT_POST,\n  LIKE_COMMENT,\n  LIKE_POST,\n  LIKE_RESPONSE,\n  REMOVE_COMMENT,\n  REMOVE_LIKE_COMMENT,\n  REMOVE_LIKE_POST,\n  REMOVE_LIKE_RESPONSE,\n  REMOVE_RESPONSE\n}","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ChatBoardFooter.jsx",["835"],"import React, {\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n  useMemo,\n} from \"react\";\nimport {\n  Wrapper,\n  ChatInput,\n  ChatActions,\n  Label,\n  SendMessage,\n} from \"./styles/ChatBoardFooter.styles\";\nimport { FiSend } from \"react-icons/fi\";\nimport { IoMdAttach } from \"react-icons/io\";\nimport { HiOutlinePhotograph } from \"react-icons/hi\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createMentionPlugin, {\n  defaultSuggestionsFilter,\n} from \"@draft-js-plugins/mention\";\nimport createEmojiPlugin from \"@draft-js-plugins/emoji\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  SEND_MESSAGE_CHAT_TEXT,\n  SEND_MESSAGE_CHAT_FILE,\n} from \"../../apollo/chat/chat.types\";\nimport { setMessagesStorage } from \"../../apollo/chat/chat.caches\";\n\nimport {userVar,currentChatVar } from \"../../apollo/cache\"\nimport { useMutation,useReactiveVar } from \"@apollo/client\";\nimport generateBase64Image from \"../../utils/generateBase64Image\";\nimport useLanguage from \"../Global/useLanguage\"\nconst ChatBoardFooter = () => {\n  //useState\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );  \n  const { colorMode } = useThemeUI();\n  const [suggestions, setSuggestions] = useState(mentions);\n  const [open, setOpen] = useState(true);\n  const {i18n, lang} = useLanguage();\n  const {chatInputPlaceholder} = i18n.store.data[lang].translation.chat;\n  //useQuery\n  const user = useReactiveVar(userVar);\n  const currentChat = useReactiveVar(currentChatVar)\n  //useMutation\n  const [sendMessageChatText] = useMutation(SEND_MESSAGE_CHAT_TEXT);\n  const [sendMessageChatFile] = useMutation(SEND_MESSAGE_CHAT_FILE);\n  \n  const editorRef = useRef(null);\n\n  const {\n    plugins,\n    EmojiSelect,\n    EmojiSuggestions,\n    MentionSuggestions,\n  } = useMemo(() => {\n    const emojiPlugin = createEmojiPlugin({\n      selectButtonContent: \"😀\",\n    });\n    const { EmojiSelect, EmojiSuggestions } = emojiPlugin;\n    const linkifyPlugin = createLinkifyPlugin({\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      component(props) {\n        return <a {...props} onClick={() => alert(\"Clicked on Link!\")} />;\n      },\n    });\n    const mentionPlugin = createMentionPlugin({\n      positionSuggestions: (settings) => {\n        return {\n          left: `${settings.decoratorRect.left - 360 + 30}px`,\n          top: `${-settings.decoratorRect.height * 5 - 100}px`,\n          display: \"block\",\n          transform: \"scale(1)\", // transition popover on the value of its height\n          transformOrigin: \"1em 0% 0px\",\n          transition: \"all 0.25s cubic-bezier(0.3, 1.2, 0.2, 1)\",\n        };\n      },\n      mentionComponent(mentionProps) {\n        return (\n          <span\n            className={mentionProps.className}\n            onClick={() => alert(\"CLick mentions\")}\n          >\n            {mentionProps.children}\n          </span>\n        );\n      },\n    });\n    const { MentionSuggestions } = mentionPlugin;\n    const plugins = [mentionPlugin, emojiPlugin, linkifyPlugin];\n    return { plugins, EmojiSelect, EmojiSuggestions, MentionSuggestions };\n  }, []);\n\n  const onOpenChange = useCallback((_open) => setOpen(_open), []);\n  const onSearchChange = useCallback(({ value }) => {\n    setSuggestions(defaultSuggestionsFilter(value, mentions));\n  }, []);\n\n\n  useEffect(() => {\n    function focusEditorWhenTypingTabButton(e) {\n      if (e.which === 9) {\n        if (editorRef.current) {\n          editorRef.current.focus();\n        }\n      }\n    }\n    window.addEventListener(\"keyup\", (e) => {\n      focusEditorWhenTypingTabButton(e);\n    });\n    return () =>\n      window.removeEventListener(\"keyup\", (e) => {\n        focusEditorWhenTypingTabButton(e);\n      });\n  }, [editorRef]);\n  const onSendMessage = (e) => {    \n    if (editorState.getCurrentContent().hasText() && currentChat) {\n      const rawData = JSON.stringify(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      sendMessageChatText({\n        variables: {\n          receiverId: currentChat._id,\n          text: rawData,\n          scope: currentChat.scope || \"PERSONAL\",\n        },\n      })\n        .then(({ data }) => {\n          const { message, scope } = data.sendMessageChatText;\n          const { receiver } = message;\n          console.log(receiver)\n          //always set hasSeenLatestMessage is true  because  this user is sender\n          setMessagesStorage(receiver, message, scope, true);\n          setEditorState(EditorState.createEmpty());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const onChangeInputChatImage = async (e) => {\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024;\n    if (fileData && fileData.size > maxSize) {\n      return false;\n    }\n    const validFiles = [\"image/jpeg\", \"image/png\", \"image/jpg\", \"image/gif\"];\n    if (!validFiles.includes(fileData.type)) {\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData);\n\n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"IMAGE\",\n        },\n      });\n      const { message, scope } = data.sendMessageChatFile;\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n      document.getElementById(\"chat-image\").value =  \"\";\n    }\n  };\n\n  const onChangeInputChatAttachment = async (e) => {    \n    e.preventDefault();\n    const fileData = e.target.files[0];\n    const maxSize = 1024 * 1024 * 5;\n    if (fileData && fileData.size > maxSize) {\n      console.log(\"oversize\");\n      return false;\n    }\n    const validExtensions = new RegExp(\"(.*?).(docx|doc|pdf|xml|bmp|ppt|xls|txt)$\");\n    if (!validExtensions.test(e.target.value.toLowerCase())) {\n      console.log(\"invalid file\")\n      return false;\n    }\n    const {\n      src: encoding,\n      name: filename,\n      mimetype,\n    } = await generateBase64Image(fileData); \n         \n    if (currentChat) {\n      const { data } = await sendMessageChatFile({\n        variables: {\n          receiverId: currentChat._id,\n          encoding,\n          filename,\n          mimetype,\n          scope: currentChat.scope,\n          messageType: \"ATTACHMENT\",\n        },\n      });\n      const { message, scope, error } = data.sendMessageChatFile;\n      if(error){\n        console.log(error)\n        return ;\n      }\n      const messenger = message.receiver;\n      setMessagesStorage(messenger, message, scope, true);\n    }\n    document.getElementById(\"chat-attachment\").value =  \"\";\n  };\n  return (\n    <Wrapper style={{ display: !user || !currentChat || !Object.entries(currentChat).length ? \"none\" : \"block\" }}>\n      <ChatActions theme={colorMode}>\n        <Label htmlFor=\"chat-image\" style={{ color: \"#fb8c00\" }}>\n          <HiOutlinePhotograph />\n          <input\n            type=\"file\"\n            id=\"chat-image\"\n            name=\"chat-image\"\n            onChange={onChangeInputChatImage}\n          />\n        </Label>\n        <Label htmlFor=\"chat-attachment\" style={{ color: \"#4527a0 \" }}>\n          <IoMdAttach />\n          <input\n            type=\"file\"\n            id=\"chat-attachment\"\n            name=\"chat-attachment\"\n            onChange={onChangeInputChatAttachment}            \n          />\n        </Label>\n      </ChatActions>\n      <ChatInput onClick={() => editorRef.current?.focus()}>\n        <EmojiSuggestions />\n        <EmojiSelect />\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          ref={editorRef}\n          tabIndex=\"0\"          \n          placeholder={`${chatInputPlaceholder} ${currentChat?.name}`}\n        />\n        <MentionSuggestions\n          open={open}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />       \n        <SendMessage onClick={onSendMessage}>\n          <FiSend />\n        </SendMessage>\n      </ChatInput>\n    </Wrapper>\n  );\n};\n\nconst mentions = [\n  {\n    id: 1,\n    name: \"Matthewwqeeqs Russell\",\n    email: \"matthew.russell@google.com\",\n    slug: \"matthew\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 1230,\n    name: \"Juliasadaw Krispel-Samsel\",\n    slug: \"juliansadaw\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 66,\n    name: \"Jyotiewq Puri\",\n    slug: \"jyoti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n  {\n    id: 905,\n    name: \"Maxcxzc Stoiber\",\n    slug: \"stoiber\",\n    email: \"max.stoiber@university.edu\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/763033229993574400/6frGyDyA_400x400.jpg\",\n  },\n  {\n    id: 54111,\n    name: \"Nikeq Graf\",\n    slug: \"graf\",\n    email: \"info@nik-graf.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/223045?v=3&s=400\",\n  },\n  {\n    id: 22,\n    name: \"Pascalewq Brandt\",\n    slug: \"brandt\",\n    email: \"pascalbrandt@fastmail.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/688487813025640448/E6O6I011_400x400.png\",\n  },\n  {\n    id: 3216361,\n    name: \"Matthewewqeq Russell\",\n    slug: \"russell\",\n    email: \"matthew.russell@google.com\",\n    avatar:\n      \"https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg\",\n  },\n  {\n    id: 192365,\n    name: \"Julianewqeq Krispel-Samsel\",\n    slug: \"julianewqeq\",\n    email: \"julian.krispel@google.com\",\n    avatar: \"https://avatars2.githubusercontent.com/u/1188186?v=3&s=400\",\n  },\n  {\n    id: 23648,\n    name: \"Jyotiewqeqw Puri\",\n    slug: \"puti\",\n    email: \"jyoti@yahoo.com\",\n    avatar: \"https://avatars0.githubusercontent.com/u/2182307?v=3&s=400\",\n  },\n];\n\nexport default ChatBoardFooter;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonLogin.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonMenu.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/hook/usePopupActions.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonDefaultCircle.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/SettingAccount.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/MessengerAndNotification.jsx",["836","837","838"],"import React, { useEffect, useState, useRef, useCallback } from \"react\";\n\nimport {\n  Wrapper,\n  Notification,\n  UnseenNotification,\n  NotificationBoard,\n} from \"./styles/Header.styles\";\nimport { IoMdNotifications } from \"react-icons/io\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport NotificationsBoard from \"./NotificationsBoard\";\nimport useNotificationsSubscription from \"../../hooks/useNotificationsSubscription\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport {\n  userVar,\n  notificationsVar,\n  countNumberOfNotificationUnseenVar,\n} from \"../../apollo/cache\";\nimport {\n  FETCH_NOTIFICATIONS,\n  FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n} from \"../../apollo/notification/notification.types\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport FlashPopUpNotification from \"../Notification/FlashPopUpNotification\";\nimport {\n  setLatestNotification,\n  setNotifications,\n  addNotificationsToNotifcationsList,\n  setCountNumberNotificationsUnseen,\n} from \"../../apollo/notification/notification.caches\";\nimport { useThemeUI } from \"theme-ui\";\nconst Control = () => {\n  const [openNotificationBoard, setOpenNotificationBoard] = useState(false);\n  const [fetchedNotifications, setFetchedNotifications] = useState(false);\n  const [loadingFetchNotifications, setLoadingFetchNotifications] =\n    useState(false);\n  const [loadingNotificationsMore, setLoadingNotificationsMore] =\n    useState(false);\n  const notificationRef = useRef(false);\n  const { colorMode } = useThemeUI();\n  const { refetch: fetchNumberNotificationsUnseen } = useQuery(\n    FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n    { skip: true }\n  );\n  const { refetch: fetchNotifications } = useQuery(FETCH_NOTIFICATIONS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const user = useReactiveVar(userVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const countNumberNotificationsUnseen = useReactiveVar(\n    countNumberOfNotificationUnseenVar\n  );\n\n  useNotificationsSubscription();\n\n  useEffect(() => {\n    if (!countNumberNotificationsUnseen) {\n      fetchNumberNotificationsUnseen()\n        .then(({ data }) => {\n          if (data) {\n            setCountNumberNotificationsUnseen(data.countNotificationsUnseen);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setCountNumberNotificationsUnseen(0);\n        });\n    }\n  }, [fetchNumberNotificationsUnseen, countNumberNotificationsUnseen]);\n\n  useEffect(() => {\n    function handleClickOutsideNotificationBoard(e) {\n      if (openNotificationBoard) {\n        setOpenNotificationBoard(false);\n      }\n    }\n    window.addEventListener(\"click\", handleClickOutsideNotificationBoard);\n    return () =>\n      window.removeEventListener(\"click\", handleClickOutsideNotificationBoard);\n  }, [notificationRef.current, openNotificationBoard]);\n\n  const handleClickNotification = useCallback(async () => {\n    setLoadingNotificationsMore(false);\n    setOpenNotificationBoard((prevStatus) => !prevStatus);\n    setLatestNotification(null);\n  });\n\n  const getMoreNotifications = (e) => {\n    const { target } = e;\n    if (\n      target.clientHeight + target.scrollTop > target.scrollHeight * 0.75 &&\n      !loadingNotificationsMore\n    ) {\n      setLoadingNotificationsMore(true);\n    }\n  };\n  useEffect(() => {\n    let _isMounted = true;\n    if (\n      loadingNotificationsMore &&\n      fetchNotifications &&\n      notifications.length < user.notifications.length\n    ) {\n      const skip = notifications.length;\n      const limit = +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE;\n      fetchNotifications({ skip, limit })\n        .then(({ data: { fetchNotifications } }) => {\n          if (_isMounted && fetchNotifications) {\n            addNotificationsToNotifcationsList(fetchNotifications);\n            setLoadingNotificationsMore(false);\n          }\n        })\n        .catch((err) => {\n          setLoadingNotificationsMore(false);\n        });\n    }\n    return () => (_isMounted = false);\n  }, [loadingNotificationsMore, user, notifications, fetchNotifications]);\n\n  useEffect(() => {}, [openNotificationBoard]);\n\n  const onOpenNotificationBoard = () => {\n    setOpenNotificationBoard(true);\n  };\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (\n      !fetchedNotifications &&\n      openNotificationBoard &&\n      notifications.length < +process.env.REACT_APP_NOTIFICATIONS_PER_PAGE\n    ) {\n      setLoadingFetchNotifications(true);\n      fetchNotifications()\n        .then(({ data }) => {\n          if (data && _isMounted) {\n            setNotifications(data.fetchNotifications);\n          }\n          setLoadingFetchNotifications(false);\n          setFetchedNotifications(true);\n        })\n        .catch((err) => {\n          console.log(err);\n          setLoadingFetchNotifications(false);\n          setFetchedNotifications(true);\n        });\n    }\n    return () => (_isMounted = false);\n  }, [fetchedNotifications, openNotificationBoard, notifications]);\n\n  return (\n    <Wrapper>\n      <Notification ref={notificationRef}>\n        <FlashPopUpNotification onClick={onOpenNotificationBoard} />\n        <Button onClick={handleClickNotification}>\n          <IoMdNotifications />\n          {countNumberNotificationsUnseen ? (\n            <UnseenNotification>\n              {countNumberNotificationsUnseen}\n            </UnseenNotification>\n          ) : null}\n        </Button>\n\n        <NotificationBoard open={openNotificationBoard} theme={colorMode}>\n          <Scrollbars\n            autoHide\n            autoHideTimeout={1000}\n            autoHideDuration={200}\n            autoHeightMin={0}\n            autoHeightMax={200}\n            onScroll={getMoreNotifications}\n          >\n            <NotificationsBoard\n              notifications={notifications}\n              loading={loadingFetchNotifications}\n            />\n          </Scrollbars>\n        </NotificationBoard>\n      </Notification>\n    </Wrapper>\n  );\n};\n\nexport default Control;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Navigation.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Brand.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Search.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ContactItem.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ListContacts.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/utils/generateBase64Image.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/Auth.utility.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardFooter.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/FlashPopUpNotification.jsx",["839","840"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Wrapper,\n  SenderAvatar,\n  NotificationContent,\n} from \"./styles/FlashPopUpNotification.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport {latestNotificationVar} from \"../../apollo/cache\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n\nimport { notificationContent } from \"../../utils/notificationContent\";\nimport { setLatestNotification } from \"../../apollo/notification/notification.caches\";\nconst FlashPopUpNotification = ({ onClick }) => {\n  const latestNotification = useReactiveVar(latestNotificationVar)\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();  \n  const { message } = i18n.store.data[lang].translation.notifications;\n  useEffect(() => {\n    let timer;\n    if (latestNotification) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        setLatestNotification(null);\n      }, 6000);\n    }\n    return () => clearTimeout(timer);\n  }, [latestNotification]);\n\n  const onClickPopup = () => {\n    onClick();\n    setLatestNotification(null);\n  };\n\n  return (\n    <Wrapper show={latestNotification} theme={colorMode} onClick={onClickPopup}>\n      {latestNotification ? (\n        <>\n          <SenderAvatar>\n            <LazyLoadImage\n              src={latestNotification.creator.avatar}\n              effect=\"blur\"\n            ></LazyLoadImage>\n          </SenderAvatar>\n          <NotificationContent>\n            <span\n              dangerouslySetInnerHTML={{\n                __html: notificationContent(latestNotification, lang),\n              }}\n            ></span>\n          </NotificationContent>\n        </>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(FlashPopUpNotification);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/hooks/useNotificationsSubscription.jsx",["841","842"],"import { useEffect } from \"react\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport {\n  countNumberOfNotificationUnseenVar,\n  userVar,\n  currentPersonalUserVar,\n  notificationsVar,\n  receivedRequestsToAddFriendVar,\n  latestNotificationVar,\n} from \"../apollo/cache\";\nimport {\n  FETCH_NOTIFICATIONS,\n  FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n} from \"../apollo/notification/notification.types\";\nimport { setCurrentPersonalUser } from \"../apollo/user/currentPersonalUser.caches\";\nimport {\n  addUserToReceivedRequestToAddFriend,\n  removeUserFromReceivedRequestToAddFriend,\n  moveSentRequestToFriend,\n} from \"../apollo/contact/contact.caches\";\nimport {\n  addLikeResponse,\n  removeLikeResponse,\n  updateCommentLikes,\n} from \"../apollo/post/post.caches\";\nimport {\n  userLikePostInCurrentPersonalUser,\n  userRemoveLikePostInCurrentPersonalUser,\n} from \"../apollo/post/post.caches\";\nimport {\n  ACCEPT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n  LIKE_COMMENT_SUBSCRIPTION,\n  LIKE_POST_SUBSCRIPTION,\n  LIKE_RESPONSE_SUBSCRIPTION,\n  NOTIFY_MENTIONED_USERS_IN_COMMENT_SUBSCRIPTION,\n  NOTIFY_MENTIONED_USERS_IN_POST,\n  NOTIFY_MENTIONED_USERS_IN_RESPONSE,\n  NOTIFFY_USER_COMMENT_POST_SUBSCRIPTION,\n  NOTIFY_USER_RESPONSE_COMMENT_SUBSCRIPTION,\n  REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n  REMOVE_LIKE_POST_SUBSCRIPTION,\n  REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n  REMOVE_MENTIONED_USERS_NOTIFICATION_IN_POST,\n  SENT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n} from \"../apollo/notification/notification.types\";\nimport { addNotificationItemToNotificationsList } from \"../apollo/notification/notification.caches\";\nimport { setCurrentUser } from \"../apollo/user/user.caches\";\nimport {\n  removeNotificationItemFromNotificationsList,\n  setCountNumberNotificationsUnseen,\n  setNewNotifications,\n  setLatestNotification,\n  updateNotificationItemInNotificationsList,\n} from \"../apollo/notification/notification.caches\";\nconst useNotificationsPostSubscription = () => {\n  const { subscribeToMore: subscribeToMoreNotifications } = useQuery(\n    FETCH_NOTIFICATIONS,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const { refetch: fetchCountNumberNotificationsUnseen } = useQuery(\n    FETCH_COUNT_NUMBER_NOTIFICATIONS_UNSEEN,\n    {\n      skip: true,\n      fetchPolicy: \"cache-and-network\",\n    }\n  );\n  const countNumberNotificationsUnseen = useReactiveVar(\n    countNumberOfNotificationUnseenVar\n  );\n  const user = useReactiveVar(userVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const receivedRequestsToAddFriend = useReactiveVar(\n    receivedRequestsToAddFriendVar\n  );\n  const latestNotification = useReactiveVar(latestNotificationVar);\n  useEffect(() => {\n    let _isMounted = true;\n    if (countNumberNotificationsUnseen === null) {\n      fetchCountNumberNotificationsUnseen().then(\n        ({ data: { countNotificationsUnseen } }) => {\n          if (_isMounted) {\n            setCountNumberNotificationsUnseen(countNotificationsUnseen);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [\n    countNumberNotificationsUnseen,\n    fetchCountNumberNotificationsUnseen,\n    setCountNumberNotificationsUnseen,\n  ]);\n\n  //sender and receiver only use in field 'user'\n  const updatedAddNotification = (\n    newNotification,\n    sender = null,\n    receiver = null\n  ) => {\n    setLatestNotification(newNotification);\n    setNewNotifications(newNotification._id);\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n    }\n    if (\n      notifications.find(\n        (notification) => notification._id === newNotification._id\n      )\n    ) {\n      updateNotificationItemInNotificationsList(newNotification);\n    } else {\n      addNotificationItemToNotificationsList(newNotification);\n    }\n  };\n\n  const updatedRemoveNotification = (removedNotification, sender, receiver) => {\n    if (latestNotification?._id === removedNotification._id) {\n      setLatestNotification(null);\n    }\n    removeNotificationItemFromNotificationsList(removedNotification);\n    if (sender && receiver) {\n      setCurrentUser({\n        ...user,\n        ...receiver,\n      });\n      if (currentPersonalUser && currentPersonalUser._id === sender._id) {\n        setCurrentPersonalUser({\n          ...currentPersonalUser,\n          ...sender,\n        });\n      }\n      return;\n    }\n    setCurrentUser({\n      ...user,\n      notifications: [\n        ...notifications.filter((_id) => _id !== removedNotification._id),\n      ],\n    });\n  };\n\n  useEffect(() => {\n    let unsubscribeRequestAddFriend,\n      unsubscribeCancelRequestToAddFriend,\n      unsubscribeAcceptRequestToAddFriend,\n      unsubscribeMentionedUsersInPost,\n      unsubscribeAcceptRequestAddFriend,\n      unsubscribeUserLikePost,\n      unsubscribeUserRemoveLikePost,\n      unsubscribeOwnerPostReceivedUserComment,\n      unsubscribeMentionedUsersInComment,\n      unsubscribeLikeComment,\n      unsubscribeRemoveLikeComment,\n      unsubscribeUserResponseComment,\n      unsubscribeMentionedUsersInResponse,\n      unsubscribeUserLikeResponse,\n      unsubscribeUserRemoveLikeResponse,\n      unsubscribeRemoveMentionedUsersNotificationInPost;\n    if (subscribeToMoreNotifications && user) {\n      //#region Contact\n      unsubscribeRequestAddFriend = subscribeToMoreNotifications({\n        document: SENT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              sentRequestToAddFriendSubscription: notification,\n            } = subscriptionData.data;\n            const { receiver, sender } = notification?.fieldIdentity;\n            if (sender && receiver) {\n              console.log(sender, receiver, notification);\n              addUserToReceivedRequestToAddFriend(sender);\n              updatedAddNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeCancelRequestToAddFriend = subscribeToMoreNotifications({\n        document: CANCEL_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              cancelRequestToAddFriendSubscription: notification,\n            } = subscriptionData.data;\n            const { sender, receiver } = notification.fieldIdentity;\n            if (sender && receiver) {\n              removeUserFromReceivedRequestToAddFriend(sender);\n              updatedRemoveNotification(notification, sender, receiver);\n            }\n          }\n        },\n      });\n\n      unsubscribeAcceptRequestToAddFriend = subscribeToMoreNotifications({\n        document: ACCEPT_REQUEST_TO_ADD_FRIEND_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              acceptRequestToAddFriendSubscription: notification,\n            } = subscriptionData.data;\n            const { sender, receiver } = notification.fieldIdentity;\n            moveSentRequestToFriend(sender);\n            updatedAddNotification(notification, sender, receiver);\n          }\n        },\n      });\n\n      //#endregion\n\n      //#region Post\n      unsubscribeMentionedUsersInPost = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_POST,\n        variables: { userId: user._id },\n        updateQuery: (prev, { subscriptionData }) => {\n          console.log(subscriptionData);\n          if (subscriptionData) {\n            const { notifyMentionedUsersInPost } = subscriptionData.data;\n            console.log(notifyMentionedUsersInPost);\n            updatedAddNotification(notifyMentionedUsersInPost);\n          }\n        },\n      });\n      unsubscribeUserLikePost = subscribeToMoreNotifications({\n        document: LIKE_POST_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likePostSubscription } = subscriptionData.data;\n            if (user._id === likePostSubscription?.receiver) {\n              updatedAddNotification(likePostSubscription);\n            }\n            //update user like in personal user\n            userLikePostInCurrentPersonalUser(\n              likePostSubscription.fieldIdentity.post\n            );\n          }\n        },\n      });\n      unsubscribeUserRemoveLikePost = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_POST_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikePostSubscription } = subscriptionData.data;\n            if (removeLikePostSubscription?.receiver === user._id) {\n              updatedRemoveNotification(removeLikePostSubscription);\n            }\n            //update current Personal user\n            userRemoveLikePostInCurrentPersonalUser(\n              removeLikePostSubscription.creator._id,\n              removeLikePostSubscription.fieldIdentity.post._id\n            );\n          }\n        },\n      });\n\n      unsubscribeOwnerPostReceivedUserComment = subscribeToMoreNotifications({\n        document: NOTIFFY_USER_COMMENT_POST_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyUserCommentPostSubscription } = subscriptionData.data;\n            updatedAddNotification(notifyUserCommentPostSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInComment = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionUsersInComment } = subscriptionData.data;\n            updatedAddNotification(notifyMentionUsersInComment);\n          }\n        },\n      });\n      unsubscribeLikeComment = subscribeToMoreNotifications({\n        document: LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          console.log(subscriptionData);\n          if (subscriptionData) {\n            const {\n              comment,\n              notification,\n            } = subscriptionData.data.likeCommentSubscription;\n            //create notification to receiver\n            if (notification && notification.receiver === user._id) {\n              updatedAddNotification(notification);\n            }\n            if (\n              !notification ||\n              (notification && notification.creator._id !== user._id)\n            ) {\n              updateCommentLikes(comment);\n            }\n          }\n        },\n      });\n      unsubscribeRemoveLikeComment = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_COMMENT_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              comment,\n              notification,\n            } = subscriptionData.data.removeLikeCommentSubscription;\n            if (notification && notification.receiver === user._id) {\n              updatedRemoveNotification(notification);\n            }\n            if (\n              !notification ||\n              (notification && notification.creator._id !== user._id)\n            ) {\n              updateCommentLikes(comment);\n            }\n          }\n        },\n      });\n      unsubscribeUserResponseComment = subscribeToMoreNotifications({\n        document: NOTIFY_USER_RESPONSE_COMMENT_SUBSCRIPTION,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const {\n              notifyUserResponseCommentSubscription,\n            } = subscriptionData.data;\n            updatedAddNotification(notifyUserResponseCommentSubscription);\n          }\n        },\n      });\n      unsubscribeMentionedUsersInResponse = subscribeToMoreNotifications({\n        document: NOTIFY_MENTIONED_USERS_IN_RESPONSE,\n        variables: { userId: user._id },\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { notifyMentionedUsersInResponse } = subscriptionData.data;\n            updatedAddNotification(notifyMentionedUsersInResponse);\n          }\n        },\n      });\n      unsubscribeUserLikeResponse = subscribeToMoreNotifications({\n        document: LIKE_RESPONSE_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { likeResponseSubscription } = subscriptionData.data;\n            if (likeResponseSubscription.receiver.toString() === user._id) {\n              updatedAddNotification(likeResponseSubscription);\n            }\n            const {\n              post,\n              comment,\n              response,\n            } = likeResponseSubscription.fieldIdentity;\n            if (likeResponseSubscription.creator._id.toString() !== user._id) {\n              addLikeResponse(\n                post._id,\n                comment._id,\n                response._id,\n                likeResponseSubscription.creator._id\n              );\n            }\n          }\n        },\n      });\n      unsubscribeUserRemoveLikeResponse = subscribeToMoreNotifications({\n        document: REMOVE_LIKE_RESPONSE_SUBSCRIPTION,\n        updateQuery: (_, { subscriptionData }) => {\n          if (subscriptionData) {\n            const { removeLikeResponseSubscription } = subscriptionData.data;\n            if (\n              removeLikeResponseSubscription.receiver.toString() === user._id\n            ) {\n              updatedRemoveNotification(removeLikeResponseSubscription);\n            }\n            const {\n              post,\n              comment,\n              response,\n            } = removeLikeResponseSubscription.fieldIdentity;\n            if (\n              removeLikeResponseSubscription.creator._id.toString() !== user._id\n            ) {\n              removeLikeResponse(\n                post._id,\n                comment._id,\n                response._id,\n                removeLikeResponseSubscription.creator._id\n              );\n            }\n          }\n        },\n      });\n\n      unsubscribeRemoveMentionedUsersNotificationInPost = subscribeToMoreNotifications(\n        {\n          document: REMOVE_MENTIONED_USERS_NOTIFICATION_IN_POST,\n          variables: { userId: user._id },\n          updateQuery: (_, { subscriptionData }) => {\n            if (subscriptionData) {\n              const {\n                removeMentionedNotificationSubscription,\n              } = subscriptionData.data;\n              updatedRemoveNotification(\n                removeMentionedNotificationSubscription\n              );\n            }\n          },\n        }\n      );\n      //#endregion\n    }\n\n    return () => {\n      if (unsubscribeRequestAddFriend) {\n        unsubscribeRequestAddFriend();\n      }\n      if (unsubscribeCancelRequestToAddFriend) {\n        unsubscribeCancelRequestToAddFriend();\n      }\n      if (unsubscribeAcceptRequestToAddFriend) {\n        unsubscribeAcceptRequestToAddFriend();\n      }\n      if (unsubscribeMentionedUsersInPost) {\n        unsubscribeMentionedUsersInPost();\n      }\n      if (unsubscribeUserLikePost) {\n        unsubscribeUserLikePost();\n      }\n      if (unsubscribeUserRemoveLikePost) {\n        unsubscribeUserRemoveLikePost();\n      }\n      if (unsubscribeAcceptRequestAddFriend) {\n        unsubscribeAcceptRequestAddFriend();\n      }\n      if (unsubscribeOwnerPostReceivedUserComment) {\n        unsubscribeOwnerPostReceivedUserComment();\n      }\n      if (unsubscribeMentionedUsersInComment) {\n        unsubscribeMentionedUsersInComment();\n      }\n      if (unsubscribeLikeComment) {\n        unsubscribeLikeComment();\n      }\n      if (unsubscribeRemoveLikeComment) {\n        unsubscribeRemoveLikeComment();\n      }\n      if (unsubscribeUserResponseComment) {\n        unsubscribeUserResponseComment();\n      }\n      if (unsubscribeMentionedUsersInResponse) {\n        unsubscribeMentionedUsersInResponse();\n      }\n      if (unsubscribeUserLikeResponse) {\n        unsubscribeUserLikeResponse();\n      }\n      if (unsubscribeUserRemoveLikeResponse) {\n        unsubscribeUserRemoveLikeResponse();\n      }\n      if (unsubscribeRemoveMentionedUsersNotificationInPost) {\n        unsubscribeRemoveMentionedUsersNotificationInPost();\n      }\n    };\n  }, [\n    countNumberNotificationsUnseen,\n    subscribeToMoreNotifications,\n    receivedRequestsToAddFriend,\n    notifications,\n    user,\n  ]);\n};\n\nexport default useNotificationsPostSubscription;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/Tooltips.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/NotificationsBoard.jsx",["843"],"import React, { memo } from \"react\";\nimport {\n  Wrapper,\n  Title,\n  Header,\n  Body,\n} from \"./styles/NotificationsBoard.styles\";\nimport Button from \"../Controls/ButtonDefaultCircle\";\nimport { BiDotsHorizontalRounded } from \"react-icons/bi\";\nimport { useThemeUI } from \"theme-ui\";\nimport Notifications from \"../Notification/Notifications\";\nimport NotificationItem from \"../Notification/NotificationItem\";\nconst NotificationsBoard = ({ notifications, loading }) => {\n  const { colorMode } = useThemeUI();\n  return (\n    <Wrapper theme={colorMode}>\n      <Header>\n        <Title>Notifications</Title>\n        <Button variant=\"outlined\">\n          <BiDotsHorizontalRounded />\n        </Button>\n      </Header>\n      <Body>\n        {loading ? (\n          <div>Loading</div>\n        ) : notifications.length ? (\n          notifications.map((notification) => (\n            <NotificationItem\n              key={`home-page-notification-${notification._id}`}\n              notifications={notifications}\n              notification={notification}\n            />\n          ))\n        ) : (\n          <div>No notifications</div>\n        )}\n      </Body>\n    </Wrapper>\n  );\n};\n\nexport default memo(NotificationsBoard);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/ThreeDotsSetting.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ContactItem.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonColorMode.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/styles/Header.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/utils/notificationContent.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/Notifications.jsx",["844"],"import React from \"react\";\nimport NotificationItem from \"./NotificationItem\";\nimport styled from \"styled-components\";\nimport LazyLoad from \"react-lazyload\";\nconst Notifications = ({notifications}) => {\n   \n  return (\n    <LazyLoad>\n      {notifications.length ? notifications.map((notification) => (\n        <NotificationItem\n          key={`notification-${notification._id}`}\n          notifications={notifications}\n          notification={notification}\n        />\n      )): null}\n    </LazyLoad>\n  );\n};\n\nexport default React.memo(Notifications);\n\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Header/styles/NotificationsBoard.styles.jsx",["845"],"import styled from \"styled-components\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) =>\n    theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--white)\"};\n  border-radius: 0.5rem;\n  box-shadow: var(--mediumShadow);\n  color: inherit;\n  border: 1px solid\n    ${({ theme }) => (theme === \"dark\" ? \"var(--dark)\" : \"var(--light)\")};\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0rem 0.75rem;  \n`;\n\nexport const Title = styled.h4`\n  font-size: 1.2rem;\n`;\n\nexport const Body = styled.section`    \n`;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/styles/FlashPopUpNotification.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/styles/ThreeDotsSetting.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/Search.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ConversationItem.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ListConversations.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ChatBoardBody.jsx",["846","847","848","849"],"import React, { useState, useEffect, createRef } from \"react\";\nimport { Wrapper } from \"./styles/ChatBoardBody.styles\";\nimport Bubble from \"./Bubble\";\nimport { useThemeUI } from \"theme-ui\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport {userVar, currentChatVar, messagesStorageVar} from \"../../apollo/cache\"\nimport { FETCH_MESSAGES } from \"../../apollo/chat/chat.types\";\nimport {updateMoreMessages} from \"../../apollo/chat/chat.caches\"\nconst ChatBoardBody = () => {\n  //useState\n  const [loadMoreMessages, setLoadMoreMessages] = useState(false);\n  //useQuery\n  const currentChat = useReactiveVar(currentChatVar);\n  const user = useReactiveVar(userVar);\n  const messagesStorage = useReactiveVar(messagesStorageVar);  \n  const { refetch: fetchMoreMessages } = useQuery(FETCH_MESSAGES, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const chatBoardBodyRef = createRef(null);  \n  const [shouldScrollIntoView, setShouldScrollIntoView] = useState(true);\n  const { colorMode } = useThemeUI();\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      if (chatBoardBodyRef.current && shouldScrollIntoView) {\n        chatBoardBodyRef.current.scrollIntoView({\n          behavior: \"auto\",\n        });\n      }\n    }, 50);\n    return () => clearTimeout(timer);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if(messagesStorage[currentChat?._id]?.latestMessage?.sender?._id === user._id ){\n      timer = setTimeout(() => {\n        if (chatBoardBodyRef.current) {\n          chatBoardBodyRef.current.scrollIntoView({\n            behavior: \"auto\",\n          });\n        }\n      }, 10);\n    }\n    \n    return () => clearTimeout(timer);\n  }, [currentChat,messagesStorage[currentChat?._id]?.messages, user]);\n  \n  useEffect(() => {\n    let isScrolling;\n    function onScrollBodyBoard(e) {\n      clearTimeout(isScrolling);\n      isScrolling = setTimeout(() => {\n        const { scrollHeight, scrollTop, clientHeight } = e.target;\n        if (scrollTop + clientHeight === scrollHeight) {\n          setShouldScrollIntoView(true);\n        } else {\n          setShouldScrollIntoView(false);\n        }\n        if (\n          scrollTop + clientHeight <\n          (scrollHeight - scrollTop) / 2 + scrollHeight * 0.15\n        ) {\n          setLoadMoreMessages(true);\n        }\n      }, 66);\n    }\n    document.getElementById(\"body-board\").addEventListener(\n      \"scroll\",\n      function (e) {\n        onScrollBodyBoard(e);\n      },\n      false\n    );\n    return () => {\n      clearTimeout(isScrolling);\n      document.getElementById(\"body-board\").removeEventListener(\n        \"scroll\",\n        function (e) {\n          onScrollBodyBoard(e);\n        },\n        false\n      );\n    };\n  });\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (loadMoreMessages) {\n      const skip = messagesStorage[currentChat._id].messages.length;\n      const limit = +process.env.REACT_APP_NUMBER_MESSAGES_PER_LOAD;\n      const conversationId = currentChat._id;\n      const scope = currentChat.scope;\n      fetchMoreMessages({ conversationId, scope, skip, limit }).then(\n        ({ data }) => {\n          if (_isMounted) {\n            const { messages } = data.fetchMessages;\n            updateMoreMessages(conversationId, messages);\n            setLoadMoreMessages(false);\n          }\n        }\n      );\n    }\n    return () => (_isMounted = false);\n  }, [loadMoreMessages]);\n  console.log(currentChat)\n  console.log(messagesStorage)\n  return (\n    <Wrapper\n      theme={colorMode}\n      id=\"body-board\"\n      // onScrollCapture={onScrollBoardBody}\n    >\n      {currentChat &&\n      messagesStorage[currentChat._id] &&\n      messagesStorage[currentChat._id]?.messages?.length &&\n      user\n        ? messagesStorage[currentChat._id].messages.map((message, idx) => {\n            return (\n              <Bubble\n                key={`bubble-${message._id}`}\n                message={message}\n                user={user}\n                me={message.sender && message.sender._id === user._id}\n                senderAvatar={\n                  message.sender && message.sender._id === user._id\n                    ? user.avatar\n                    : currentChat.avatar\n                }\n                index={idx}\n              />\n            );\n          })\n        : null}\n      <div ref={chatBoardBodyRef}></div>\n    </Wrapper>\n  );\n};\n\nexport default ChatBoardBody;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/ChatBoardHeading.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoard.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Controls/ButtonDefault.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Notification/styles/NotificationItem.styles.jsx",["850","851","852"],"import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nexport const Wrapper = styled.section`\n  background-color: ${({ hasSeen, theme }) =>\n    theme === \"dark\"\n      ? hasSeen\n        ? \"var(--color-notification-hasSeen-dark)\"\n        : \"var( --color-notification-notSeen-dark)\"\n      : hasSeen\n      ? \"var( --color-notification-hasSeen-default)\"\n      : \"var( --color-notification-notSeen-dark)\"};\n  &:hover {\n    background-color: ${({ theme }) =>\n      theme === \"dark\"\n        ? \"var(--color-hover-dark)\"\n        : \"var(--color-hover-default)\"};\n  }\n`;\n\nexport const LinkWrapper = styled(Link)`\n  display: flex;\n  padding: 0.4rem 0.8rem;\n  font-size: 0.9rem;\n`;\n\nexport const AvatarContainer = styled.div`\n  width: 2.5rem;\n  height: 2.5rem;\n  & img {\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n  }\n`;\n\nexport const NotificationContent = styled.article`\n  margin-left: 0.5rem;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Controls = styled.div`\n  padding: 0.75rem 1.25rem;\n`;\n\nconst ButtonsGroup = styled.div`\n  display: flex;\n  padding: 1rem;\n`;\n\nconst ButtonAccept = styled.button`\n  padding: 0.5rem 1rem;\n  outline: none;\n  border: none;\n  background-color: #16c172e3;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: var(--white);\n  &:hover {\n    background-color: #009651e3;\n  }\n`;\nconst ButtonDecline = styled.button`\n  padding: 0.5rem 1rem;\n  outline: none;\n  border: none;\n  background-color: #ec1b1be3;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: var(--white);\n  &:hover {\n    background-color: #c70000e3;\n  }\n`;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ConversationItem.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/Bubble.jsx",["853","854"],"import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport {\n  Wrapper,\n  Avatar,\n  BubbleContainer,\n  Message,\n  MentionWrapper,\n  MentionInfo,\n  MentionLinkInfo,\n  MentionAvatar,\n  BubbleTimeline,\n  ImageContainer,\n  AttachmentContainer,\n} from \"./styles/Bubble.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { convertFromRaw, EditorState } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport createLinkifyPlugin from \"@draft-js-plugins/linkify\";\nimport createMentionPlugin from \"@draft-js-plugins/mention\";\nimport Moment from \"react-moment\";\nimport LazyLoad from \"react-lazyload\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nconst linkifyPlugin = createLinkifyPlugin({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n});\nconst mentionPlugin = createMentionPlugin({\n  mentionComponent({ mention }) {\n    return (\n      <MentionWrapper to={`/${mention.slug}`}>\n        <MentionLinkInfo to={`/${mention.slug}`}>\n          <MentionAvatar src={mention.avatar} />\n          <MentionInfo>\n            <span>{mention.name}</span>\n            <span>@{mention.slug}</span>\n          </MentionInfo>\n        </MentionLinkInfo>\n        <span>@{mention.name}</span>\n      </MentionWrapper>\n    );\n  },\n});\nconst Bubble = ({ message, me, user, senderAvatar, index }) => {\n  const [editorState, setEditorState] = useState(() =>\n    message.messageType === \"TEXT\"\n      ? EditorState.createWithContent(convertFromRaw(JSON.parse(message.text)))\n      : null\n  );\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [bubbleDimensions, setBubbleDimensions] = useState({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  });\n  const bubbleRef = useRef(null);\n  useEffect(() => {\n    if (bubbleRef.current) {\n      setBubbleDimensions(bubbleRef.current.getBoundingClientRect());\n    }\n  }, [bubbleRef]);  \n  \n  if (!user) return null;  \n  return (\n    \n      <Wrapper index={index}>\n        <BubbleContainer me={me}>\n          <Avatar>\n            <LazyLoadImage src={senderAvatar} />\n          </Avatar>\n          <Message me={me} ref={bubbleRef} messageType={message.messageType}>\n            {message.messageType === \"TEXT\" ? (\n              <Editor\n                editorState={editorState}\n                setEditorState={setEditorState}\n                plugins={[linkifyPlugin, mentionPlugin]}\n                onChange={setEditorState}\n                readOnly\n              />\n            ) : message.messageType === \"IMAGE\" ? (\n              <ImageContainer>\n                <img\n                  src={message.file.data}\n                  alt={message.file.filename}\n                  onClick={() => setIsOpen(true)}\n                />\n                {isOpen && (\n                  <Lightbox\n                    mainSrc={message.file.data}\n                    onCloseRequest={() => setIsOpen(false)}\n                  />\n                )}\n              </ImageContainer>\n            ) : message.messageType === \"ATTACHMENT\" ? (\n              <AttachmentContainer>\n                <a\n                  href={message.file.data}\n                  download={message.file.filename}\n                  title={message.file.filename}\n                >\n                  {message.file.filename}\n                </a>\n              </AttachmentContainer>\n            ) : null}\n          </Message>\n        </BubbleContainer>\n        <BubbleTimeline width={bubbleDimensions.width} me={me}>\n          <div>\n            <span>\n              <Moment fromNow>{+message.createdAt}</Moment>\n            </span>\n            {user._id === message.sender._id ? (\n              <span style={{ textTransform: \"capitalize\" }}>\n                {message.receiverStatus.toLowerCase()}\n              </span>\n            ) : null}\n          </div>\n        </BubbleTimeline>\n      </Wrapper>\n    \n  );\n};\n\nexport default Bubble;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardBody.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/ChatBoardHeading.styles.jsx",["855"],"import styled, {css} from \"styled-components\"\n\n\nexport const Wrapper = styled.header`\nheight: 65px;\nwidth : 100%; \nbackground-color : #e8f5e9;\ndisplay : flex;\npadding: 1rem 2rem;  \njustify-content: space-between;\nalign-items : center;\n`\n\nexport const User = styled.div`\ndisplay : flex;\nalign-items : center;  \n`\n\nexport const Avatar = styled.div`\nwidth : 2.5rem;\nheight : 2.5rem;\n& > img{\n  width : 100%; \n  height: 100%;\n  border-radius : 50%;\n}\n`\n\nexport const UserInfo  = styled.div`\nmargin-left : 0.4rem;\nh4{\n  font-size : 1rem;\n}\nflex: 1;\n`\n\nexport const Controls = styled.div`\n  display : flex;\n  align-items: center;\n`\n\nexport const LinkItem = styled.span`\n  display : inline-block;\n  cursor : pointer;\n  font-size : 1.4rem;\n  margin :  0  0.5rem;\n  ${({phone}) => phone && `\n    color : #039be5 ;\n    &:hover{\n      color : #0277bd ; \n    }\n  `} \n  ${({video}) => video && `\n    color : #e53935; \n    &:hover{\n      color : #c62828;\n    }\n  `}\n  ${({photo}) => photo &&`\n    color : #00897b;\n    &:hover{\n      color : #00695c;\n    }\n  `}\n\n  ${({file}) => file && `\n    color : #3949ab;\n    &:hover{\n      color: #283593;\n    }\n  `}\n \n`","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/IntroductionBox.jsx",["856","857"],"import React from \"react\";\nimport {\n  BoxWrapper,\n  WorkList,\n  Introduce,\n  Website,\n} from \"./styles/IntroductionBox.styles\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { currentPersonalUserVar, userVar } from \"../../apollo/cache\";\nimport { useThemeUI } from \"theme-ui\";\nimport { Link } from \"react-router-dom\";\nimport { FaGlobe } from \"react-icons/fa\";\nimport { MdWork } from \"react-icons/md\";\nconst works = [\n  {\n    job_name: \"Data Engineer\",\n    company_name: \"iTech Corp\",\n    company_location: \"HCM city\",\n    company_coordinates_href:\n      \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\",\n    company_href: \"http://google.com\",\n  },\n  {\n    job_name: \"Data Scientist\",\n    company_name: \"Samsung\",\n    company_location: \"HCM city\",\n    company_coordinates_href:\n      \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\",\n    company_href: \"http://google.com\",\n  },\n  {\n    job_name: \"Junior Developer\",\n    company_name: \"Freelance\",\n    company_location: \"HCM city\",\n    company_coordinates_href:\n      \"https://www.latlong.net/c/?lat=12.554564&long=107.080476\",\n    company_href: \"http://google.com\",\n  },\n];\n\nconst IntroductionBox = () => {\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  const { colorMode } = useThemeUI();\n  return (\n    <BoxWrapper theme={colorMode}>\n      <h4>Introduction</h4>\n      {/* Introduce */}\n      <Introduce>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem\n        possimus harum aliquam nobis qui! Temporibus, commodi facilis ex nihil\n        veniam in quia eius dicta quos.\n      </Introduce>\n      {/* works list */}\n      <WorkList>\n        {works.map((work) => (\n          <li key={work.job_name}>\n            <Website>\n              <span>\n                <MdWork />\n              </span>\n              <Link to={`/tags/${work.job_name}`}>{work.job_name}</Link>at\n              <Link to={work.company_href}>{work.company_name}</Link>\n            </Website>\n          </li>\n        ))}\n      </WorkList>\n      {/* Live in */}\n      <p>\n        Live in <Link to=\"https://google.com\">Can Tho</Link>\n      </p>\n      {/* Followers */}\n      <p>\n        Current Have <strong>200</strong> followers\n      </p>\n      {/* Contact */}\n      <p>Contact me via : 0123 456 789</p>\n      <Website>\n        {\" \"}\n        <span>\n          <FaGlobe />\n        </span>{\" \"}\n        <Link href=\"https://github.com/mthang1801\">\n          https://github.com/mthang1801\n        </Link>\n      </Website>\n    </BoxWrapper>\n  );\n};\n\nexport default IntroductionBox;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/FacebookAuth.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/GoogleAuth.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/GoogleRecapcha.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomMaterialButton.jsx",["858","859","860","861","862","863"],"import React from 'react';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { green, purple, red, blue } from '@material-ui/core/colors';\n\nexport const AcceptButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(green[600]),\n    fontWeight : 600,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n}))(Button);\n\nexport const DenyButton = withStyles((theme) => ({\n  root: {\n    color: theme.palette.getContrastText(red[600]),\n    fontWeight: 600,\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[700],\n    },\n  },\n}))(Button);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalPosts.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomButton.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomInput.jsx",[],["864","865"],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Auth/AuthForm.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/PersonalHeadingContact.jsx",["866","867","868","869","870","871","872","873"],"import React, { useState, useEffect, useRef } from \"react\";\n\nimport {\n  AiOutlineUnorderedList,\n  AiOutlineEdit,\n  AiOutlineUsergroupDelete,\n  AiOutlineEye,\n  AiOutlineEyeInvisible,\n} from \"react-icons/ai\";\nimport {\n  BsThreeDots,\n  BsExclamationSquare,\n  BsQuestionSquare,\n} from \"react-icons/bs\";\nimport { BiUserVoice, BiBlock } from \"react-icons/bi\";\n\nimport { FiUserX, FiUsers, FiUserCheck, FiUserPlus } from \"react-icons/fi\";\nimport { RiMessengerLine } from \"react-icons/ri\";\nimport { IoMdUndo } from \"react-icons/io\";\n\nimport { FcCheckmark, FcCancel } from \"react-icons/fc\";\nimport { setCurrentPersonalUser } from \"../../apollo/user/currentPersonalUser.caches\";\nimport {\n  ACCEPT_REQUEST_TO_ADD_FRIEND,\n  SEND_REQUEST_TO_ADD_FRIEND,\n  REJECT_REQUEST_TO_ADD_FRIEND,\n  CANCEL_REQUEST_TO_ADD_FRIEND,\n \n  REMOVE_FRIEND,\n} from \"../../apollo/contact/contact.types\";\nimport {\n  FOLLOW_USER,\n  UNFOLLOW_USER,\n} from \"../../apollo/user/user.types\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\n\nimport {\n  dialogVar,\n  notificationsVar,\n  latestNotificationVar,\n  userVar,\n  currentPersonalUserVar,\n} from \"../../apollo/cache\";\nimport { useThemeUI } from \"theme-ui\";\nimport {\n  PersonalContactContainer,\n  ResponseRequests,\n  DropdownResponseRequest,\n  Dropdown,\n  DropdownMenu,\n  DropdownItem,\n} from \"./styles/PersonalHeadingContact.styles\";\nimport { setCurrentUser } from \"../../apollo/user/user.caches\";\nimport {\n  setAlertDialog,\n  clearAlertDialog,\n} from \"../../apollo/controls/controls.caches\";\nimport {\n  removeNewNotification,\n  decreaseCountNumberNotificationsUnseen,\n  removeNotificationItemFromNotificationsList,\n  setLatestNotification,\n} from \"../../apollo/notification/notification.caches\";\nconst PersonalContact = ({ user }) => {\n  const [relationship, setRelationship] = useState(\"stranger\");\n  const [openResponse, setOpenResponse] = useState(false);\n  const [openSettings, setOpenSettings] = useState(false);\n  const [openUserInteraction, setOpenUserInteraction] = useState(false);\n  const dialog = useReactiveVar(dialogVar);\n  const notifications = useReactiveVar(notificationsVar);\n  const latestNotification = useReactiveVar(latestNotificationVar);\n  const currentPersonalUser = useReactiveVar(currentPersonalUserVar);\n  //Mutations\n  const [sendRequestToAddFriend] = useMutation(SEND_REQUEST_TO_ADD_FRIEND);\n  const [rejectRequestToAddFriend] = useMutation(REJECT_REQUEST_TO_ADD_FRIEND);\n  const [cancelRequestToAddFriend] = useMutation(CANCEL_REQUEST_TO_ADD_FRIEND);\n  const [followUser] = useMutation(FOLLOW_USER);\n  const [unFollowUser] = useMutation(UNFOLLOW_USER);\n  const [acceptRequestToAddFriend] = useMutation(ACCEPT_REQUEST_TO_ADD_FRIEND);\n  const [removeFriend] = useMutation(REMOVE_FRIEND);\n\n  //color theme\n  const { colorMode } = useThemeUI();\n  //useRef\n  const responseRef = useRef(false);\n  const settingRef = useRef(false);\n  const interactionRef = useRef(false);\n\n  useEffect(() => {\n    if (\n      dialog &&\n      dialog?.data?.type === \"remove contact\" &&\n      dialog?.data?.userId === currentPersonalUser._id &&\n      dialog?.agree\n    ) {\n      removeFriend({ variables: { friendId: currentPersonalUser._id } })\n        .then(({ data }) => {\n          clearAlertDialog();\n          const { sender, receiver, notification } = data.removeFriend;\n          updateMutationOnChange(sender, receiver, notification);\n        })\n        .catch((err) => clearAlertDialog());\n    }\n  }, [dialog, currentPersonalUser]);\n  //function to handle when user click button request\n  const updateMutationOnChange = (sender, receiver, removedNotification) => {\n    if (\n      removedNotification &&\n      user.notifications.includes(removedNotification._id)\n    ) {\n      if (latestNotification?._id === removedNotification._id) {\n        setLatestNotification(null);\n      }     \n      removeNotificationItemFromNotificationsList(removedNotification);\n      setCurrentUser({\n        ...user,\n        notifications: [\n          ...notifications.filter((_id) => _id !== removedNotification._id),\n        ],\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    } else {\n      setCurrentUser({\n        ...user,\n        friends: [...sender.friends],\n        following: [...sender.following],\n        followed: [...sender.followed],\n        sentRequestToAddFriend: [...sender.sentRequestToAddFriend],\n        receivedRequestToAddFriend: [...sender.receivedRequestToAddFriend],\n      });\n    }\n    if (currentPersonalUser?._id === receiver._id) {\n     \n      setCurrentPersonalUser({\n        ...currentPersonalUser,\n        friends: [...receiver.friends],\n        followed: [...receiver.followed],\n        following: [...receiver.following],\n        receivedRequestToAddFriend: [...receiver.receivedRequestToAddFriend],\n        sentRequestToAddFriend: [...receiver.sentRequestToAddFriend],\n      });\n    }\n  };  \n  //track user click event\n  useEffect(() => {\n    function trackUserClickEvent(e) {\n      if (\n        responseRef.current &&\n        !responseRef.current.contains(e.target) &&\n        openResponse\n      ) {\n        setOpenResponse(false);\n      }\n      if (\n        settingRef.current &&\n        !settingRef.current.contains(e.target) &&\n        openSettings\n      ) {\n        setOpenSettings(false);\n      }\n      if (\n        interactionRef.current &&\n        !interactionRef.current.contains(e.target) &&\n        openUserInteraction\n      ) {\n        setOpenUserInteraction(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickEvent);\n    return () => window.removeEventListener(\"click\", trackUserClickEvent);\n  });\n\n  useEffect(() => {\n    if (currentPersonalUser) {\n      if (user && currentPersonalUser._id === user._id) {\n        setRelationship(\"me\");\n      } else if (\n        user &&\n        currentPersonalUser.friends.includes(user._id.toString())\n      ) {\n        setRelationship(\"friend\");\n      } else {\n        setRelationship(\"stranger\");\n      }\n    }\n  }, [user, currentPersonalUser]);\n  // Handle add friend\n  const onSendRequestToAddFriend = (e) => {\n    sendRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const { sender, receiver } = data.sendRequestToAddFriend;\n        updateMutationOnChange(sender, receiver);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle reject to add friend\n  const onRejectRequestToAddFriend = () => {\n    rejectRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    })\n      .then(({ data }) => {\n        const {\n          sender,\n          receiver,\n          notification,\n        } = data.rejectRequestToAddFriend;\n        updateMutationOnChange(receiver, sender, notification);\n        setOpenResponse(false);\n      })\n      .catch((err) => console.log(err));\n  };\n  //Handle cancel request to add friend\n  const onCancelRequestToAddFriend = () => {\n    cancelRequestToAddFriend({\n      variables: { receiverId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver } = data.cancelRequestToAddFriend;\n      updateMutationOnChange(sender, receiver);\n    });\n  };\n  //Handle Follow User\n  const onHandleFollowUser = () => {\n    followUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.followUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle Unfollow user\n  const onHandleUnfollowUser = () => {\n    unFollowUser({ variables: { userId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver } = data.unFollowUser;\n        updateMutationOnChange(sender, receiver);\n      }\n    );\n  };\n  //Handle accept request to add friend\n  const onAcceptRequestToAddFriend = () => {\n    acceptRequestToAddFriend({\n      variables: { senderId: currentPersonalUser._id },\n    }).then(({ data }) => {\n      const { sender, receiver, notification } = data.acceptRequestToAddFriend;\n      updateMutationOnChange(receiver, sender, notification);\n      setOpenResponse(false);\n    });\n  };\n  //handle remove friend\n  const onRemoveFriend = () => {\n    removeFriend({ variables: { friendId: currentPersonalUser._id } }).then(\n      ({ data }) => {\n        const { sender, receiver, notification } = data.removeFriend;\n        updateMutationOnChange(sender, receiver, notification);\n      }\n    );\n  };\n\n  const MyActionsContact = (\n    <>\n      <Button size=\"large\" theme={colorMode} title=\"update personal\">\n        <AiOutlineEdit />\n      </Button>\n      <Button size=\"large\" theme={colorMode} title=\"history actions\">\n        <AiOutlineUnorderedList />\n      </Button>\n    </>\n  );\n  const FriendActionsContact = (\n    <>\n      <Button size=\"large\" theme={colorMode} title=\"chat\">\n        <RiMessengerLine />\n      </Button>\n    </>\n  );\n  const StrangerActionsContact = (\n    <>\n      {user &&\n      currentPersonalUser &&\n      user?.sentRequestToAddFriend?.includes(\n        currentPersonalUser._id.toString()\n      ) ? (\n        <Button\n          size=\"large\"\n          theme={colorMode}\n          title=\"Cancel request\"\n          onClick={onCancelRequestToAddFriend}\n        >\n          <IoMdUndo />\n        </Button>\n      ) : user &&\n        currentPersonalUser &&\n        user?.receivedRequestToAddFriend?.includes(\n          currentPersonalUser._id.toString()\n        ) ? (\n        <ResponseRequests ref={responseRef}>\n          <Button size=\"large\" theme={colorMode} title=\"Response the request\">\n            <BsQuestionSquare\n              onClick={() => setOpenResponse((prevState) => !prevState)}\n            />\n          </Button>\n          <DropdownResponseRequest theme={colorMode} open={openResponse}>\n            <div onClick={onAcceptRequestToAddFriend}>\n              <FcCheckmark /> Accept\n            </div>\n            <div onClick={onRejectRequestToAddFriend}>\n              <FcCancel /> Reject\n            </div>\n          </DropdownResponseRequest>\n        </ResponseRequests>\n      ) : (\n        <Button\n          theme={colorMode}\n          title=\"add friend\"\n          onClick={onSendRequestToAddFriend}\n          size=\"large\"\n        >\n          <FiUserPlus />\n        </Button>\n      )}\n\n      <Button size=\"large\" theme={colorMode} title=\"Chat\">\n        <RiMessengerLine />\n      </Button>\n    </>\n  );\n\n  const onClickRemoveFriend = () => {\n    setAlertDialog({\n      title: `Remove friend`,\n      content: `Are you sure to remove ${currentPersonalUser?.name}`,\n      data: { type: \"remove contact\", userId: currentPersonalUser._id },\n    });\n  };\n\n  const UserInteraction = (\n    <Dropdown ref={interactionRef}>\n      <Button\n        size=\"large\"\n        title={\n          user.friends.includes(currentPersonalUser._id)\n            ? \"Friend\"\n            : user.following.includes(currentPersonalUser._id)\n            ? \"Following\"\n            : \"Follow\"\n        }\n        onClick={() => setOpenUserInteraction((prevState) => !prevState)}\n      >\n        {user.friends.includes(currentPersonalUser._id) ? (\n          <FiUserCheck />\n        ) : user.following.includes(currentPersonalUser._id) ? (\n          <FiUsers />\n        ) : (\n          <AiOutlineEye />\n        )}\n      </Button>\n      {openUserInteraction && (\n        <DropdownMenu>\n          {user.following.includes(currentPersonalUser?._id) ? (\n            <DropdownItem theme={colorMode} onClick={onHandleUnfollowUser}>\n              <span>\n                <AiOutlineEyeInvisible />\n              </span>\n              <span>Unfollow</span>\n            </DropdownItem>\n          ) : (\n            <DropdownItem theme={colorMode} onClick={onHandleFollowUser}>\n              <span>\n                <AiOutlineEye />\n              </span>\n              <span>Follow</span>\n            </DropdownItem>\n          )}\n\n          {user.friends.includes(currentPersonalUser?._id) && (\n            <DropdownItem theme={colorMode} onClick={onClickRemoveFriend}>\n              <span>\n                <FiUserX />\n              </span>\n              <span>Remove Friend</span>\n            </DropdownItem>\n          )}\n        </DropdownMenu>\n      )}\n    </Dropdown>\n  );\n\n  const UserSettings = (\n    <Dropdown ref={settingRef}>\n      <Button\n        size=\"large\"\n        title=\"Setting\"\n        onClick={() => setOpenSettings((prevState) => !prevState)}\n      >\n        <BsThreeDots />\n      </Button>\n      {openSettings ? (\n        <DropdownMenu theme={colorMode}>\n          <DropdownItem theme={colorMode}>\n            <span>\n              <BsExclamationSquare />\n            </span>\n            <span>Find Report</span>\n          </DropdownItem>\n          <DropdownItem theme={colorMode}>\n            <span>\n              <BiBlock />\n            </span>\n            <span>Block</span>\n          </DropdownItem>\n        </DropdownMenu>\n      ) : null}\n    </Dropdown>\n  );\n\n  return (\n    <PersonalContactContainer>\n      {relationship === \"me\"\n        ? MyActionsContact\n        : relationship === \"friend\"\n        ? FriendActionsContact\n        : StrangerActionsContact}\n      {UserInteraction}\n      {UserSettings}\n    </PersonalContactContainer>\n  );\n};\n\nexport default PersonalContact;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeading.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/apollo/notification/notification.queries.js",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorBody.jsx",["874","875","876","877","878"],"import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport {\n  Wrapper,\n  DraftEditor,\n  Toolbar,\n  Label,\n  CardPreview,\n} from \"./styles/PostEditorBody.styles\";\nimport { ReactTinyLink } from \"react-tiny-link\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport useDraftEditorPlugin from \"../useDraftEditorPlugin\";\nimport { IoIosImage } from \"react-icons/io\";\nimport generateBase64Image from \"../../../utils/generateBase64Image\";\nimport ImagesCarousel from \"../../UI/ImagesCarousel\";\nimport { useQuery } from \"@apollo/client\";\nimport { SEARCH_FRIENDS } from \"../../../apollo/user/user.types\";\nimport useLanguage from \"../../Global/useLanguage\";\nconst PostEditorBody = ({\n  editorState,\n  setEditorState,\n  images,\n  setImages,\n  isEdited,\n  postEdited,  \n}) => {\n  const [urlPreview, setUrlPreview] = useState(null);\n  const editorRef = useRef(null);\n  const [suggestions, setSuggestions] = useState([]);\n  const [openMention, setOpenMention] = useState(true);\n  const {\n    refetch: searchFriends,\n    loading: searchFriendsLoading,\n  } = useQuery(SEARCH_FRIENDS, { fetchPolicy: \"network-only\", skip: true });\n  const { i18n, lang } = useLanguage();\n  const { postPlaceholder } = i18n.store.data[lang].translation.post;\n\n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,\n  } = useDraftEditorPlugin();\n\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n\n  useEffect(() => {\n    let elementId;\n    if (isEdited && postEdited) {\n      elementId = `edited-post-body-${postEdited._id}`;\n    } else {\n      elementId = \"post-editor-body\";\n    }\n    let urlLength;\n\n    urlLength = document\n      .getElementById(elementId)\n      .querySelectorAll(\"[aria-label=link]\").length;\n\n    if (urlLength) {\n      const url = document\n        .getElementById(elementId)\n        .querySelectorAll(\"[aria-label=link]\")\n        [urlLength - 1].getAttribute(\"href\");\n      setUrlPreview(url);\n    } else {\n      setUrlPreview(null);\n    }\n  }, [editorState]);\n\n  const onChangeImages = async (e) => {\n    const length = e.target.files.length;\n    const fileData = e.target.files;\n    const matches = [\"image/png\", \"image/gif\", \"image/jpg\", \"image/jpeg\"];\n    let listImages = [];\n    for (let i = 0; i < length; i++) {\n      if (!matches.includes(fileData[i].type)) {\n        alert(\"invalid image\");\n        return;\n      }\n      listImages.push(fileData[i]);\n    }\n\n    let base64Images = [];\n    for (let image of listImages) {\n      const base64ImageItem = await generateBase64Image(image);\n      base64Images = [...base64Images, { ...base64ImageItem }];\n    }\n    if (base64Images.length) {\n      setImages([...base64Images]);\n    }\n  };\n\n  return (\n    <>\n      <DraftEditor\n        onClick={() => editorRef.current?.focus()}\n        id={isEdited ? `edited-post-body-${postEdited._id}` : \"post-editor-body\"}\n        style={{ alignItems: \"flex-start\" }}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          ref={editorRef}\n          tabIndex={0}\n          placeholder={postPlaceholder}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </DraftEditor>\n      {urlPreview && (\n        <CardPreview>\n          <ReactTinyLink\n            cardSize=\"large\"\n            showGraphic={true}\n            maxLine={3}\n            minLine={1}\n            url={urlPreview}\n            proxyUrl=\"https://cors-anywhere.herokuapp.com\"\n          />\n        </CardPreview>\n      )}\n      {images.length ? <ImagesCarousel images={images} /> : null}\n      <Toolbar>\n        <EmojiSelect />\n        <Label htmlFor=\"post-images\" name=\"post-images\">\n          <IoIosImage />\n          <input\n            type=\"file\"\n            multiple={true}\n            name=\"post-images\"\n            id=\"post-images\"\n            onChange={onChangeImages}\n          />\n        </Label>\n      </Toolbar>\n    </>\n  );\n};\n\nexport default React.memo(PostEditorBody);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditor.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/PostEditorHeader.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostCard.jsx",["879"],"import React, { useState, useEffect } from \"react\";\nimport { Wrapper, FetchMoreLink } from \"./styles/PostCard.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport PostCardHeader from \"./PostCardHeader\";\nimport PostCardBody from \"./PostCardBody\";\nimport PostCardFooter from \"./PostCardFooter\";\nimport Comments from \"./Comments\";\nimport { FETCH_COMMENTS } from \"../../apollo/post/post.queries\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { userVar } from \"../../apollo/cache\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport EditPostDialog from \"./EditPostDialog\";\nimport { addCommentsToPost } from \"../../apollo/post/post.caches\";\nimport { addCommentsToPostInPersonalUser } from \"../../apollo/post/post.caches\";\n\nconst PostCard = ({ post }) => {\n  const { colorMode } = useThemeUI();\n  const user = useReactiveVar(userVar);\n  const { refetch: fetchComments } = useQuery(FETCH_COMMENTS, {\n    fetchPolicy: \"cache-and-network\",\n    skip: true,\n  });\n  const [loading, setLoading] = useState(false);\n  const { i18n, lang } = useLanguage();\n\n  const { fetchMoreComments } = i18n.store.data[lang].translation.comment;\n  \n  //for edit\n  const [isEdited, setIsEdited] = useState(false);\n  const [editedEditorState, setEditedEditorState] = useState(\n    EditorState.createEmpty()\n  );  \n  const onFetchComments = () => {\n    setLoading(true);    \n    fetchComments({ postId: post._id }).then(({ data }) => {      \n      if (data.fetchComments) {        \n        addCommentsToPost(post._id, data.fetchComments);\n        addCommentsToPostInPersonalUser(post._id, data.fetchComments);\n      }\n      setLoading(false);\n    });\n  };\n\n  const onFetchMoreComments = () => {\n    setLoading(true);\n    const skip = post.commentsData.length;\n    fetchComments({ postId: post._id, skip }).then(({ data }) => {      \n      if (data.fetchComments) {\n        addCommentsToPost(post._id, data.fetchComments);\n        addCommentsToPostInPersonalUser(post._id, data.fetchComments);\n      }\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    if (isEdited) {\n      setEditedEditorState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(post.rawText)))\n      );\n    }\n  }, [isEdited]);\n  return (\n    <Wrapper theme={colorMode}>\n      <EditPostDialog\n        open={isEdited}\n        setOpen={setIsEdited}\n        editedEditorState={editedEditorState}\n        post={post}\n      />\n      <PostCardHeader post={post} user={user} setIsEdited={setIsEdited} />\n      <PostCardBody post={post} />\n      <PostCardFooter post={post} user={user} fetchComments={onFetchComments} />\n      {loading && <div>Loading...</div>}\n      {post.commentsData && <Comments comments={post.commentsData} />}\n      {post.commentsData?.length < post.comments.length && (\n        <FetchMoreLink onClick={onFetchMoreComments}>\n          {fetchMoreComments}\n        </FetchMoreLink>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(PostCard);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/Sidebar.styles.jsx",["880"],"import styled, {css} from 'styled-components'\nimport {Link} from \"react-router-dom\"\n\nexport const FriendsBoardWrapper = styled.div`\n  position : fixed; \n  top : 60px;\n  right: 0 ;\n  height: calc(100% - 60px);    \n  width : 300px;  \n  overflow: auto;\n  transition : var(--mainTransition);\n  z-index : ${({show}) => show ? 2 : -1};\n`\n\nexport const FriendsListWrapper = styled.div`\n  height: auto;\n  min-height: 95vh;\n  width :100%;  \n  border-radius : 6px;\n  box-shadow : var(--mediumShadow);\n  transition : var(--mainTransition);\n  border-left: 1px solid ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};\n  background-color: ${({theme}) => theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  position : relative;\n  ${({show}) => show ? css`\n    transform: translateX(0);\n  ` : css`\n    transform : translateX(100%);\n  `}  \n`\n\nexport const TitleContacts = styled.div`\n  display : flex;\n  justify-content : space-between;\n  align-items : center;\n  padding : 1rem;  \n`\n\nexport const FriendsListSearch = styled.div`\n  flex: ${({show}) => show ? 1 : \"unset\"};\n  display : flex;\n  justify-content : space-between;\n  position : relative;\n  transition : var(--secondTransition);\n  background-color : ${({theme, show}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n  border-radius : 3rem;  \n  overflow : hidden;  \n  width : ${({show}) => show ? \"90%\" : \"2rem\"};\n  transition-delay : width 0.15s;\n  input{\n    flex:  1;\n    display : ${({show}) => show ? \"block\" : \"none\"};\n    width : ${({show}) => show ? \"calc(100% - 2rem)\" : 0};    \n    padding : 0 0.7rem;  \n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--color-background-dark)\" : \"var(--color-background-default)\"};\n    outline : none ; \n    border: ${({theme}) => theme === \"dark\" ? \"var(--color-border-dark)\" : \"var(--color-border-default)\"};    \n    font-size : 1rem;\n    color :  ${({theme}) => theme === \"dark\" ? \"var(--color-text-dark)\" : \"var(--color-text-default)\"};\n  }\n  \n  button{      \n    outline : none ; \n    border: none ;\n    text-align : center;\n    width : 2rem;\n    height:  2rem;\n    background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray-dark)\" : \"var(--gray-light)\"}; \n    border-radius : 50%;\n    display : flex;\n    align-items: center;\n    justify-content : center;\n    cursor : pointer;\n    &:hover{\n      background-color : ${({theme}) => theme === \"dark\" ? \"var(--gray)\" : \"var(--gray-deep)\"}; \n    }\n  }\n  \n`\n\nexport const FriendsListTitle = styled.h4`\n  font-size : 1.1rem;\n  width : ${({hide})  => hide ? \"0\" : \"auto\"};   \n  visibility : ${({hide}) => hide ? \"hidden\" : \"visible\"};\n  transform : ${({hide}) => hide ?  \"translateX(-200%)\" : \"translateX(0)\"};  \n  transition : 0.12s all; \n  transition-delay: 0.05;\n`\n\nexport const ButtonClose = styled.button`\n  position : absolute;\n  top : 50vh;\n  right:  0;\n`\n\nexport const ImageContainer = styled.div`\n\n`","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/FriendsList.jsx",["881"],"import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  FriendsListWrapper,\n  TitleContacts,\n  FriendsListSearch,\n  FriendsListTitle,\n} from \"./Sidebar.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport { userVar, contactVar } from \"../../apollo/cache\";\nimport { useQuery, useReactiveVar } from \"@apollo/client\";\nimport { FETCH_USER_FRIENDS_DATA } from \"../../apollo/contact/contact.types\";\nimport { pushFriendsListToContact } from \"../../apollo/contact/contact.caches\";\nimport FriendItem from \"./FriendItem\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { FaSearch } from \"react-icons/fa\";\n\nconst FriendsList = ({ show }) => {\n  const { colorMode } = useThemeUI();\n  const [openSearch, setOpenSearch] = useState(false);\n  const user = useReactiveVar(userVar);\n  const contact = useReactiveVar(contactVar);\n  const inputRef = useRef(null);\n  const { i18n, lang } = useLanguage();\n  const [loading, setLoading] = useState(false);\n  const [fetched, setFetched] = useState(false);\n  const { refetch: fetchUserFriends } = useQuery(FETCH_USER_FRIENDS_DATA, {\n    fetchPolicy: \"no-cache\",\n    notifyOnNetworkStatusChange: true,\n    skip: true,\n  });\n\n  useEffect(() => {\n    let _isMounted = true;\n    if (!contact.friends.length && !fetched && show) {\n      setLoading(true);\n      fetchUserFriends().then(({ data }) => {\n        if (data && _isMounted) {\n          pushFriendsListToContact(data.fetchFriends)\n          setLoading(false);\n          setFetched(true);\n        }\n      });\n    }\n    return () => (_isMounted = false);\n  }, [fetchUserFriends, contact, fetched, show]);\n\n  useEffect(() => {\n    if (openSearch) {\n      inputRef.current.focus();\n    }\n  }, [openSearch]);\n  const onClickSearchButton = () => {\n    inputRef.current.focus();\n    setOpenSearch(true);\n  };\n\n  console.log(contact)\n  return (\n    <Scrollbars\n      autoHide\n      autoHideTimeout={1000}\n      autoHideDuration={200}\n      autoHeightMin={0}\n      autoHeightMax={200}\n    >\n      <FriendsListWrapper show={show} theme={colorMode}>\n        <TitleContacts>\n          <FriendsListTitle hide={openSearch}>\n            {i18n.store.data[lang].translation.contacts.contactsList}\n          </FriendsListTitle>\n          <FriendsListSearch show={openSearch} theme={colorMode}>\n            <input\n              ref={inputRef}\n              type=\"text\"\n              placeholder={i18n.store.data[lang].translation.controls.search}\n              onBlur={() => setOpenSearch(false)}\n            />\n            <button onClick={onClickSearchButton}>\n              <FaSearch />\n            </button>\n          </FriendsListSearch>\n        </TitleContacts>\n        {loading && <div>Loading Friends</div>}\n        {contact.friends &&\n          contact.friends.map((friend) => (\n            <FriendItem key={friend._id} data={friend} />\n          ))}\n      </FriendsListWrapper>\n    </Scrollbars>\n  );\n};\n\nexport default FriendsList;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Card/CardUtility.jsx",["882","883"],"import React, { useState, useEffect } from \"react\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { useThemeUI } from \"theme-ui\";\nimport styled from \"styled-components\";\nimport ButtonLogin from \"../Controls/ButtonLogin\"\nimport ButtonSignUp from \"../Controls/ButtonSignUp\"\nimport {useLocation} from \"react-router-dom\"\nconst CardUtility = () => {\n  const [welcome, setWelcome] = useState(\"\");\n  const [introduce, setIntroduce] = useState(\"\");\n  const [askLogin, setAskLogin] = useState(\"\");\n  const { colorMode } = useThemeUI();\n  const { lang, i18n } = useLanguage();\n  const {pathname} = useLocation()\n \n  useEffect(() => {\n    setWelcome(i18n.store.data[lang].translation.greeting.welcome);\n    setIntroduce(i18n.store.data[lang].translation.greeting.introduce);\n    setAskLogin(i18n.store.data[lang].translation.greeting.askLogin);\n  }, [lang]);\n\n  return <CardWrapper theme={colorMode}>\n    <Welcome>{welcome}</Welcome>\n    <div>{introduce}</div>   \n    <div className=\"auth\">\n      <ButtonLogin to=\"/auth\" from={pathname}>Login</ButtonLogin>\n      <ButtonSignUp to=\"/auth/signup\" from={pathname}>SignUp</ButtonSignUp>\n    </div>\n  </CardWrapper>;\n};\n\nconst CardWrapper = styled.aside`\n  background-color: ${({ theme }) =>\n    theme === \"dark\" ? \"var(--color-card-dark)\" : \"var(--color-card-default)\"};\n  text-align: center;\n  border-radius: 0.7rem;\n  overflow: hidden;\n  padding: 1.5rem;\n  .auth{\n    &> *{\n      margin : 1rem 0;\n    }\n  }\n`;\n\nconst Welcome = styled.h4`\n  font-size : 1.1em;\n  font-weight : 600;\n`\n\n\n\nexport default CardUtility;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Card/CardProfile.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Chat/styles/Bubble.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/styles/IntroductionBox.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomButton.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Custom/CustomInput.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Personal/styles/PersonalHeadingContact.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorBody.styles.jsx",["884"],"import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nexport const Wrapper = styled.div`\n\n`;\n\nexport const DraftEditor = styled.div`\n  flex:  1; \n  cursor: text !important;\n  .DraftEditor-root {\n    width: 100% !important;\n    max-height: 8rem;\n    min-height: 4rem;\n    padding: 0.5rem 1rem;\n    overflow : auto;\n    -ms-overflow-style: none;  /* IE and Edge */\n    scrollbar-width: none;\n    &::-webkit-scrollbar{\n      display : none;\n    }\n  }\n`;\n\nexport const Toolbar = styled.div`\n  display: flex;\n  padding: 0.5rem 0.75rem;\n`;\n\nexport const Label = styled.label`\n  font-size: 1.4rem;\n  display: flex;\n  align-items: center;\n  color: ${({ name }) => (name === \"post-images\" ? \"var(--cyan-1)\" : \"orange\")};\n  &:hover {\n    color: ${({ name }) =>\n      name === \"post-images\" ? \"var(--cyan-2)\" : \"orange\"};\n  }\n  input {\n    display: none;\n  }\n  margin: 0 0.5rem;\n  cursor: pointer;\n`;\n\nexport const CardPreview = styled.div`\n  margin: 1rem auto;\n  width : 100%;\n  & *{\n    width : 100%;\n    max-width: unset;  \n  }\n`;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/useDraftEditorPlugin.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/ImagesCarousel.jsx",["885"],"import React, {useState} from \"react\";\nimport Slider from \"react-slick\";\nimport LightBox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport {ImageContainer, NextArrow, PrevArrow} from \"./styles/ImagesCarousel.styles\"\n\nfunction CustomNextArrow(props) {  \n  return (\n    <NextArrow {...props}/>\n  );\n}\n\nfunction CustomPrevArrow(props) {\n  \n  return (\n    <PrevArrow {...props}/>  \n  );\n}\n\nconst ImagesCarousel = ({ images }) => {\n  const [openLightBox, setOpenLightBox] = useState(-1);\n  let dragging = false;\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: images.length > 2 ? 2 : images.length,\n    slidesToScroll: images.length > 2 ? 2 : images.length,\n    swipeToSlide: true,\n    lazyLoad: true,\n    beforeChange: () => (dragging = true),\n    afterChange: () => (dragging = false),\n    nextArrow : <CustomNextArrow/>,\n    prevArrow : <CustomPrevArrow/>\n  };\n  if(!images.length) return null\n  return (\n    <>\n      {openLightBox !== -1 && (\n        <LightBox\n          mainSrc={images[openLightBox].src}\n          onCloseRequest={() => setOpenLightBox(-1)}\n        />\n      )}\n      <Slider {...settings}>\n        {images.map((image, idx) => (\n          <ImageContainer key={image.name}>\n            <img\n              src={image.src}\n              alt={image.src}\n              onClick={() => setOpenLightBox(idx)}\n            />\n          </ImageContainer>\n        ))}\n      </Slider>\n    </>\n  );\n};\n\nexport default ImagesCarousel;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostEditor/styles/PostEditorHeader.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostCardBody.jsx",["886","887","888","889"],"import React, { useState, useMemo, useEffect } from \"react\";\nimport { ReactTinyLink } from \"react-tiny-link\";\nimport ImagesCarousel from \"../UI/ImagesCarousel\";\nimport LazyLoad from \"react-lazyload\";\nimport {\n  Wrapper,\n  DraftEditor,\n  HashtagLink,\n  CardPreview,\n} from \"./styles/PostCardBody.styles\";\nconst PostCardBody = ({ post }) => {  \n  const [urlPreview, setUrlPreview] = useState(null);\n  const images = post.files.length\n    ? post.files.map((file) => ({\n        src: file.data,\n        name: file.filename,\n      }))\n    : [];\n  useEffect(() => {\n    const DOMTarget = document.querySelector(`[data-target=post-${post._id}]`);   \n    //find Preview URL\n    const urlLength = DOMTarget.querySelectorAll(\"[aria-label=link]\").length;    \n    if (urlLength) {\n      const url = DOMTarget.querySelectorAll(\"[aria-label=link]\")[urlLength - 1].getAttribute(\"href\");\n      setUrlPreview(url);\n    } else {\n      setUrlPreview(null);\n    }\n  }, [])\n  \n  return (\n    <>\n      <DraftEditor data-target={`post-${post._id}`} dangerouslySetInnerHTML={{__html : post.text}}>\n        \n      </DraftEditor>\n      {urlPreview && (\n        <CardPreview>\n          <ReactTinyLink\n            cardSize=\"large\"\n            showGraphic={true}\n            maxLine={3}\n            minLine={1}\n            url={urlPreview}\n            proxyUrl=\"https://cors-anywhere.herokuapp.com\"\n          />\n        </CardPreview>\n      )}\n      {images.length ? (\n        <LazyLoad>\n          <ImagesCarousel images={images} />\n        </LazyLoad>\n      ) : null}\n    </>\n  );\n};\n\nexport default PostCardBody;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostCardHeader.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/PostCardFooter.jsx",["890","891"],"import React, { useState } from \"react\";\nimport {\n  Wrapper,\n  Controls,\n  Button,\n  CounterLike,\n  LikeButton,\n  Comments,\n  UserComment,\n  AvatarContainer,\n  FormComment,\n  PostInfo,\n  CommentCounter,\n} from \"./styles/PostCardFooter.styles\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BiLike } from \"react-icons/bi\";\nimport { useThemeUI } from \"theme-ui\";\nimport { useMutation, useReactiveVar } from \"@apollo/client\";\nimport { userVar } from \"../../apollo/cache\";\nimport { LIKE_POST, REMOVE_LIKE_POST } from \"../../apollo/post/post.types\";\n\nimport LazyLoad from \"react-lazyload\";\nimport {\n  updateLikePost,\n  updateRemoveLikePost,\n} from \"../../apollo/post/post.caches\";\nimport CommentEditor from \"./CommentEditor\";\nconst PostCardFooter = ({ post, fetchComments, user }) => {\n  const { i18n, lang } = useLanguage();\n  const { controls } = i18n.store.data[lang].translation.post;\n  const { colorMode } = useThemeUI();  \n  const [likePost] = useMutation(LIKE_POST);\n  const [removeLikePost] = useMutation(REMOVE_LIKE_POST);\n  const [showCommentEditor, setShowCommentEditor] = useState(false);\n  const onLikePost = () => {\n    likePost({ variables: { postId: post._id } })\n      .then(({ data }) => {\n        if (data.likePost) {\n          updateLikePost(post._id, user._id);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onUnlikePost = () => {\n    removeLikePost({ variables: { postId: post._id } }).then(({ data }) => {\n      if (data.removeLikePost) {\n        updateRemoveLikePost(post._id, user._id);\n      }\n    });\n  };\n\n  const onClickComment = () => {\n    if (!showCommentEditor) {\n      fetchComments();\n      setShowCommentEditor(true);\n    }\n  };\n  const onClickLikePost = () => {\n    if(user){\n      return post.likes.includes(user._id) ? onUnlikePost() : onLikePost()\n    }\n    alert(\"Please login before comment\")    \n  }\n  \n  return (\n    <Wrapper>\n      <Controls theme={colorMode}>\n        {/* Like */}\n        <Button\n          theme={colorMode}\n          liked={post.likes.includes(user?._id)}\n          onClick={onClickLikePost}\n        >\n          <span>{controls.like.icon()}</span>\n          <span>\n            {post.likes.includes(user?._id)\n              ? controls.liked.name\n              : controls.like.name}\n          </span>\n        </Button>\n        {/* Comment */}\n        <Button theme={colorMode} onClick={onClickComment}>\n          <span>{controls.comment.icon()}</span>\n          <span>{controls.comment.name}</span>\n        </Button>\n        {/* Share */}\n        <Button theme={colorMode}>\n          <span>{controls.share.icon()}</span>\n          <span>{controls.share.name}</span>\n        </Button>\n      </Controls>\n      <PostInfo>\n        {post.likes.length ? (\n          <CounterLike>\n            <LikeButton>\n              <BiLike />\n            </LikeButton>\n            <span>{post.likes.length}</span>\n          </CounterLike>\n        ) : null}\n        {post.comments.length + post.responses.length > 0 ? (\n          <CommentCounter onClick={onClickComment}>\n            {controls.countComments(\n              post.comments.length + post.responses.length\n            )}\n          </CommentCounter>\n        ) : null}\n      </PostInfo>\n\n      {showCommentEditor && user && (\n        <>\n          <Comments>\n            <UserComment>\n              <AvatarContainer>\n                <LazyLoad>\n                  <img src={user.avatar} alt={user.avatar} />\n                </LazyLoad>\n              </AvatarContainer>\n              <FormComment theme={colorMode}>\n                <CommentEditor post={post} />\n              </FormComment>\n            </UserComment>\n          </Comments>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(PostCardFooter);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/Comments.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/EditPostDialog.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/FriendItem.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/PostCard.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/useDraftEditorPlugin.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/styles/ImagesCarousel.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/PostCardHeader.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/PostCardBody.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/UI/styles/Dropdown.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/PostCardFooter.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/Comments.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/CommentEditor.jsx",["892","893","894","895","896"],"import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport draftToHtml from \"draftjs-to-html\";\nimport _ from \"lodash\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { SEARCH_FRIENDS } from \"../../apollo/user/user.types\";\nimport {\n  Wrapper,\n} from \"./PostEditor/styles/PostEditorBody.styles\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  CommentInput,\n  CommentControls,\n} from \"./styles/CommentEditor.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { CREATE_COMMENT } from \"../../apollo/post/post.mutations\";\nimport {addCommentToPost} from \"../../apollo/post/post.caches\"\nimport useDraftEditorPlugin from \"./useDraftEditorPlugin\"\nconst CommentEditor = ({ post }) => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [openMention, setOpenMention] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const {\n    refetch: searchFriends,\n    loading: searchFriendsLoading,\n  } = useQuery(SEARCH_FRIENDS, { fetchPolicy: \"network-only\", skip: true });\n  const [createComment] = useMutation(CREATE_COMMENT);\n  const { colorMode } = useThemeUI();\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const [showControls, setShowControls] = useState(false);\n  const controlsRef = useRef(null);\n  const commentRef = useRef(null);\n  const editorRef = useRef(null);\n  const { i18n, lang } = useLanguage();\n  const { commentInputPlaceholder } = i18n.store.data[lang].translation.comment;\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n  \n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,} = useDraftEditorPlugin();\n\n  useEffect(() => {\n    function trackUserClickCommentControls(e) {\n      if (\n        commentRef.current &&\n        !commentRef.current.contains(e.target) &&\n        showControls\n      ) {\n        setShowControls(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickCommentControls);\n\n    return () =>\n      window.removeEventListener(\"click\", trackUserClickCommentControls);\n  }, [commentRef, showControls]);\n\n  const onSubmitComment = (e) => {\n    if (\n      e.which === 13 &&\n      editorState.getCurrentContent().hasText() &&\n      !openMention && \n      !document.querySelector(`[data-target=comment-input-${post._id}]`).querySelector(\"[role=listbox]\")\n      \n    ) {\n      const rawEditorState = convertToRaw(editorState.getCurrentContent());\n      const rawText = JSON.stringify(rawEditorState);\n      const shortenText = draftToHtml(rawEditorState)\n        .split(\"</p>\")[0]\n        .replace(/<p>|&nbsp;/g, \"\");\n      document\n        .querySelector(`[data-target=comment-input-${post._id}]`)\n        .querySelector(\"[contenteditable=true]\")\n        ?.setAttribute(\"contenteditable\", false);\n      const textData = document.querySelector(\n        `[data-target=comment-input-${post._id}]`\n      ).innerHTML;\n      let mentions = [];\n      if (rawEditorState.entityMap) {\n        Object.values(rawEditorState.entityMap).map(({ data }) => {\n          if (data.mention) {\n            mentions.push({ ...data.mention });\n          }\n        });\n      }\n      mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n        mention._id.toString()\n      );\n      if (textData) {\n        setEditorState(EditorState.createEmpty());\n        createComment({\n          variables: {\n            postId: post._id,\n            text: textData,\n            shortenText,\n            rawText,\n            mentions: mentions,\n          },\n        })\n          .then(({ data }) => {\n            document\n              .querySelector(`[data-target=comment-input-${post._id}]`)\n              .querySelector(\"[contenteditable=false]\")\n              ?.setAttribute(\"contenteditable\", true);\n\n            const { createComment } = data;\n            addCommentToPost(post._id, createComment);\n          })\n          .catch((err) => {\n            document\n              .querySelector(`[data-target=comment-input-${post._id}]`)\n              .querySelector(\"[contenteditable=true]\")\n              ?.setAttribute(\"contenteditable\", true);\n          });\n      }\n    }\n  };\n\n  useEffect(() => {\n    let timer;\n    timer = setTimeout(() => {\n      editorRef.current?.focus();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n  return (\n    <Wrapper ref={commentRef}>\n      <CommentInput\n        theme={colorMode}\n        onClick={() => {\n          editorRef.current?.focus();\n          setShowControls(true);\n        }}\n        onKeyDown={onSubmitComment}\n        data-target={`comment-input-${post._id}`}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          placeholder={commentInputPlaceholder}\n          ref={editorRef}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </CommentInput>\n      <CommentControls\n        ref={controlsRef}\n        theme={colorMode}\n        show={showControls}\n        onClick={() => setShowControls(true)}\n      >\n        <EmojiSelect />\n        {/* <InputImage htmlFor={`comment-image-${post._id}`}>\n          <input type=\"file\" name=\"comment-image\" id={`comment-image-${post._id}`}/>  \n          <BiImageAlt/>\n        </InputImage>         */}\n      </CommentControls>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(CommentEditor);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/EditPostDialog.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/CommentItem.jsx",["897","898","899"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport { Wrapper } from \"./PostEditor/styles/PostEditorBody.styles\";\nimport {\n  UserAvatar,\n  ResponseInput,\n  ResponsesComponent,\n  LoadMoreResponse,\n  CommentResponse,\n} from \"./styles/CommentItem.styles\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport { BsArrowReturnRight } from \"react-icons/bs\";\nimport { Response } from \"./styles/CommentItem.styles\";\nimport ResponseEditor from \"./ResponseEditor\";\nimport { useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { dialogVar } from \"../../apollo/cache\";\nimport {\n  REMOVE_COMMENT,\n  LIKE_COMMENT,\n  REMOVE_LIKE_COMMENT,\n  REMOVE_RESPONSE,\n} from \"../../apollo/post/post.types\";\nimport { FETCH_RESPONSES } from \"../../apollo/post/post.queries\";\nimport Responses from \"./Responses\";\nimport shortid from \"shortid\";\nimport CommentCard from \"./CommentCard\";\nimport {\n  addLikeComment,\n  addResponsesToComment,\n  removeComment as removeCommentFromPostCache,\n  removeLikeComment,\n  removeResponse as removeResponseInCache,\n  addResponsesToCommentInPersonalUser\n} from \"../../apollo/post/post.caches\";\nimport {setAlertDialog} from \"../../apollo/controls/controls.caches\"\nconst CommentItem = ({ comment, user }) => {\n  const { colorMode } = useThemeUI();\n  const { i18n, lang } = useLanguage();\n  const [showResponse, setShowResponse] = useState(false);\n  const [dataResponse, setDataResponse] = useState(\"\");\n  const { controls } = i18n.store.data[lang].translation.comment;\n  const { dialog: dialogAlert } = i18n.store.data[lang].translation;\n  const [focusResponseEditor, setFocusResponseEditor] = useState(false);  \n  const dialog = useReactiveVar(dialogVar);\n  const [likeComment] = useMutation(LIKE_COMMENT);\n  const [RemoveLikeComment] = useMutation(REMOVE_LIKE_COMMENT);\n  const [removeResponse] = useMutation(REMOVE_RESPONSE);\n  const { refetch: fetchResponses } = useQuery(FETCH_RESPONSES, { skip: true });\n  const [response, setResponse] = useState(comment);\n  const onClickRemoveComment = () => {\n    setAlertDialog({\n      agree: false,\n      title: dialogAlert.removeComment.title,\n      content: dialogAlert.removeComment.content,\n      data: { commentId: comment._id, role: \"comment\" },\n    });\n  };\n  const [removeComment] = useMutation(REMOVE_COMMENT);\n\n  useEffect(() => {\n    if (\n      dialog.data?.commentId === comment._id &&\n      dialog.agree &&\n      dialog.data?.role === \"comment\"\n    ) {\n      removeComment({ variables: { commentId: comment._id } }).then(\n        ({ data }) => {\n          removeCommentFromPostCache(comment.post, comment._id);\n        }\n      );\n    } else if (\n      dialog.data?.role === \"response\" &&\n      dialog.data?.response &&\n      dialog.agree\n    ) {\n      removeResponse({\n        variables: { responseId: dialog.data.response._id },\n      }).then(({ data }) => {\n        if (data.removeResponse) {\n          const { post, comment, _id } = dialog.data.response;\n          removeResponseInCache(post, comment, _id);\n        }\n      });\n    }\n  }, [dialog]);\n  const onLikeComent = () => {\n    likeComment({ variables: { commentId: comment._id } })\n      .then(({ data }) => {\n        if (data.likeComment) {\n          addLikeComment(comment.post, comment._id, user._id);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  const onRemoveLikeComment = () => {\n    RemoveLikeComment({ variables: { commentId: comment._id } })\n      .then(({ data }) => {\n        if (data.removeLikeComment) {\n          removeLikeComment(comment.post, comment._id, user._id);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  const onClickResponseComment = useCallback(\n    async (data) => {\n      if (data) {\n        setDataResponse(\n          `{\"blocks\":[{\"key\":\"${shortid.generate()}\",\"text\":\"${\n            data.author.name\n          } \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":${\n            data.author.name.length\n          },\"key\":0}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"mention\",\"mutability\":\"SEGMENTED\",\"data\":{\"mention\":{\"__typename\":\"User\",\"_id\":\"${\n            data.author._id\n          }\",\"name\":\"${data.author.name}\",\"avatar\":\"${\n            data.author.avatar\n          }\",\"slug\":\"${data.author.slug}\"}}}}}`\n        );\n        setResponse(data);\n      }\n\n      if (comment.responses.length && !comment.responsesData?.length) {\n        await onLoadResponses();\n      } else {\n        setShowResponse(true);\n        setFocusResponseEditor(true);\n      }\n    },\n    [comment.responsesData]\n  );\n\n  const onLoadResponses = () => {\n    fetchResponses({ commentId: comment._id, skip: 0, limit: 3 }).then(\n      ({ data }) => {\n        if (data.fetchResponses) {\n          addResponsesToComment(comment.post, comment._id, data.fetchResponses);\n          addResponsesToCommentInPersonalUser(comment.post, comment._id, data.fetchResponses)\n          if (!showResponse) {\n            setShowResponse(true);\n            setFocusResponseEditor(true);\n          }\n        }\n      }\n    );\n  };\n\n  const onLoadMoreResponses = () => {\n    const skip = comment.responsesData?.length || 0;\n    fetchResponses({ commentId: comment._id, skip }).then(({ data }) => {\n      if (data.fetchResponses) {\n        addResponsesToComment(comment.post, comment._id, data.fetchResponses);\n        addResponsesToCommentInPersonalUser(comment.post, comment._id, data.fetchResponses);\n        \n        if (!showResponse) {\n          setShowResponse(true);\n          setFocusResponseEditor(true);\n        }\n      }\n    });\n  };\n  return (\n    <Wrapper>\n      <CommentCard\n        comment={comment}\n        user={user}\n        onLike={onLikeComent}\n        onRemoveLike={onRemoveLikeComment}\n        onClickRemoveComment={onClickRemoveComment}\n        onClickResponse={onClickResponseComment}\n      />\n      <CommentResponse>\n        {comment.responsesData && (\n          <ResponsesComponent>\n            <Responses\n              responses={comment.responsesData}\n              user={user}\n              onClickResponse={onClickResponseComment}\n            />\n          </ResponsesComponent>\n        )}\n\n        {showResponse && (\n          <ResponseInput>\n            <UserAvatar>\n              <LazyLoadImage\n                effect=\"blur\"\n                src={comment.author.avatar}\n                alt={comment.author.avatar}\n              />\n            </UserAvatar>\n            <Response>\n              <ResponseEditor\n                comment={comment}\n                response={response}\n                user={user}\n                dataResponse={dataResponse}\n                focus={focusResponseEditor}\n                removeFocus={() => setFocusResponseEditor(false)}\n              />\n            </Response>\n          </ResponseInput>\n        )}\n        {comment.responsesData &&\n        comment.responsesData.length < comment.responses.length ? (\n          <LoadMoreResponse onClick={onLoadMoreResponses}>\n            {\" \"}\n            <BsArrowReturnRight /> <span>{controls.loadMoreResponses}</span>\n          </LoadMoreResponse>\n        ) : !comment.responsesData && comment.responses.length ? (\n          <LoadMoreResponse onClick={onLoadResponses}>\n            {\" \"}\n            <BsArrowReturnRight /> <span>{controls.loadMoreResponses}</span>\n          </LoadMoreResponse>\n        ) : null}\n      </CommentResponse>\n    </Wrapper>\n  );\n};\n\nexport default CommentItem;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Sidebar/styles/FriendItem.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/CommentEditor.styles.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/CommentItem.styles.jsx",["900"],"import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\nexport const ResponseInput = styled.div`\n  width : 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display :flex;\n`\nexport const ResponsesComponent= styled.div`\n  width : 95%;\n  margin: 0.5rem 0 0.5rem auto;\n  display :block;\n`\n\nexport const Response = styled.div`\n  flex : 1 ;\n  margin-left : 0.5rem;\n`\n\nexport const LoadMoreResponse = styled.span`\n  color : inherit; \n  font-size : 0.88rem;\n  padding: 0.5rem 0.4rem;  \n  cursor : pointer;\n  &:hover{\n    text-decoration : underline; \n  }\n  display : flex;\n  align-items : center;\n  & span{\n    margin-left : 0.1rem;\n  }\n`\nexport const UserAvatar = styled.div`\n  width : 2rem;\n  height : 2rem;\n  img {\n    width : 100%; \n    border-radius : 50%;\n  }\n`\n\nexport const CommentResponse = styled.div`\n  width: 90% ; \n  margin-left:auto;\n  margin-right: 1rem;\n  padding : 0 1rem;\n`","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/Responses.jsx",["901","902","903","904","905"],"import React, { useCallback, useEffect } from \"react\";\nimport CommentCard from \"./CommentCard\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  LIKE_RESPONSE,\n  REMOVE_LIKE_RESPONSE,\n} from \"../../apollo/post/post.types\";\nimport {\n  addLikeResponse,\n  removeLikeResponse as removeLikeResponseInCache,\n} from \"../../apollo/post/post.caches\";\nimport {setAlertDialog} from \"../../apollo/controls/controls.caches\"\nimport useLanguage from \"../Global/useLanguage\";\nconst Responses = ({ responses, user, onClickResponse }) => {\n  const [likeResponse] = useMutation(LIKE_RESPONSE);\n  const [removeLikeResponse] = useMutation(REMOVE_LIKE_RESPONSE);\n  const { i18n, lang } = useLanguage();\n  const { dialog: dialogAlert } = i18n.store.data[lang].translation;  \n\n  const onLikeResponse = useCallback((response) => {\n    likeResponse({ variables: { responseId: response._id } }).then(\n      ({ data }) => {\n        if (data.likeResponse) {\n          addLikeResponse(\n            response.post,\n            response.comment,\n            response._id,\n            user._id\n          );\n        }\n      }\n    );\n  }, []);\n  const onRemoveLikeResponse = useCallback((response) => {\n    removeLikeResponse({ variables: { responseId: response._id } }).then(\n      ({ data }) => {\n        console.log(data);\n        if (data.removeLikeResponse) {\n          removeLikeResponseInCache(\n            response.post,\n            response.comment,\n            response._id,\n            user._id\n          );\n        }\n      }\n    );\n  }, []);\n\n  const onClickRemoveResponse = useCallback((response) => {\n    setAlertDialog({\n      agree: false,\n      title: dialogAlert.removeComment.title,\n      content: dialogAlert.removeComment.content,\n      data: { response, role: \"response\" },\n    });\n  });\n  return responses.map((response) => (\n    <CommentCard\n      key={`response-${response._id}`}\n      comment={response}\n      user={user}\n      onLike={onLikeResponse}\n      onRemoveLike={onRemoveLikeResponse}\n      onClickResponse={onClickResponse}\n      onClickRemoveComment={onClickRemoveResponse}\n    />\n  ));\n};\n\nexport default Responses;\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/ResponseEditor.jsx",["906","907","908","909","910"],"import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\nimport Editor from \"@draft-js-plugins/editor\";\nimport draftToHtml from \"draftjs-to-html\";\nimport _ from \"lodash\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport useDraftEditorPlugin from \"./useDraftEditorPlugin\";\nimport { SEARCH_FRIENDS } from \"../../apollo/user/user.types\";\nimport { Wrapper } from \"./PostEditor/styles/PostEditorBody.styles\";\nimport { CommentInput, CommentControls } from \"./styles/CommentEditor.styles\";\nimport { useThemeUI } from \"theme-ui\";\nimport useLanguage from \"../Global/useLanguage\";\nimport {CREATE_RESPONSE} from \"../../apollo/post/post.types\";\nimport {addNewResponseToComment} from \"../../apollo/post/post.caches\"\nconst CommentEditor = ({\n  comment,\n  response,\n  user,\n  dataResponse,\n  focus,\n  removeFocus,\n}) => {\n  const [editorState, setEditorState] = useState(() =>\n    comment.author._id === user._id || !dataResponse\n      ? EditorState.createEmpty()\n      : EditorState.createWithContent(convertFromRaw(JSON.parse(dataResponse)))\n  );  \n\n  useEffect(() => {\n    let timer;\n    if (focus) {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        const rawData = convertToRaw(editorState.getCurrentContent());\n        if (!dataResponse) return;\n        const parseDataResponse = JSON.parse(dataResponse);\n        if (\n          rawData.blocks[0].text.indexOf(parseDataResponse.blocks[0].text) ===\n            -1 &&\n          rawData.blocks[0].text\n            .toLowerCase()\n            .indexOf(user.name.toLowerCase()) === -1 &&\n          response.author._id !== user._id\n        ) {\n          parseDataResponse.blocks[0] = {\n            ...parseDataResponse.blocks[0],\n            text: `${parseDataResponse.blocks[0].text} ${rawData.blocks[0].text}`,\n          };\n          rawData.blocks = [\n            { ...parseDataResponse.blocks[0] },\n            ...rawData.blocks.filter((_, idx) => idx !== 0),\n          ];\n          let entityIndex = Object.keys(rawData.entityMap).length;\n          rawData.entityMap[entityIndex] = {\n            ...parseDataResponse.entityMap[0],\n          };\n          setEditorState(\n            EditorState.createWithContent(convertFromRaw(rawData))\n          );\n        }\n      }, 66);\n    }\n  }, [focus, editorState, response, dataResponse]);\n\n  const [openMention, setOpenMention] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const { refetch: searchFriends } = useQuery(SEARCH_FRIENDS, {\n    fetchPolicy: \"network-only\",\n    skip: true,\n  });\n  const [createResponse] = useMutation(CREATE_RESPONSE);  \n  const { colorMode } = useThemeUI();\n  const onOpenChange = useCallback((_open) => setOpenMention(_open), []);\n  const [showControls, setShowControls] = useState(false);\n  const controlsRef = useRef(null);\n  const responseRef = useRef(null);\n  const editorRef = useRef(null);\n  const { i18n, lang } = useLanguage();\n  const { commentInputPlaceholder } = i18n.store.data[lang].translation.comment;\n  const onSearchChange = useCallback(({ value }) => {\n    if (value) {\n      searchFriends({ search: value }).then(({ data }) => {\n        const { searchFriends } = data;\n        setSuggestions([...searchFriends]);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, []);\n  const {\n    plugins,\n    MentionSuggestions,\n    EmojiSelect,\n    EmojiSuggestions,\n  } = useDraftEditorPlugin();\n\n  useEffect(() => {\n    let timer;\n    if (focus) {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        editorRef.current.focus();\n        removeFocus();\n      }, 66);\n    }\n    return () => clearTimeout(timer);\n  }, [focus]);\n\n  useEffect(() => {\n    function trackUserClickCommentControls(e) {\n      if (\n        responseRef.current &&\n        !responseRef.current.contains(e.target) &&\n        showControls\n      ) {\n        setShowControls(false);\n      }\n    }\n    window.addEventListener(\"click\", trackUserClickCommentControls);\n\n    return () =>\n      window.removeEventListener(\"click\", trackUserClickCommentControls);\n  }, [responseRef, showControls]);\n\n  const onSubmitComment = (e) => {\n    if (\n      e.which === 13 &&\n      !openMention &&\n      !document\n        .querySelector(`[data-target=response-input-${comment._id}]`)\n        ?.getElementsByClassName(`esyutjr`)?.length\n    ) {\n      if (e.shiftKey) {\n        return;\n      }\n      let rawEditorState = convertToRaw(editorState.getCurrentContent());\n      const filterBlockEmpty = rawEditorState.blocks.filter(\n        (block) => block.text\n      );\n      rawEditorState = { ...rawEditorState, blocks: [...filterBlockEmpty] };\n\n      const rawText = JSON.stringify(rawEditorState);\n      const shortenText = draftToHtml(rawEditorState)\n        .split(\"</p>\")[0]\n        .replace(/<p>|&nbsp;/g, \"\");\n      document\n        .querySelector(`[data-target=response-input-${comment._id}]`)\n        .querySelector(\"[contenteditable=true]\")\n        ?.setAttribute(\"contenteditable\", false);\n      const textData = document.querySelector(\n        `[data-target=response-input-${comment._id}]`\n      ).innerHTML;\n\n      let mentions = [];\n      if (rawEditorState.entityMap) {\n        Object.values(rawEditorState.entityMap).map(({ data }) => {\n          if (data.mention) {\n            mentions.push({ ...data.mention });\n          }\n        });\n      }\n      mentions = _.unionBy(mentions, \"_id\").map((mention) =>\n        mention._id.toString()\n      );\n\n      if (rawEditorState.blocks?.length) {\n        setEditorState(EditorState.createEmpty());\n        createResponse({\n          variables: {\n            commentId: comment._id,\n            text: textData,\n            shortenText,\n            rawText,\n            mentions,\n          },\n        })\n          .then(({ data }) => {\n            document\n              .querySelector(`[data-target=response-input-${comment._id}]`)\n              .querySelector(\"[contenteditable=false]\")\n              ?.setAttribute(\"contenteditable\", true);\n\n            const { createResponse } = data;\n            addNewResponseToComment(comment.post, comment._id, createResponse);\n          })\n          .catch((err) => {\n            document\n              .querySelector(`[data-target=response-input-${comment._id}]`)\n              .querySelector(\"[contenteditable=true]\")\n              ?.setAttribute(\"contenteditable\", true);\n          });\n      }\n    }\n  };\n\n  return (\n    <Wrapper ref={responseRef}>\n      <CommentInput\n        theme={colorMode}\n        onClick={() => {\n          editorRef.current?.focus();\n          setShowControls(true);\n        }}\n        onKeyDown={onSubmitComment}\n        data-target={`response-input-${comment._id}`}\n      >\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          plugins={plugins}\n          placeholder={commentInputPlaceholder}\n          ref={editorRef}\n        />\n        <MentionSuggestions\n          open={openMention}\n          onOpenChange={onOpenChange}\n          onSearchChange={onSearchChange}\n          suggestions={suggestions}\n        />\n        <EmojiSuggestions />\n      </CommentInput>\n      <CommentControls\n        ref={controlsRef}\n        theme={colorMode}\n        show={showControls}\n        onClick={() => setShowControls(true)}\n      >\n        <EmojiSelect />\n      </CommentControls>\n    </Wrapper>\n  );\n};\n\nexport default React.memo(CommentEditor);\n","/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/CommentCard.jsx",[],"/home/mvt/Desktop/githubs/mern-stack-social-media/frontend/src/components/Post/styles/CommentCard.styles.jsx",[],{"ruleId":"911","replacedBy":"912"},{"ruleId":"913","replacedBy":"914"},{"ruleId":"915","severity":1,"message":"916","line":13,"column":12,"nodeType":"917","endLine":13,"endColumn":70},{"ruleId":"918","severity":1,"message":"919","line":47,"column":6,"nodeType":"920","endLine":47,"endColumn":28,"suggestions":"921"},{"ruleId":"918","severity":1,"message":"919","line":82,"column":6,"nodeType":"920","endLine":82,"endColumn":44,"suggestions":"922"},{"ruleId":"918","severity":1,"message":"923","line":19,"column":6,"nodeType":"920","endLine":19,"endColumn":37,"suggestions":"924"},{"ruleId":"918","severity":1,"message":"925","line":25,"column":5,"nodeType":"920","endLine":25,"endColumn":11,"suggestions":"926"},{"ruleId":"918","severity":1,"message":"927","line":48,"column":6,"nodeType":"920","endLine":48,"endColumn":79,"suggestions":"928"},{"ruleId":"918","severity":1,"message":"929","line":48,"column":34,"nodeType":"930","endLine":48,"endColumn":78},{"ruleId":"931","severity":1,"message":"932","line":1,"column":34,"nodeType":"933","messageId":"934","endLine":1,"endColumn":42},{"ruleId":"918","severity":1,"message":"935","line":90,"column":6,"nodeType":"920","endLine":90,"endColumn":29,"suggestions":"936"},{"ruleId":"931","severity":1,"message":"937","line":30,"column":10,"nodeType":"933","messageId":"934","endLine":30,"endColumn":21},{"ruleId":"931","severity":1,"message":"938","line":30,"column":23,"nodeType":"933","messageId":"934","endLine":30,"endColumn":37},{"ruleId":"918","severity":1,"message":"939","line":65,"column":6,"nodeType":"920","endLine":65,"endColumn":33,"suggestions":"940"},{"ruleId":"918","severity":1,"message":"941","line":92,"column":5,"nodeType":"920","endLine":92,"endColumn":58,"suggestions":"942"},{"ruleId":"931","severity":1,"message":"943","line":6,"column":8,"nodeType":"933","messageId":"934","endLine":6,"endColumn":9},{"ruleId":"918","severity":1,"message":"944","line":95,"column":6,"nodeType":"920","endLine":95,"endColumn":56,"suggestions":"945"},{"ruleId":"931","severity":1,"message":"946","line":4,"column":3,"nodeType":"933","messageId":"934","endLine":4,"endColumn":13},{"ruleId":"931","severity":1,"message":"947","line":6,"column":3,"nodeType":"933","messageId":"934","endLine":6,"endColumn":13},{"ruleId":"931","severity":1,"message":"948","line":1,"column":10,"nodeType":"933","messageId":"934","endLine":1,"endColumn":29},{"ruleId":"931","severity":1,"message":"949","line":2,"column":21,"nodeType":"933","messageId":"934","endLine":2,"endColumn":28},{"ruleId":"931","severity":1,"message":"950","line":46,"column":13,"nodeType":"933","messageId":"934","endLine":46,"endColumn":19},{"ruleId":"918","severity":1,"message":"951","line":113,"column":6,"nodeType":"920","endLine":113,"endColumn":47,"suggestions":"952"},{"ruleId":"931","severity":1,"message":"932","line":1,"column":16,"nodeType":"933","messageId":"934","endLine":1,"endColumn":24},{"ruleId":"953","severity":1,"message":"954","line":105,"column":62,"nodeType":"955","messageId":"956","endLine":105,"endColumn":64},{"ruleId":"918","severity":1,"message":"957","line":30,"column":6,"nodeType":"920","endLine":30,"endColumn":12,"suggestions":"958"},{"ruleId":"931","severity":1,"message":"959","line":17,"column":8,"nodeType":"933","messageId":"934","endLine":17,"endColumn":20},{"ruleId":"918","severity":1,"message":"960","line":77,"column":6,"nodeType":"920","endLine":77,"endColumn":40,"suggestions":"961"},{"ruleId":"931","severity":1,"message":"962","line":13,"column":8,"nodeType":"933","messageId":"934","endLine":13,"endColumn":20},{"ruleId":"931","severity":1,"message":"963","line":23,"column":10,"nodeType":"933","messageId":"934","endLine":23,"endColumn":21},{"ruleId":"931","severity":1,"message":"964","line":23,"column":23,"nodeType":"933","messageId":"934","endLine":23,"endColumn":37},{"ruleId":"931","severity":1,"message":"965","line":24,"column":10,"nodeType":"933","messageId":"934","endLine":24,"endColumn":20},{"ruleId":"931","severity":1,"message":"966","line":24,"column":22,"nodeType":"933","messageId":"934","endLine":24,"endColumn":35},{"ruleId":"931","severity":1,"message":"967","line":23,"column":10,"nodeType":"933","messageId":"934","endLine":23,"endColumn":16},{"ruleId":"931","severity":1,"message":"968","line":23,"column":18,"nodeType":"933","messageId":"934","endLine":23,"endColumn":27},{"ruleId":"931","severity":1,"message":"969","line":24,"column":10,"nodeType":"933","messageId":"934","endLine":24,"endColumn":22},{"ruleId":"931","severity":1,"message":"970","line":24,"column":24,"nodeType":"933","messageId":"934","endLine":24,"endColumn":39},{"ruleId":"931","severity":1,"message":"943","line":10,"column":8,"nodeType":"933","messageId":"934","endLine":10,"endColumn":9},{"ruleId":"931","severity":1,"message":"971","line":1,"column":17,"nodeType":"933","messageId":"934","endLine":1,"endColumn":26},{"ruleId":"931","severity":1,"message":"943","line":9,"column":8,"nodeType":"933","messageId":"934","endLine":9,"endColumn":9},{"ruleId":"931","severity":1,"message":"971","line":1,"column":16,"nodeType":"933","messageId":"934","endLine":1,"endColumn":25},{"ruleId":"931","severity":1,"message":"972","line":7,"column":9,"nodeType":"933","messageId":"934","endLine":7,"endColumn":13},{"ruleId":"931","severity":1,"message":"973","line":29,"column":3,"nodeType":"933","messageId":"934","endLine":29,"endColumn":33},{"ruleId":"931","severity":1,"message":"974","line":1,"column":16,"nodeType":"933","messageId":"934","endLine":1,"endColumn":25},{"ruleId":"931","severity":1,"message":"975","line":29,"column":11,"nodeType":"933","messageId":"934","endLine":29,"endColumn":23},{"ruleId":"918","severity":1,"message":"976","line":112,"column":6,"nodeType":"920","endLine":112,"endColumn":52,"suggestions":"977"},{"ruleId":"918","severity":1,"message":"978","line":32,"column":6,"nodeType":"920","endLine":32,"endColumn":23,"suggestions":"979"},{"ruleId":"931","severity":1,"message":"971","line":1,"column":27,"nodeType":"933","messageId":"934","endLine":1,"endColumn":36},{"ruleId":"931","severity":1,"message":"980","line":15,"column":10,"nodeType":"933","messageId":"934","endLine":15,"endColumn":18},{"ruleId":"981","severity":1,"message":"982","line":231,"column":1,"nodeType":"983","endLine":244,"endColumn":2},{"ruleId":"915","severity":1,"message":"916","line":69,"column":16,"nodeType":"917","endLine":69,"endColumn":74},{"ruleId":"918","severity":1,"message":"984","line":81,"column":6,"nodeType":"920","endLine":81,"endColumn":54,"suggestions":"985"},{"ruleId":"918","severity":1,"message":"986","line":83,"column":35,"nodeType":"933","endLine":83,"endColumn":46},{"ruleId":"918","severity":1,"message":"987","line":150,"column":6,"nodeType":"920","endLine":150,"endColumn":66,"suggestions":"988"},{"ruleId":"931","severity":1,"message":"932","line":1,"column":17,"nodeType":"933","messageId":"934","endLine":1,"endColumn":25},{"ruleId":"931","severity":1,"message":"989","line":19,"column":11,"nodeType":"933","messageId":"934","endLine":19,"endColumn":18},{"ruleId":"918","severity":1,"message":"990","line":93,"column":6,"nodeType":"920","endLine":97,"endColumn":4,"suggestions":"991"},{"ruleId":"918","severity":1,"message":"992","line":479,"column":6,"nodeType":"920","endLine":485,"endColumn":4,"suggestions":"993"},{"ruleId":"931","severity":1,"message":"994","line":11,"column":8,"nodeType":"933","messageId":"934","endLine":11,"endColumn":21},{"ruleId":"931","severity":1,"message":"995","line":3,"column":8,"nodeType":"933","messageId":"934","endLine":3,"endColumn":14},{"ruleId":"931","severity":1,"message":"996","line":2,"column":8,"nodeType":"933","messageId":"934","endLine":2,"endColumn":22},{"ruleId":"918","severity":1,"message":"997","line":33,"column":6,"nodeType":"920","endLine":33,"endColumn":8,"suggestions":"998"},{"ruleId":"918","severity":1,"message":"999","line":48,"column":6,"nodeType":"920","endLine":48,"endColumn":69,"suggestions":"1000"},{"ruleId":"918","severity":1,"message":"929","line":48,"column":19,"nodeType":"1001","endLine":48,"endColumn":62},{"ruleId":"918","severity":1,"message":"1002","line":106,"column":6,"nodeType":"920","endLine":106,"endColumn":24,"suggestions":"1003"},{"ruleId":"931","severity":1,"message":"1004","line":47,"column":7,"nodeType":"933","messageId":"934","endLine":47,"endColumn":19},{"ruleId":"931","severity":1,"message":"1005","line":52,"column":7,"nodeType":"933","messageId":"934","endLine":52,"endColumn":19},{"ruleId":"931","severity":1,"message":"1006","line":66,"column":7,"nodeType":"933","messageId":"934","endLine":66,"endColumn":20},{"ruleId":"931","severity":1,"message":"1007","line":1,"column":17,"nodeType":"933","messageId":"934","endLine":1,"endColumn":28},{"ruleId":"931","severity":1,"message":"1008","line":21,"column":8,"nodeType":"933","messageId":"934","endLine":21,"endColumn":16},{"ruleId":"931","severity":1,"message":"1009","line":1,"column":17,"nodeType":"933","messageId":"934","endLine":1,"endColumn":20},{"ruleId":"931","severity":1,"message":"949","line":9,"column":34,"nodeType":"933","messageId":"934","endLine":9,"endColumn":41},{"ruleId":"931","severity":1,"message":"1010","line":42,"column":9,"nodeType":"933","messageId":"934","endLine":42,"endColumn":28},{"ruleId":"931","severity":1,"message":"1011","line":1,"column":8,"nodeType":"933","messageId":"934","endLine":1,"endColumn":13},{"ruleId":"931","severity":1,"message":"1012","line":2,"column":10,"nodeType":"933","messageId":"934","endLine":2,"endColumn":24},{"ruleId":"931","severity":1,"message":"1013","line":2,"column":38,"nodeType":"933","messageId":"934","endLine":2,"endColumn":48},{"ruleId":"931","severity":1,"message":"1014","line":2,"column":50,"nodeType":"933","messageId":"934","endLine":2,"endColumn":63},{"ruleId":"931","severity":1,"message":"1015","line":4,"column":17,"nodeType":"933","messageId":"934","endLine":4,"endColumn":23},{"ruleId":"931","severity":1,"message":"1016","line":4,"column":30,"nodeType":"933","messageId":"934","endLine":4,"endColumn":34},{"ruleId":"911","replacedBy":"1017"},{"ruleId":"913","replacedBy":"1018"},{"ruleId":"931","severity":1,"message":"1019","line":6,"column":3,"nodeType":"933","messageId":"934","endLine":6,"endColumn":27},{"ruleId":"931","severity":1,"message":"1020","line":15,"column":10,"nodeType":"933","messageId":"934","endLine":15,"endColumn":21},{"ruleId":"931","severity":1,"message":"980","line":36,"column":10,"nodeType":"933","messageId":"934","endLine":36,"endColumn":18},{"ruleId":"931","severity":1,"message":"949","line":42,"column":3,"nodeType":"933","messageId":"934","endLine":42,"endColumn":10},{"ruleId":"931","severity":1,"message":"1021","line":60,"column":3,"nodeType":"933","messageId":"934","endLine":60,"endColumn":24},{"ruleId":"931","severity":1,"message":"1022","line":61,"column":3,"nodeType":"933","messageId":"934","endLine":61,"endColumn":41},{"ruleId":"918","severity":1,"message":"1023","line":105,"column":6,"nodeType":"920","endLine":105,"endColumn":35,"suggestions":"1024"},{"ruleId":"931","severity":1,"message":"1025","line":257,"column":9,"nodeType":"933","messageId":"934","endLine":257,"endColumn":23},{"ruleId":"931","severity":1,"message":"1026","line":3,"column":3,"nodeType":"933","messageId":"934","endLine":3,"endColumn":10},{"ruleId":"931","severity":1,"message":"1027","line":9,"column":3,"nodeType":"933","messageId":"934","endLine":9,"endColumn":10},{"ruleId":"931","severity":1,"message":"1028","line":38,"column":14,"nodeType":"933","messageId":"934","endLine":38,"endColumn":34},{"ruleId":"918","severity":1,"message":"1029","line":60,"column":6,"nodeType":"920","endLine":60,"endColumn":8,"suggestions":"1030"},{"ruleId":"918","severity":1,"message":"1031","line":84,"column":6,"nodeType":"920","endLine":84,"endColumn":19,"suggestions":"1032"},{"ruleId":"918","severity":1,"message":"1033","line":63,"column":6,"nodeType":"920","endLine":63,"endColumn":16,"suggestions":"1034"},{"ruleId":"931","severity":1,"message":"1035","line":2,"column":9,"nodeType":"933","messageId":"934","endLine":2,"endColumn":13},{"ruleId":"931","severity":1,"message":"972","line":21,"column":9,"nodeType":"933","messageId":"934","endLine":21,"endColumn":13},{"ruleId":"931","severity":1,"message":"1036","line":11,"column":10,"nodeType":"933","messageId":"934","endLine":11,"endColumn":18},{"ruleId":"918","severity":1,"message":"957","line":20,"column":6,"nodeType":"920","endLine":20,"endColumn":12,"suggestions":"1037"},{"ruleId":"931","severity":1,"message":"1035","line":2,"column":10,"nodeType":"933","messageId":"934","endLine":2,"endColumn":14},{"ruleId":"931","severity":1,"message":"1038","line":32,"column":25,"nodeType":"933","messageId":"934","endLine":32,"endColumn":33},{"ruleId":"931","severity":1,"message":"1026","line":1,"column":27,"nodeType":"933","messageId":"934","endLine":1,"endColumn":34},{"ruleId":"931","severity":1,"message":"1027","line":6,"column":3,"nodeType":"933","messageId":"934","endLine":6,"endColumn":10},{"ruleId":"931","severity":1,"message":"1039","line":8,"column":3,"nodeType":"933","messageId":"934","endLine":8,"endColumn":14},{"ruleId":"918","severity":1,"message":"1040","line":29,"column":6,"nodeType":"920","endLine":29,"endColumn":8,"suggestions":"1041"},{"ruleId":"931","severity":1,"message":"1042","line":18,"column":23,"nodeType":"933","messageId":"934","endLine":18,"endColumn":37},{"ruleId":"931","severity":1,"message":"949","line":19,"column":10,"nodeType":"933","messageId":"934","endLine":19,"endColumn":17},{"ruleId":"931","severity":1,"message":"1026","line":3,"column":3,"nodeType":"933","messageId":"934","endLine":3,"endColumn":10},{"ruleId":"931","severity":1,"message":"1043","line":17,"column":10,"nodeType":"933","messageId":"934","endLine":17,"endColumn":20},{"ruleId":"931","severity":1,"message":"1028","line":35,"column":14,"nodeType":"933","messageId":"934","endLine":35,"endColumn":34},{"ruleId":"918","severity":1,"message":"1029","line":55,"column":6,"nodeType":"920","endLine":55,"endColumn":8,"suggestions":"1044"},{"ruleId":"953","severity":1,"message":"954","line":101,"column":64,"nodeType":"955","messageId":"956","endLine":101,"endColumn":66},{"ruleId":"931","severity":1,"message":"1045","line":38,"column":11,"nodeType":"933","messageId":"934","endLine":38,"endColumn":20},{"ruleId":"918","severity":1,"message":"1046","line":86,"column":6,"nodeType":"920","endLine":86,"endColumn":14,"suggestions":"1047"},{"ruleId":"918","severity":1,"message":"1048","line":129,"column":5,"nodeType":"920","endLine":129,"endColumn":28,"suggestions":"1049"},{"ruleId":"931","severity":1,"message":"1035","line":2,"column":9,"nodeType":"933","messageId":"934","endLine":2,"endColumn":13},{"ruleId":"931","severity":1,"message":"971","line":1,"column":30,"nodeType":"933","messageId":"934","endLine":1,"endColumn":39},{"ruleId":"931","severity":1,"message":"980","line":3,"column":23,"nodeType":"933","messageId":"934","endLine":3,"endColumn":31},{"ruleId":"918","severity":1,"message":"1050","line":33,"column":6,"nodeType":"920","endLine":33,"endColumn":8,"suggestions":"1051"},{"ruleId":"918","severity":1,"message":"1052","line":48,"column":6,"nodeType":"920","endLine":48,"endColumn":8,"suggestions":"1053"},{"ruleId":"918","severity":1,"message":"986","line":50,"column":33,"nodeType":"933","endLine":50,"endColumn":44},{"ruleId":"931","severity":1,"message":"1026","line":3,"column":3,"nodeType":"933","messageId":"934","endLine":3,"endColumn":10},{"ruleId":"918","severity":1,"message":"1054","line":71,"column":6,"nodeType":"920","endLine":71,"endColumn":50,"suggestions":"1055"},{"ruleId":"918","severity":1,"message":"1029","line":97,"column":6,"nodeType":"920","endLine":97,"endColumn":8,"suggestions":"1056"},{"ruleId":"918","severity":1,"message":"1057","line":117,"column":6,"nodeType":"920","endLine":117,"endColumn":13,"suggestions":"1058"},{"ruleId":"953","severity":1,"message":"954","line":166,"column":64,"nodeType":"955","messageId":"956","endLine":166,"endColumn":66},"no-native-reassign",["1059"],"no-negated-in-lhs",["1060"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["1061"],["1062"],"React Hook useEffect has a missing dependency: 'setIsAuth'. Either include it or remove the dependency array. If 'setIsAuth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1063"],"React Hook useEffect has a missing dependency: 'fetchCurrentPersonalUser'. Either include it or remove the dependency array.",["1064"],"React Hook useEffect has missing dependencies: 'fetchNotifications' and 'notifications.length'. Either include them or remove the dependency array.",["1065"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchChatConversations' and 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched'. Either include them or remove the dependency array.",["1066"],"'loadingMore' is assigned a value but never used.","'setLoadingMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchListContact'. Either include it or remove the dependency array.",["1067"],"React Hook useEffect has a missing dependency: 'fetchReceivedRequestsToAddFriend'. Either include it or remove the dependency array.",["1068"],"'_' is defined but never used.","React Hook useEffect has a missing dependency: 'updateSubscriptionOnChange'. Either include it or remove the dependency array.",["1069"],"'friendsVar' is defined but never used.","'contactVar' is defined but never used.","'AiOutlineConsoleSql' is defined but never used.","'userVar' is defined but never used.","'action' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updatePersonalReceiverWhenReceivedNewMessage'. Either include it or remove the dependency array.",["1070"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'i18n.store.data'. Either include it or remove the dependency array.",["1071"],"'CustomButton' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchMorePostsData'. Either include it or remove the dependency array.",["1072"],"'ListContacts' is defined but never used.","'contactData' is assigned a value but never used.","'setContactData' is assigned a value but never used.","'originData' is assigned a value but never used.","'setOriginData' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'originalData' is assigned a value but never used.","'setOriginalData' is assigned a value but never used.","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'receivedRequestsToAddFriendVar' is defined but never used.","'createRef' is defined but never used.","'setShowPopup' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_messagesStorage.length', 'fetchMoreConversations', 'messagesStorage', 'updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched', and 'user._id'. Either include them or remove the dependency array.",["1073"],"React Hook useEffect has missing dependencies: 'data' and 'fetchMoreContacts'. Either include them or remove the dependency array.",["1074"],"'useQuery' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has an unnecessary dependency: 'notificationRef.current'. Either exclude it or remove the dependency array. Mutable values like 'notificationRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1075"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'fetchNotifications'. Either include it or remove the dependency array.",["1076"],"'message' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'setCountNumberNotificationsUnseen'. Either exclude it or remove the dependency array. Outer scope values like 'setCountNumberNotificationsUnseen' aren't valid dependencies because mutating them doesn't re-render the component.",["1077"],"React Hook useEffect has missing dependencies: 'updatedAddNotification' and 'updatedRemoveNotification'. Either include them or remove the dependency array.",["1078"],"'Notifications' is defined but never used.","'styled' is defined but never used.","'InfiniteScroll' is defined but never used.","React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'shouldScrollIntoView'. Either include them or remove the dependency array.",["1079"],"React Hook useEffect has missing dependencies: 'chatBoardBodyRef' and 'messagesStorage'. Either include them or remove the dependency array.",["1080"],"ChainExpression","React Hook useEffect has missing dependencies: 'currentChat._id', 'currentChat.scope', 'fetchMoreMessages', and 'messagesStorage'. Either include them or remove the dependency array.",["1081"],"'ButtonsGroup' is assigned a value but never used.","'ButtonAccept' is assigned a value but never used.","'ButtonDecline' is assigned a value but never used.","'useCallback' is defined but never used.","'LazyLoad' is defined but never used.","'css' is defined but never used.","'currentPersonalUser' is assigned a value but never used.","'React' is defined but never used.","'createMuiTheme' is defined but never used.","'makeStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'purple' is defined but never used.","'blue' is defined but never used.",["1059"],["1060"],"'AiOutlineUsergroupDelete' is defined but never used.","'BiUserVoice' is defined but never used.","'removeNewNotification' is defined but never used.","'decreaseCountNumberNotificationsUnseen' is defined but never used.","React Hook useEffect has missing dependencies: 'removeFriend' and 'updateMutationOnChange'. Either include them or remove the dependency array.",["1082"],"'onRemoveFriend' is assigned a value but never used.","'useMemo' is defined but never used.","'Wrapper' is defined but never used.","'searchFriendsLoading' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'searchFriends'. Either include it or remove the dependency array.",["1083"],"React Hook useEffect has missing dependencies: 'isEdited' and 'postEdited'. Either include them or remove the dependency array.",["1084"],"React Hook useEffect has a missing dependency: 'post.rawText'. Either include it or remove the dependency array. If 'setEditedEditorState' needs the current value of 'post.rawText', you can also switch to useReducer instead of useState and read 'post.rawText' in the reducer.",["1085"],"'Link' is defined but never used.","'askLogin' is assigned a value but never used.",["1086"],"'dragging' is assigned a value but never used.","'HashtagLink' is defined but never used.","React Hook useEffect has a missing dependency: 'post._id'. Either include it or remove the dependency array.",["1087"],"'useReactiveVar' is defined but never used.","'useHistory' is defined but never used.",["1088"],"'colorMode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'comment._id', 'comment.post', 'removeComment', and 'removeResponse'. Either include them or remove the dependency array.",["1089"],"React Hook useCallback has missing dependencies: 'comment.responses.length' and 'onLoadResponses'. Either include them or remove the dependency array.",["1090"],"React Hook useCallback has missing dependencies: 'likeResponse' and 'user._id'. Either include them or remove the dependency array.",["1091"],"React Hook useCallback has missing dependencies: 'removeLikeResponse' and 'user._id'. Either include them or remove the dependency array.",["1092"],"React Hook useEffect has missing dependencies: 'user._id' and 'user.name'. Either include them or remove the dependency array.",["1093"],["1094"],"React Hook useEffect has a missing dependency: 'removeFocus'. Either include it or remove the dependency array. If 'removeFocus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1095"],"no-global-assign","no-unsafe-negation",{"desc":"1096","fix":"1097"},{"desc":"1098","fix":"1099"},{"desc":"1100","fix":"1101"},{"desc":"1102","fix":"1103"},{"desc":"1104","fix":"1105"},{"desc":"1106","fix":"1107"},{"desc":"1108","fix":"1109"},{"desc":"1110","fix":"1111"},{"desc":"1112","fix":"1113"},{"desc":"1114","fix":"1115"},{"desc":"1116","fix":"1117"},{"desc":"1118","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1126","fix":"1127"},{"desc":"1128","fix":"1129"},{"desc":"1130","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1144","fix":"1145"},{"desc":"1116","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1140","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1152","fix":"1153"},{"desc":"1154","fix":"1155"},{"desc":"1156","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1140","fix":"1160"},{"desc":"1161","fix":"1162"},"Update the dependencies array to be: [user, posts, fetched, fetchPosts]",{"range":"1163","text":"1164"},"Update the dependencies array to be: [user, posts, fetchMore, setFetchMore, fetchPosts]",{"range":"1165","text":"1166"},"Update the dependencies array to be: [user, history, location.state, setIsAuth]",{"range":"1167","text":"1168"},"Update the dependencies array to be: [fetchCurrentPersonalUser, slug]",{"range":"1169","text":"1170"},"Update the dependencies array to be: [fetchNotifications, fetchedNotifications, notifications.length, user]",{"range":"1171","text":"1172"},"Update the dependencies array to be: [user, messagesStorage, fetchChatConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched]",{"range":"1173","text":"1174"},"Update the dependencies array to be: [user, fetched, setFetched, fetchListContact]",{"range":"1175","text":"1176"},"Update the dependencies array to be: [fetched, contact, user, fetchSentRequestToAddFriend, fetchReceivedRequestsToAddFriend]",{"range":"1177","text":"1178"},"Update the dependencies array to be: [subscribeUser, user, receivedRequestsToAddFriend, updateSubscriptionOnChange]",{"range":"1179","text":"1180"},"Update the dependencies array to be: [subscribeChatMessage, user, currentChat, updatePersonalReceiverWhenReceivedNewMessage]",{"range":"1181","text":"1182"},"Update the dependencies array to be: [i18n.store.data, lang]",{"range":"1183","text":"1184"},"Update the dependencies array to be: [loadingMore, currentPersonalUser, fetchMorePostsData]",{"range":"1185","text":"1186"},"Update the dependencies array to be: [_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",{"range":"1187","text":"1188"},"Update the dependencies array to be: [data, fetchMoreContacts, loadContactMore]",{"range":"1189","text":"1190"},"Update the dependencies array to be: [openNotificationBoard]",{"range":"1191","text":"1192"},"Update the dependencies array to be: [fetchedNotifications, openNotificationBoard, notifications, fetchNotifications]",{"range":"1193","text":"1194"},"Update the dependencies array to be: [countNumberNotificationsUnseen, fetchCountNumberNotificationsUnseen]",{"range":"1195","text":"1196"},"Update the dependencies array to be: [countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification]",{"range":"1197","text":"1198"},"Update the dependencies array to be: [chatBoardBodyRef, shouldScrollIntoView]",{"range":"1199","text":"1200"},"Update the dependencies array to be: [chatBoardBodyRef, currentChat, messagesStorage, user]",{"range":"1201","text":"1202"},"Update the dependencies array to be: [currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage]",{"range":"1203","text":"1204"},"Update the dependencies array to be: [dialog, currentPersonalUser, removeFriend, updateMutationOnChange]",{"range":"1205","text":"1206"},"Update the dependencies array to be: [searchFriends]",{"range":"1207","text":"1208"},"Update the dependencies array to be: [editorState, isEdited, postEdited]",{"range":"1209","text":"1210"},"Update the dependencies array to be: [isEdited, post.rawText]",{"range":"1211","text":"1212"},{"range":"1213","text":"1184"},"Update the dependencies array to be: [post._id]",{"range":"1214","text":"1215"},{"range":"1216","text":"1208"},"Update the dependencies array to be: [comment._id, comment.post, dialog, removeComment, removeResponse]",{"range":"1217","text":"1218"},"Update the dependencies array to be: [comment.responses.length, comment.responsesData?.length, onLoadResponses]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [likeResponse, user._id]",{"range":"1221","text":"1222"},"Update the dependencies array to be: [removeLikeResponse, user._id]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [focus, editorState, response, dataResponse, user.name, user._id]",{"range":"1225","text":"1226"},{"range":"1227","text":"1208"},"Update the dependencies array to be: [focus, removeFocus]",{"range":"1228","text":"1229"},[1816,1838],"[user, posts, fetched, fetchPosts]",[2785,2823],"[user, posts, fetchMore, setFetchMore, fetchPosts]",[686,717],"[user, history, location.state, setIsAuth]",[1055,1061],"[fetchCurrentPersonalUser, slug]",[1849,1922],"[fetchNotifications, fetchedNotifications, notifications.length, user]",[3174,3197],"[user, messagesStorage, fetchChatConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched]",[2234,2261],"[user, fetched, setFetched, fetchListContact]",[3333,3386],"[fetched, contact, user, fetchSentRequestToAddFriend, fetchReceivedRequestsToAddFriend]",[3059,3109],"[subscribeUser, user, receivedRequestsToAddFriend, updateSubscriptionOnChange]",[4276,4317],"[subscribeChatMessage, user, currentChat, updatePersonalReceiverWhenReceivedNewMessage]",[1050,1056],"[i18n.store.data, lang]",[2407,2441],"[loadingMore, currentPersonalUser, fetchMorePostsData]",[4253,4299],"[_messagesStorage.length, fetchMoreConversations, loadMoreConversations, messagesStorage, numberOfConversations, updatePersonalReceiverStatusSentToDeliveredWhenReceiverFetched, user._id]",[1241,1258],"[data, fetchMoreContacts, loadContactMore]",[2805,2853],"[openNotificationBoard]",[4918,4978],"[fetchedNotifications, openNotificationBoard, notifications, fetchNotifications]",[3156,3277],"[countNumberNotificationsUnseen, fetchCountNumberNotificationsUnseen]",[16740,16877],"[countNumberNotificationsUnseen, subscribeToMoreNotifications, receivedRequestsToAddFriend, notifications, user, updatedAddNotification, updatedRemoveNotification]",[1304,1306],"[chatBoardBodyRef, shouldScrollIntoView]",[1677,1740],"[chatBoardBodyRef, currentChat, messagesStorage, user]",[3367,3385],"[currentChat._id, currentChat.scope, fetchMoreMessages, loadMoreMessages, messagesStorage]",[3497,3526],"[dialog, currentPersonalUser, removeFriend, updateMutationOnChange]",[1733,1735],"[searchFriends]",[2310,2323],"[editorState, isEdited, postEdited]",[2260,2270],"[isEdited, post.rawText]",[849,855],[948,950],"[post._id]",[1975,1977],[3145,3153],"[comment._id, comment.post, dialog, removeComment, removeResponse]",[4639,4662],"[comment.responses.length, comment.responsesData?.length, onLoadResponses]",[1121,1123],"[likeResponse, user._id]",[1531,1533],"[removeLikeResponse, user._id]",[2391,2435],"[focus, editorState, response, dataResponse, user.name, user._id]",[3401,3403],[3785,3792],"[focus, removeFocus]"]